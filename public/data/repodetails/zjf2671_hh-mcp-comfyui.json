{
  "mcp_name": "zjf2671/hh-mcp-comfyui",
  "mcp_description": "Facilitates image generation through natural language commands by interfacing with a local ComfyUI instance via the MCP protocol.",
  "mcp_id": "zjf2671_hh-mcp-comfyui",
  "fetch_timestamp": "2025-06-23T09:49:13.451651Z",
  "github_url": "https://github.com/zjf2671/hh-mcp-comfyui",
  "repository": {
    "name": "hh-mcp-comfyui",
    "full_name": "zjf2671/hh-mcp-comfyui",
    "description": "基于Model Context Protocol (MCP)的ComfyUI图像生成服务，通过API调用本地ComfyUI实例生成图片,实现自然语言生图自由",
    "html_url": "https://github.com/zjf2671/hh-mcp-comfyui",
    "created_at": "2025-04-20T08:38:18Z",
    "updated_at": "2025-06-17T08:34:23Z",
    "pushed_at": "2025-05-20T04:12:13Z",
    "size": 1230,
    "stargazers_count": 8,
    "watchers_count": 8,
    "forks_count": 2,
    "open_issues_count": 1,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "zjf2671",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/25733810?v=4",
      "html_url": "https://github.com/zjf2671"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 2,
    "subscribers_count": 1,
    "languages": {
      "Python": 42657,
      "Dockerfile": 1320
    },
    "language_percentages": {
      "Python": 97,
      "Dockerfile": 3
    },
    "pull_requests_count": 1,
    "contributors_count": 3
  },
  "readme": "# ComfyUI MCP 服务\n\n[![English](https://img.shields.io/badge/English-Click-yellow)](docs/README.EN.md)\n[![简体中文](https://img.shields.io/badge/简体中文-点击查看-orange)](README.md)\n![Python 3.12+](https://img.shields.io/badge/python-3.12+-blue.svg)\n[![License](https://img.shields.io/badge/license-MIT-green.svg)](LiCENSE)\n[![smithery badge](https://smithery.ai/badge/@zjf2671/hh-mcp-comfyui)](https://smithery.ai/server/@zjf2671/hh-mcp-comfyui)\n\n这是一个基于Model Context Protocol (MCP)的ComfyUI图像生成服务，通过API调用本地ComfyUI实例生成图片。\n\n## 功能特性\n\n- 通过MCP协议提供图像生成服务，实现自然语言生图自由\n- 支持动态替换工作流中的提示词和尺寸等参数\n- 自动加载workflows目录下的工作流文件作为资源\n\n## 新增功能记录\n- [2025-05-11] 支持工作流文件目录动态配置\n- [2025-05-09] 增加docker构建方式,支持Python 3.12+\n- [2025-05-07] 增加pip构建方式\n- [2025-05-06] 把项目目录src/hh修改成src/hh_mcp_comfyui,增加uvx构建方式\n- [2025-04-26] 增加图生图和移除背景样例工作流及支持图生图工具\n- [2025-04-20] 加入文生图生成工具\n \n## 效果\n\n- **Cherry Studio中使用效果**\n![alt text](images/image.png)\n\n- **Cline中使用效果**\n![alt text](images/cline_gen_image.png)\n![alt text](images/ComfyUI_00020_.png)\n\n## 安装依赖\n\n**1. 确保已安装Python 3.12+**\n\n**2. 使用uv管理Python环境：**\n- 安装uv:\n  ```bash\n  # On macOS and Linux.\n  $ curl -LsSf https://astral.sh/uv/install.sh | sh\n\n  # On Windows.\n  $ powershell -ExecutionPolicy ByPass -c \"irm https://astral.sh/uv/install.ps1 | iex\"\n\n  # 更新uv(非必要操作):\n  $ uv self update\n  ```\n\n## 测试运行服务\n\n- **uvx方式**\n  ```bash\n  $ uvx hh-mcp-comfyui\n\n  INFO:hh_mcp_comfyui.server:Scanning for workflows in: C:\\Users\\tianw\\AppData\\Local\\uv\\cache\\archive-v0\\dp4MTo0f1qL0DdYF_BYCL\\Lib\\site-packages\\hh_mcp_comfyui\\workflows\n  INFO:hh_mcp_comfyui.server:Starting ComfyUI MCP Server...\n  ```\n- **pip方式**\n  ```bash\n  $ pip install hh_mcp_comfyui\n  \n  $ python -m hh_mcp_comfyui\n\n  INFO:hh_mcp_comfyui.server:Scanning for workflows in: F:\\Python\\Python313\\Lib\\site-packages\\hh_mcp_comfyui\\workflows\n  INFO:hh_mcp_comfyui.server:Starting ComfyUI MCP Server...\n  ```\n**出现上面的信息表示服务启动成功**\n\n## 使用方法\n> **必须确保本地ComfyUI实例正在运行(默认地址: http://127.0.0.1:8188) [ComfyUI安装地址](https://github.com/comfyanonymous/ComfyUI.git)**\n\n### Cherry Studio、Cline、Cursor等客户端的使用方式\n\n<details>\n  <summary>uvx MCP服务配置</summary>\n\n  ```bash\n  {\n    \"mcpServers\": {\n      \"hh-mcp-comfyui\": {\n        \"command\": \"uvx\",\n        \"args\": [\n          \"hh-mcp-comfyui\"\n        ],\n        \"env\": {\n          \"COMFYUI_API_BASE\": \"http://127.0.0.1:8188\",\n          \"COMFYUI_WORKFLOWS_DIR\": \"/path/hh-mcp-comfyui/workflows\"\n        }\n      }\n    }\n  }\n  ```\n  </details>\n\n<details>\n  <summary>pip MCP服务配置</summary>\n\n  **需要先执行命令窗口先执行：pip install hh_mcp_comfyui**\n\n  ```bash\n  {\n    \"mcpServers\": {\n      \"hh-mcp-comfyui\": {\n        \"command\": \"python\",\n        \"args\": [\n          \"-m\",\n          \"hh_mcp_comfyui\"\n        ],\n        \"env\": {\n          \"COMFYUI_API_BASE\": \"http://127.0.0.1:8188\",\n          \"COMFYUI_WORKFLOWS_DIR\": \"/path/hh-mcp-comfyui/workflows\"\n        }\n      }\n    }\n  }\n  ```\n</details>\n\n<details>\n  <summary>docker MCP服务配置</summary>\n\n  **前提是已安装docker**\n\n  ```bash\n  {\n    \"mcpServers\": {\n      \"hh-mcp-comfyui\": {\n        \"command\": \"docker\",\n        \"args\": [\n            \"run\",\n            \"--net=host\",\n            \"-v\",\n            \"/path/hh-mcp-comfyui/workflows:/app/workflows\",\n            \"-i\",\n            \"--rm\",\n            \"zjf2671/hh-mcp-comfyui\"\n        ],\n        \"env\": {\n          \"COMFYUI_API_BASE\": \"http://127.0.0.1:8188\"\n        }\n      }\n    }\n  }\n  ```\n</details>\n\n## 样例工作流copy到指定工作流目录：\n\n  （**注意**：使用下面uvx或pip方式找到你的安装工作流目录的位置把样例工作流添加进去，然后重启你的MCP服务）\n- **uvx**\n  ```bash\n  $ uvx hh-mcp-comfyui\n  ```\n  ![alt text](images/image-2.png)\n- **pip**\n  \n   ```bash\n  #首先安装依赖\n  $ pip install hh_mcp_comfyui\n  $ python -m hh_mcp_comfyui\n  ```\n  ![alt text](images/image-3.png)\n\n## 测试\n\n> **使用MCP Inspector测试服务端工具**\n\n- **uvx方式**\n  ```bash\n  $ npx @modelcontextprotocol/inspector uvx hh-mcp-comfyui\n  ``` \n- **pip方式**\n  ```bash\n  $ pip install hh_mcp_comfyui\n  $ npx @modelcontextprotocol/inspector python -m hh_mcp_comfyui\n  ``` \n - **docker方式**\n    ```bash\n    $ npx @modelcontextprotocol/inspector docker run --net=host -i --rm zjf2671/hh-mcp-comfyui\n    ``` \n然后点击连接如图即可调试：\n![alt text](images/image-1.png)\n\n## 使用注意事项（针对没有用过comfyui的特别注意）\n\n- 默认工作流为`t2image_bizyair_flux`\n- 图片尺寸默认为1024x1024\n- 服务启动时会自动加载workflows目录下的所有JSON工作流文件\n- 如果你使用的是本项目中的**样例工作流**需要在comfyui中下载个插件，详细操作请查看：[样例工作流插件安装教程](https://ziitefe2yxn.feishu.cn/wiki/PlSmwBbBWiA0iDkc07scb4EEnHc)\n- 如果使用你本地的comfyui工作流的话，先要保证你的工作流能在comfyui正常运行，然后需要导出(API)的JSON格式，并放入到你本地的`/path/hh_mcp_comfyui/workflows`目录中\n\n## 添加新工作流\n\n1. 将工作流JSON文件放入`/path/hh_mcp_comfyui/workflows`目录中\n  \n    如果是uvx和pip启动方式请看上面 《**样例工作流copy到指定工作流目录**》 的使用方式\n\n2. 重启服务自动加载新工作流\n\n## 开发\n\n\n### 项目结构\n\n```\n.\n├── .gitignore\n├── .python-version\n├── pyproject.toml\n├── README.md\n├── uv.lock\n├── example/              # 示例工作流目录\n│   └── workflows/\n│       ├── i2image_bizyair_sdxl.json\n│       ├── t2image_bizyair_flux.json\n│       ├── i2image_cogview4.json\n│       └── t2image_sd1.5.json\n├── src/                  # 源代码目录\n│   └── hh_mcp_comfyui/\n│       ├── comfyui_client.py    # ComfyUI客户端实现\n│       ├── server.py            # MCP服务主文件\n│       └── workflows/           # 工作流文件目录\n```\n\n\n ### 初始化项目开发环境：  \n\n  ```bash\n  # Clone the repository.\n  $ git clone https://github.com/zjf2671/hh-mcp-comfyui.git\n\n  $ cd hh-mcp-comfyui\n\n  # Initialized venv\n  $ uv venv\n\n  # Activate the virtual environment.\n  $ .venv\\Scripts\\activate\n\n  # Install dependencies.\n  $ uv lock\n  Resolved 30 packages in 1ms\n\n  # sync dependencies.\n  $ uv sync\n  Resolved 30 packages in 2.54s\n  Audited 29 package in 0.02ms\n  ```\n\n### 检查服务是否正常\n\n  ```bash\n  $ uv --directory 你本地安装目录/hh-mcp-comfyui run hh-mcp-comfyui\n\n  INFO:__main__:Scanning for workflows in: D:\\cygitproject\\hh-mcp-comfyui\\src\\hh_mcp_comfyui\\workflows\n  INFO:__main__:Registered resource: workflow://t2image_bizyair_flux -> t2image_bizyair_flux.json\n  INFO:__main__:Starting ComfyUI MCP Server...\n  ```\n### 使用MCP Inspector测试服务端工具\n  \n  ```bash\n  $ npx @modelcontextprotocol/inspector uv --directory 你本地安装目录/hh-mcp-comfyui run hh-mcp-comfyui\n  ```\n\n### MCP配置\n\n  ```bash\n  {\n    \"mcpServers\": {\n      \"hh-mcp-comfyui\": {\n        \"command\": \"uv\",\n        \"args\": [\n          \"--directory\",\n          \"项目绝对路径（例如：D:/hh-mcp-comfyui）\",\n          \"run\",\n          \"hh-mcp-comfyui\"\n        ],\n        \"env\": {\n          \"COMFYUI_API_BASE\": \"http://127.0.0.1:8188\",\n          \"COMFYUI_WORKFLOWS_DIR\": \"/path/hh-mcp-comfyui/workflows\"\n        }\n      }\n    }\n  }\n  ```\n\n## 贡献\n\n1. Fork项目\n2. 创建特性分支 (`git checkout -b feature/AmazingFeature`)\n3. 提交更改 (`git commit -m 'Add some AmazingFeature'`)\n4. 推送到分支 (`git push origin feature/AmazingFeature`)\n5. 打开Pull Request\n\n---\n## 如有问题可以到公众号中联系我：\n\n*<center>![公众号二维码](https://image.harryzhang.site/2025/04/image-1-5ac2e62b072e6f1d6eb4e3638634094c.png)</center>*\n\n<center><u>👆 扫码关注，发现更多好玩的！</u></center>\n\n---\n"
}