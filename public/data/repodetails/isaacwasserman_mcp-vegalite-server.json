{
  "mcp_name": "Vega-Lite",
  "mcp_description": "üêç üè† - Generate visualizations from fetched data using the VegaLite format and renderer.",
  "mcp_id": "isaacwasserman_mcp-vegalite-server",
  "fetch_timestamp": "2025-06-23T09:16:48.277424Z",
  "github_url": "https://github.com/isaacwasserman/mcp-vegalite-server",
  "repository": {
    "name": "mcp-vegalite-server",
    "full_name": "isaacwasserman/mcp-vegalite-server",
    "description": null,
    "html_url": "https://github.com/isaacwasserman/mcp-vegalite-server",
    "created_at": "2024-12-12T18:34:10Z",
    "updated_at": "2025-06-15T22:45:00Z",
    "pushed_at": "2025-05-16T19:44:35Z",
    "size": 24,
    "stargazers_count": 72,
    "watchers_count": 72,
    "forks_count": 18,
    "open_issues_count": 1,
    "language": "Python",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "isaacwasserman",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/1498116?v=4",
      "html_url": "https://github.com/isaacwasserman"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 18,
    "subscribers_count": 2,
    "languages": {
      "Python": 7604,
      "Dockerfile": 1241
    },
    "language_percentages": {
      "Python": 85.97,
      "Dockerfile": 14.03
    },
    "pull_requests_count": 2,
    "contributors_count": 3
  },
  "readme": "[![MseeP.ai Security Assessment Badge](https://mseep.net/pr/isaacwasserman-mcp-vegalite-server-badge.png)](https://mseep.ai/app/isaacwasserman-mcp-vegalite-server)\n\n# Data Visualization MCP Server\n[![smithery badge](https://smithery.ai/badge/mcp-server-vegalite)](https://smithery.ai/server/mcp-server-vegalite)\n\n## Overview\nA Model Context Protocol (MCP) server implementation that provides the LLM an interface for visualizing data using Vega-Lite syntax.\n\n## Components\n\n### Tools\nThe server offers two core tools:\n\n- `save_data`\n   - Save a table of data agregations to the server for later visualization\n   - Input:\n     - `name` (string): Name of the data table to be saved\n     - `data` (array): Array of objects representing the data table\n   - Returns: success message\n- `visualize_data`\n   - Visualize a table of data using Vega-Lite syntax\n   - Input:\n     - `data_name` (string): Name of the data table to be visualized\n     - `vegalite_specification` (string): JSON string representing the Vega-Lite specification\n   - Returns: If the `--output_type` is set to `text`, returns a success message with an additional `artifact` key containing the complete Vega-Lite specification with data. If the `--output_type` is set to `png`, returns a base64 encoded PNG image of the visualization using the MPC `ImageContent` container.\n\n## Usage with Claude Desktop\n\n```python\n# Add the server to your claude_desktop_config.json\n{\n  \"mcpServers\": {\n    \"datavis\": {\n        \"command\": \"uv\",\n        \"args\": [\n            \"--directory\",\n            \"/absolute/path/to/mcp-datavis-server\",\n            \"run\",\n            \"mcp_server_datavis\",\n            \"--output_type\",\n            \"png\" # or \"text\"\n        ]\n    }\n  }\n}\n```\n"
}