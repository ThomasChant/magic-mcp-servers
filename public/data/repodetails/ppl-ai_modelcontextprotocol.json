{
  "mcp_name": "Perplexity",
  "mcp_description": "An MCP server that connects to Perplexity's Sonar API, enabling real-time web-wide research in conversational AI.",
  "mcp_id": "ppl-ai_modelcontextprotocol",
  "fetch_timestamp": "2025-06-23T07:28:43.106195Z",
  "github_url": "https://github.com/ppl-ai/modelcontextprotocol",
  "repository": {
    "name": "modelcontextprotocol",
    "full_name": "ppl-ai/modelcontextprotocol",
    "description": "A Model Context Protocol Server connector for Perplexity API, to enable web search without leaving the MCP ecosystem.",
    "html_url": "https://github.com/ppl-ai/modelcontextprotocol",
    "created_at": "2025-03-10T19:44:02Z",
    "updated_at": "2025-06-23T02:36:26Z",
    "pushed_at": "2025-04-27T21:32:45Z",
    "size": 803,
    "stargazers_count": 1270,
    "watchers_count": 1270,
    "forks_count": 168,
    "open_issues_count": 24,
    "language": "JavaScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "ppl-ai",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/110299016?v=4",
      "html_url": "https://github.com/ppl-ai"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 168,
    "subscribers_count": 16,
    "languages": {
      "JavaScript": 9796,
      "Dockerfile": 427
    },
    "language_percentages": {
      "JavaScript": 95.82,
      "Dockerfile": 4.18
    },
    "pull_requests_count": 14,
    "contributors_count": 7
  },
  "readme": "# Perplexity Ask MCP Server\n\nAn MCP server implementation that integrates the Sonar API to provide Claude with unparalleled real-time, web-wide research.\n\nPlease refer to the official [DeepWiki page](https://deepwiki.com/ppl-ai/modelcontextprotocol) for assistance with implementation. \n\n# High-level System Architecture\n\n*Credits: DeepWiki powered by Devin*\n\n![System Architecture](perplexity-ask/assets/system_architecture.png)\n\n\n\n\n\n![Demo](perplexity-ask/assets/demo_screenshot.png)\n\n\n## Tools\n\n- **perplexity_ask**\n  - Engage in a conversation with the Sonar API for live web searches.\n  - **Inputs:**\n    - `messages` (array): An array of conversation messages.\n      - Each message must include:\n        - `role` (string): The role of the message (e.g., `system`, `user`, `assistant`).\n        - `content` (string): The content of the message.\n\n## Configuration\n\n### Step 1: \n\nClone this repository:\n\n```bash\ngit clone git@github.com:ppl-ai/modelcontextprotocol.git\n```\n\nNavigate to the `perplexity-ask` directory and install the necessary dependencies:\n\n```bash\ncd modelcontextprotocol/perplexity-ask && npm install\n```\n\n### Step 2: Get a Sonar API Key\n\n1. Sign up for a [Sonar API account](https://docs.perplexity.ai/guides/getting-started).\n2. Follow the account setup instructions and generate your API key from the developer dashboard.\n3. Set the API key in your environment as `PERPLEXITY_API_KEY`.\n\n### Step 3: Configure Claude Desktop\n\n1. Download Claude desktop [here](https://claude.ai/download). \n\n2. Add this to your `claude_desktop_config.json`:\n\n```json\n{\n  \"mcpServers\": {\n    \"perplexity-ask\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"-i\",\n        \"--rm\",\n        \"-e\",\n        \"PERPLEXITY_API_KEY\",\n        \"mcp/perplexity-ask\"\n      ],\n      \"env\": {\n        \"PERPLEXITY_API_KEY\": \"YOUR_API_KEY_HERE\"\n      }\n    }\n  }\n}\n```\n\n### NPX\n\n```json\n{\n  \"mcpServers\": {\n    \"perplexity-ask\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"server-perplexity-ask\"\n      ],\n      \"env\": {\n        \"PERPLEXITY_API_KEY\": \"YOUR_API_KEY_HERE\"\n      }\n    }\n  }\n}\n```\n\nYou can access the file using:\n\n```bash\nvim ~/Library/Application\\ Support/Claude/claude_desktop_config.json\n```\n\n### Step 4: Build the Docker Image\n\nDocker build:\n\n```bash\ndocker build -t mcp/perplexity-ask:latest -f Dockerfile .\n```\n\n### Step 5: Testing\n\nLet's make sure Claude for Desktop is picking up the two tools we've exposed in our `perplexity-ask` server. You can do this by looking for the hammer icon:\n\n![Claude Visual Tools](perplexity-ask/assets/visual-indicator-mcp-tools.png)\n\nAfter clicking on the hammer icon, you should see the tools that come with the Filesystem MCP Server:\n\n![Available Integration](perplexity-ask/assets/available_tools.png)\n\nIf you see both of these this means that the integration is active. Congratulations! This means Claude can now ask Perplexity. You can then simply use it as you would use the Perplexity web app.  \n\n### Step 6: Advanced parameters\n\nCurrently, the search parameters used are the default ones. You can modify any search parameter in the API call directly in the `index.ts` script. For this, please refer to the official [API documentation](https://docs.perplexity.ai/api-reference/chat-completions).\n\n### Troubleshooting \n\nThe Claude documentation provides an excellent [troubleshooting guide](https://modelcontextprotocol.io/docs/tools/debugging) you can refer to. However, you can still reach out to us at api@perplexity.ai for any additional support or [file a bug](https://github.com/ppl-ai/api-discussion/issues). \n\n\n# Cursor integration\n\nYou can also use our MCP with Cursor (or any other app that supports this). To use Sonar with Cursor, you can follow the following steps. \n\n### Step 1: Navigate to your Cursor settings:\n\n![Cursor Settings](perplexity-ask/assets/cursor-settings.png)\n\n### Step 2: Navigate to the MCP directory\n\nAnd click on `Add new global MCP server`\n\n![Add Server](perplexity-ask/assets/cursor-mcp-directory.png)\n\n\n### Step 3: Insert the MCP Server Configuration from above \n\nThis is the same configuration you would use for any other application that supports MCP. \n\nYou should then see the application being part of your available tools like this:\n\n![Cursor MCP](perplexity-ask/assets/perplexity-ask-mcp-cursor.png)\n\n\n## License\n\nThis MCP server is licensed under the MIT License. This means you are free to use, modify, and distribute the software, subject to the terms and conditions of the MIT License. For more details, please see the LICENSE file in the project repository.\n\n"
}