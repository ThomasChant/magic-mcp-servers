{
  "mcp_name": "securityfortech/secops-mcp",
  "mcp_description": "üêç üè† - All-in-one security testing toolbox that brings together popular open source tools through a single MCP interface. Connected to an AI agent, it enables tasks like pentesting, bug bounty hunting, threat hunting, and more.",
  "mcp_id": "securityfortech_secops-mcp",
  "fetch_timestamp": "2025-06-23T08:18:05.230286Z",
  "github_url": "https://github.com/securityfortech/secops-mcp",
  "repository": {
    "name": "secops-mcp",
    "full_name": "securityfortech/secops-mcp",
    "description": "All-in-one security testing toolbox that brings together popular open source tools through a single MCP interface. Connected to an AI agent, it enables tasks like pentesting, bug bounty hunting, threat hunting, and more.",
    "html_url": "https://github.com/securityfortech/secops-mcp",
    "created_at": "2025-03-28T10:26:05Z",
    "updated_at": "2025-06-23T06:49:10Z",
    "pushed_at": "2025-06-18T15:19:14Z",
    "size": 52,
    "stargazers_count": 105,
    "watchers_count": 105,
    "forks_count": 13,
    "open_issues_count": 3,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "securityfortech",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/96029543?v=4",
      "html_url": "https://github.com/securityfortech"
    },
    "has_issues": true,
    "has_projects": false,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 13,
    "subscribers_count": 3,
    "languages": {
      "Python": 21908,
      "Dockerfile": 3030
    },
    "language_percentages": {
      "Python": 87.85,
      "Dockerfile": 12.15
    },
    "pull_requests_count": 1,
    "contributors_count": 2
  },
  "readme": "# Security Operations Multi-Tool Platform (MCP)\n\nA comprehensive security operations platform that integrates multiple security tools into a unified interface. This platform provides a centralized way to run various security scanning and testing tools.\n\n## Features\n\n- **Unified Interface**: Single entry point for multiple security tools\n- **Docker Support**: Easy deployment using Docker\n- **JSON Output**: Consistent JSON output format across all tools\n- **Error Handling**: Robust error handling and reporting\n- **Extensible**: Easy to add new tools and functionality\n\n## Included Tools\n\n- **Nuclei**: Fast and customizable vulnerability scanner\n- **FFUF**: Fast web fuzzer and content discovery tool\n- **Amass**: In-depth attack surface mapping and external asset discovery\n- **Dirsearch**: Web path scanner\n- **Hashcat**: Advanced password recovery\n- **HTTPX**: Fast and multi-purpose HTTP toolkit\n- **IPInfo**: IP address information gathering\n- **Nmap**: Network exploration and security auditing\n- **SQLMap**: Automatic SQL injection and database takeover tool\n- **Subfinder**: Subdomain discovery tool\n- **TLSX**: TLS/SSL scanning and analysis\n- **WFuzz**: Web application fuzzer\n- **XSStrike**: Advanced XSS detection and exploitation\n\n## Installation\n\n### Using Docker (Recommended)\n\n1. Clone the repository:\n   ```bash\n   git clone https://github.com/securityfortech/secops-mcp.git\n   cd secops-mcp\n   ```\n\n2. Build the Docker image:\n   ```bash\n   docker build -t secops-mcp .\n   ```\n\n3. Run the container:\n   ```bash\n   docker run -it --rm secops-mcp\n   ```\n\n### Manual Installation\n\n1. Clone the repository:\n   ```bash\n   git clone https://github.com/securityfortech/secops-mcp.git\n   cd secops-mcp\n   ```\n\n2. Create and activate a virtual environment:\n   ```bash\n   python -m venv venv\n   source venv/bin/activate  # On Windows: venv\\Scripts\\activate\n   ```\n\n3. Install dependencies:\n   ```bash\n   pip install -r requirements.txt\n   ```\n\n4. Install required tools:\n   - Follow the installation instructions for each tool in the `tools/` directory\n   - Ensure all tools are in your system PATH\n\n## Usage\n\n1. Start the application:\n   ```bash\n   python main.py\n   ```\n\n2. The application will provide a unified interface for running various security tools.\n\n3. Each tool returns results in a consistent JSON format:\n   ```json\n   {\n       \"success\": boolean,\n       \"error\": string (if error),\n       \"results\": object (if success)\n   }\n   ```\n\n## Tool Configuration\n\nEach tool can be configured through its respective wrapper in the `tools/` directory. Configuration options include:\n\n- Output formats\n- Timeouts\n- Verbosity levels\n- Custom wordlists\n- Tool-specific parameters\n\n## Security Considerations\n\n- This tool is for authorized security testing only\n- Always obtain proper authorization before scanning systems\n- Be mindful of rate limiting and scanning intensity\n- Respect robots.txt and terms of service\n- Use appropriate wordlists and scanning parameters\n\n## Contributing\n\n1. Fork the repository\n2. Create a feature branch\n3. Commit your changes\n4. Push to the branch\n5. Create a Pull Request\n\n## License\n\nThis project is licensed under the MIT License - see the LICENSE file for details.\n\n## Acknowledgments\n\n- All the security tools and their developers\n- The security community for their contributions and support\n"
}