{
  "mcp_name": "GreatApo/concrete-properties-mcp",
  "mcp_description": "Facilitates AI-driven analysis of reinforced concrete sections by providing a unified API interface for calculating geometric and material properties.",
  "mcp_id": "GreatApo_concrete-properties-mcp",
  "fetch_timestamp": "2025-06-23T04:14:03.576767Z",
  "github_url": "https://github.com/GreatApo/concrete-properties-mcp",
  "repository": {
    "name": "concrete-properties-mcp",
    "full_name": "GreatApo/concrete-properties-mcp",
    "description": "Concrete Section Properties AI MCP Server",
    "html_url": "https://github.com/GreatApo/concrete-properties-mcp",
    "created_at": "2025-04-27T22:45:11Z",
    "updated_at": "2025-06-02T09:27:58Z",
    "pushed_at": "2025-05-06T16:35:47Z",
    "size": 1692,
    "stargazers_count": 3,
    "watchers_count": 3,
    "forks_count": 3,
    "open_issues_count": 0,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "GreatApo",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/9620510?v=4",
      "html_url": "https://github.com/GreatApo"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 3,
    "subscribers_count": 1,
    "languages": {
      "Python": 35626
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 1
  },
  "readme": "![concrete-properties-mcp-cover](./img/concrete-properties-mcp-cover.png)\n\n# Concrete-Properties-MCP Server\n\nA Model Context Protocol Server for Reinforced Concrete Section Analysis\n\n## üöÄ Overview\n\nThe Concrete-Properties-MCP Server provides a unified API interface for interacting with the [**Concrete Properties**](https://github.com/robbievanleeuwen/concrete-properties) Python library. It enables AI-driven calculation of section properties and capacities of reinforced concrete sections through a consistent interface.\n\n## ‚ú® Supported Features\n\n- **Section Properties**:\n  - Calculate geometric properties (area, centroid, moment of inertia, etc.)\n  - Compute transformed section properties\n- **Reinforced Concrete Analysis**:\n  - Calculate axial, bending, and combined capacities\n  - Determine interaction diagrams\n- **Material Properties**:\n  - Define concrete and reinforcement material properties\n  - Support for multiple concrete grades and steel types\n\n### üñ•Ô∏è MCP Tools\n\nThe server provides the following main API functions:\n\n- `rectangular_concrete_area_properties`: Compute the rectangular concrete section geometric properties. \n- `arbitrary_concrete_area_properties`:  Compute arbitrary concrete section geometric properties.\n- `rectangular_concrete_bending_capacity`: Compute the rectangular concrete section bending capacities (Mx+, Mx- and My) under the given axial load.\n- `rect_concrete_axial_moment_x_points`: Compute the rectangular concrete section axial - moment/bending (around X) interaction diagram points.\n- `rect_concrete_axial_moment_y_points`: Compute the rectangular concrete section axial - moment/bending (around Y) interaction diagram points.\n- `rect_concrete_axial_moment_x_image`: Plots the rectangular concrete section axial - moment/bending (around X) interaction diagram points.\n- `rect_concrete_axial_moment_y_image`: Plots the rectangular concrete section axial - moment/bending (around Y) interaction diagram points.\n\n## ‚öôÔ∏è Installation\n\n#### Requirements\n\nRequired Python libraries:\n\n```\nmcp>=0.1.0                 # Model Control Protocol library\nmatplotlib>=3.10.1         # Library for plots\nconcreteproperties>=0.6.4  # Concrete Properties library\n```\n\n#### Guide\n\n1. Install the required Python libraries from the command line:\n   \n   ```\n   pip install mcp concreteproperties matplotlib\n   //or\n   pip install -r requirements. txt\n   ```\n2. Download this repository and save the extracted files locally (e.g., at ```C:\\your_path_to_the_extracted_server\\concrete-properties-mcp\\```).\n3. (Optional) Edit the MCP server configuration file, located at `src/config.json` (see configuration section).\n4. Install Claude Desktop (or another AI client with MCP support).\n5. Configure Claude Desktop to launch the MCP Server automatically (see Claude Desktop section).\n6. You are good to go!\n\n#### Configuration\n\nThe configuration file is located at `src/config.json` and contains the following main settings:\n\n```json\n{\n    \"server\": {\n        \"name\": \"Concrete Properties MCP\",\n        \"version\": \"1.0.0\"\n    },\n    \"options\": {\n        \"mesh_size\": 50,\n        \"concrete\": {\n            \"material_density\": 2.4e-6,\n            \"rectangular_stress_block_alpha\": 0.802,\n            \"rectangular_stress_block_gamma\": 0.89,\n            \"rectangular_stress_block_ultimate_strain\": 0.003,\n            \"flexural_tensile_strength\": 3.4\n        },\n        \"rebar\": {\n            \"mesh_points\": 4,\n            \"material_density\": 7.85e-6,\n            \"material_fracture_strain\": 0.05\n        }\n    }\n}\n```\n\n- `mesh_size`: Mesh size (mm)\n- **Concrete options**:\n  - `material_density`: Material density (kg/mm^3)\n  - `rectangular_stress_block_alpha`: rectangular_stress_block_alpha\": 0.802, # Alpha value for rectangular stress block\n  - `rectangular_stress_block_gamma`: Gamma value for rectangular stress block\n  - `rectangular_stress_block_ultimate_strain`: Ultimate strain (mm/mm)\n  - `flexural_tensile_strength`: Flexural tensile strength (MPa)\n- **Reinforcement options**:\n  - `mesh_points`: Number of mesh points for rebars\n  - `material_density`: Material density (kg/mm^3)\n  - `material_fracture_strain`: Material fracture strain\n\n## ü§ñ AI Clients\n\n#### 5ire\n\nOpen 5ire > Tools > New, input the following info and then click Save:\n\n| Input       | Value                                                               |\n| ----------- | ------------------------------------------------------------------- |\n| Tool Key    | *ConcreteProperties*                                                          |\n| Description | *Concrete Properties calculation server for reinforced concrete*    |\n| Command     | `python C:\\your_path_to_the_extracted_server\\concrete-properties-mcp\\src\\server.py` |\n\n**Caution**: Update the path! (single slashes)\n\nThen turn on the server and you are good to go!\n\n#### Claude Desktop\n\nOpen Claude Desktop and navigate to `File > Settings > Developer > Edit Config`, edit `claude_desktop_config.json` and add the following JSON.\n\n```json\n{\n    \"mcpServers\": {\n        \"concrete\": {\n            \"command\": \"python\",\n            \"args\": [\n                \"C:\\\\your_path_to_the_extracted_server\\\\concrete-properties-mcp\\\\src\\\\server.py\"\n            ]\n        }\n    }\n}\n```\n\nCaution: Update the path and use double backslashes!\nThen restart Claude Desktop (from the tray icon, right click > Quit).\n\n#### Visual Studio Code - GitHub Copilot\n\nThe MCP server is already setup in `.vscode\\mcp.json`. Open the repository folder in visual studio, select `.vscode\\mcp.json` and click \"Start\" above the server name (more info [here](https://code.visualstudio.com/docs/copilot/chat/mcp-servers)).\n\n## üêõ Debug\n\nYou can test and debug the MCP server using the MCP Inspector by running the following command:\n```\nnpx @modelcontextprotocol/inspector mcp run src\\server.py\n```\n"
}