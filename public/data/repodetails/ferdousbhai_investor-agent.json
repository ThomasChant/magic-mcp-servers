{
  "mcp_name": "ferdousbhai/investor-agent",
  "mcp_description": "üêç ‚òÅÔ∏è - Yahoo Finance integration to fetch stock market data including options recommendations",
  "mcp_id": "ferdousbhai_investor-agent",
  "fetch_timestamp": "2025-06-23T03:15:36.256334Z",
  "github_url": "https://github.com/ferdousbhai/investor-agent",
  "repository": {
    "name": "investor-agent",
    "full_name": "ferdousbhai/investor-agent",
    "description": "A Model Context Protocol server for building an investor agent",
    "html_url": "https://github.com/ferdousbhai/investor-agent",
    "created_at": "2025-02-21T06:20:12Z",
    "updated_at": "2025-06-22T15:08:28Z",
    "pushed_at": "2025-06-22T13:39:02Z",
    "size": 193,
    "stargazers_count": 197,
    "watchers_count": 197,
    "forks_count": 25,
    "open_issues_count": 0,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "ferdousbhai",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/23114244?v=4",
      "html_url": "https://github.com/ferdousbhai"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 25,
    "subscribers_count": 4,
    "languages": {
      "Python": 26389
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 1,
    "contributors_count": 4,
    "tags": [
      {
        "name": "v1.0.0",
        "commit_sha": "18ee4326f0cc62f456df8e7648209e012574eb5f"
      },
      {
        "name": "v0.2.3",
        "commit_sha": "63b4f00ac1d078fc17bb0c39083a6d20f7d6764e"
      }
    ],
    "latest_version": "v1.0.0"
  },
  "readme": "[![MseeP.ai Security Assessment Badge](https://mseep.net/pr/ferdousbhai-investor-agent-badge.png)](https://mseep.ai/app/ferdousbhai-investor-agent)\n\n# investor-agent: A Financial Analysis MCP Server\n\n## Overview\n\nThe **investor-agent** is a Model Context Protocol (MCP) server that provides comprehensive financial insights and analysis to Large Language Models. It leverages real-time market data, fundamental and technical analysis to deliver:\n\n- **Ticker Analysis:** Company overview, news, metrics, analyst recommendations, and upgrades/downgrades\n- **Options Data:** Filtered options chains with customizable parameters\n- **Historical Data:** Price trends and earnings history\n- **Financial Statements:** Income, balance sheet, and cash flow statements\n- **Ownership Analysis:** Institutional holders and insider trading activity\n- **Market Sentiment:** CNN Fear & Greed Index and Crypto Fear & Greed Index\n- **Technical Analysis:** SMA, EMA, RSI, MACD, BBANDS indicators (optional)\n\nThe server integrates with [yfinance](https://pypi.org/project/yfinance/) for market data and automatically optimizes data volume for better performance.\n\n## Prerequisites\n\n- **Python:** 3.12 or higher\n- **Package Manager:** [uv](https://docs.astral.sh/uv/). Install if needed:\n  ```bash\n  curl -LsSf https://astral.sh/uv/install.sh | sh\n  ```\n\n### Optional: TA-Lib C Library\nRequired for technical indicators. Follow [official installation instructions](https://ta-lib.org/install/).\n\n## Installation\n\n### Quick Start\n\n```bash\n# Core features only\nuvx investor-agent\n\n# With technical indicators (requires TA-Lib)\nuvx \"investor-agent[ta]\"\n```\n\n## Tools\n\n### Market Data\n- **`get_ticker_data(ticker, max_news=5, max_recommendations=5, max_upgrades=5)`** - Comprehensive ticker report with smart field filtering to exclude irrelevant metadata and configurable limits for news, recommendations, and upgrades/downgrades\n- **`get_options(ticker_symbol, num_options=10, start_date, end_date, strike_lower, strike_upper, option_type)`** - Options data with advanced filtering by date range (YYYY-MM-DD), strike price bounds, and option type (C=calls, P=puts)\n- **`get_price_history(ticker, period=\"1mo\")`** - Historical OHLCV data with intelligent interval selection: daily intervals for periods ‚â§1y, monthly intervals for periods ‚â•2y to optimize data volume\n- **`get_financial_statements(ticker, statement_type=\"income\", frequency=\"quarterly\", max_periods=8)`** - Financial statements (income/balance/cash) with period limiting for context optimization\n- **`get_institutional_holders(ticker, top_n=20)`** - Major institutional and mutual fund holders data\n- **`get_earnings_history(ticker, max_entries=8)`** - Historical earnings data with configurable entry limits\n- **`get_insider_trades(ticker, max_trades=20)`** - Recent insider trading activity with configurable trade limits\n\n### Market Sentiment\n- **`get_cnn_fear_greed_index(days=0, indicators=None)`** - CNN Fear & Greed Index with support for up to 30 days of historical data and selective indicator filtering. Available indicators: fear_and_greed, fear_and_greed_historical, put_call_options, market_volatility_vix, market_volatility_vix_50, junk_bond_demand, safe_haven_demand\n- **`get_crypto_fear_greed_index(days=7)`** - Crypto Fear & Greed Index with configurable historical data period\n\n### Technical Analysis\n- **`calculate_technical_indicator(ticker, indicator, period=\"1y\", timeperiod=14, ...)`** - Calculate technical indicators (SMA, EMA, RSI, MACD, BBANDS) with configurable parameters and result limiting. Returns time-aligned data with price history and indicator values. Requires TA-Lib library.\n\n## Usage with MCP Clients\n\nAdd to your `claude_desktop_config.json`:\n\n```json\n{\n  \"mcpServers\": {\n    \"investor\": {\n      \"command\": \"uvx\",\n      \"args\": [\"investor-agent\"]\n    }\n  }\n}\n```\n\n## Debugging\n\n```bash\nnpx @modelcontextprotocol/inspector uvx investor-agent\n```\n\n**Log locations:**\n- macOS: `~/Library/Logs/Claude/mcp*.log`\n- Windows: `%APPDATA%\\Claude\\logs\\mcp*.log`\n\n## License\n\nMIT License. See [LICENSE](LICENSE) file for details.\n"
}