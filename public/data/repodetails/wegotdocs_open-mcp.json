{
  "mcp_name": "wegotdocs/open-mcp",
  "mcp_description": "📇 🏠 🍎 🪟 🐧 - Turn a web API into an MCP server in 10 seconds and add it to the open source registry: https://open-mcp.org",
  "mcp_id": "wegotdocs_open-mcp",
  "fetch_timestamp": "2025-06-23T09:24:50.033255Z",
  "github_url": "https://github.com/wegotdocs/open-mcp",
  "repository": {
    "name": "open-mcp",
    "full_name": "wegotdocs/open-mcp",
    "description": null,
    "html_url": "https://github.com/wegotdocs/open-mcp",
    "created_at": "2025-03-27T14:40:31Z",
    "updated_at": "2025-06-23T04:34:18Z",
    "pushed_at": "2025-06-23T00:06:35Z",
    "size": 17702,
    "stargazers_count": 180,
    "watchers_count": 180,
    "forks_count": 18,
    "open_issues_count": 155,
    "language": "TypeScript",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "wegotdocs",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/204791407?v=4",
      "html_url": "https://github.com/wegotdocs"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 18,
    "subscribers_count": 4,
    "languages": {
      "TypeScript": 5928898,
      "JavaScript": 17279
    },
    "language_percentages": {
      "TypeScript": 99.71,
      "JavaScript": 0.29
    },
    "pull_requests_count": 269,
    "contributors_count": 2
  },
  "readme": "# OpenMCP\n\nhttps://www.open-mcp.org\n\nOpenMCP is both:\n\n1. a standard for converting web APIs into MCP servers\n2. an open source registry of servers which follow the standard\n\nEach OpenMCP server gives MCP clients the ability to make requests to a particular web API in a token-efficient way. Together the servers in the registry represent a broad range of services, empowering the underlying client LLMs to fetch data and perform actions on behalf of their users across many domains.\n\n## Contents\n\n- [Creating a server](#creating-a-server)\n- [Adding OpenMCP servers to MCP clients](#adding-openmcp-servers-to-mcp-clients)\n- [Converting web API -> OpenMCP](#converting-web-api---openmcp)\n\n## Creating a server\n\nhttps://www.open-mcp.org/servers/creating-a-server\n\n## Adding OpenMCP servers to MCP clients\n\n### Remote hosting\n\n...\n\n### Local hosting\n\n<div>\n  <a href=\"https://www.loom.com/share/aa26fed41f084ff1bd115436f9d799dd\">\n    <p>Local hosting demo - watch video</p>\n  </a>\n  <a href=\"https://www.loom.com/share/aa26fed41f084ff1bd115436f9d799dd\">\n    <img style=\"max-width:300px;\" src=\"https://cdn.loom.com/sessions/thumbnails/aa26fed41f084ff1bd115436f9d799dd-9815ccb91b155b9d-full-play.gif\">\n  </a>\n</div>\n\n#### Requirements:\n\n- Node.js v18 or later (includes npx and npm)\n\n#### Claude desktop\n\n```bash\nnpx @open-mcp/config add {server-id} \\\n  ~/Library/Application\\ Support/Claude/claude_desktop_config.json \\\n  --ENV_VAR=abc123\n```\n\nNow restart Claude desktop to load the tools.\n\n#### Cursor\n\nRun this from the root of your project directory or, to add to all cursor projects, run it from your home directory `~`.\n\n```bash\nnpx @open-mcp/config add {server-id} \\\n  .cursor/mcp.json \\\n  --ENV_VAR=abc123\n```\n\nNow go to `Cursor > Settings > Cursor Settings` then click `MCP` to ensure the server is enabled.\n\n#### Other clients\n\n```bash\nnpx @open-mcp/config add {server-id} \\\n  /path/to/config.json \\\n  --ENV_VAR=abc123\n```\n\n#### Alternatives\n\nIf you don't want to use the CLI you can use `npm` to install the package manually, then add a `node` command to your client config with an absolute path to `dist/index.js`. See the individual server READMEs for more details.\n\n## Converting web API -> OpenMCP\n\n### REST `openapi.yaml` / `openapi.json`\n\n...\n\n### gRPC `service.proto`\n\n...\n\n### JSON-RPC `openrpc.json`\n\n...\n\n### GraphQL `schema.gql`\n\n...\n\n### SOAP `service.wsdl`\n\n...\n\n### PostgREST `schema.sql`\n\n...\n"
}