{
  "mcp_name": "iannuttall/flux-ui-mcp",
  "mcp_description": "A TypeScript-based server offering AI assistants access to Flux UI component documentation and examples through the Model Context Protocol.",
  "mcp_id": "iannuttall_flux-ui-mcp",
  "fetch_timestamp": "2025-06-23T04:54:49.272295Z",
  "github_url": "https://github.com/iannuttall/flux-ui-mcp",
  "repository": {
    "name": "flux-ui-mcp",
    "full_name": "iannuttall/flux-ui-mcp",
    "description": null,
    "html_url": "https://github.com/iannuttall/flux-ui-mcp",
    "created_at": "2025-04-16T16:09:10Z",
    "updated_at": "2025-06-13T23:15:56Z",
    "pushed_at": "2025-04-16T16:09:30Z",
    "size": 16,
    "stargazers_count": 77,
    "watchers_count": 77,
    "forks_count": 13,
    "open_issues_count": 1,
    "language": "JavaScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "iannuttall",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/6681919?v=4",
      "html_url": "https://github.com/iannuttall"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 13,
    "subscribers_count": 1,
    "languages": {
      "JavaScript": 26241
    },
    "language_percentages": {
      "JavaScript": 100
    },
    "pull_requests_count": 3,
    "contributors_count": 1,
    "package_json_version": "0.1.0"
  },
  "readme": "# Flux UI MCP Server\n\nMCP server for Flux UI component references\n\nThis is a TypeScript-based MCP server that provides reference information for Flux UI components. It implements a Model Context Protocol (MCP) server that helps AI assistants access Flux UI component documentation and examples.\n\n## Features\n\n### Tools\n\n- `list_flux_components` - Get a list of all available Flux UI components\n- `get_flux_component_details` - Get detailed information about a specific component\n- `get_flux_component_examples` - Get usage examples for a specific component\n- `search_flux_components` - Search for components by keyword\n\n### Functionality\n\nThis server scrapes and caches information from:\n- The official Flux UI documentation site (https://fluxui.dev)\n\nIt provides structured data including:\n- Component descriptions\n- Usage examples\n- Props\n- Code samples\n\n## Development\n\nInstall dependencies:\n```bash\nnpm install\n```\n\nBuild the server:\n```bash\nnpm run build\n```\n\nFor development with auto-rebuild:\n```bash\nnpm run watch\n```\n\n## Installation\n\n### Claude Desktop Configuration\n\nTo use with Claude Desktop, add the server config:\n\nOn MacOS: `~/Library/Application Support/Claude/claude_desktop_config.json`\nOn Windows: `%APPDATA%/Claude/claude_desktop_config.json`\n\n#### Option 1: Using local build\n\n```json\n{\n  \"mcpServers\": {\n    \"fluxui-server\": {\n      \"command\": \"/path/to/fluxui-mcp-server/build/index.js\"\n    }\n  }\n}\n```\n\n#### Option 2: Using npx command\n\n```json\n{\n  \"mcpServers\": {\n    \"fluxui-server\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"fluxui-mcp-server\"]\n    }\n  }\n}\n```\n\n### Windsurf Configuration\n\nAdd this to your `./codeium/windsurf/model_config.json`:\n\n```json\n{\n  \"mcpServers\": {\n    \"fluxui-server\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"fluxui-mcp-server\"]\n    }\n  }\n}\n```\n\n### Cursor Configuration\n\nAdd this to your `.cursor/mcp.json`:\n\n```json\n{\n  \"mcpServers\": {\n    \"fluxui-server\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"fluxui-mcp-server\"]\n    }\n  }\n}\n```\n\n### Debugging\n\nSince MCP servers communicate over stdio, debugging can be challenging. We recommend using the [MCP Inspector](https://github.com/modelcontextprotocol/inspector), which is available as a package script:\n\n```bash\nnpm run inspector\n```\n\nThe Inspector will provide a URL to access debugging tools in your browser. "
}