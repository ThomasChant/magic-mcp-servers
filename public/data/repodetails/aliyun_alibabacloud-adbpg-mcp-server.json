{
  "mcp_name": "aliyun/alibabacloud-adbpg-mcp-server",
  "mcp_description": "Facilitates seamless interaction between AI Agents and AnalyticDB PostgreSQL databases for executing SQL operations and retrieving metadata.",
  "mcp_id": "aliyun_alibabacloud-adbpg-mcp-server",
  "fetch_timestamp": "2025-06-23T01:01:34.397063Z",
  "github_url": "https://github.com/aliyun/alibabacloud-adbpg-mcp-server",
  "repository": {
    "name": "alibabacloud-adbpg-mcp-server",
    "full_name": "aliyun/alibabacloud-adbpg-mcp-server",
    "description": null,
    "html_url": "https://github.com/aliyun/alibabacloud-adbpg-mcp-server",
    "created_at": "2025-04-17T02:54:50Z",
    "updated_at": "2025-06-18T00:23:18Z",
    "pushed_at": "2025-05-28T02:08:49Z",
    "size": 41,
    "stargazers_count": 4,
    "watchers_count": 4,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "Python",
    "license": "Apache License 2.0",
    "topics": [],
    "default_branch": "master",
    "owner": {
      "login": "aliyun",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/941070?v=4",
      "html_url": "https://github.com/aliyun"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 2,
    "languages": {
      "Python": 15350
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 3
  },
  "readme": "# AnalyticDB PostgreSQL MCP Server\n\nAnalyticDB PostgreSQL MCP Server serves as a universal interface between AI Agents and AnalyticDB PostgreSQL databases. It enables seamless communication between AI Agents and AnalyticDB PostgreSQL, helping AI Agents retrieve database metadata and execute SQL operations.\n\n## Configuration\n\n\n\n### Mode 1: Download\n\nDownload from Github\n\n```shell\ngit clone https://github.com/aliyun/alibabacloud-adbpg-mcp-server.git\n```\n\n#### MCP Integration\n\nAdd the following configuration to the MCP client configuration file:\n\n```json\n\"mcpServers\": {\n  \"adbpg-mcp-server\": {\n    \"command\": \"uv\",\n    \"args\": [\n      \"--directory\",\n      \"/path/to/adbpg-mcp-server\",\n      \"run\",\n      \"adbpg-mcp-server\"\n    ],\n    \"env\": {\n      \"ADBPG_HOST\": \"host\",\n      \"ADBPG_PORT\": \"port\",\n      \"ADBPG_USER\": \"username\",\n      \"ADBPG_PASSWORD\": \"password\",\n      \"ADBPG_DATABASE\": \"database\"\n    }\n  }\n}\n```\n\n### Mode 2: Using pip\n\n```\npip install adbpg_mcp_server\n```\n#### MCP Integration\n```json\n\"mcpServers\": {\n  \"adbpg-mcp-server\": {\n    \"command\": \"uvx\",\n    \"args\": [\n      \"adbpg_mcp_server\"\n    ],\n    \"env\": {\n      \"ADBPG_HOST\": \"host\",\n      \"ADBPG_PORT\": \"port\",\n      \"ADBPG_USER\": \"username\",\n      \"ADBPG_PASSWORD\": \"password\",\n      \"ADBPG_DATABASE\": \"database\"\n    }\n  }\n}\n```\n\n## Components\n\n### Tools\n\n* `execute_select_sql`: Execute SELECT SQL queries on the AnalyticDB PostgreSQL server\n* `execute_dml_sql`: Execute DML (INSERT, UPDATE, DELETE) SQL queries on the AnalyticDB PostgreSQL server\n* `execute_ddl_sql`: Execute DDL (CREATE, ALTER, DROP) SQL queries on the AnalyticDB PostgreSQL server\n* `analyze_table`: Collect table statistics\n* `explain_query`: Get query execution plan\n\n### Resources\n\n#### Built-in Resources\n\n* `adbpg:///schemas`: Get all schemas in the database\n\n#### Resource Templates\n\n* `adbpg:///{schema}/tables`: List all tables in a specific schema\n* `adbpg:///{schema}/{table}/ddl`: Get table DDL\n* `adbpg:///{schema}/{table}/statistics`: Show table statistics\n\n## Environment Variables\n\nMCP Server requires the following environment variables to connect to AnalyticDB PostgreSQL instance:\n\n- `ADBPG_HOST`: Database host address\n- `ADBPG_PORT`: Database port\n- `ADBPG_USER`: Database username\n- `ADBPG_PASSWORD`: Database password\n- `ADBPG_DATABASE`: Database name\n\n## Dependencies\n\n- Python 3.10 or higher\n- Required packages:\n  - mcp >= 1.4.0\n  - psycopg >= 3.1.0\n  - python-dotenv >= 1.0.0\n  - pydantic >= 2.0.0\n\n## Running\n\n```bash\n# Create and activate virtual environment\nuv venv .venv\nsource .venv/bin/activate  # Linux/Mac\n# or\n.venv\\Scripts\\activate     # Windows\n\n# Install dependencies\nuv pip install -e .\n\n# Run server\nuv run adbpg-mcp-server\n```\n\n\n"
}