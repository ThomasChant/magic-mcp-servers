{
  "mcp_name": "avarant/typesense-mcp-server",
  "mcp_description": "Facilitates seamless integration with Typesense by managing collections, documents, and search operations through MCP.",
  "mcp_id": "avarant_typesense-mcp-server",
  "fetch_timestamp": "2025-06-23T01:23:32.725957Z",
  "github_url": "https://github.com/avarant/typesense-mcp-server",
  "repository": {
    "name": "typesense-mcp-server",
    "full_name": "avarant/typesense-mcp-server",
    "description": "MCP server for Typesense",
    "html_url": "https://github.com/avarant/typesense-mcp-server",
    "created_at": "2025-04-22T02:08:07Z",
    "updated_at": "2025-06-17T13:08:00Z",
    "pushed_at": "2025-05-15T20:01:41Z",
    "size": 31,
    "stargazers_count": 3,
    "watchers_count": 3,
    "forks_count": 1,
    "open_issues_count": 0,
    "language": "Python",
    "license": "MIT License",
    "topics": [
      "mcp",
      "mcp-server",
      "python"
    ],
    "default_branch": "master",
    "owner": {
      "login": "avarant",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/22830568?v=4",
      "html_url": "https://github.com/avarant"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 1,
    "subscribers_count": 1,
    "languages": {
      "Python": 40625,
      "Dockerfile": 384
    },
    "language_percentages": {
      "Python": 99.06,
      "Dockerfile": 0.94
    },
    "pull_requests_count": 1,
    "contributors_count": 2
  },
  "readme": "# Typesense MCP Server\n[![smithery badge](https://smithery.ai/badge/@avarant/typesense-mcp-server)](https://smithery.ai/server/@avarant/typesense-mcp-server)\n\nA [Model Context Protocol](https://github.com/modelcontextprotocol/python-sdk) (MCP) Server that interfaces with [Typesense](https://typesense.org/)\n\n## Installation\n\n### Installing via Smithery\n\nTo install Typesense Server Integration for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@avarant/typesense-mcp-server):\n\n```bash\nnpx -y @smithery/cli install @avarant/typesense-mcp-server --client claude\n```\n\n### Manual Installation\nInstall [uv](https://docs.astral.sh/uv/getting-started/installation/)\n\nOn Mac you can install it using [homebrew](https://brew.sh/)\n\n```shell\nbrew install uv\n```\n\nClone the package\n\n```shell\ngit clone git@github.com:avarant/typesense-mcp-server.git ~/typesense-mcp-server\n```\n\nUpdate your `.cursor/mcp.json` to use in **Cursor**\n\n```json\n{\n  \"mcpServers\": {\n    \"typesense\": {\n      \"command\": \"uv\",\n      \"args\": [\"--directory\", \"~/typesense-mcp-server\", \"run\", \"mcp\", \"run\", \"main.py\"],\n      \"env\": {\n        \"TYPESENSE_HOST\": \"\",\n        \"TYPESENSE_PORT\": \"\", \n        \"TYPESENSE_PROTOCOL\": \"\",\n        \"TYPESENSE_API_KEY\": \"\"\n      }\n    }\n  }\n}\n```\n\n## Available Tools\n\nThe Typesense MCP Server provides the following tools:\n\n### Server Management\n- `check_typesense_health` - Checks the health status of the configured Typesense server\n- `list_collections` - Retrieves a list of all collections in the Typesense server\n\n### Collection Management\n- `describe_collection` - Retrieves the schema and metadata for a specific collection\n- `export_collection` - Exports all documents from a specific collection\n- `create_collection` - Creates a new collection with the provided schema\n- `delete_collection` - Deletes a specific collection\n- `truncate_collection` - Truncates a collection by deleting all documents but keeping the schema\n\n### Document Operations\n- `create_document` - Creates a single new document in a specific collection\n- `upsert_document` - Upserts (creates or updates) a single document in a specific collection\n- `index_multiple_documents` - Indexes (creates, upserts, or updates) multiple documents in a batch\n- `delete_document` - Deletes a single document by its ID from a specific collection\n- `import_documents_from_csv` - Imports documents from CSV data into a collection\n\n### Search Capabilities\n- `search` - Performs a keyword search on a specific collection\n- `vector_search` - Performs a vector similarity search on a specific collection\n"
}