{
  "mcp_name": "aldotestino/weather-mcp",
  "mcp_description": "Provides real-time weather and geolocation data for seamless integration with AI-native environments using the OpenWeather API.",
  "mcp_id": "aldotestino_weather-mcp",
  "fetch_timestamp": "2025-06-23T03:09:15.593369Z",
  "github_url": "https://github.com/aldotestino/weather-mcp",
  "repository": {
    "name": "weather-mcp",
    "full_name": "aldotestino/weather-mcp",
    "description": "An MCP-compatible service that provides real-time weather and location data via the OpenWeather API. Built for easy integration with Claude Desktop and Ollama (Qwen 2.5).",
    "html_url": "https://github.com/aldotestino/weather-mcp",
    "created_at": "2025-04-06T20:59:35Z",
    "updated_at": "2025-06-22T16:11:33Z",
    "pushed_at": "2025-04-07T20:53:46Z",
    "size": 50,
    "stargazers_count": 2,
    "watchers_count": 2,
    "forks_count": 2,
    "open_issues_count": 1,
    "language": "TypeScript",
    "license": null,
    "topics": [
      "claude",
      "local",
      "mcp",
      "ollama",
      "typescript",
      "weather"
    ],
    "default_branch": "main",
    "owner": {
      "login": "aldotestino",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/63453501?v=4",
      "html_url": "https://github.com/aldotestino"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 2,
    "subscribers_count": 2,
    "languages": {
      "TypeScript": 2906,
      "JavaScript": 259
    },
    "language_percentages": {
      "TypeScript": 91.82,
      "JavaScript": 8.18
    },
    "pull_requests_count": 1,
    "contributors_count": 1,
    "package_json_version": "1.0.0"
  },
  "readme": "# 🌤️ Weather MCP\n\n*Weather MCP* is a modular, MCP-compatible service that delivers real-time weather and geolocation data using the OpenWeather API. Built with the Model Context Protocol (MCP) SDK, it’s designed for seamless integration with AI-native environments like Claude Desktop and Ollama (with Qwen 2.5), enabling context-aware applications to access live weather insights effortlessly.\n\n## 🚀 Prerequisites\n\nBefore getting started, make sure the following tools are installed on your system:\n\n- 📦 [Node.js](https://nodejs.org/)\n- 🔁 [pnpm](https://pnpm.io/)\n- 🛠️ [Go](https://go.dev/) (required for `mcphost` with Ollama + Qwen 2.5)\n\n## ⚙️ Setup Instructions\n\n### 1. Clone the Repository\n\n```\ngit clone https://github.com/aldotestino/weather-mcp.git\ncd weather-mcp\n```\n\n### 2. Install Dependencies\n\nInstall all necessary packages using `pnpm`:\n\n```\npnpm install\n```\n\n### 3. 🔐 Add Your OpenWeather API Key\n\nWeather MCP requires a valid [OpenWeather API key](https://openweathermap.org/api). The API key should be set in the `env` object of your MCP configuration JSON file:\n\n```json\n{\n  \"env\": {\n    \"OPENWEATHER_API_KEY\": \"your_api_key_here\"\n  }\n}\n```\n\n> 💡 Tip: Use the provided `mcp.config.example.json` file as a template.\n\n### 4. Build the Project\n\nCompile the TypeScript source code:\n\n```\npnpm run build\n```\n\n## 🧠 Integration with Claude Desktop\n\n### 1. Locate Your Configuration File\n\n- **macOS**\n\n```\ncode ~/Library/Application\\ Support/Claude/claude_desktop_config.json\n```\n\n- **Windows**\n\n```\ncode $env:AppData\\Claude\\claude_desktop_config.json\n```\n\n### 2. Register the Weather MCP Server\n\nAdd or modify the `\"mcpServers\"` section like so:\n\n```json\n{\n  \"mcpServers\": {\n    \"weather\": {\n      \"command\": \"node\",\n      \"args\": [\n        \"/absolute/path/to/weather-mcp/build/index.js\"\n      ],\n      \"env\": {\n        \"OPENWEATHER_API_KEY\": \"your_api_key_here\"\n      }\n    }\n  }\n}\n```\n\n> 📁 Replace `/absolute/path/to/...` with the actual path to your local project directory.\n\n### 3. Restart Claude Desktop\n\nSave the file and restart Claude Desktop for changes to take effect.\n\n## 🤖 Integration with Ollama + Qwen 2.5\n\n### 1. Install MCP Host\n\n```\ngo install github.com/mark3labs/mcphost@latest\n```\n\n### 2. Start the MCP Host\n\nRun the server with your local config:\n\n```\nmcphost -m ollama:qwen2.5 --config \"./mcp.config.json\"\n```\n\n> 💡 Tip: Add the MCP Server configuration to `~/.mcp.json` to omit the `--config` parameter.\n"
}