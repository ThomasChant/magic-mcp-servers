{
  "mcp_name": "lincw/cwa-mcp-server",
  "mcp_description": "Connects Claude Desktop to Taiwan's Central Weather Bureau API for weather data access.",
  "mcp_id": "lincw_cwa-mcp-server",
  "fetch_timestamp": "2025-06-23T06:10:22.207615Z",
  "github_url": "https://github.com/lincw/cwa-mcp-server",
  "repository": {
    "name": "cwa-mcp-server",
    "full_name": "lincw/cwa-mcp-server",
    "description": "利用台灣中央氣象局的 API 建立 MCP-server",
    "html_url": "https://github.com/lincw/cwa-mcp-server",
    "created_at": "2025-04-04T21:53:42Z",
    "updated_at": "2025-04-05T08:25:04Z",
    "pushed_at": "2025-05-18T20:43:45Z",
    "size": 6,
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks_count": 1,
    "open_issues_count": 1,
    "language": "Shell",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "lincw",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/5780303?v=4",
      "html_url": "https://github.com/lincw"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 1,
    "subscribers_count": 1,
    "languages": {
      "Shell": 4176,
      "JavaScript": 3767
    },
    "language_percentages": {
      "Shell": 52.57,
      "JavaScript": 47.43
    },
    "pull_requests_count": 1,
    "contributors_count": 1,
    "latest_release": {
      "tag_name": "MCP",
      "name": "v0.1",
      "published_at": "2025-05-18T20:43:45Z",
      "body": "",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "MCP",
        "commit_sha": "72615bf7e1a1985f6b5da38cb92479eef4034870"
      }
    ],
    "latest_version": "MCP",
    "package_json_version": "0.1.0"
  },
  "readme": "# CWA MCP 伺服器\n\n一個簡單的模型內容協定 (Model Context Protocol, MCP) 伺服器，可將 Claude Desktop 連接到台灣中央氣象署 (CWA) API 以獲取氣象資料。\n\n## 功能特色\n\n- 簡單、輕量的 Node.js 實作\n- 容易設定並與 Claude Desktop 配合使用\n- 存取所有台灣縣市的 CWA 氣象預報資料\n\n## 快速開始\n\n1. 取得 CWA API 金鑰：\n   - 前往 [https://opendata.cwa.gov.tw/user/authkey](https://opendata.cwa.gov.tw/user/authkey)\n   - 登入（若沒有帳號，請先註冊）\n   - 點擊「取得授權碼」按鈕\n   - 複製你的 API 金鑰\n\n2. 使安裝腳本可執行：\n   ```bash\n   chmod +x install.sh\n   ```\n\n3. 執行安裝腳本：\n   ```bash\n   ./install.sh\n   ```\n\n4. 編輯位於 `~/.config/claude/claude_desktop_config.json` 的設定檔，加入你的 CWA API 金鑰：\n   ```json\n   {\n     \"mcpServers\": {\n       \"cwa\": {\n         \"command\": \"node\",\n         \"args\": [\n           \"/path/to/cwa-server.js\"\n         ],\n         \"env\": {\n           \"CWA_API_KEY\": \"CWA-1E740A28-FFDC-4186-BE0D-B02662F066EF\"\n         }\n       }\n     }\n   }\n   ```\n\n5. 重新啟動 Claude Desktop\n\n6. 開始在與 Claude 的對話中使用 CWA 氣象資料！\n\n## 可用工具\n\n### `get_weather_forecast`\n透過縣市名稱獲取台灣未來 36 小時的氣象預報。\n\n在 Claude 中的使用範例：\n```\n台北市現在的天氣如何？\n```\n\n## 使用 Docker\n\n你也可以使用 Docker 來執行這個 MCP 伺服器：\n\n1. 建立 `docker-compose.yml` 檔案：\n   ```yaml\n   version: '3'\n   services:\n     cwa-mcp-server:\n       container_name: cwa-mcp-server\n       image: node:18\n       volumes:\n         - ./:/app\n       working_dir: /app\n       command: node cwa-server.js\n       environment:\n         - CWA_API_KEY=你的_CWA_API_金鑰\n       restart: unless-stopped\n   ```\n\n2. 將 `你的_CWA_API_金鑰` 替換為你實際的 CWA API 金鑰\n\n3. 更新你的 Claude Desktop 設定：\n   ```json\n   {\n     \"mcpServers\": {\n       \"cwa\": {\n         \"command\": \"docker\",\n         \"args\": [\n           \"exec\",\n           \"-i\",\n           \"cwa-mcp-server\",\n           \"node\",\n           \"cwa-server.js\"\n         ]\n       }\n     }\n   }\n   ```\n\n4. 啟動 Docker 容器：\n   ```bash\n   docker-compose up -d\n   ```\n\n5. 重新啟動 Claude Desktop\n\n## 可用地區列表\n\n支援以下縣市名稱：\n- 宜蘭縣、花蓮縣、臺東縣、澎湖縣、金門縣、連江縣\n- 臺北市、新北市、桃園市、臺中市、臺南市、高雄市\n- 基隆市、新竹縣、新竹市、苗栗縣、彰化縣、南投縣\n- 雲林縣、嘉義縣、嘉義市、屏東縣\n\n## 故障排除\n\n- 確保已安裝 Node.js 18 或更高版本\n- 檢查你的 CWA API 金鑰是否有效並正確設定在設定檔中\n- 使用 `./test.sh` 測試伺服器以確認其正常運作\n- 確保 Claude Desktop 已正確設定，並在設定變更後重新啟動\n"
}