{
  "mcp_name": "mikechao/brave-search-mcp",
  "mcp_description": "üìá ‚òÅÔ∏è - Web, Image, News, Video, and Local Point of Interest search capabilities using Brave's Search API",
  "mcp_id": "mikechao_brave-search-mcp",
  "fetch_timestamp": "2025-06-23T06:46:11.589525Z",
  "github_url": "https://github.com/mikechao/brave-search-mcp",
  "repository": {
    "name": "brave-search-mcp",
    "full_name": "mikechao/brave-search-mcp",
    "description": "An MCP Server implementation that integrates the Brave Search API, providing, Web Search, Local Points of Interest Search, Image Search, Video Search and News Search capabilities",
    "html_url": "https://github.com/mikechao/brave-search-mcp",
    "created_at": "2025-04-02T19:15:47Z",
    "updated_at": "2025-06-22T22:57:24Z",
    "pushed_at": "2025-06-13T22:26:27Z",
    "size": 199,
    "stargazers_count": 26,
    "watchers_count": 26,
    "forks_count": 8,
    "open_issues_count": 0,
    "language": "TypeScript",
    "license": "GNU General Public License v3.0",
    "topics": [
      "brave-search",
      "image-search",
      "mcp",
      "model-context-protocol",
      "news-search",
      "video-search",
      "web-search"
    ],
    "default_branch": "main",
    "owner": {
      "login": "mikechao",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/1621501?v=4",
      "html_url": "https://github.com/mikechao"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 8,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 25798,
      "JavaScript": 700,
      "Dockerfile": 531
    },
    "language_percentages": {
      "TypeScript": 95.45,
      "JavaScript": 2.59,
      "Dockerfile": 1.96
    },
    "pull_requests_count": 2,
    "contributors_count": 3,
    "latest_release": {
      "tag_name": "v0.7.5",
      "name": "Added custom date range support (YYYY-MM-DDtoYYYY-MM-DD)",
      "published_at": "2025-06-13T19:04:11Z",
      "body": "added custom date range support (YYYY-MM-DDtoYYYY-MM-DD)",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v0.7.5",
        "commit_sha": "95c83ee6df1ddb145ff234885782dd04534939b7"
      },
      {
        "name": "v0.7.0",
        "commit_sha": "a9a0cc4f72699729ce8a5ddd1a9aadb9df4cfebe"
      },
      {
        "name": "v0.6.2",
        "commit_sha": "06295df864f40609cbdfb7af6272dc07abaa3407"
      },
      {
        "name": "v0.6.1",
        "commit_sha": "e966b6e52eb4e7dfba6931c0aa6a1add86e8ed3a"
      },
      {
        "name": "v0.6.0",
        "commit_sha": "f53f617b711794547f1cc299a0fac8e43a72a0e6"
      }
    ],
    "latest_version": "v0.7.5",
    "package_json_version": "0.7.5"
  },
  "readme": "# Brave Search MCP Server\n\nAn MCP Server implementation that integrates the [Brave Search API](https://brave.com/search/api/), providing, Web Search, Local Points of Interest Search, Video Search, Image Search and News Search capabilities\n\n<a href=\"https://glama.ai/mcp/servers/@mikechao/brave-search-mcp\">\n  <img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/@mikechao/brave-search-mcp/badge\" alt=\"Brave Search MCP server\" />\n</a>\n\n## Features\n\n- **Web Search**: Perform a regular search on the web\n- **Image Search**: Search the web for images. Image search results will be available as a Resource\n- **News Search**: Search the web for news\n- **Video Search**: Search the web for videos\n- **Local Points of Interest Search**: Search for local physical locations, businesses, restaurants, services, etc\n\n## Tools\n\n- **brave_web_search**\n\n  - Execute web searches using Brave's API\n  - Inputs:\n    - `query` (string): The term to search the internet for\n    - `count` (number, optional): The number of results to return (max 20, default 10)\n    - `offset` (number, optional, default 0): The offset for pagination\n    - `freshness` (enum, optional): Filters search results by when they were discovered\n      - The following values are supported\n        - pd: Discovered within the last 24 hours.\n        - pw: Discovered within the last 7 Days.\n        - pm: Discovered within the last 31 Days.\n        - py: Discovered within the last 365 Days\n        - YYYY-MM-DDtoYYYY-MM-DD: Custom date range (e.g., 2022-04-01to2022-07-30)\n\n- **brave_image_search**\n\n  - Get images from the web relevant to the query\n  - Inputs:\n    - `query` (string): The term to search the internet for images of\n    - `count` (number, optional): The number of images to return (max 3, default 1)\n\n- **brave_news_search**\n\n  - Searches the web for news\n  - Inputs:\n    - `query` (string): The term to search the internet for news articles, trending topics, or recent events\n    - `count` (number, optional): The number of results to return (max 20, default 10)\n    - `freshness` (enum, optional): Filters search results by when they were discovered\n      - The following values are supported\n        - pd: Discovered within the last 24 hours.\n        - pw: Discovered within the last 7 Days.\n        - pm: Discovered within the last 31 Days.\n        - py: Discovered within the last 365 Days\n        - YYYY-MM-DDtoYYYY-MM-DD: Custom date range (e.g., 2022-04-01to2022-07-30)\n\n- **brave_local_search**\n\n  - Search for local businesses, services and points of interest\n  - **REQUIRES** subscription to the Pro api plan for location results\n  - Falls back to brave_web_search if no location results are found\n  - Inputs:\n    - `query` (string): Local search term\n    - `count` (number, optional): The number of results to return (max 20, default 5)\n\n- **brave_video_search**\n\n  - Search the web for videos\n  - Inputs:\n    - `query`: (string): The term to search for videos\n    - `count`: (number, optional): The number of videos to return (max 20, default 10)\n    - `freshness` (enum, optional): Filters search results by when they were discovered\n      - The following values are supported\n        - pd: Discovered within the last 24 hours.\n        - pw: Discovered within the last 7 Days.\n        - pm: Discovered within the last 31 Days.\n        - py: Discovered within the last 365 Days\n        - YYYY-MM-DDtoYYYY-MM-DD: Custom date range (e.g., 2022-04-01to2022-07-30)\n\n## Configuration\n\n### Getting an API Key\n\n1. Sign up for a [Brave Search API account](https://brave.com/search/api/)\n2. Choose a plan (Free tier available with 2,000 queries/month)\n3. Generate your API key [from the developer dashboard](https://api.search.brave.com/app/keys)\n\n### Usage with Claude Desktop\n\n## Docker\n\n1. Clone the repo\n2. Docker build\n\n```bash\ndocker build -t brave-search-mcp:latest -f ./Dockerfile .\n```\n\n3. Add this to your `claude_desktop_config.json`:\n\n```json\n{\n  \"mcp-servers\": {\n    \"brave-search\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"-i\",\n        \"--rm\",\n        \"-e\",\n        \"BRAVE_API_KEY\",\n        \"brave-search-mcp\"\n      ],\n      \"env\": {\n        \"BRAVE_API_KEY\": \"YOUR API KEY HERE\"\n      }\n    }\n  }\n}\n```\n\n### NPX\n\nAdd this to your `claude_desktop_config.json`:\n\n```json\n{\n  \"mcp-servers\": {\n    \"brave-search\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"brave-search-mcp\"\n      ],\n      \"env\": {\n        \"BRAVE_API_KEY\": \"YOUR API KEY HERE\"\n      }\n    }\n  }\n}\n```\n\n### Usage with LibreChat\n\nAdd this to librechat.yaml\n\n```yaml\nbrave-search:\n  command: sh\n  args:\n    - -c\n    - BRAVE_API_KEY=API KEY npx -y brave-search-mcp\n```\n\n## Contributing\n\nContributions are welcome! Please feel free to submit a Pull Request.\n\n## Debugging\n\n1. Clone the repo\n\n2. Install Dependencies and build it\n\n```bash\nnpm install\n```\n\n3. Build the app\n\n```bash\nnpm run build\n```\n\n### Use the VS Code Run and Debug Function\n\n‚ö† Does not seem to work on Windows 10/11, but works in WSL2\n\nUse the VS Code\n[Run and Debug launcher](https://code.visualstudio.com/docs/debugtest/debugging#_start-a-debugging-session) with fully\nfunctional breakpoints in the code:\n\n1. Locate and select the run debug.\n2. Select the configuration labeled \"`MCP Server Launcher`\" in the dropdown.\n3. Select the run/debug button.\n   We can debug the various tools using [MCP Inspector](https://github.com/modelcontextprotocol/inspector) and VS Code.\n\n### VS Code Debug setup\n\nTo set up local debugging with breakpoints:\n\n1. Store Brave API Key in the VS Code\n\n   - Open the Command Palette (Cmd/Ctrl + Shift + P).\n   - Type `Preferences: Open User Settings (JSON)`.\n   - Add the following snippet:\n\n   ```json\n   {\n     \"brave.search.api.key\": \"your-api-key-here\"\n   }\n   ```\n\n2. Create or update `.vscode/launch.json`:\n\n```json\n{\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"type\": \"node\",\n      \"request\": \"launch\",\n      \"name\": \"MCP Server Launcher\",\n      \"skipFiles\": [\"<node_internals>/**\"],\n      \"program\": \"${workspaceFolder}/node_modules/@modelcontextprotocol/inspector/cli/build/cli.js\",\n      \"outFiles\": [\"${workspaceFolder}/dist/**/*.js\"],\n      \"env\": {\n        \"BRAVE_API_KEY\": \"${config:brave.search.api.key}\",\n        \"DEBUG\": \"true\"\n      },\n      \"args\": [\"dist/index.js\"],\n      \"sourceMaps\": true,\n      \"console\": \"integratedTerminal\",\n      \"internalConsoleOptions\": \"neverOpen\",\n      \"preLaunchTask\": \"npm: build:watch\"\n    },\n    {\n      \"type\": \"node\",\n      \"request\": \"attach\",\n      \"name\": \"Attach to Debug Hook Process\",\n      \"port\": 9332,\n      \"skipFiles\": [\"<node_internals>/**\"],\n      \"sourceMaps\": true,\n      \"outFiles\": [\"${workspaceFolder}/dist/**/*.js\"]\n    },\n    {\n      \"type\": \"node\",\n      \"request\": \"attach\",\n      \"name\": \"Attach to REPL Process\",\n      \"port\": 9333,\n      \"skipFiles\": [\"<node_internals>/**\"],\n      \"sourceMaps\": true,\n      \"outFiles\": [\"${workspaceFolder}/dist/**/*.js\"]\n    }\n  ],\n  \"compounds\": [\n    {\n      \"name\": \"Attach to MCP Server\",\n      \"configurations\": [\"Attach to Debug Hook Process\", \"Attach to REPL Process\"]\n    }\n  ]\n}\n```\n\n3. Create `.vscode/tasks.json`:\n\n```json\n{\n  \"version\": \"2.0.0\",\n  \"tasks\": [\n    {\n      \"type\": \"npm\",\n      \"script\": \"build:watch\",\n      \"group\": {\n        \"kind\": \"build\",\n        \"isDefault\": true\n      },\n      \"problemMatcher\": [\"$tsc\"]\n    }\n  ]\n}\n```\n\n## Disclaimer\n\nThis library is not officially associated with Brave Software. It is a third-party implementation of the Brave Search API with a MCP Server.\n\n## License\n\nThis project is licensed under the GNU General Public License v3.0 - see the [LICENSE](LICENSE) file for details.\n"
}