{
  "mcp_name": "tonioshikanlu/mcp-gdrive-server",
  "mcp_description": "Integrates with Google Drive to enable file listing, reading, and searching capabilities.",
  "mcp_id": "tonioshikanlu_mcp-gdrive-server",
  "fetch_timestamp": "2025-06-23T09:00:56.050751Z",
  "github_url": "https://github.com/tonioshikanlu/mcp-gdrive-server",
  "repository": {
    "name": "mcp-gdrive-server",
    "full_name": "tonioshikanlu/mcp-gdrive-server",
    "description": "Google Drive MCP server for integrating with Google Drive to allow listing, reading, and searching over files.",
    "html_url": "https://github.com/tonioshikanlu/mcp-gdrive-server",
    "created_at": "2025-04-02T21:10:12Z",
    "updated_at": "2025-06-05T08:32:49Z",
    "pushed_at": "2025-04-02T21:13:18Z",
    "size": 6,
    "stargazers_count": 4,
    "watchers_count": 4,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "JavaScript",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "tonioshikanlu",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/39501338?v=4",
      "html_url": "https://github.com/tonioshikanlu"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "JavaScript": 5866,
      "Dockerfile": 656,
      "Shell": 379
    },
    "language_percentages": {
      "JavaScript": 85,
      "Dockerfile": 9.51,
      "Shell": 5.49
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "package_json_version": "0.6.2"
  },
  "readme": "# Google Drive server\n\nThis MCP server integrates with Google Drive to allow listing, reading, and searching over files.\n\n## Components\n\n### Tools\n\n- **search**\n  - Search for files in Google Drive\n  - Input: `query` (string): Search query\n  - Returns file names and MIME types of matching files\n\n### Resources\n\nThe server provides access to Google Drive files:\n\n- **Files** (`gdrive:///<file_id>`)\n  - Supports all file types\n  - Google Workspace files are automatically exported:\n    - Docs → Markdown\n    - Sheets → CSV\n    - Presentations → Plain text\n    - Drawings → PNG\n  - Other files are provided in their native format\n\n## Getting started\n\n1. [Create a new Google Cloud project](https://console.cloud.google.com/projectcreate)\n2. [Enable the Google Drive API](https://console.cloud.google.com/workspace-api/products)\n3. [Configure an OAuth consent screen](https://console.cloud.google.com/apis/credentials/consent) (\"internal\" is fine for testing)\n4. Add OAuth scope `https://www.googleapis.com/auth/drive.readonly`\n5. [Create an OAuth Client ID](https://console.cloud.google.com/apis/credentials/oauthclient) for application type \"Desktop App\"\n6. Download the JSON file of your client's OAuth keys\n7. Rename the key file to `gcp-oauth.keys.json` and place into the root of this repo (i.e. `servers/gcp-oauth.keys.json`)\n\nMake sure to build the server with either `npm run build` or `npm run watch`.\n\n### Authentication\n\nTo authenticate and save credentials:\n\n1. Run the server with the `auth` argument: `node ./dist auth`\n2. This will open an authentication flow in your system browser\n3. Complete the authentication process\n4. Credentials will be saved in the root of this repo (i.e. `servers/.gdrive-server-credentials.json`)\n\n### Usage with Desktop App\n\nTo integrate this server with the desktop app, add the following to your app's server configuration:\n\n#### Docker\n\nAuthentication:\n\nAssuming you have completed setting up the OAuth application on Google Cloud, you can now auth the server with the following command, replacing `/path/to/gcp-oauth.keys.json` with the path to your OAuth keys file:\n\n```bash\ndocker run -i --rm --mount type=bind,source=/path/to/gcp-oauth.keys.json,target=/gcp-oauth.keys.json -v mcp-gdrive:/gdrive-server -e GDRIVE_OAUTH_PATH=/gcp-oauth.keys.json -e \"GDRIVE_CREDENTIALS_PATH=/gdrive-server/credentials.json\" -p 3000:3000 mcp/gdrive auth\n```\n\nThe command will print the URL to open in your browser. Open this URL in your browser and complete the authentication process. The credentials will be saved in the `mcp-gdrive` volume.\n\nOnce authenticated, you can use the server in your app's server configuration:\n\n```json\n{\n  \"mcpServers\": {\n    \"gdrive\": {\n      \"command\": \"docker\",\n      \"args\": [\"run\", \"-i\", \"--rm\", \"-v\", \"mcp-gdrive:/gdrive-server\", \"-e\", \"GDRIVE_CREDENTIALS_PATH=/gdrive-server/credentials.json\", \"mcp/gdrive\"]\n    }\n  }\n}\n```\n\n#### NPX\n\n```json\n{\n  \"mcpServers\": {\n    \"gdrive\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@modelcontextprotocol/server-gdrive\"\n      ]\n    }\n  }\n}\n```\n\n## License\n\nThis MCP server is licensed under the MIT License. This means you are free to use, modify, and distribute the software, subject to the terms and conditions of the MIT License. For more details, please see the LICENSE file in the project repository."
}