{
  "mcp_name": "oatpp-mcp",
  "mcp_description": "Anthropic's Model Context Protocol implementation for Oat++",
  "mcp_id": "oatpp_oatpp-mcp",
  "fetch_timestamp": "2025-06-23T07:13:53.076361Z",
  "github_url": "https://github.com/oatpp/oatpp-mcp",
  "repository": {
    "name": "oatpp-mcp",
    "full_name": "oatpp/oatpp-mcp",
    "description": "Anthropic’s Model Context Protocol implementation for Oat++",
    "html_url": "https://github.com/oatpp/oatpp-mcp",
    "created_at": "2024-12-09T01:27:21Z",
    "updated_at": "2025-06-23T02:03:23Z",
    "pushed_at": "2024-12-13T03:57:00Z",
    "size": 112,
    "stargazers_count": 42,
    "watchers_count": 42,
    "forks_count": 3,
    "open_issues_count": 0,
    "language": "C++",
    "license": "Apache License 2.0",
    "topics": [
      "anthropic",
      "model-context-protocol",
      "oatpp"
    ],
    "default_branch": "main",
    "owner": {
      "login": "oatpp",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/37167448?v=4",
      "html_url": "https://github.com/oatpp"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 3,
    "subscribers_count": 4,
    "languages": {
      "C++": 81910,
      "CMake": 12855
    },
    "language_percentages": {
      "C++": 86.43,
      "CMake": 13.57
    },
    "pull_requests_count": 4,
    "contributors_count": 2
  },
  "readme": "# oatpp-mcp\n\nAnthropic’s Model Context Protocol implementation for Oat++\n\nRead more:\n- [About Oat++](https://oatpp.io/)\n- [Oat++ Repository](https://github.com/oatpp/oatpp)\n- [Model Context Protocol](https://www.anthropic.com/news/model-context-protocol)\n\n## Supported features\n\n### Autogenerated tools for API\n\n:tada: `oatpp-mcp` can automatically generate tools from `ApiController` so that you can query your API with LLM. :tada:  \n\n- [Detailed tutorial](https://medium.com/oatpp/c-restful-web-service-with-autogenerated-mcp-server-to-connect-with-llms-156d68bbb661)\n- Example project [example-crud](https://github.com/oatpp/example-crud) (branch `add_mcp_server`)\n\n### Transport\n\n- STDIO\n- HTTP SSE\n\n### Server features\n\n- [Prompts](https://spec.modelcontextprotocol.io/specification/server/prompts/)\n- [Resources](https://spec.modelcontextprotocol.io/specification/server/resources/)\n- [Tools](https://spec.modelcontextprotocol.io/specification/server/tools/)\n\n## Build And Install\n\n### Pre Requirements\n\n- Install the main [oatpp](https://github.com/oatpp/oatpp) module\n\n### Install module\n\n- Clone this repository.\n- In the root of the repository run:\n   ```bash\n   mkdir build && cd build\n   cmake ..\n   make install\n   ```\n  \n## Examples\n\nFind working example in tests `/test/oatpp-mcp/app/ServerTest.cpp`\n\n### Serve via STDIO\n\n**Note:** make sure to redirect oatpp logging to a different stream - ex.: to file by providing custom Logger.\n\n```cpp\n  /* Create MCP server */\n  oatpp::mcp::Server server;\n\n  /* Add prompts */\n  server.addPrompt(std::make_shared<prompts::CodeReview>());\n\n  /* Add resource */\n  server.addResource(std::make_shared<resource::File>());\n  \n  /* Add tools */\n  server.addTool(std::make_shared<tools::Logger>());\n\n  /* Run server */\n  server.stdioListen(); \n```\n\n### Serve via SSE\n\n```cpp\n  /* Create MCP server */\n  oatpp::mcp::Server server;\n\n  /* Add prompts */\n  server.addPrompt(std::make_shared<prompts::CodeReview>());\n\n  /* Add resource */\n  server.addResource(std::make_shared<resource::File>());\n  \n  /* Add tools */\n  server.addTool(std::make_shared<tools::Logger>());\n\n  /* Add SSE controller to your HTTP server router */\n  router->addController(server.getSseController());\n```\n\n"
}