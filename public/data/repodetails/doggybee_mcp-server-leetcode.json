{
  "mcp_name": "doggybee/mcp-server-leetcode",
  "mcp_description": "üìá ‚òÅÔ∏è - An MCP server that enables AI models to search, retrieve, and solve LeetCode problems. Supports metadata filtering, user profiles, submissions, and contest data access.",
  "mcp_id": "doggybee_mcp-server-leetcode",
  "fetch_timestamp": "2025-06-23T02:41:46.375401Z",
  "github_url": "https://github.com/doggybee/mcp-server-leetcode",
  "repository": {
    "name": "mcp-server-leetcode",
    "full_name": "doggybee/mcp-server-leetcode",
    "description": "A Model Context Protocol (MCP) server for LeetCode that provides access to problems, user data, and contest information through GraphQL",
    "html_url": "https://github.com/doggybee/mcp-server-leetcode",
    "created_at": "2025-04-02T10:20:48Z",
    "updated_at": "2025-06-13T05:33:20Z",
    "pushed_at": "2025-04-02T14:27:05Z",
    "size": 34,
    "stargazers_count": 14,
    "watchers_count": 14,
    "forks_count": 3,
    "open_issues_count": 0,
    "language": "TypeScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "doggybee",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/17683868?v=4",
      "html_url": "https://github.com/doggybee"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 3,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 18181,
      "JavaScript": 1410,
      "Dockerfile": 449
    },
    "language_percentages": {
      "TypeScript": 90.72,
      "JavaScript": 7.04,
      "Dockerfile": 2.24
    },
    "pull_requests_count": 1,
    "contributors_count": 2,
    "package_json_version": "1.0.1"
  },
  "readme": "# MCP Server LeetCode\n\n[![npm version](https://img.shields.io/npm/v/@mcpfun/mcp-server-leetcode.svg)](https://www.npmjs.com/package/@mcpfun/mcp-server-leetcode)\n[![GitHub license](https://img.shields.io/github/license/doggybee/mcp-server-leetcode.svg)](https://github.com/doggybee/mcp-server-leetcode/blob/main/LICENSE)\n[![Version](https://img.shields.io/badge/version-1.0.1-blue.svg)](https://github.com/doggybee/mcp-server-leetcode/releases)\n[![smithery badge](https://smithery.ai/badge/@doggybee/mcp-server-leetcode)](https://smithery.ai/server/@doggybee/mcp-server-leetcode)\n\nA Model Context Protocol (MCP) server for LeetCode that enables AI assistants to access LeetCode problems, user information, and contest data.\n\n## Features\n\n- üöÄ Fast access to LeetCode API\n- üîç Search problems, retrieve daily challenges, and check user profiles\n- üèÜ Query contest data and rankings\n- üß© Full support for MCP tools and resources\n- üì¶ Provides both CLI and programmable API\n\n## Installation\n\n### Installing via Smithery\n\nTo install mcp-server-leetcode for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@doggybee/mcp-server-leetcode):\n\n```bash\nnpx -y @smithery/cli install @doggybee/mcp-server-leetcode --client claude\n```\n\n### Global Installation\n\n```bash\nnpm install -g @mcpfun/mcp-server-leetcode\n```\n\nOnce installed, you can run it directly from the command line:\n\n```bash\nmcp-server-leetcode\n```\n\n### Local Installation\n\n```bash\nnpm install @mcpfun/mcp-server-leetcode\n```\n\n## Usage\n\n### Integration with Claude for Desktop\n\nAdd the following to your Claude for Desktop `claude_desktop_config.json` file:\n\n```json\n{\n  \"mcpServers\": {\n    \"leetcode\": {\n      \"command\": \"mcp-server-leetcode\"\n    }\n  }\n}\n```\n\nFor local development:\n\n```json\n{\n  \"mcpServers\": {\n    \"leetcode\": {\n      \"command\": \"node\",\n      \"args\": [\"/path/to/dist/index.js\"]\n    }\n  }\n}\n```\n\n### Use as a Library\n\n```javascript\nimport { LeetCodeService } from '@mcpfun/mcp-server-leetcode';\n\n// Initialize the service\nconst leetcodeService = new LeetCodeService();\n\n// Get daily challenge\nconst dailyChallenge = await leetcodeService.getDailyChallenge();\n\n// Search problems\nconst problems = await leetcodeService.searchProblems({\n  difficulty: 'MEDIUM',\n  tags: 'array+dynamic-programming'\n});\n```\n\n## Available Tools\n\n### Problem-related Tools\n\n| Tool Name | Description | Parameters |\n|--------|------|------|\n| `get-daily-challenge` | Get the daily challenge | None |\n| `get-problem` | Get details for a specific problem | `titleSlug` (string) |\n| `search-problems` | Search for problems based on criteria | `tags` (optional), `difficulty` (optional), `limit` (default 20), `skip` (default 0) |\n\n### User-related Tools\n\n| Tool Name | Description | Parameters |\n|--------|------|------|\n| `get-user-profile` | Get user information | `username` (string) |\n| `get-user-submissions` | Get user submission history | `username` (string), `limit` (optional, default 20) |\n| `get-user-contest-ranking` | Get user contest rankings | `username` (string) |\n\n### Contest-related Tools\n\n| Tool Name | Description | Parameters |\n|--------|------|------|\n| `get-contest-details` | Get contest details | `contestSlug` (string) |\n\n## Available Resources\n\n### Problem Resources\n\n- `leetcode://daily-challenge`: Daily challenge\n- `leetcode://problem/{titleSlug}`: Problem details\n- `leetcode://problems{?tags,difficulty,limit,skip}`: Problem list\n\n### User Resources\n\n- `leetcode://user/{username}/profile`: User profile\n- `leetcode://user/{username}/submissions{?limit}`: User submissions\n- `leetcode://user/{username}/contest-ranking`: User contest ranking\n\n## Local Development\n\nClone the repository and install dependencies:\n\n```bash\ngit clone https://github.com/doggybee/mcp-server-leetcode.git\ncd mcp-server-leetcode\nnpm install\n```\n\nRun in development mode:\n\n```bash\nnpm run dev\n```\n\nBuild the project:\n\n```bash\nnpm run build\n```\n\n## License\n\nMIT\n\n## Related Projects\n\n- [Model Context Protocol](https://modelcontextprotocol.io) - MCP specifications and documentation\n- [Claude for Desktop](https://claude.ai/download) - AI assistant with MCP support\n\n## Acknowledgements\n\n- This project was inspired by [alfa-leetcode-api](https://github.com/alfaarghya/alfa-leetcode-api)\n"
}