{
  "mcp_name": "chcharcharlie/10XResearcher",
  "mcp_description": "10XResearcher enhances Claude into a systematic research agent with local data storage, enabling iterative research methodologies and high-quality outcomes.",
  "mcp_id": "chcharcharlie_10XResearcher",
  "fetch_timestamp": "2025-06-23T02:03:52.888341Z",
  "github_url": "https://github.com/chcharcharlie/10XResearcher",
  "repository": {
    "name": "10XResearcher",
    "full_name": "chcharcharlie/10XResearcher",
    "description": null,
    "html_url": "https://github.com/chcharcharlie/10XResearcher",
    "created_at": "2025-04-08T00:25:10Z",
    "updated_at": "2025-04-08T18:34:53Z",
    "pushed_at": "2025-04-08T18:34:50Z",
    "size": 74,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": null,
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "chcharcharlie",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/106578000?v=4",
      "html_url": "https://github.com/chcharcharlie"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "pull_requests_count": 0,
    "contributors_count": 1
  },
  "readme": "# 10XResearcher\n\n[English](./README.md) | [中文](./README.zh-CN.md)\n\nRun ChatGPT and Manus-like deep research at your desktop for just $20/month by transforming Claude into a powerful research agent with local data storage.\n\n## What is 10XResearcher?\n\n10XResearcher transforms Claude into a systematic research agent that follows an iterative methodology, stores all findings locally, and produces high-quality research outcomes.\n\n### Key Benefits\n\n- **Cost-effective**: Only requires Claude Desktop's $20/month subscription\n- **Local storage**: All research files and findings stored locally\n- **Systematic approach**: Alternating Discussion and Research phases\n- **Evidence-based**: All claims linked to stored references\n- **Resumable research**: Can pause and continue research across multiple conversations by simply referencing the project name\n\n## System Requirements\n\n- Claude Desktop subscription\n- Python 3.10+\n- Node.js 14+\n- Git\n\n## Installation\n\n### 1. Install Required Software\n\n1. Install Python from [python.org](https://python.org)\n2. Install Node.js from [nodejs.org](https://nodejs.org)\n3. Subscribe to Claude Desktop from [anthropic.com](https://www.anthropic.com/claude)\n\n### 2. Install Dependencies\n\n```bash\n# Install uvx for MCP server capabilities\npip install uvx\n\n# For desktop commander, follow Option 5 from the GitHub repository:\n# 1. Clone the repo: git clone https://github.com/wonderwhy-er/DesktopCommanderMCP.git\n# 2. Navigate to the directory: cd DesktopCommanderMCP\n# 3. Run: npm install\n# 4. Build: npm run build\n```\n\n### 3. Configure MCP Servers\n\n1. Open Claude Desktop → Settings → MCP Servers\n2. Add the following configuration (update paths for your system):\n\n```json\n{\n  \"mcpServers\": {\n    \"git\": {\n      \"timeout\": 60,\n      \"command\": \"/path/to/python/bin/uvx\",\n      \"args\": [\n        \"mcp-server-git\",\n        \"--repository\",\n        \"/path/to/your/research/directory\"\n      ],\n      \"transportType\": \"stdio\"\n    },\n    \"browser-use\": {\n      \"disabled\": false,\n      \"timeout\": 60,\n      \"command\": \"uvx\",\n      \"args\": [\n        \"mcp-browser-use\"\n      ],\n      \"transportType\": \"stdio\"\n    },\n    \"desktop-commander\": {\n      \"timeout\": 60,\n      \"command\": \"node\",\n      \"args\": [\n        \"/path/to/your/DesktopCommanderMCP/dist/index.js\"\n      ],\n      \"transportType\": \"stdio\"\n    }\n  }\n}\n```\n\n**Important notes:**\n- Replace `/path/to/python/bin/uvx` with your actual uvx path\n- Replace `/path/to/your/research/directory` with where you want research stored\n- Replace `/path/to/your/DesktopCommanderMCP/dist/index.js` with the path to your locally built DesktopCommanderMCP's dist/index.js file\n\nWe use the following MCP implementations:\n- Browser: [mcp-browser-use](https://github.com/vinayak-mehta/mcp-browser-use)\n- Desktop commands: [DesktopCommanderMCP](https://github.com/wonderwhy-er/DesktopCommanderMCP)\n- Git: [mcp-server-git](https://github.com/modelcontextprotocol/servers/tree/main/src/git)\n\n#### Finding Your Python Path\n\nOn macOS/Linux:\n```bash\nwhich uvx\n```\n\nOn Windows:\n```\nwhere uvx\n```\n\n### 4. Create Research Directory\n\n```bash\nmkdir -p ~/claude_space/research\n```\n\n## Usage with Claude Projects\n\n### Setting Up a Research Project\n\n1. Open Claude Desktop → Projects → New Project\n2. Name the project based on your research topic\n3. Click \"Set project instructions\"\n4. Copy the entire contents of [prompt_instructions.md](./prompt_instructions.md) into this field\n5. Click \"Save\"\n\n### Starting Research\n\n1. Open your project\n2. Start a new conversation within this project\n3. Describe your research request\n4. Claude will begin with a Discussion phase to understand your needs\n\n### Resuming Research\n\n1. Open the same project\n2. Start a new conversation\n3. Reference your research project name (e.g., \"Continue my RenewableEnergyMarket research\")\n4. Claude will read the existing repository and resume where you left off\n\n### Example Prompts\n\nTo start research:\n```\nI need to research renewable energy market trends for potential investments\n```\n\nTo resume research:\n```\nContinue my RenewableEnergyMarket research. What's the current status?\n```\n\n### Best Practices\n\n- Keep all research conversations within the same project\n- Start each new conversation with a clear reference to your research project name\n- Let Claude complete each phase before interrupting\n- Review the local repository files periodically to see stored research\n\n## How It Works\n\n10XResearcher implements a structured research methodology:\n\n1. **Discussion Phase**: Claude gathers requirements and develops a research plan\n2. **Research Phase**: Claude conducts web research with comprehensive documentation\n3. **Repeat**: The process cycles between discussion and research phases until completion\n\nAll research is stored in local git repositories with detailed documentation.\n\n## Troubleshooting\n\n### MCP Server Connection Issues\n- Verify correct paths in configuration\n- Check that all dependencies are installed\n- Ensure Claude Desktop has permissions to execute commands\n\n### Repository Access Issues\n- Confirm the repository path exists and is accessible\n- Check file permissions on the directory\n- Verify git is installed and accessible\n\n### Browser Issues\n- Confirm browser-use MCP server is enabled\n- Check that your system has a compatible browser installed\n\n## Known Issues\n\n1. **Truncated Responses**: Claude may stop mid-response when generating lengthy content. Type \"Continue\" to have it resume.\n\n2. **Long Conversation Limits**: After multiple \"Continue\" prompts, you may see a warning about usage limits. This indicates potential throttling and increased risk of Claude stopping unexpectedly. To mitigate this, start a new chat at convenient checkpoints and reference your project name to resume.\n\n3. **MCP Authorization**: You need to authorize each MCP action at least once when opening a new chat. While this setup also works with Claude (Cline), the auto-approval function may not work consistently.\n\n4. **Token Costs with Other Clients**: Using this setup with Cursor or Cline will incur token costs, unlike the fixed-fee Claude Desktop.\n\n## Additional Resources\n\n- [prompt_instructions.md](./prompt_instructions.md) - The core prompt system\n- [example_project](./example_project/) - Sample research project structure\n\n## Support and Feedback\n\nFor feature requests, bug reports, or general discussions, please contact [@chcharcharlie on Twitter](https://twitter.com/chcharcharlie).\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](./LICENSE) file for details.\n"
}