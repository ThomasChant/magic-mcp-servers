{
  "mcp_name": "kenliao94/mcp-server-rabbitmq",
  "mcp_description": "üêç üè† - Enable interaction (admin operation, message enqueue/dequeue) with RabbitMQ",
  "mcp_id": "kenliao94_mcp-server-rabbitmq",
  "fetch_timestamp": "2025-06-23T05:44:03.422037Z",
  "github_url": "https://github.com/kenliao94/mcp-server-rabbitmq",
  "repository": {
    "name": "mcp-server-rabbitmq",
    "full_name": "kenliao94/mcp-server-rabbitmq",
    "description": "MCP server for interacting with RabbitMQ",
    "html_url": "https://github.com/kenliao94/mcp-server-rabbitmq",
    "created_at": "2025-01-02T00:39:32Z",
    "updated_at": "2025-06-20T05:17:47Z",
    "pushed_at": "2025-06-11T22:34:36Z",
    "size": 183,
    "stargazers_count": 29,
    "watchers_count": 29,
    "forks_count": 8,
    "open_issues_count": 4,
    "language": "Python",
    "license": "Apache License 2.0",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "kenliao94",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/6269022?v=4",
      "html_url": "https://github.com/kenliao94"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 8,
    "subscribers_count": 2,
    "languages": {
      "Python": 33399,
      "Dockerfile": 1160
    },
    "language_percentages": {
      "Python": 96.64,
      "Dockerfile": 3.36
    },
    "pull_requests_count": 4,
    "contributors_count": 4,
    "latest_release": {
      "tag_name": "v2.2.0",
      "name": "v2.2.0 release",
      "published_at": "2025-06-11T20:12:13Z",
      "body": "## What's changed\r\n\r\n1. Added Streamable HTTP support with FastMCP BearerAuthProvider.\r\n2. Published on PyPI https://pypi.org/project/mcp-server-rabbitmq/2.2.0/ \r\n3. Added tool to dynamically connect to a different RabbitMQ broker.",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v2.2.0",
        "commit_sha": "8732866366652b26a3c78345173c84f47e33264b"
      },
      {
        "name": "v2.1.0",
        "commit_sha": "92148efca6ec7954a24f737597750bba336e8aeb"
      },
      {
        "name": "v2.0.0",
        "commit_sha": "191be4d32ca3b015755d63e7a0ab0436c235594f"
      }
    ],
    "latest_version": "v2.2.0"
  },
  "readme": "# RabbitMQ MCP Server\n[![smithery badge](https://smithery.ai/badge/@kenliao94/mcp-server-rabbitmq)](https://smithery.ai/server/@kenliao94/mcp-server-rabbitmq)\n\nA [Model Context Protocol](https://www.anthropic.com/news/model-context-protocol) server implementation for RabbitMQ operation.\n\n## Features\n\n### Manage your RabbitMQ message brokers using AI agent\nThis MCP servers wraps admin APIs of a RabbitMQ broker as MCP tools. It also uses Pika to interact with RabbitMQ to operate at the message level. You can also specify a different RabbitMQ broker that you want to connect to mid-conversation (default is configured during server initialization).\n\n### Supports streamable HTTP with FastMCP's `BearerAuthProvider`\nYou can start a remote RabbitMQ MCP server by configuring your own IdP and 3rd party authorization provider.\n\n### Seamless integration with MCP clients\nThe package is available on PyPI, you can use uvx without having to fork and build the MCP server locally first.\n\n\n## Installation\n\n### Smithery\n\nTo install RabbitMQ MCP Server for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@kenliao94/mcp-server-rabbitmq):\n\n```bash\nnpx -y @smithery/cli install @kenliao94/mcp-server-rabbitmq --client claude\n```\n\n### Try it online\nhttps://smithery.ai/server/@kenliao94/mcp-server-rabbitmq\n\n\n### PyPI\n\nhttps://pypi.org/project/mcp-server-rabbitmq/\n\nUse uvx directly in your MCP client config\n\n```json\n{\n    \"mcpServers\": {\n      \"rabbitmq\": {\n        \"command\": \"uvx\",\n        \"args\": [\n            \"mcp-server-rabbitmq@latest\",\n            \"--rabbitmq-host\",\n            \"<hostname ex. test.rabbit.com, localhost>\",\n            \"--port\",\n            \"<port number ex. 5672>\",\n            \"--username\",\n            \"<rabbitmq username>\",\n            \"--password\",\n            \"<rabbitmq password>\",\n            \"--use-tls\",\n            \"<true if uses amqps, false otherwise>\"\n        ]\n      }\n    }\n}\n```\n\n### From source\n1. Clone this repository.\n\n```json\n{\n    \"mcpServers\": {\n      \"rabbitmq\": {\n        \"command\": \"uv\",\n        \"args\": [\n            \"--directory\",\n            \"/path/to/repo/mcp-server-rabbitmq\",\n            \"run\",\n            \"mcp-server-rabbitmq\",\n            \"--rabbitmq-host\",\n            \"<hostname ex. test.rabbit.com, localhost>\",\n            \"--port\",\n            \"<port number ex. 5672>\",\n            \"--username\",\n            \"<rabbitmq username>\",\n            \"--password\",\n            \"<rabbitmq password>\",\n            \"--use-tls\",\n            \"<true if uses amqps, false otherwise>\"\n        ]\n      }\n    }\n}\n```\n\n## Roadmap\n1. Full feature parity with `rabbitmqadmin`\n1. Support RabbitMQ OAuth instead of basic authentication\n\n\n## Development\n\n### Setup Development Environment\n\n```bash\n# Clone the repository\ngit clone https://github.com/kenliao94/mcp-server-rabbitmq.git\ncd mcp-server-rabbitmq\n\n# Install pre-commit hooks\npre-commit install\n```\n\n### Running Tests\n\n```bash\npytest\n```\n\n### Code Quality\n\nThis project uses ruff for linting and formatting:\n\n```bash\n# Run linter\nruff check .\n\n# Run formatter\nruff format .\n```\n\n## License\n\nThis project is licensed under the Apache License 2.0 - see the LICENSE file for details.\n"
}