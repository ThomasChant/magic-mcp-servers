{
  "mcp_name": "edupoli/zapdelivery",
  "mcp_description": "ZapDelivery API facilitates self-service delivery projects with an integrated MCP endpoint for seamless operations.",
  "mcp_id": "edupoli_zapdelivery",
  "fetch_timestamp": "2025-06-23T02:48:31.079972Z",
  "github_url": "https://github.com/edupoli/zapdelivery",
  "repository": {
    "name": "zapdelivery",
    "full_name": "edupoli/zapdelivery",
    "description": "API para projeto de autoatendimento em delivery",
    "html_url": "https://github.com/edupoli/zapdelivery",
    "created_at": "2025-04-24T17:42:48Z",
    "updated_at": "2025-04-24T20:10:37Z",
    "pushed_at": "2025-04-24T20:10:33Z",
    "size": 73,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "Python",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "edupoli",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/30879448?v=4",
      "html_url": "https://github.com/edupoli"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "Python": 12216
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 2
  },
  "readme": "# ZapDelivery API\r\n\r\n## üìã Pr√©-requisitos\r\n\r\n- Python 3.10+\r\n- Docker\r\n- Git\r\n\r\n\r\n## üöÄ Configura√ß√£o Inicial\r\n\r\n### 1. Clonar o reposit√≥rio\r\n```bash\r\ngit clone git@github.com:edupoli/zapdelivery.git\r\ncd zapdelivery\r\n```\r\n\r\n### 2. Instalar UV (gerenciador de pacotes)\r\n\r\n# macOS/Linux\r\n```bash\r\ncurl -LsSf https://astral.sh/uv/install.sh | sh\r\n```\r\n# Windows (PowerShell)\r\n```bash\r\npowershell -ExecutionPolicy ByPass -c \"irm https://astral.sh/uv/install.ps1 | iex\"\r\n```\r\n\r\n### 3. Criar e ativar ambiente virtual\r\n```bash\r\nuv venv\r\n```\r\n# Linux/Mac\r\n```bash\r\nsource .venv/bin/activate\r\n```\r\n# Windows\r\n```bash\r\n.\\.venv\\Scripts\\activate\r\n```\r\n\r\n### 4. Instalar depend√™ncias\r\n```bash\r\nuv sync\r\n```\r\n\r\n### 5. Iniciar container PostgreSQL\r\n```bash\r\ndocker run --name zapdelivery-db \\\r\n  -e POSTGRES_USER=zapuser \\\r\n  -e POSTGRES_PASSWORD=zappassword \\\r\n  -e POSTGRES_DB=zapdelivery \\\r\n  -p 5432:5432 \\\r\n  -v ~/postgres-data:/var/lib/postgresql/data \\\r\n  -d postgres:latest\r\n```\r\n\r\n### 6. Configurar vari√°veis de ambiente\r\nCrie um arquivo .env na raiz do projeto com:\r\n```bash\r\nDATABASE_URL=\"postgresql://zapuser:zappassword@localhost:5432/zapdelivery?schema=public\"\r\nGROQ_API_KEY=\"sua_chave_aqui\"\r\n```\r\n\r\n### üîÑ Migra√ß√µes do Banco de Dados\r\n```bash\r\nprisma generate\r\nprisma db push\r\n```\r\n\r\n‚ñ∂Ô∏è Executar a Aplica√ß√£o\r\n```bash\r\nuv run src/main.py\r\n```\r\n\r\nA API estar√° dispon√≠vel em:\r\n\r\nüìÑ Documenta√ß√£o: http://localhost:8000/docs\r\n\r\nüîå Endpoint MCP: http://localhost:8000/mcp\r\n\r\nüõ† Configura√ß√£o do Cursor IDE\r\nAdicione no arquivo de configura√ß√£o do Cursor:\r\n\r\n```bash\r\n{\r\n  \"mcpServers\": {\r\n    \"postgres-api\": {\r\n      \"url\": \"http://localhost:8000/mcp\"\r\n    }\r\n  }\r\n}\r\n```\r\n"
}