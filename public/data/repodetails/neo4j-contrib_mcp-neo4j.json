{
  "mcp_name": "Neo4j",
  "mcp_description": "üêç üè† - Model Context Protocol with Neo4j (Run queries, Knowledge Graph Memory, Manaage Neo4j Aura Instances)",
  "mcp_id": "neo4j-contrib_mcp-neo4j",
  "fetch_timestamp": "2025-06-23T07:02:28.403019Z",
  "github_url": "https://github.com/neo4j-contrib/mcp-neo4j/",
  "repository": {
    "name": "mcp-neo4j",
    "full_name": "neo4j-contrib/mcp-neo4j",
    "description": "Model Context Protocol with Neo4j",
    "html_url": "https://github.com/neo4j-contrib/mcp-neo4j",
    "created_at": "2024-12-03T15:44:25Z",
    "updated_at": "2025-06-23T02:44:08Z",
    "pushed_at": "2025-06-18T14:21:03Z",
    "size": 4989,
    "stargazers_count": 438,
    "watchers_count": 438,
    "forks_count": 115,
    "open_issues_count": 20,
    "language": "Python",
    "license": "MIT License",
    "topics": [
      "database",
      "mcp",
      "mcp-server",
      "neo4j",
      "stdio"
    ],
    "default_branch": "main",
    "owner": {
      "login": "neo4j-contrib",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/916372?v=4",
      "html_url": "https://github.com/neo4j-contrib"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 115,
    "subscribers_count": 6,
    "languages": {
      "Python": 161872,
      "Dockerfile": 2520,
      "Makefile": 594,
      "Shell": 538
    },
    "language_percentages": {
      "Python": 97.79,
      "Dockerfile": 1.52,
      "Makefile": 0.36,
      "Shell": 0.33
    },
    "pull_requests_count": 48,
    "contributors_count": 5,
    "latest_release": {
      "tag_name": "mcp-neo4j-memory-v0.1.5",
      "name": "mcp-neo4j-memory-v0.1.5",
      "published_at": "2025-06-18T14:21:03Z",
      "body": "## v0.1.5\r\n\r\n### Fixed\r\n* Remove use of dynamic node labels and relationship types to be compatible with Neo4j versions < 5.26\r\n\r\n## What's Changed\r\n* Update README.md by @a-s-g93 in https://github.com/neo4j-contrib/mcp-neo4j/pull/66\r\n* remove dynamic node labels and rel types, tested with neo4j v5.24 by @a-s-g93 in https://github.com/neo4j-contrib/mcp-neo4j/pull/70\r\n* update versions, changelog by @a-s-g93 in https://github.com/neo4j-contrib/mcp-neo4j/pull/71\r\n\r\n\r\n**Full Changelog**: https://github.com/neo4j-contrib/mcp-neo4j/compare/mcp-neo4j-data-modeling-v0.1.1...mcp-neo4j-memory-v0.1.5",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "mcp-neo4j-memory-v0.1.5",
        "commit_sha": "88b188b190281d3aff9c478b6e5c070b7c0c4731"
      },
      {
        "name": "mcp-neo4j-memory-v0.1.3",
        "commit_sha": "6ffd2d4f0eda9f2aff65c41bc81c4a7e8ac42e9f"
      },
      {
        "name": "mcp-neo4j-memory-v0.1.2",
        "commit_sha": "da69f707ec51c08789822629a62f27c8f792a59b"
      },
      {
        "name": "mcp-neo4j-memory-v.0.1.1",
        "commit_sha": "697a59a10a119c1425d35d77fd8190483888375c"
      },
      {
        "name": "mcp-neo4j-data-modeling-v0.1.1",
        "commit_sha": "ff3dcd2544094e84ed204b6b7548212f7fcbfd90"
      },
      {
        "name": "mcp-neo4j-data-modeling-v0.1.0",
        "commit_sha": "fc98eb1a3ef2386e72ec962e2e4b4fc2cee90639"
      },
      {
        "name": "mcp-neo4j-cypher-v0.2.3",
        "commit_sha": "f437920abcf736835a3f41c8b092739d7b52b4d4"
      },
      {
        "name": "mcp-neo4j-cypher-v0.2.2",
        "commit_sha": "3ccc3ff76763a3cdce3f389bff67339b1fac32c1"
      },
      {
        "name": "mcp-neo4j-cypher-v0.2.1",
        "commit_sha": "9c42e4d856c6804d1e4f45c59a18152c9024c68a"
      },
      {
        "name": "mcp-neo4j-cypher-v0.2.0",
        "commit_sha": "d00ad4171795c736c4fb9b3d0ae521ba2e54fa73"
      }
    ],
    "latest_version": "mcp-neo4j-memory-v0.1.5"
  },
  "readme": "# Neo4j MCP Clients & Servers\n\nModel Context Protocol (MCP) is a [standardized protocol](https://modelcontextprotocol.io/introduction) for managing context between large language models (LLMs) and external systems. \n\nThis lets you use Claude Desktop, or any other MCP Client (VS Code, Cursor, Windsurf), to use natural language to accomplish things with Neo4j and your Aura account, e.g.:\n\n* What is in this graph?\n* Render a chart from the top products sold by frequency, total and average volume\n* List my instances\n* Create a new instance named mcp-test for Aura Professional with 4GB and Graph Data Science enabled\n* Store the fact that I worked on the Neo4j MCP Servers today with Andreas and Oskar\n\n## Servers\n\n### `mcp-neo4j-cypher` - natural language to Cypher queries\n\n[Details in Readme](./servers/mcp-neo4j-cypher/)\n\nGet database schema for a configured database and execute generated read and write Cypher queries on that database.\n\n### `mcp-neo4j-memory` - knowledge graph memory stored in Neo4j\n\n[Details in Readme](./servers/mcp-neo4j-memory/)\n\nStore and retrieve entities and relationships from your personal knowledge graph in a local or remote Neo4j instance.\nAccess that information over different sessions, conversations, clients.\n\n### `mcp-neo4j-cloud-aura-api` - Neo4j Aura cloud service management API\n\n[Details in Readme](./servers/mcp-neo4j-cloud-aura-api//)\n\nManage your [Neo4j Aura](https://console.neo4j.io) instances directly from the comfort of your AI assistant chat.\n\nCreate and destroy instances, find instances by name, scale them up and down and enable features.\n\n### `mcp-neo4j-data-modeling` - interactive graph data modeling and visualization\n\n[Details in Readme](./servers/mcp-neo4j-data-modeling/)\n\nCreate, validate, and visualize Neo4j graph data models. Allows for model import/export from Arrows.app.\n\n## Contributing\n\nContributions are welcome! Please feel free to submit a Pull Request.\n\n## Blog Posts\n\n* [Everything a Developer Needs to Know About the Model Context Protocol (MCP)](https://neo4j.com/blog/developer/model-context-protocol/)\n* [Claude Converses With Neo4j Via MCP - Graph Database & Analytics](https://neo4j.com/blog/developer/claude-converses-neo4j-via-mcp/)\n* [Building Knowledge Graphs With Claude and Neo4j: A No-Code MCP Approach - Graph Database & Analytics](https://neo4j.com/blog/developer/knowledge-graphs-claude-neo4j-mcp/)\n\n## License\n\nMIT License\n"
}