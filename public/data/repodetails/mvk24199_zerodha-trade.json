{
  "mcp_name": "mvk24199/zerodha-trade",
  "mcp_description": "Facilitates automated stock trading on the Zerodha platform using Bun.js and Claude MCP integration.",
  "mcp_id": "mvk24199_zerodha-trade",
  "fetch_timestamp": "2025-06-23T06:57:27.347844Z",
  "github_url": "https://github.com/mvk24199/zerodha-trade",
  "repository": {
    "name": "zerodha-trade",
    "full_name": "mvk24199/zerodha-trade",
    "description": "MCP Server on Zerodha Trading Platform",
    "html_url": "https://github.com/mvk24199/zerodha-trade",
    "created_at": "2025-04-27T22:16:02Z",
    "updated_at": "2025-04-27T22:30:12Z",
    "pushed_at": "2025-04-27T22:30:09Z",
    "size": 23,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "TypeScript",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "mvk24199",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/155895637?v=4",
      "html_url": "https://github.com/mvk24199"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 2843
    },
    "language_percentages": {
      "TypeScript": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 1
  },
  "readme": "# 🚀 Zerodha Trading Agent (MCP x Bun.js)\n\nThis is an intelligent **Stock Trading Agent** built using:\n- **Bun.js** (fast JavaScript runtime)\n- **Zerodha Kite Connect API**\n- **Claude MCP Server Integration**\n\nThe agent allows you to **place trades**, **auto-buy/sell stocks** based on triggers, and (future roadmap) **predict stock trends** using historical data and live news.\n\n---\n\n## 📋 Features\n\n- 🔥 Place **Buy** and **Sell** orders automatically via MCP Agent\n- 🛡️ **Authenticate** securely using Kite Connect\n- 🔄 **Auto-refresh access tokens** periodically\n- 🎯 *(Coming Soon)* Smart GTT-like Watchlist based buying/selling\n- 🧠 *(Coming Soon)* Stock Future Prediction using charts and news analysis\n- ⚡ Built with **Bun.js** for superfast runtime\n- 🎯 Fully compatible with **Claude Toolchain / MCP Agents**\n\n---\n\n## 📂 Project Structure\n\n```\nzerodha-trade/\n├── index.ts          # MCP Server setup, defines trading tools\n├── trade.ts          # Trading logic: place order, generate session\n├── refreshToken.ts   # Refreshes access token using request_token\n├── login.ts          # (One time) Generate new access token\n├── tokenStore.json   # Stores API key, secret, access token\n├── watchlist.json    # (Coming soon) GTT trigger rules\n├── README.md         # Project documentation\n```\n\n---\n\n## ⚙️ Setup Instructions\n\n### 1. Install Dependencies\n\n```bash\nbun install\n```\n\n_(Make sure you have Bun.js installed:)_\n\n```bash\ncurl -fsSL https://bun.sh/install | bash\n```\n\n---\n\n### 2. Configure API Credentials\n\nUpdate `tokenStore.json` with:\n\n```json\n{\n  \"apiKey\": \"YOUR_KITE_API_KEY\",\n  \"apiSecret\": \"YOUR_KITE_API_SECRET\",\n  \"accessToken\": \"YOUR_ACCESS_TOKEN\"\n}\n```\n\nIf you don't have `accessToken` yet, run:\n\n```bash\nbun login.ts\n```\n\nto generate one manually.\n\n---\n\n### 3. Running the Agent Server\n\n```bash\nbun index.ts\n```\n\n✅ This will:\n- Auto-refresh your access token every 24 hours\n- Expose trading functions to Claude Agent via MCP Server\n- Run a server on `http://localhost:3000`\n\n---\n\n### 4. Using HTTPS Locally (via ngrok)\n\nSince Kite Connect requires an HTTPS URL, you can use [ngrok](https://ngrok.com/) to tunnel your local server securely.\n\n```bash\nbrew install ngrok   # Install ngrok (if not already installed)\nngrok http 3000      # Expose port 3000 via HTTPS\n```\n\nAfter running, you will get a public HTTPS URL like `https://abc1234.ngrok.io`. Use this URL as your **Redirect URL** when creating your Kite Connect App.\n\n---\n\n### 5. Creating Kite Connect App (to get API Key/Secret)\n\n1. Go to [Kite Developer Console](https://developers.kite.trade/apps)\n2. Click **Create New App**\n3. Fill in:\n   - **App Name:** (Any meaningful name)\n   - **Redirect URL:** (Paste your `https://xyz.ngrok.io` URL)\n   - **Postback URL:** (Same or another ngrok HTTPS URL)\n   - **Products:** Kite Connect\n   - **Exchange:** NSE, BSE, etc.\n4. After creation, you will get **API Key** and **API Secret**\n5. Update `tokenStore.json` accordingly\n\n---\n\n## 🚀 MCP Server Configuration Example\n\n```json\n{\n  \"mcpServers\": {\n    \"zerodha-trade\": {\n      \"command\": \"/Users/vamsi/.bun/bin/bun\",\n      \"args\": [\n        \"--directory\",\n        \"/Users/vamsi/Projects/zerodha-trade\",\n        \"index.ts\"\n      ]\n    }\n  }\n}\n```\n\n---\n\n## 🛠️ Future Enhancements (Roadmap)\n\n- 🔔 Smart GTT Trigger system: Buy/sell when price crosses target\n- 📈 Stock Future Prediction Agent (using historical price + live news)\n- 📊 Auto SIP Bot for ETFs like Nifty50\n- 📬 Telegram/Slack Alerts on successful order execution\n- 📉 Stop Loss Automation on Portfolio Holdings\n\n---\n\n## 🤖 How It Works (High Level)\n\n1. MCP Agent requests `buyStock(symbol, quantity)` or `sellStock(symbol, quantity)`\n2. Agent server uses Kite Connect API to place orders\n3. Access token refreshed every day automatically\n4. *(Upcoming)* Background service watches prices to auto-trigger GTT-like orders\n5. *(Upcoming)* News + Chart analysis predict stock trend\n\n---\n\n## ✨ Credits\n\n- [Zerodha Kite Connect API](https://kite.trade/)\n- [Bun.js](https://bun.sh/)\n- [Claude Model Context Protocol](https://modelcontextprotocol.io/)\n- [Zerodha Developer Community](https://kite.trade/forum/)\n\n---\n\n"
}