{
  "mcp_name": "protagolabs/Netmind-Parse-PDF-MCP",
  "mcp_description": "Transforms PDF files from URLs into structured JSON or Markdown formats using Netmind's MCP server.",
  "mcp_id": "protagolabs_Netmind-Parse-PDF-MCP",
  "fetch_timestamp": "2025-06-23T07:38:03.175999Z",
  "github_url": "https://github.com/protagolabs/Netmind-Parse-PDF-MCP",
  "repository": {
    "name": "Netmind-Parse-PDF-MCP",
    "full_name": "protagolabs/Netmind-Parse-PDF-MCP",
    "description": "A Model Context Protocol (MCP) server that parses PDF files into structured formats.",
    "html_url": "https://github.com/protagolabs/Netmind-Parse-PDF-MCP",
    "created_at": "2025-04-25T06:37:20Z",
    "updated_at": "2025-06-19T11:44:49Z",
    "pushed_at": "2025-06-19T11:44:46Z",
    "size": 36,
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "protagolabs",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/31184424?v=4",
      "html_url": "https://github.com/protagolabs"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 2,
    "languages": {
      "Python": 3252
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "latest_release": {
      "tag_name": "v0.1.6",
      "name": "v0.1.6",
      "published_at": "2025-04-27T09:06:01Z",
      "body": "",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v0.1.6",
        "commit_sha": "7b7b77bddab7986ac118048a49b101ef5e9f6547"
      },
      {
        "name": "v0.1.2",
        "commit_sha": "d4908d9ca4d609830de8e029e5b5cc4de736dc8b"
      }
    ],
    "latest_version": "v0.1.6"
  },
  "readme": "# NetMind ParsePro\n> - **Try playground [here](https://www.netmind.ai/AIServices/parse-pdf)**\n> - **Listed on** [NetMind AI Services](https://www.netmind.ai/AIServices/parse-pdf)\n> - **Verified by** [MCP Review](https://mcpreview.com/mcp-servers/protagolabs/netmind-parse-pdf-mcp)\n\n\nThe PDF Parser AI service, built and customized by the [NetMind](https://netmind.ai) team, is a high-quality, robust,\nand cost-efficient solution for converting PDF files into specified output formats such as JSON and Markdown.\nIt is fully MCP serverâ€“ready, allowing seamless integration with AI agents.\n\n## Components\n\n### Tools\n\n- parse_pdf: Parses a PDF file and returns the extracted content in the specified format. \n  The tools supports both local file paths and remote URLs as input sources.\n  It extracts the content from the PDF and formats it either as structured JSON or as a Markdown string.\n    - source: required: The source of the PDF file to be parsed.\n      - If it is a string starting with \"http://\" or \"https://\", it will be treated as a remote URL.\n      - Otherwise, it will be treated as a local file path (absolute path recommended, e.g. \"/Users/yourname/file.pdf\").\n    - format: the desired format for the parsed output. Supports: \"json\", \"markdown\"\n    - Returns the extracted content in the specified format (JSON dictionary or Markdown string).\n\n## Installation\n\n### Requires [UV](https://github.com/astral-sh/uv) (Fast Python package and project manager)\n\nIf uv isn't installed.\n\n```bash\n# Using Homebrew on macOS\nbrew install uv\n```\n\nor\n\n```bash\n# On macOS and Linux.\ncurl -LsSf https://astral.sh/uv/install.sh | sh\n\n# On Windows.\npowershell -ExecutionPolicy ByPass -c \"irm https://astral.sh/uv/install.ps1 | iex\"\n```\n\n### Environment Variables\n\nYou can obtain an API key from [Netmind](https://www.netmind.ai/user/apiToken)\n\n- `NETMIND_API_TOKEN`: Your Netmind API key\n\n### Cursor & Claude Desktop && Windsurf Installation\n\nAdd this tool as a mcp server by editing the Cursor/Claude/Windsurf config file.\n\n```json\n{\n  \"mcpServers\": {\n    \"parse-pdf\": {\n      \"env\": {\n        \"NETMIND_API_TOKEN\": \"XXXXXXXXXXXXXXXXXXXX\"\n      },\n      \"command\": \"uvx\",\n      \"args\": [\n        \"netmind-parse-pdf-mcp\"\n      ]\n    }\n  }\n}\n```\n\n#### Cursor\n\n- On MacOS: `/Users/your-username/.cursor/mcp.json`\n- On Windows: `C:\\Users\\your-username\\.cursor\\mcp.json`\n\n#### Claude\n\n- On MacOS: `~/Library/Application\\ Support/Claude/claude_desktop_config.json`\n- On Windows: `%APPDATA%/Claude/claude_desktop_config.json`\n\n\n### Windsurf\n\n- On MacOS: `/Users/your-username/.codeium/windsurf/mcp_config.json`\n- On Windows: `C:\\Users\\your-username\\.codeium\\windsurf\\mcp_config.json`\n"
}