{
  "mcp_name": "mila-iqia/paperpal",
  "mcp_description": "Enhance your literature review process by integrating LLMs with arXiv and Hugging Face papers for seamless paper discussions and organization.",
  "mcp_id": "mila-iqia_paperpal",
  "fetch_timestamp": "2025-06-23T06:46:42.982470Z",
  "github_url": "https://github.com/mila-iqia/paperpal",
  "repository": {
    "name": "paperpal",
    "full_name": "mila-iqia/paperpal",
    "description": null,
    "html_url": "https://github.com/mila-iqia/paperpal",
    "created_at": "2025-04-10T14:39:44Z",
    "updated_at": "2025-04-18T18:30:45Z",
    "pushed_at": "2025-04-11T19:06:31Z",
    "size": 12,
    "stargazers_count": 2,
    "watchers_count": 2,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "mila-iqia",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/11724251?v=4",
      "html_url": "https://github.com/mila-iqia"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 2,
    "languages": {
      "Python": 8762
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 1
  },
  "readme": "# paperpal\n\nMCP Extension to aid you in searching and writing literature reviews\n\n> Check out this [conversation with Claude](https://claude.ai/share/0572fbd9-3ba2-4143-9f7f-5cae205c6d0d) to see what it can do\n\n## How it works\n\n`paperpal` gives your LLMs access to [arxiv](https://www.arxiv.org) and [Hugging Face papers](https://huggingface.co/papers).\nYou can then have a natural conversation with your favourite LLMs (e.g. Claude) and have it guide you.\n\nYou can:\n\n* Discuss papers\n* Look for new papers\n* Organize ideas for liteature reviews\n* etc.\n\nOf course, this tool is as good as the sum of its parts. LLMs can still hallucinate, and semantic search is never perfect.\n\n## Quickstart\n\nThere are many different ways with which you can interact with an MCP server.\n\n### Claude Desktop App\n\n> If this is your first time using an MCP server for Claude Desktop App, see https://modelcontextprotocol.io/quickstart/user\n\nFirst, clone this repository locally:\n\n    git clone https://github.com/jerpint/paperpal\n\nNext, add the extension to your app. Open your configuration file (on macOS this should be `~/Library/Application Support/Claude/claude_desktop_config.json`) and and add the following to the extension:\n\nFor example on MacOS:\n\n```python\n{\n  \"mcpServers\": {\n    \"paperpal\": {\n      \"command\": \"uv\",\n      \"args\": [\n        \"--directory\",\n        \"/Users/<username>/paperpal/paperpal\",\n        \"run\",\n        \"mcp_server.py\"\n      ]\n    }\n  }\n}\n```\n\nRestart your Claude Desktop App and you should see it appear.\n\n\n### Cursor\n\n> If this is your first time using an MCP server for Cursor, see https://docs.cursor.com/context/model-context-protocol#remote-development\n\nFirst, clone this repository locally:\n\n    git clone https://github.com/jerpint/paperpal\n\n\nAdd this to the root of the project in a `.cursor/mcp.json` file:\n\n```\n{\n  \"mcpServers\": {\n    \"paperpal\": {\n      \"command\": \"uv\",\n      \"args\": [\n        \"--directory\",\n        \"/Users/<username>/paperpal/paperpal\",\n        \"run\",\n        \"mcp_server.py\"\n      ]\n    }\n  }\n}\n```\n\n\n## Development\n\nUse the mcp dev tools to inspect the server:\n\n    uv run mcp dev mcp_server.py\n\n"
}