{
  "mcp_name": "rawakinode/monad-bridge-mcp-server",
  "mcp_description": "Facilitates bridging between Ethereum Sepolia and Monad Testnet networks using the Wormhole bridge.",
  "mcp_id": "rawakinode_monad-bridge-mcp-server",
  "fetch_timestamp": "2025-06-23T07:53:08.065629Z",
  "github_url": "https://github.com/rawakinode/monad-bridge-mcp-server",
  "repository": {
    "name": "monad-bridge-mcp-server",
    "full_name": "rawakinode/monad-bridge-mcp-server",
    "description": "Monad MCP server for Bridge tools",
    "html_url": "https://github.com/rawakinode/monad-bridge-mcp-server",
    "created_at": "2025-04-25T05:33:17Z",
    "updated_at": "2025-04-30T15:35:11Z",
    "pushed_at": "2025-04-30T15:35:06Z",
    "size": 443,
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "TypeScript",
    "license": null,
    "topics": [],
    "default_branch": "master",
    "owner": {
      "login": "rawakinode",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/59562911?v=4",
      "html_url": "https://github.com/rawakinode"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 20905
    },
    "language_percentages": {
      "TypeScript": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "package_json_version": "1.0.0"
  },
  "readme": "\n# Monad Bridge MCP Server\n\nA lightweight Model Context Protocol (MCP) server that enables bridging functionality between Ethereum Sepolia and Monad Testnet networks using the Wormhole bridge. This MCP interacts with Monadbridge and Wormholes APIs.\n\n## ðŸš€ Supported Tools\n\nThis MCP server provides the following tools:\n\n| Tools Name                          | Description                                                   | Command |\n|----------------------------------|-------------------------------------------------------------|------|\n| `get-wallet-address`             | Get wallet address from private key.                       | `show my wallet address` |\n| `get-eth-balance`                | Check ETH balance on Sepolia testnet.                      | `check our ETH balance` |\n| `get-mon-balance`                | Check MON balance on Monad testnet.                        | `check our MONAD balance` |\n| `bridge-sepolia-wmon-to-monad`  | Bridge wrapped MON (wMON) on Sepolia to MON on Monad.      | `bridge 1 mon sepolia to monad` |\n| `bridge-monad-to-sepolia-wmon`  | Bridge MON from Monad to wMON on Sepolia.                  | `bridge 1 monad to sepolia` |\n| `get-wmon-sepolia-balance` | Check Wrapped MON (wMON) balance on Sepolia. | `check our wmon balance on sepolia` |\n|`get-10-last-bridge-transaction`|Get and view the last 10 bridge transactions from Sepolia to Monad or Monad to Sepolia| `get 10 last bridge transaction` `get last bridge`|\n\n## Quick Start\n\n- Clone the repository\n```bash\ngit clone https://github.com/rawakinode/monad-bridge-mcp-server.git\ncd monad-bridge-mcp-server\nnpm install\n```\n\n- Build and run\n```\nnpm run build\n```\n\n## Prerequisites\n\n- Node.js (v16 or newer)\n- npm or yarn\n- Claude Desktop (for MCP Client integration)\n\n## How to Use\n\n1. You need to Download and install Claude Dekstop\n2. Open Claude Dekstop\n3. Go to `Settings > Developer`\n4. Open config . Edit `claude_desktop_config.json`\n5. Add the following configuration.\n```json\n{\n  \"mcpServers\": {\n    \"monad-mcp\": {\n      \"command\": \"node\",\n      \"args\": [\"<your-local-path>monad-bridge-mcp-server\\\\build\\\\index.js\"],\n      \"env\": {\n        \"PRIVATE_KEY\": \"<your-private-key>\" \n      }\n    }\n  }\n}\n\n```\n6. Replace `<your-local-path>monad-bridge-mcp-server\\\\build\\\\index.js` with the actual path to your project directory (e.g., `E:\\data\\monad-bridge-mcp-server\\build\\index.js` on Windows or `/home/user/monad-bridge-mcp-server\\build\\index.js` on Linux).\n7. Restart Claude Desktop.\n8. When prompted, allow MCP access for the chat session `(Allow for This Chat)`.\n\n## Command Usage\n\n### Check Wallet Address\n\n- Write command `show my wallet address` on Claude.\n- Allow MCP access for the chat session `(Allow for This Chat)`.\n- Claude will respon with your wallet address from your PRIVATE_KEY.\n ![image](./image/a_wallet.png)\n\n### Check Wallet Balance (ETH, MONAD, and wMON)\n\n- Write command `check our ETH balance, check our MONAD balance, and check our wmon balance on sepolia` on Claude.\n- Allow MCP access for the chat session `(Allow for This Chat)`.\n- Claude will respon with balance ETH sepolia, MON, and wMON Sepolia.\n\n ![image](./image/b_get_balance.png)\n\n### Bridge wMON Sepolia > MONAD\n\n- Write command `bridge 0.01 wmon sepolia to monad` on Claude.\n- Allow MCP access for the chat session `(Allow for This Chat)`.\n- If success, Claude will respon with success transaction details.\n ![image](./image/c_bridge.png)\n\n### Bridge MONAD > wMON Sepolia\n\n- Write command `bridge 0.01 monad to wmon sepolia` on Claude.\n- Allow MCP access for the chat session `(Allow for This Chat)`.\n- If success, Claude will respon with success transaction details.\n ![image](./image/d_bridge.png)\n\n## Important Links\n\n- [View on Etherscan Sepolia](https://sepolia.etherscan.io/)\n- [View on Monad Testnet Explorer](https://testnet.monadexplorer.com/)\n- [Wormhole Scan (Testnet)](https://wormholescan.io/?network=Testnet)\n\n## Contact\n\n- [Twitter X](https://x.com/rawakinode)\n- [Github](https://github.com/rawakinode)\n\n"
}