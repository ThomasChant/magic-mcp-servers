{
  "mcp_name": "Chronulus AI",
  "mcp_description": "Predict anything with Chronulus AI multimodal forecasting and prediction agents ([Watch Demos on Youtube](https://youtube.com/playlist?list=PLPLu09ZbT8KKS04V6SSm2Acjv43FKq329&si=n2YER2in4gOqwssY)).",
  "mcp_id": "ChronulusAI_chronulus-mcp",
  "fetch_timestamp": "2025-06-23T02:06:29.317163Z",
  "github_url": "https://github.com/ChronulusAI/chronulus-mcp",
  "repository": {
    "name": "chronulus-mcp",
    "full_name": "ChronulusAI/chronulus-mcp",
    "description": "MCP Server for Chronulus AI Forecasting and Prediction Agents",
    "html_url": "https://github.com/ChronulusAI/chronulus-mcp",
    "created_at": "2025-02-16T03:33:30Z",
    "updated_at": "2025-06-21T20:35:58Z",
    "pushed_at": "2025-04-23T16:29:09Z",
    "size": 67,
    "stargazers_count": 74,
    "watchers_count": 74,
    "forks_count": 9,
    "open_issues_count": 2,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "ChronulusAI",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/163056705?v=4",
      "html_url": "https://github.com/ChronulusAI"
    },
    "has_issues": true,
    "has_projects": false,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 9,
    "subscribers_count": 1,
    "languages": {
      "Python": 46624,
      "HTML": 28294,
      "JavaScript": 13957,
      "Dockerfile": 1147
    },
    "language_percentages": {
      "Python": 51.79,
      "HTML": 31.43,
      "JavaScript": 15.5,
      "Dockerfile": 1.27
    },
    "pull_requests_count": 2,
    "contributors_count": 1
  },
  "readme": "<div align=\"center\">\n<img width=\"150px\" src=\"https://www.chronulus.com/brand-assets/chronulus-logo-blue-on-alpha-square.png\" alt=\"Chronulus AI\">\n    <h1 align=\"center\">MCP Server for Chronulus</h1>\n    <h3 align=\"center\">Chat with Chronulus AI Forecasting & Prediction Agents in Claude</h3>\n</div>\n\n\n\n\n### Quickstart: Claude for Desktop\n\n#### Install \n\nClaude for Desktop is currently available on macOS and Windows.\n\nInstall Claude for Desktop [here](https://claude.ai/download)\n\n#### Configuration\n\nFollow the general instructions [here](https://modelcontextprotocol.io/quickstart/user) to configure the Claude desktop client.\n\nYou can find your Claude config at one of the following locations:\n\n- macOS: `~/Library/Application Support/Claude/claude_desktop_config.json`\n- Windows: `%APPDATA%\\Claude\\claude_desktop_config.json`\n\nThen choose one of the following methods that best suits your needs and add it to your `claude_desktop_config.json`\n\n\n\n<details>\n<summary>Using pip</summary>\n\n(Option 1) Install release from PyPI\n\n```bash \npip install chronulus-mcp\n```\n\n\n(Option 2) Install from Github\n\n```bash \ngit clone https://github.com/ChronulusAI/chronulus-mcp.git\ncd chronulus-mcp\npip install .\n```\n\n\n\n```json \n{\n  \"mcpServers\": {\n    \"chronulus-agents\": {\n      \"command\": \"python\",\n      \"args\": [\"-m\", \"chronulus_mcp\"],\n      \"env\": {\n        \"CHRONULUS_API_KEY\": \"<YOUR_CHRONULUS_API_KEY>\"\n      }\n    }\n  }\n}\n```\n\nNote, if you get an error like \"MCP chronulus-agents: spawn python ENOENT\", \nthen you most likely need to provide the absolute path to `python`. \nFor example `/Library/Frameworks/Python.framework/Versions/3.11/bin/python3` instead of just `python`\n\n</details>\n\n\n<details>\n<summary>Using docker</summary>\n\nHere we will build a docker image called 'chronulus-mcp' that we can reuse in our Claude config.\n\n```bash \ngit clone https://github.com/ChronulusAI/chronulus-mcp.git\ncd chronulus-mcp\n docker build . -t 'chronulus-mcp'\n```\n\nIn your Claude config, be sure that the final argument matches the name you give to the docker image in the build command.\n\n```json \n{\n  \"mcpServers\": {\n    \"chronulus-agents\": {\n      \"command\": \"docker\",\n      \"args\": [\"run\", \"-i\", \"--rm\", \"-e\", \"CHRONULUS_API_KEY\", \"chronulus-mcp\"],\n      \"env\": {\n        \"CHRONULUS_API_KEY\": \"<YOUR_CHRONULUS_API_KEY>\"\n      }\n    }\n  }\n}\n```\n\n</details>\n\n<details>\n<summary>Using uvx</summary>\n\n`uvx` will pull the latest version of `chronulus-mcp` from the PyPI registry, install it, and then run it.\n\n\n```json \n{\n  \"mcpServers\": {\n    \"chronulus-agents\": {\n      \"command\": \"uvx\",\n      \"args\": [\"chronulus-mcp\"],\n      \"env\": {\n        \"CHRONULUS_API_KEY\": \"<YOUR_CHRONULUS_API_KEY>\"\n      }\n    }\n  }\n}\n```\n\nNote, if you get an error like \"MCP chronulus-agents: spawn uvx ENOENT\", then you most likely need to either:\n1. [install uv](https://docs.astral.sh/uv/getting-started/installation/) or\n2. Provide the absolute path to `uvx`. For example `/Users/username/.local/bin/uvx` instead of just `uvx`\n\n</details>\n\n#### Additional Servers (Filesystem, Fetch, etc)\n\nIn our demo, we use third-party servers like [fetch](https://github.com/modelcontextprotocol/servers/tree/main/src/fetch) and [filesystem](https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem).\n\nFor details on installing and configure third-party server, please reference the documentation provided by the server maintainer.\n\nBelow is an example of how to configure filesystem and fetch alongside Chronulus in your `claude_desktop_config.json`: \n\n```json \n{\n  \"mcpServers\": {\n    \"chronulus-agents\": {\n      \"command\": \"uvx\",\n      \"args\": [\"chronulus-mcp\"],\n      \"env\": {\n        \"CHRONULUS_API_KEY\": \"<YOUR_CHRONULUS_API_KEY>\"\n      }\n    },\n    \"filesystem\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@modelcontextprotocol/server-filesystem\",\n        \"/path/to/AIWorkspace\"\n      ]\n    },\n    \"fetch\": {\n      \"command\": \"uvx\",\n      \"args\": [\"mcp-server-fetch\"]\n    }\n  }\n} \n```\n\n\n#### Claude Preferences\n\nTo streamline your experience using Claude across multiple sets of tools, it is best to add your preferences to under Claude Settings. \n\nYou can upgrade your Claude preferences in a couple ways:\n\n* From Claude Desktop: `Settings -> General -> Claude Settings -> Profile (tab)`\n* From [claude.ai/settings](https://claude.ai/settings): `Profile (tab)`\n\nPreferences are shared across both Claude for Desktop and Claude.ai (the web interface). So your instruction need to work across both experiences.\n\nBelow are the preferences we used to achieve the results shown in our demos:\n\n```\n## Tools-Dependent Protocols\nThe following instructions apply only when tools/MCP Servers are accessible.\n\n### Filesystem - Tool Instructions\n- Do not use 'read_file' or 'read_multiple_files' on binary files (e.g., images, pdfs, docx) .\n- When working with binary files (e.g., images, pdfs, docx) use 'get_info' instead of 'read_*' tools to inspect a file.\n\n### Chronulus Agents - Tool Instructions\n- When using Chronulus, prefer to use input field types like TextFromFile, PdfFromFile, and ImageFromFile over scanning the files directly.\n- When plotting forecasts from Chronulus, always include the Chronulus-provided forecast explanation below the plot and label it as Chronulus Explanation.\n```"
}