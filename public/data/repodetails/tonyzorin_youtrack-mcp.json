{
  "mcp_name": "tonyzorin/youtrack-mcp",
  "mcp_description": "Facilitates AI-driven interaction with JetBrains YouTrack for comprehensive issue, project, and user management.",
  "mcp_id": "tonyzorin_youtrack-mcp",
  "fetch_timestamp": "2025-06-23T09:01:11.957366Z",
  "github_url": "https://github.com/tonyzorin/youtrack-mcp",
  "repository": {
    "name": "youtrack-mcp",
    "full_name": "tonyzorin/youtrack-mcp",
    "description": "Model Context Protocol Server for JetBrains Youtrack",
    "html_url": "https://github.com/tonyzorin/youtrack-mcp",
    "created_at": "2025-04-14T13:16:12Z",
    "updated_at": "2025-06-20T09:11:06Z",
    "pushed_at": "2025-05-09T22:25:25Z",
    "size": 256,
    "stargazers_count": 28,
    "watchers_count": 28,
    "forks_count": 13,
    "open_issues_count": 9,
    "language": "Python",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "tonyzorin",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/20819916?v=4",
      "html_url": "https://github.com/tonyzorin"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 13,
    "subscribers_count": 3,
    "languages": {
      "Python": 181966,
      "Dockerfile": 737
    },
    "language_percentages": {
      "Python": 99.6,
      "Dockerfile": 0.4
    },
    "pull_requests_count": 4,
    "contributors_count": 1
  },
  "readme": "# YouTrack MCP Server v0.3.7\n\nA Model Context Protocol (MCP) server implementation for JetBrains YouTrack, allowing AI assistants to interact with YouTrack issue tracking system.\n\n![Screenshot](screenshot/CleanShot%202025-04-14%20at%2023.24.21@2x.png)\n\n## What is MCP?\n\nModel Context Protocol (MCP) is an open standard that enables AI models to interact with external tools and services through a unified interface. This project provides an MCP server that exposes YouTrack functionality to AI assistants that support the MCP standard, such as Claude in VS Code, Claude Desktop, GitHub Copilot, and Cursor IDE.\n\n## Features\n\n- **Issue Management**\n  - Get issue details\n  - Search for issues using YouTrack query language\n  - Create new issues\n  - Add comments to issues\n\n- **Project Management**\n  - Get project list and details\n  - Create and update projects\n  - Access project issues\n  - Manage custom fields\n\n- **User Management**\n  - Get current user information\n  - Search for users\n  - Access user details and groups\n\n- **Search Functionality**\n  - Advanced search with custom fields\n  - Structured filtering\n  - Sorting options\n\n## Quick Start with Docker\n\n```bash\n# Run with Docker (for YouTrack Cloud instances)\ndocker run -i --rm \\\n     -e YOUTRACK_URL=https://your-instance.youtrack.cloud \\\n     -e YOUTRACK_API_TOKEN=perm:your-api-token \\\n     -e YOUTRACK_CLOUD=true \\\n     tonyzorin/youtrack-mcp:latest\n\n# Or for self-hosted YouTrack instances\ndocker run -i --rm \\\n     -e YOUTRACK_URL=https://your-instance.youtrack.cloud \\\n     -e YOUTRACK_API_TOKEN=your-api-token \\\n     -e YOUTRACK_CLOUD=false \\\n     tonyzorin/youtrack-mcp:latest\n```\n\nFor Cursor IDE, add to `.cursor/mcp.json`:\n\n```json\n{\n    \"mcpServers\": {\n        \"YouTrack\": {\n            \"type\": \"stdio\",\n            \"command\": \"docker\",\n            \"args\": [\"run\", \"-i\", \"--rm\",\n            \"-e\", \"YOUTRACK_URL=https://your-instance.youtrack.cloud\",\n            \"-e\", \"YOUTRACK_API_TOKEN=perm:your-api-token\", \n            \"-e\", \"YOUTRACK_CLOUD=true\",\n            \"tonyzorin/youtrack-mcp:latest\"\n            ]\n        }\n    }\n}\n```\n\nFor Claude Desktop, set as MCP server:\n```\ndocker run -i --rm -e YOUTRACK_API_TOKEN=perm:your-api-token -e YOUTRACK_CLOUD=true tonyzorin/youtrack-mcp:latest\n```\n\n## Installation & Usage\n\n### Using Docker Hub Image (Recommended)\n\n1. Pull the Docker image:\n   ```bash\n   docker pull tonyzorin/youtrack-mcp:latest\n   ```\n\n2. Run the container with your YouTrack credentials:\n   ```bash\n   docker run -i --rm \\\n     -e YOUTRACK_URL=https://your-instance.youtrack.cloud \\\n     -e YOUTRACK_API_TOKEN=your-api-token \\\n     tonyzorin/youtrack-mcp:latest\n   ```\n\n### Alternative: Build from Source\n\nIf you prefer to build the image yourself:\n\n1. Clone the repository:\n   ```bash\n   git clone https://github.com/tonyzorin/youtrack-mcp.git\n   cd youtrack-mcp\n   ```\n\n2. Build the Docker image:\n   ```bash\n   docker build -t youtrack-mcp .\n   ```\n\n3. Run your locally built container:\n   ```bash\n   docker run -i --rm \\\n     -e YOUTRACK_URL=https://your-instance.youtrack.cloud \\\n     -e YOUTRACK_API_TOKEN=your-api-token \\\n     youtrack-mcp\n   ```\n\n### Building Multi-Platform Images\n\nTo build and push multi-architecture images (for both ARM64 and AMD64 platforms):\n\n1. Make sure you have Docker BuildX set up:\n   ```bash\n   docker buildx create --use\n   ```\n\n2. Build and push for multiple platforms:\n   ```bash\n   docker buildx build --platform linux/amd64,linux/arm64 \\\n     -t tonyzorin/youtrack-mcp:0.3.7 \\\n     -t tonyzorin/youtrack-mcp:latest \\\n     --push .\n   ```\n\nThis builds the image for both ARM64 (Apple Silicon) and AMD64 (Intel/AMD) architectures and pushes it with both version-specific and latest tags.\n\n### Security Considerations\n\n⚠️ **API Token Security**\n\n- Treat your mcp.json file as .env\n- Rotate your YouTrack API tokens periodically\n- Use tokens with the minimum required permissions for your use case\n\n## Using with AI Applications\n\n### Cursor IDE\n\nTo use your YouTrack MCP server with Cursor IDE:\n\n1. Create a `.cursor/mcp.json` file in your project with the following content:\n\n    ```json\n    {\n        \"mcpServers\": {\n            \"YouTrack\": {\n                \"type\": \"stdio\",\n                \"command\": \"docker\",\n                \"args\": [\"run\", \"-i\", \"--rm\", \n                \"-e\", \"YOUTRACK_API_TOKEN=perm:your-api-token\",\n                \"-e\", \"YOUTRACK_URL=https://your-instance.youtrack.cloud\",\n                \"-e\", \"YOUTRACK_CLOUD=true\",\n                \"tonyzorin/youtrack-mcp:latest\"\n                ]\n            }\n        }\n    }\n    ```\n\n2. Replace `yourinstance.youtrack.cloud` with your actual YouTrack instance URL and `perm:your-token` with your actual API token.\n\n3. Restart Cursor or reload the project for the changes to take effect.\n\n### Claude Desktop\n\nTo use with Claude Desktop:\n\n1. Open Claude Desktop preferences\n2. Navigate to the MCP section\n3. Click Edit.\n4. Open claude_desktop_config.json\n5. Add a new MCP server with:\n    ```json\n    {\n        \"mcpServers\": {\n            \"YouTrack\": {\n                \"type\": \"stdio\",\n                \"command\": \"docker\",\n                \"args\": [\"run\", \"-i\", \"--rm\", \n                \"-e\", \"YOUTRACK_API_TOKEN=perm:your-api-token\",\n                \"-e\", \"YOUTRACK_URL=https://your-instance.youtrack.cloud\",\n                \"-e\", \"YOUTRACK_CLOUD=true\",\n                \"tonyzorin/youtrack-mcp:latest\"\n                ]\n            }\n        }\n    }\n    ```\n\nReplace the URL and token with your actual values.\n\n### VS Code with Claude Extension\n\nTo use the YouTrack MCP server with VS Code:\n\n1. Create a `.vscode/mcp.json` file with the following content:\n\n   ```json\n   {\n     \"servers\": {\n       \"YouTrack\": {\n         \"type\": \"stdio\",\n         \"command\": \"docker\",\n         \"args\": [\"run\", \"-i\", \"--rm\", \n           \"-e\", \"YOUTRACK_API_TOKEN=perm:your-api-token\",\n           \"-e\", \"YOUTRACK_URL=https://your-instance.youtrack.cloud\",\n           \"-e\", \"YOUTRACK_CLOUD=true\",\n           \"tonyzorin/youtrack-mcp:latest\"\n         ]\n       }\n     }\n   }\n   ```\n\n2. Replace `yourinstance.youtrack.cloud` with your actual YouTrack instance URL and `perm:your-token` with your actual API token.\n\n## Available Tools\n\nThe YouTrack MCP server provides the following tools:\n\n### Issues\n\n- `get_issue` - Get details of a specific issue by ID\n- `search_issues` - Search for issues using YouTrack query language\n- `create_issue` - Create a new issue in a specific project\n- `add_comment` - Add a comment to an existing issue\n\n### Projects\n\n- `get_projects` - Get a list of all projects\n- `get_project` - Get details of a specific project\n- `get_project_issues` - Get issues for a specific project\n- `create_project` - Create a new project\n\n### Users\n\n- `get_current_user` - Get information about the currently authenticated user\n- `get_user` - Get information about a specific user\n- `search_users` - Search for users\n- `get_user_by_login` - Find a user by login name\n- `get_user_groups` - Get groups for a user\n\n### Search\n\n- `advanced_search` - Advanced search with sorting options\n- `filter_issues` - Search with structured filtering\n- `search_with_custom_fields` - Search using custom field values\n\n## Tool Parameter Format\n\nWhen using the YouTrack MCP tools, it's important to use the correct parameter format to ensure your requests are processed correctly. Here's how to use the most common tools:\n\n### Get Issue\n\nTo get information about a specific issue, you must provide the `issue_id` parameter:\n\n```python\n# Correct format\nget_issue(issue_id=\"DEMO-123\")\n```\n\nThe issue ID can be either the readable ID (e.g., \"DEMO-123\") or the internal ID (e.g., \"3-14\").\n\n### Add Comment\n\nTo add a comment to an issue, you must provide both the `issue_id` and `text` parameters:\n\n```python\n# Correct format\nadd_comment(issue_id=\"DEMO-123\", text=\"This is a test comment\")\n```\n\n### Create Issue\n\nTo create a new issue, you must provide at least the `project` and `summary` parameters:\n\n```python\n# Correct format\ncreate_issue(project=\"DEMO\", summary=\"Bug: Login page not working\")\n\n# With optional description\ncreate_issue(\n    project=\"DEMO\", \n    summary=\"Bug: Login page not working\", \n    description=\"Users cannot log in after the latest update\"\n)\n```\n\nThe project parameter can be either the project's short name (e.g., \"DEMO\") or its internal ID.\n\n### Common MCP Format Issues\n\nWhen using MCP tools through AI assistants, parameters may sometimes be passed in different formats. The YouTrack MCP server is designed to handle various parameter formats, but using the explicit format above is recommended for best results.\n\nIf you encounter errors with parameter format, try using the explicit key=value format shown in the examples above.\n\n## Examples\n\nHere are some examples of using the YouTrack MCP server with AI assistants:\n\n### Get Issue\n\n```\nCan you get the details for issue DEMO-1?\n```\n\n### Search for Issues\n\n```\nFind all open issues assigned to me that are high priority\n```\n\n### Create a New Issue\n\n```\nCreate a new bug report in the PROJECT with the summary \"Login page is not working\" and description \"Users are unable to log in after the recent update.\"\n```\n\n### Add a Comment\n\n```\nAdd a comment to issue PROJECT-456 saying \"I've fixed this issue in the latest commit. Please review.\"\n```\n\n## Configuration\n\nThe server can be configured via environment variables:\n\n| Variable | Description | Default |\n|----------|-------------|---------|\n| `YOUTRACK_URL` | YouTrack instance URL | (required) |\n| `YOUTRACK_API_TOKEN` | YouTrack permanent API token | (required) |\n| `YOUTRACK_VERIFY_SSL` | Verify SSL certificates | `true` |\n| `MCP_SERVER_NAME` | Name of the MCP server | `youtrack-mcp` |\n| `MCP_SERVER_DESCRIPTION` | Description of the MCP server | `YouTrack MCP Server` |\n| `MCP_DEBUG` | Enable debug logging | `false` |\n\n### SSL Certificate Verification\n\nFor self-hosted instances with self-signed SSL certificates, you can disable SSL verification:\n\n```bash\ndocker run -i --rm \\\n  -e YOUTRACK_URL=https://youtrack.internal.company.com \\\n  -e YOUTRACK_API_TOKEN=perm:your-permanent-token \\\n  -e YOUTRACK_VERIFY_SSL=false \\\n  tonyzorin/youtrack-mcp:latest\n```\n\nThis option is only recommended for development or in controlled environments where you cannot add the certificate to the trust store.\n\n### Debug Mode\n\nYou can enable debug logging for troubleshooting:\n\n```bash\ndocker run -i --rm \\\n  -e YOUTRACK_URL=https://your-instance.youtrack.cloud \\\n  -e YOUTRACK_API_TOKEN=perm:your-permanent-token \\\n  -e MCP_DEBUG=true \\\n  tonyzorin/youtrack-mcp:latest\n```"
}