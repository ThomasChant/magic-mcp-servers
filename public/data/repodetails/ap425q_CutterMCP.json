{
  "mcp_name": "ap425q/CutterMCP",
  "mcp_description": "Facilitates autonomous reverse engineering of applications by LLMs using Cutter's core functionalities.",
  "mcp_id": "ap425q_CutterMCP",
  "fetch_timestamp": "2025-06-23T01:11:38.733707Z",
  "github_url": "https://github.com/ap425q/CutterMCP",
  "repository": {
    "name": "CutterMCP",
    "full_name": "ap425q/CutterMCP",
    "description": "MCP Server for Cutter",
    "html_url": "https://github.com/ap425q/CutterMCP",
    "created_at": "2025-04-15T15:41:00Z",
    "updated_at": "2025-06-01T09:15:23Z",
    "pushed_at": "2025-06-01T05:51:18Z",
    "size": 144,
    "stargazers_count": 6,
    "watchers_count": 6,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "Python",
    "license": "Apache License 2.0",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "ap425q",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/40756185?v=4",
      "html_url": "https://github.com/ap425q"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "Python": 16426
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 2,
    "latest_release": {
      "tag_name": "v2.0",
      "name": "CutterMCP 2.0",
      "published_at": "2025-06-01T05:51:18Z",
      "body": "- Compatibility Updates\r\n- Supports Cutter v2.4 onwards",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v2.0",
        "commit_sha": "d041c6b364e930ace00d0b575074643bac4235fd"
      },
      {
        "name": "v1.0",
        "commit_sha": "396101ff6f192cc2113c45913bf47b9b1f4d56d9"
      }
    ],
    "latest_version": "v2.0"
  },
  "readme": "[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://www.apache.org/licenses/LICENSE-2.0)\n[![LinkedIn](https://img.shields.io/badge/LinkedIn-Connect-blue)](https://www.linkedin.com/in/amey-pathak/)\n\n![cutter_MCP_logo](images/cutterMCP.png)\n\n\n# cutterMCP\ncutterMCP is an Model Context Protocol server for allowing LLMs to autonomously reverse engineer applications. It exposes numerous tools from core Cutter functionality to MCP clients.\n\n# Features\nMCP Server + Cutter Plugin\n\n- Decompile and analyze binaries in Cutter\n- Automatically rename methods and data\n- List methods, imports, and exports\n\n# Installation\n\n## Prerequisites\n- Install [Cutter](https://github.com/rizinorg/cutter)\n- Python3\n- MCP [SDK](https://github.com/modelcontextprotocol/python-sdk)\n\n## Cutter\nFirst, download the latest release from this repository. This contains the Cutter plugin and Python MCP client. Then, you can directly import the plugin into Cutter.\n\n1. Run Cutter\n2. Go to **Edit -> Preferences -> Plugins**\n3. Find the plugin directory location\n4. Copy `CutterMCPPlugin.py` from the downloaded release and paste it inside the **python** folder\n5. Restart Cutter\n6. If successful, youâ€™ll see the plugin under **Windows -> Plugins** and a new widget in the bottom panel\n\n\n## MCP Clients\n\nTheoretically, any MCP client should work with cutterMCP. one example is given below.\n\n## Example 1: Claude Desktop\nTo set up Claude Desktop as a Cutter MCP client, go to `Claude` -> `Settings` -> `Developer` -> `Edit Config` -> `claude_desktop_config.json` and add the following:\n\nMacOS/Linux :\n```json\n{\n  \"mcpServers\": {\n    \"cutter\": {\n      \"command\": \"python\",\n      \"args\": [\n        \"/ABSOLUTE_PATH_TO/bridge_mcp_cutter.py\"\n      ]\n    }\n  }\n}\n```\n\nWindows :\n```json\n{\n  \"mcpServers\": {\n    \"cutter\": {\n      \"command\": \"python\",\n      \"args\": [\n        \"C:\\\\ABSOLUTE_PATH_TO\\\\bridge_mcp_cutter.py\"\n      ]\n    }\n  }\n}\n```\n"
}