{
  "mcp_name": "thuanpham582002/tabby-mcp-server",
  "mcp_description": "Empower your terminal with AI-driven control and automation using the Tabby MCP server.",
  "mcp_id": "thuanpham582002_tabby-mcp-server",
  "fetch_timestamp": "2025-06-23T08:55:12.715650Z",
  "github_url": "https://github.com/thuanpham582002/tabby-mcp-server",
  "repository": {
    "name": "tabby-mcp-server",
    "full_name": "thuanpham582002/tabby-mcp-server",
    "description": "MCP server for control Tabby terminal",
    "html_url": "https://github.com/thuanpham582002/tabby-mcp-server",
    "created_at": "2025-04-08T15:45:51Z",
    "updated_at": "2025-06-18T13:42:19Z",
    "pushed_at": "2025-06-21T11:27:19Z",
    "size": 6879,
    "stargazers_count": 21,
    "watchers_count": 21,
    "forks_count": 2,
    "open_issues_count": 0,
    "language": "TypeScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "thuanpham582002",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/95533596?v=4",
      "html_url": "https://github.com/thuanpham582002"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 2,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 50533,
      "Dockerfile": 1975,
      "Pug": 1890,
      "Shell": 1137,
      "JavaScript": 249
    },
    "language_percentages": {
      "TypeScript": 90.59,
      "Dockerfile": 3.54,
      "Pug": 3.39,
      "Shell": 2.04,
      "JavaScript": 0.45
    },
    "pull_requests_count": 0,
    "contributors_count": 2,
    "latest_release": {
      "tag_name": "v0.0.1",
      "name": "Release v0.0.1",
      "published_at": "2025-04-14T04:19:05Z",
      "body": "# Release v0.0.1\n\n## üöÄ Features\n\n- ü§ñ **AI Connection**: Seamlessly connect AI assistants to your terminal\n- üîå **MCP Server**: Built-in Model Context Protocol server implementation\n- üñ•Ô∏è **Terminal Control**: Allow AI to execute commands and read terminal output\n- üîç **Session Management**: View and manage SSH sessions\n- üö´ **Command Abort**: Safely abort running commands\n- üìã **Buffer Access**: Retrieve terminal buffer content with flexible options\n\n## üì¶ Installation\n\n```bash\nnpm install tabby-mcp --save\n```\n\n## üìã Release Notes\n\nCheck the [CHANGELOG.md](https://github.com/thuanpham582002/tabby-mcp-server/blob/main/CHANGELOG.md) for detailed release notes.\n\n## üìÑ Documentation\n\nSee the [README.md](https://github.com/thuanpham582002/tabby-mcp-server/blob/main/README.md) for full documentation.\n",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v0.0.1",
        "commit_sha": "f9ba84e8d047d5e7160b86c7a36924442917c053"
      }
    ],
    "latest_version": "v0.0.1",
    "package_json_version": "0.0.1"
  },
  "readme": "# üöÄ Tabby-MCP-Server\n\n[![npm version](https://img.shields.io/npm/v/tabby-mcp.svg)](https://www.npmjs.com/package/tabby-mcp)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![GitHub issues](https://img.shields.io/github/issues/thuanpham582002/tabby-mcp-server.svg)](https://github.com/thuanpham582002/tabby-mcp-server/issues)\n[![GitHub stars](https://img.shields.io/github/stars/thuanpham582002/tabby-mcp-server.svg)](https://github.com/thuanpham582002/tabby-mcp-server/stargazers)\n\n> Powerful Tabby plugin that implements Model Context Protocol (MCP) server, enabling AI-powered terminal control and automation.\n\n![Demo](https://raw.githubusercontent.com/thuanpham582002/tabby-mcp-server/main/assets/demo.gif)\n\n## üìπ Video Demo\n\nWatch the full video demonstration of Tabby-MCP in action:\n\n[![Tabby MCP Plugin - AI Terminal Integration Demo](https://img.youtube.com/vi/uFWBGiD4x9c/0.jpg)](https://youtu.be/uFWBGiD4x9c)\n\n## ‚ú® Features\n\n- ü§ñ **AI Connection**: Seamlessly connect AI assistants to your terminal\n- üîå **MCP Server**: Built-in Model Context Protocol server implementation\n- üñ•Ô∏è **Terminal Control**: Allow AI to execute commands and read terminal output\n- üîç **Session Management**: View and manage SSH sessions\n- üö´ **Command Abort**: Safely abort running commands\n- üìã **Buffer Access**: Retrieve terminal buffer content with flexible options\n\n## üìã Table of Contents\n\n- [Installation](#installation)\n- [Quick Start](#quick-start)\n- [Usage Examples](#usage-examples)\n- [Configuration](#configuration)\n- [API Reference](#api-reference)\n- [Contributing](#contributing)\n  - [Continuous Integration](#continuous-integration)\n- [License](#license)\n\n## üîß Installation\n\n### Using Docker\n\nYou can build and install the plugin using Docker with the following command:\n\n```bash\ngit clone https://github.com/thuanpham582002/tabby-mcp-server.git\ncd tabby-mcp-server\n# Build the Docker image\ndocker build -t tabby-mcp . && docker run -v $(pwd)/build:/output tabby-mcp\nbash scripts/copy_to_plugin_folder.sh\n```\n\nThis command builds a Docker image tagged as 'tabby-mcp' and runs a container from this image, mounting your local 'build' directory to '/output' in the container. The script `scripts/copy_to_plugin_folder.sh` will copy the built files to the Tabby plugin folder.\n\n> **Note:** Our CI/CD workflows on GitHub also use this Docker-based build process to ensure consistency between local development and production releases.\n\n## üöÄ Quick Start\n\n1. Install the plugin\n2. Configure your Tabby environment\n3. Connect to MCP server from any of the supported clients listed at https://modelcontextprotocol.io/clients\n\n## üíª Usage Examples\n\n### Connect an AI to Control Your Terminal\n\n### Retrieve SSH Session List\n\n## ‚öôÔ∏è Configuration\n\nConfigure the MCP server through the Tabby settings:\n\n```json\n{\n  \"mcp\": {\n    \"port\": 3001,\n    \"host\": \"http://localhost:3001\", // note: in development\n    \"enableLogging\": false,\n    \"startOnBoot\": true\n  }\n}\n```\n\n### MCP Client Configuration\n\nWhen connecting to the Tabby MCP server from an AI client (like Claude, GPT, etc.), use the following configuration:\n\n```json\n{\n  \"mcpServers\": {\n    \"Tabby MCP\": {\n      \"url\": \"http://localhost:3001/sse\"\n    }\n  }\n}\n```\n\n\nYou may need to adjust the `url` parameter if you've configured a different host or port in your server settings.\n\n## üìö API Reference\n\n### Available Tools\n\n| Tool | Description | Parameters |\n|------|-------------|------------|\n| `getSshSessionList` | Get list of SSH sessions | None |\n| `execCommand` | Execute a command in terminal | `command`, `tabId` |\n| `getTerminalBuffer` | Get terminal content | `tabId`, `startLine`, `endLine` |\n| `abortCommand` | Abort a running command | None |\n\n## ü§ù Contributing\n\nContributions are welcome! Here's how you can help:\n\n1. Fork the repository\n2. Create a feature branch (`git checkout -b feature/amazing-feature`)\n3. Commit your changes (`git commit -m 'Add amazing feature'`)\n4. Push to the branch (`git push origin feature/amazing-feature`)\n5. Open a Pull Request\n\nSee the [contributing guidelines](CONTRIBUTING.md) for more details.\n\n### Continuous Integration\n\nOur project uses GitHub Actions for CI/CD with Docker-based builds:\n\n- **Pull Requests**: Automatically built and tested using Docker to ensure compatibility\n- **Main Branch**: Builds with Docker, publishes to npm, and creates GitHub releases\n- **Benefits**: Consistent environment across development, testing, and production\n\nTo set up the CI/CD pipeline in your fork:\n\n1. Configure the required secrets in your repository settings:\n   - `NPM_TOKEN`: Your npm access token for publishing\n   - `GITHUB_TOKEN`: Automatically provided by GitHub Actions\n\n2. The workflows will automatically run on push and pull request events.\n\n## üìù License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\n\n---\n\n<p align=\"center\">\n  Made with ‚ù§Ô∏è by <a href=\"https://github.com/thuanpham582002\">Pham Tien Thuan</a>\n</p>"
}