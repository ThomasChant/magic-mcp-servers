{
  "mcp_name": "mkusaka/linear-mcp",
  "mcp_description": "Facilitates seamless management of Linear issues, projects, and teams through Cline integration.",
  "mcp_id": "mkusaka_linear-mcp",
  "fetch_timestamp": "2025-06-23T06:49:50.209431Z",
  "github_url": "https://github.com/mkusaka/linear-mcp",
  "repository": {
    "name": "linear-mcp",
    "full_name": "mkusaka/linear-mcp",
    "description": null,
    "html_url": "https://github.com/mkusaka/linear-mcp",
    "created_at": "2025-04-16T07:47:27Z",
    "updated_at": "2025-04-16T15:42:08Z",
    "pushed_at": "2025-04-16T15:42:04Z",
    "size": 119,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "TypeScript",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "mkusaka",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/24956031?v=4",
      "html_url": "https://github.com/mkusaka"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 93483,
      "JavaScript": 3584
    },
    "language_percentages": {
      "TypeScript": 96.31,
      "JavaScript": 3.69
    },
    "pull_requests_count": 4,
    "contributors_count": 5,
    "package_json_version": "1.0.0"
  },
  "readme": "# Linear MCP Server\n\nAn MCP server for interacting with Linear's API. This server provides a set of tools for managing Linear issues, projects, and teams through Cline.\n\n## Setup Guide\n\n### 1. Environment Setup\n\n1. Clone the repository\n2. Install dependencies:\n   ```bash\n   npm install\n   ```\n3. Copy `.env.example` to `.env`:\n   ```bash\n   cp .env.example .env\n   ```\n\n### 2. Authentication\n\nThe server supports two authentication methods:\n\n#### Personal Access Token (Recommended)\n\n1. Go to Linear: Settings > API > OAuth application > \"Cline MCP\"\n2. Under \"Developer Token\", click \"Create & copy token\"\n3. Select \"Application\"\n3. Add the token to your `.env` file:\n   ```\n   LINEAR_ACCESS_TOKEN=your_personal_access_token\n   ```\n\n#### OAuth Flow (Alternative) ***NOT IMPLEMENTED***\n\n1. Create an OAuth application at https://linear.app/settings/api/applications\n2. Configure OAuth environment variables in `.env`:\n   ```\n   LINEAR_CLIENT_ID=your_oauth_client_id\n   LINEAR_CLIENT_SECRET=your_oauth_client_secret\n   LINEAR_REDIRECT_URI=http://localhost:3000/callback\n   ```\n\n### 3. Running the Server\n\n1. Build the server:\n   ```bash\n   npm run build\n   ```\n2. Start the server:\n   ```bash\n   npm start\n   ```\n\n### 4. Cline Integration\n\n1. Open your Cline MCP settings file:\n   - macOS: `~/Library/Application Support/Code/User/globalStorage/saoudrizwan.claude-dev/settings/cline_mcp_settings.json`\n   - Windows: `%APPDATA%/Code/User/globalStorage/saoudrizwan.claude-dev/settings/cline_mcp_settings.json`\n   - Linux: `~/.config/Code/User/globalStorage/saoudrizwan.claude-dev/settings/cline_mcp_settings.json`\n\n2. Add the Linear MCP server configuration:\n   ```json\n   {\n     \"mcpServers\": {\n       \"linear\": {\n         \"command\": \"node\",\n         \"args\": [\"/path/to/linear-mcp/build/index.js\"],\n         \"env\": {\n           \"LINEAR_ACCESS_TOKEN\": \"your_personal_access_token\"\n         },\n         \"disabled\": false,\n         \"autoApprove\": []\n       }\n     }\n   }\n   ```\n\n## Available Actions\n\nThe server currently supports the following operations:\n\n### Issue Management\n- âœ… Create issues with full field support (title, description, team, project, etc.)\n- âœ… Update existing issues (priority, description, etc.)\n- âœ… Delete issues (single or bulk deletion)\n- âœ… Search issues with filtering\n- âœ… Associate issues with projects\n- âœ… Create parent/child issue relationships\n- âœ… Update status of a single issue\n- âœ… Get issue information by ID\n\n### Project Management\n- âœ… Create projects with associated issues\n- âœ… Get project information\n- âœ… Associate issues with projects\n- âœ… Search projects by name\n\n### Team Management\n- âœ… Get team information (with states and workflow details)\n- âœ… Access team states and labels\n\n### User Management\n- âœ… Get current user information\n\n### Authentication\n- âœ… Personal Access Token (PAT) authentication\n- âœ… Secure token storage\n\n### Batch Operations\n- âœ… Bulk issue creation\n- âœ… Bulk issue deletion\n- ðŸš§ Bulk issue updates (parallel processing implemented, needs testing)\n\n## Features in Development\n\nThe following features are currently being worked on:\n\n### Issue Management\n- ðŸš§ Comment functionality (add/edit comments, threading)\n- ðŸš§ Complex search filters\n- ðŸš§ Pagination support for large result sets\n\n### Metadata Operations\n- ðŸš§ Label management (create/update/assign)\n- ðŸš§ Cycle/milestone management\n\n### Project Management\n- ðŸš§ Project template support\n- ðŸš§ Advanced project operations\n\n### Authentication\n- ðŸš§ OAuth flow with automatic token refresh\n\n### Performance & Security\n- ðŸš§ Rate limiting\n- ðŸš§ Detailed logging\n- ðŸš§ Load testing and optimization\n\n## Development\n\n```bash\n# Install dependencies\nnpm install\n\n# Run tests\nnpm test\n\n# Run integration tests (requires LINEAR_ACCESS_TOKEN)\nnpm run test:integration\n\n# Build the server\nnpm run build\n\n# Start the server\nnpm start\n```\n\n## Integration Testing\n\nIntegration tests verify that authentication and API calls work correctly:\n\n1. Set up authentication (PAT recommended for testing)\n2. Run integration tests:\n   ```bash\n   npm run test:integration\n   ```\n\nFor OAuth testing:\n1. Configure OAuth credentials in `.env`\n2. Remove `.skip` from OAuth tests in `src/__tests__/auth.integration.test.ts`\n3. Run integration tests\n"
}