{
  "mcp_name": "fdmocho/mcp_server_nasa",
  "mcp_description": "Facilitates integration with NASA's Near Earth Object API, enabling date-specific data retrieval through an MCP server setup.",
  "mcp_id": "fdmocho_mcp_server_nasa",
  "fetch_timestamp": "2025-06-23T03:15:21.012816Z",
  "github_url": "https://github.com/fdmocho/mcp_server_nasa",
  "repository": {
    "name": "mcp_server_nasa",
    "full_name": "fdmocho/mcp_server_nasa",
    "description": "MCP demo server",
    "html_url": "https://github.com/fdmocho/mcp_server_nasa",
    "created_at": "2025-04-08T19:33:59Z",
    "updated_at": "2025-04-08T22:04:13Z",
    "pushed_at": "2025-04-08T22:04:09Z",
    "size": 20,
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "Python",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "fdmocho",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/6196295?v=4",
      "html_url": "https://github.com/fdmocho"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "Python": 1336
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 1
  },
  "readme": "# MCP Server for NASA API integration. \n\n**NASA NEO** API request by date\n- Near Earth Object information retrieval by date\n\n**Clone repo and run:**\n```bash\nuv install\n```\n\n**Add you mcp server config to your LLM** \n\nExample Claude config file (_claude_desktop_config.json_)\n```JSON\n{\n    \"mcpServers\": {\n        \"nasa\": {\n            \"command\": \"uv\",\n                \"args\": [\n                    \"--directory\",\n                    \"<PATH TO YOUR PY>\",\n                    \"run\",\n                    \"main.py\"\n                ]\n        }\n    }\n}\n```\n\n**Tools:**\n\n_getNeo()_\n- add your own api key in apiconfig.py (eg: apiconfig.example.py)\n\n```JSON\n{\n  \"method\": \"tools/call\",\n  \"params\": {\n    \"name\": \"getNeo\",\n    \"arguments\": {\n      \"start_date\": \"<START_DATE>\",\n      \"end_date\": \"<END_DATE>\"\n    },\n    \"_meta\": {\n      \"progressToken\": 0\n    }\n  }\n}\n```\n### Other instructions (uv examples)\n\n**Create environment**\n```Bash\nuv init mcp-server-demo\n\ncd mcp-server-demo\n\nuv add \"mcp[cli]\"\n\nuv run mcp\n```\n\n**Usage**: _mcp [OPTIONS] COMMAND [ARGS]_\n\n### MCP development tools\n\n- Options\n\n--help\n\n**Commands**\n\n_**version**_   > Show the MCP version\n\n_**dev**_   > Run a MCP server with the MCP Inspector\n\n_**run**_   > Run a MCP Server\n\n_**install**_   > Install a MCP server in the Claude desktop app\n\n**Example** _(open **MCP** dev **Inspector**)_:\n```Bash\nuv run mcp dev <MYPYTHONFILE>\n\n# Example output:\nStarting MCP inspector...\n‚öôÔ∏è Proxy server listening on port <PORT>\nüîç MCP Inspector is up and running at http://127.0.0.1:<PORT> üöÄ\n\n```"
}