{
  "mcp_name": "OP.GG",
  "mcp_description": "üìá ‚òÅÔ∏è - Access real-time gaming data across popular titles like League of Legends, TFT, and Valorant, offering champion analytics, esports schedules, meta compositions, and character statistics.",
  "mcp_id": "opgginc_opgg-mcp",
  "fetch_timestamp": "2025-06-23T07:18:03.765679Z",
  "github_url": "https://github.com/opgginc/opgg-mcp",
  "repository": {
    "name": "opgg-mcp",
    "full_name": "opgginc/opgg-mcp",
    "description": null,
    "html_url": "https://github.com/opgginc/opgg-mcp",
    "created_at": "2025-04-08T21:44:27Z",
    "updated_at": "2025-06-20T03:24:11Z",
    "pushed_at": "2025-05-31T07:32:44Z",
    "size": 30,
    "stargazers_count": 17,
    "watchers_count": 17,
    "forks_count": 6,
    "open_issues_count": 2,
    "language": "TypeScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "opgginc",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/29659061?v=4",
      "html_url": "https://github.com/opgginc"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 6,
    "subscribers_count": 2,
    "languages": {
      "TypeScript": 2623,
      "JavaScript": 1819,
      "Dockerfile": 596
    },
    "language_percentages": {
      "TypeScript": 52.06,
      "JavaScript": 36.11,
      "Dockerfile": 11.83
    },
    "pull_requests_count": 2,
    "contributors_count": 3,
    "latest_release": {
      "tag_name": "1.0.1",
      "name": "",
      "published_at": "2025-05-31T07:32:53Z",
      "body": "",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "1.0.1",
        "commit_sha": "78b9a74e2351e5f52dfc89f171e7d4d86daa672b"
      }
    ],
    "latest_version": "1.0.1",
    "package_json_version": "1.0.1"
  },
  "readme": "# OP.GG MCP Server\n\n[![smithery badge](https://smithery.ai/badge/@opgginc/opgg-mcp)](https://smithery.ai/server/@opgginc/opgg-mcp)\n\nThe OP.GG MCP Server is a Model Context Protocol implementation that seamlessly connects OP.GG data with AI agents and platforms. This server enables AI agents to retrieve various OP.GG data via function calling.\n\n![opgg-mcp-lol-leaderboard](https://github.com/user-attachments/assets/e89a77e7-0b83-4e20-a660-b16aa2d03fe2)\n![opgg-mcp-esports](https://github.com/user-attachments/assets/4e134577-57b6-4369-bb71-b72f1bebcdd8)\n\n## Overview\n\nThis MCP server provides AI agents with access to OP.GG data through a standardized interface. It offers a simple way to connect to our remote server (https://mcp-api.op.gg/mcp), allowing for easy installation and immediate access to OP.GG data in a format that's easily consumable by AI models and agent frameworks.\n\n## Features\n\nThe OP.GG MCP Server currently supports the following tools:\n\n### League of Legends\n- **lol-champion-leader-board**: Get ranking board data for League of Legends champions.\n- **lol-champion-analysis**: Provides analysis data for League of Legends champions (counter and ban/pick data available in the \"weakCounters\" field).\n- **lol-champion-meta-data**: Retrieves meta data for a specific champion, including statistics and performance metrics.\n- **lol-champion-skin-sale**: Retrieves information about champion skins that are currently on sale.\n- **lol-summoner-search**: Search for League of Legends summoner information and stats.\n- **lol-champion-positions-data**: Retrieves position statistics data for League of Legends champions, including win rates and pick rates by position.\n- **lol-summoner-game-history**: Retrieve recent game history for a League of Legends summoner.\n- **lol-summoner-renewal**: Refresh and update League of Legends summoner match history and stats.\n\n### Esports (League of Legends)\n- **esports-lol-schedules**: Get upcoming LoL match schedules.\n- **esports-lol-team-standings**: Get team standings for a LoL league.\n\n### Teamfight Tactics (TFT)\n- **tft-meta-trend-deck-list**: TFT deck list tool for retrieving current meta decks.\n- **tft-meta-item-combinations**: TFT tool for retrieving information about item combinations and recipes.\n- **tft-champion-item-build**: TFT tool for retrieving champion item build information.\n- **tft-recommend-champion-for-item**: TFT tool for retrieving champion recommendations for a specific item.\n- **tft-play-style-comment**: This tool provides comments on the playstyle of TFT champions.\n\n### Valorant\n- **valorant-meta-maps**: Valorant map meta data.\n- **valorant-meta-characters**: Valorant character meta data.\n- **valorant-leaderboard**: Fetch Valorant leaderboard by region.\n- **valorant-agents-composition-with-map**: Retrieve agent composition data for a Valorant map.\n- **valorant-characters-statistics**: Retrieve character statistics data for Valorant, optionally filtered by map.\n- **valorant-player-match-history**: Retrieve match history for a Valorant player using their game name and tag line.\n\n## Usage\n\nThe OP.GG MCP Server can be used with any MCP-compatible client. The following content explains installation methods using Claude Desktop as an example.\n\n### Direct Connection via StreamableHttp\n\nIf you want to connect directly to our StreamableHttp endpoint, you can use the `supergateway` package. This provides a simple way to connect to our remote server without having to install the full OP.GG MCP Server.\n\nAdd the following to your `claude_desktop_config.json` file:\n\n#### Mac/Linux\n\n```json\n{\n  \"mcpServers\": {\n    \"opgg-mcp\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"supergateway\",\n        \"--streamableHttp\",\n        \"https://mcp-api.op.gg/mcp\"\n      ]\n    }\n  }\n}\n```\n\n#### Windows\n\n```json\n{\n  \"mcpServers\": {\n    \"opgg-mcp\": {\n      \"command\": \"cmd\",\n      \"args\": [\n        \"/c\",\n        \"npx\",\n        \"-y\",\n        \"supergateway\",\n        \"--streamableHttp\",\n        \"https://mcp-api.op.gg/mcp\"\n      ]\n    }\n  }\n}\n```\n\nThis configuration will use the `supergateway` package to establish a direct connection to our StreamableHttp endpoint, providing you with immediate access to all OP.GG data tools.\n\n### Installing via Smithery\n\nTo install OP.GG MCP for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@opgginc/opgg-mcp):\n\n```bash\n$ npx -y @smithery/cli@latest install @opgginc/opgg-mcp --client claude --key {SMITHERY_API_KEY}\n```\n\n### Adding to MCP Configuration\n\nTo add this server to your Claude Desktop MCP configuration, add the following entry to your `claude_desktop_config.json` file:\n\n#### Mac/Linux\n\n```json\n{\n  \"mcpServers\": {\n    \"opgg-mcp\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@smithery/cli@latest\",\n        \"run\",\n        \"@opgginc/opgg-mcp\",\n        \"--key\",\n        \"{SMITHERY_API_KEY}\"\n      ]\n    }\n  }\n}\n```\n\n#### Windows\n\n```json\n{\n  \"mcpServers\": {\n    \"opgg-mcp\": {\n      \"command\": \"cmd\",\n      \"args\": [\n        \"/c\",\n        \"npx\",\n        \"-y\",\n        \"@smithery/cli@latest\",\n        \"run\",\n        \"@opgginc/opgg-mcp\",\n        \"--key\",\n        \"{SMITHERY_API_KEY}\"\n      ]\n    }\n  }\n}\n```\n\nAfter adding the configuration, restart Claude Desktop for the changes to take effect.\n\n## License\n\nThis project is licensed under the MIT License - see the LICENSE file for details.\n\n## Related Links\n\n- [Model Context Protocol](https://modelcontextprotocol.io)\n- [OP.GG](https://op.gg)\n"
}