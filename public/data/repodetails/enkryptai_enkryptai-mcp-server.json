{
  "mcp_name": "enkryptai/enkryptai-mcp-server",
  "mcp_description": "Integrate red-teaming, prompt auditing, and AI safety analysis into any MCP-compatible client with Enkrypt AI MCP Server.",
  "mcp_id": "enkryptai_enkryptai-mcp-server",
  "fetch_timestamp": "2025-06-23T02:52:42.034998Z",
  "github_url": "https://github.com/enkryptai/enkryptai-mcp-server",
  "repository": {
    "name": "enkryptai-mcp-server",
    "full_name": "enkryptai/enkryptai-mcp-server",
    "description": null,
    "html_url": "https://github.com/enkryptai/enkryptai-mcp-server",
    "created_at": "2025-04-08T09:28:58Z",
    "updated_at": "2025-06-19T13:52:33Z",
    "pushed_at": "2025-06-19T13:52:17Z",
    "size": 72,
    "stargazers_count": 2,
    "watchers_count": 2,
    "forks_count": 2,
    "open_issues_count": 2,
    "language": "Python",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "enkryptai",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/97072814?v=4",
      "html_url": "https://github.com/enkryptai"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 2,
    "subscribers_count": 1,
    "languages": {
      "Python": 44956
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 2,
    "contributors_count": 2
  },
  "readme": "# Enkrypt AI MCP Server\r\n\r\nThe Enkrypt AI MCP Server allows you to integrate red-teaming, prompt auditing, and AI safety analysis directly into any [Model Context Protocol (MCP)](https://modelcontextprotocol.io/introduction)‚Äìcompatible client such as Claude Desktop or Cursor IDE.\r\n\r\nWith this server, you can analyze prompts, detect jailbreak attempts, simulate adversarial attacks, and bring AI safety tooling directly into your assistant-driven workflows.\r\n\r\n---\r\n\r\n## üöÄ Features\r\n\r\n- Real-time prompt risk analysis  \r\n- Red-teaming via adversarial prompt generation  \r\n- Tool-based LLM monitoring using the MCP standard  \r\n- Seamless integration with Claude Desktop, Cursor IDE, and other MCP clients\r\n\r\n---\r\n\r\n## üí† Installation\r\n\r\nBefore getting started, ensure you have [`uv`](https://docs.astral.sh/uv/getting-started/installation/) installed on your machine.\r\n\r\n### 1. Clone the repository\r\n\r\n```bash\r\ngit clone https://github.com/enkryptai/enkryptai-mcp-server.git\r\ncd enkryptai-mcp-server\r\n```\r\n\r\n### 2. Install dependencies\r\n\r\n```bash\r\nuv pip install -e .\r\n```\r\n\r\n---\r\n\r\n## üîë Get Your API Key\r\n\r\nTo use the Enkrypt tools, you‚Äôll need a free API key from:\r\n\r\n[https://app.enkryptai.com/settings/api](https://app.enkryptai.com/settings/api)\r\n\r\n---\r\n\r\n## ‚öôÔ∏è Configuration\r\n\r\nYou can connect this MCP server to any MCP-compatible client. Here's how to do it with **Cursor** and **Claude Desktop**.\r\n\r\n---\r\n\r\n### üñ•Ô∏è Cursor\r\n\r\n1. Open **Settings** ‚Üí **MCP** tab in Cursor  \r\n2. Click **\"Add new global MCP server\"**  \r\n3. Paste the following config into the `mcp.json` file:\r\n\r\n```json\r\n{\r\n  \"mcpServers\": {\r\n    \"EnkryptAI-MCP\": {\r\n      \"command\": \"uv\",\r\n      \"args\": [\r\n        \"--directory\",\r\n        \"PATH/TO/enkryptai-mcp-server\",\r\n        \"run\",\r\n        \"src/mcp_server.py\"\r\n      ],\r\n      \"env\": {\r\n        \"ENKRYPTAI_API_KEY\": \"YOUR ENKRYPTAI API KEY\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nReplace:\r\n- `PATH/TO/enkryptai-mcp-server` with the absolute path to the cloned repo\r\n- `YOUR ENKRYPTAI API KEY` with your API key\r\n\r\nThe server will launch and appear in your MCP tools list.\r\n\r\n---\r\n\r\n### üí¨ Claude Desktop\r\n\r\n1. Open the **Claude** menu in your system menu bar (not inside the app window)  \r\n2. Go to **Settings‚Ä¶** ‚Üí **Developer** tab  \r\n3. Click **Edit Config**\r\n\r\nThis opens or creates the MCP config file at:\r\n- macOS: `~/Library/Application Support/Claude/claude_desktop_config.json`\r\n- Windows: `%APPDATA%\\Claude\\claude_desktop_config.json`\r\n\r\nReplace the contents with:\r\n\r\n```json\r\n{\r\n  \"mcpServers\": {\r\n    \"EnkryptAI-MCP\": {\r\n      \"command\": \"uv\",\r\n      \"args\": [\r\n        \"--directory\",\r\n        \"PATH/TO/enkryptai-mcp-server\",\r\n        \"run\",\r\n        \"src/mcp_server.py\"\r\n      ],\r\n      \"env\": {\r\n        \"ENKRYPTAI_API_KEY\": \"YOUR ENKRYPTAI API KEY\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nMake sure to:\r\n- Set the correct repo path\r\n- Paste in your API key\r\n\r\nFinally, restart Claude Desktop. Once it reloads, you‚Äôll see a hammer icon in the chat box, indicating your MCP tools are active.\r\n"
}