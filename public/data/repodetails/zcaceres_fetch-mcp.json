{
  "mcp_name": "zcaceres/fetch-mcp",
  "mcp_description": "üìá üè† - An MCP server to flexibly fetch JSON, text, and HTML data",
  "mcp_id": "zcaceres_fetch-mcp",
  "fetch_timestamp": "2025-06-23T09:44:24.687876Z",
  "github_url": "https://github.com/zcaceres/fetch-mcp",
  "repository": {
    "name": "fetch-mcp",
    "full_name": "zcaceres/fetch-mcp",
    "description": "A flexible HTTP fetching Model Context Protocol server.",
    "html_url": "https://github.com/zcaceres/fetch-mcp",
    "created_at": "2024-12-18T01:05:17Z",
    "updated_at": "2025-06-22T13:04:37Z",
    "pushed_at": "2025-05-10T19:29:26Z",
    "size": 1055,
    "stargazers_count": 456,
    "watchers_count": 456,
    "forks_count": 74,
    "open_issues_count": 5,
    "language": "TypeScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "zcaceres",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/10032979?v=4",
      "html_url": "https://github.com/zcaceres"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 74,
    "subscribers_count": 2,
    "languages": {
      "TypeScript": 10431,
      "JavaScript": 4947
    },
    "language_percentages": {
      "TypeScript": 67.83,
      "JavaScript": 32.17
    },
    "pull_requests_count": 5,
    "contributors_count": 4,
    "package_json_version": "1.0.0"
  },
  "readme": "# Fetch MCP Server\n\n![fetch mcp logo](logo.jpg)\n\nThis MCP server provides functionality to fetch web content in various formats, including HTML, JSON, plain text, and Markdown.\n\n<a href=\"https://glama.ai/mcp/servers/nu09wf23ao\">\n  <img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/nu09wf23ao/badge\" alt=\"Fetch Server MCP server\" />\n</a>\n\n## Components\n\n### Tools\n\n- **fetch_html**\n  - Fetch a website and return the content as HTML\n  - Input:\n    - `url` (string, required): URL of the website to fetch\n    - `headers` (object, optional): Custom headers to include in the request\n  - Returns the raw HTML content of the webpage\n\n- **fetch_json**\n  - Fetch a JSON file from a URL\n  - Input:\n    - `url` (string, required): URL of the JSON to fetch\n    - `headers` (object, optional): Custom headers to include in the request\n  - Returns the parsed JSON content\n\n- **fetch_txt**\n  - Fetch a website and return the content as plain text (no HTML)\n  - Input:\n    - `url` (string, required): URL of the website to fetch\n    - `headers` (object, optional): Custom headers to include in the request\n  - Returns the text content of the webpage with HTML tags, scripts, and styles removed\n\n- **fetch_markdown**\n  - Fetch a website and return the content as Markdown\n  - Input:\n    - `url` (string, required): URL of the website to fetch\n    - `headers` (object, optional): Custom headers to include in the request\n  - Returns the content of the webpage converted to Markdown format\n\n### Resources\n\nThis server does not provide any persistent resources. It's designed to fetch and transform web content on demand.\n\n## Getting started\n\n1. Clone the repository\n2. Install dependencies: `npm install`\n3. Build the server: `npm run build`\n\n### Usage\n\nTo use the server, you can run it directly:\n\n```bash\nnpm start\n```\n\nThis will start the Fetch MCP Server running on stdio.\n\n### Usage with Desktop App\n\nTo integrate this server with a desktop app, add the following to your app's server configuration:\n\n```json\n{\n  \"mcpServers\": {\n    \"fetch\": {\n      \"command\": \"node\",\n      \"args\": [\n        \"{ABSOLUTE PATH TO FILE HERE}/dist/index.js\"\n      ]\n    }\n  }\n}\n```\n\n## Features\n\n- Fetches web content using modern fetch API\n- Supports custom headers for requests\n- Provides content in multiple formats: HTML, JSON, plain text, and Markdown\n- Uses JSDOM for HTML parsing and text extraction\n- Uses TurndownService for HTML to Markdown conversion\n\n## Development\n\n- Run `npm run dev` to start the TypeScript compiler in watch mode\n- Use `npm test` to run the test suite\n\n## License\n\nThis project is licensed under the MIT License."
}