{
  "mcp_name": "mustafahasankhan/duckdb-mcp-server",
  "mcp_description": "Enables AI assistants to perform advanced data analysis on DuckDB using SQL, with seamless integration for multiple data sources and cloud storage.",
  "mcp_id": "mustafahasankhan_duckdb-mcp-server",
  "fetch_timestamp": "2025-06-23T06:56:53.734836Z",
  "github_url": "https://github.com/mustafahasankhan/duckdb-mcp-server",
  "repository": {
    "name": "duckdb-mcp-server",
    "full_name": "mustafahasankhan/duckdb-mcp-server",
    "description": "A MCP server for DuckDB with auth and friendly sql support out of the box.",
    "html_url": "https://github.com/mustafahasankhan/duckdb-mcp-server",
    "created_at": "2025-04-20T12:44:12Z",
    "updated_at": "2025-05-23T13:55:36Z",
    "pushed_at": "2025-05-13T12:16:32Z",
    "size": 59,
    "stargazers_count": 6,
    "watchers_count": 6,
    "forks_count": 2,
    "open_issues_count": 0,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "mustafahasankhan",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/65130881?v=4",
      "html_url": "https://github.com/mustafahasankhan"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 2,
    "subscribers_count": 1,
    "languages": {
      "Python": 84745
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 1,
    "contributors_count": 1
  },
  "readme": "# DuckDB MCP Server\n\n[![PyPI - Version](https://img.shields.io/pypi/v/duckdb-mcp-server)](https://pypi.org/project/duckdb-mcp-server/)\n[![PyPI - License](https://img.shields.io/pypi/l/duckdb-mcp-server)](LICENSE)\n\nA Model Context Protocol (MCP) server implementation that enables AI assistants like Claude to interact with DuckDB for powerful data analysis capabilities.\n\n## üåü What is DuckDB MCP Server?\n\nDuckDB MCP Server connects AI assistants to [DuckDB](https://duckdb.org/) - a high-performance analytical database - through the [Model Context Protocol (MCP)](https://modelcontextprotocol.io/). This allows AI models to:\n\n- Query data directly from various sources like CSV, Parquet, JSON, etc.\n- Access data from cloud storage (S3, etc.) without complex setup\n- Perform sophisticated data analysis using SQL\n- Generate data insights with proper context and understanding\n\n## üöÄ Key Features\n\n- **SQL Query Tool**: Execute any SQL query with DuckDB's powerful syntax\n- **Multiple Data Sources**: Query directly from:\n  - Local files (CSV, Parquet, JSON, etc.)\n  - S3 buckets and cloud storage\n  - SQLite databases\n  - All other data sources supported by DuckDB\n- **Auto-Connection Management**: Automatic database file creation and connection handling\n- **Smart Credential Handling**: Seamless AWS/S3 credential management\n- **Documentation Resources**: Built-in DuckDB SQL and data import reference for AI assistants\n\n## üìã Requirements\n\n- Python 3.10+\n- An MCP-compatible client (Claude Desktop, Cursor, VS Code with Copilot, etc.)\n\n## üíª Installation\n\n### Using pip\n\n```bash\npip install duckdb-mcp-server\n```\n\n### From source\n\n```bash\ngit clone https://github.com/mustafahasankhan/duckdb-mcp-server.git\ncd duckdb-mcp-server\npip install -e .\n```\n\n## üîß Configuration\n\n### Command Line Options\n\n```bash\nduckdb-mcp-server --db-path path/to/database.db [options]\n```\n\n#### Required Parameters:\n- `--db-path` - Path to DuckDB database file (will be created if doesn't exist)\n\n#### Optional Parameters:\n- `--readonly` - Run in read-only mode (will error if database doesn't exist)\n- `--s3-region` - AWS S3 region (default: uses AWS_DEFAULT_REGION env var)\n- `--s3-profile` - AWS profile for S3 credentials (default: uses AWS_PROFILE or 'default')\n- `--creds-from-env` - Use AWS credentials from environment variables\n\n## üîå Setting Up with Claude Desktop\n\n1. Install Claude Desktop from [claude.ai/download](https://claude.ai/download)\n2. Edit Claude Desktop's configuration file:\n\n   **macOS**: `~/Library/Application Support/Claude/claude_desktop_config.json`  \n   **Windows**: `%APPDATA%/Claude/claude_desktop_config.json`\n\n3. Add DuckDB MCP Server configuration:\n\n```json\n{\n  \"mcpServers\": {\n    \"duckdb\": {\n      \"command\": \"duckdb-mcp-server\",\n      \"args\": [\n        \"--db-path\",\n        \"~/claude-duckdb/data.db\"\n      ]\n    }\n  }\n}\n```\n\n## üìä Example Usage\n\nOnce configured, you can ask your AI assistant to analyze data using DuckDB:\n\n```\n\"Load the sales.csv file and show me the top 5 products by revenue\"\n```\n\nThe AI will generate and execute the appropriate SQL:\n\n```sql\n-- Load and query the CSV data\nSELECT \n    product_name,\n    SUM(quantity * price) AS revenue\nFROM read_csv('sales.csv')\nGROUP BY product_name\nORDER BY revenue DESC\nLIMIT 5;\n```\n\n### Working with S3 Data\n\nQuery data directly from S3 buckets:\n\n```\n\"Analyze the daily user signups from our analytics data in S3\"\n```\n\nThe AI will generate appropriate SQL to query S3:\n\n```sql\nSELECT \n    date_trunc('day', signup_timestamp) AS day,\n    COUNT(*) AS num_signups\nFROM read_parquet('s3://my-analytics-bucket/signups/*.parquet')\nGROUP BY day\nORDER BY day DESC;\n```\n\n## üå©Ô∏è Cloud Storage Authentication\n\nDuckDB MCP Server handles AWS authentication in this order:\n\n1. Explicit credentials (if `--creds-from-env` is enabled)\n2. Named profile credentials (via `--s3-profile`)\n3. Default credential chain (environment, shared credentials file, etc.)\n\n## üõ†Ô∏è Development\n\n```bash\n# Clone the repository\ngit clone https://github.com/yourusername/duckdb-mcp-server.git\ncd duckdb-mcp-server\n\n# Set up a virtual environment\npython -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\n\n# Install in development mode\npip install -e \".[dev]\"\n\n# Run tests\npytest\n```\n\n## üìú License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\n\n## üôè Contributing\n\nContributions are welcome! Please feel free to submit a Pull Request.\n"
}