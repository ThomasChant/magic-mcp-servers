{
  "mcp_name": "gabrielmaialva33/mcp-filesystem",
  "mcp_description": "Provides secure filesystem access for AI models with strict path validation and predefined directory constraints.",
  "mcp_id": "gabrielmaialva33_mcp-filesystem",
  "fetch_timestamp": "2025-06-23T03:40:12.907777Z",
  "github_url": "https://github.com/gabrielmaialva33/mcp-filesystem",
  "repository": {
    "name": "mcp-filesystem",
    "full_name": "gabrielmaialva33/mcp-filesystem",
    "description": "A secure Model Context Protocol (MCP) server providing filesystem access within predefined directories",
    "html_url": "https://github.com/gabrielmaialva33/mcp-filesystem",
    "created_at": "2025-04-03T00:14:19Z",
    "updated_at": "2025-04-22T17:33:24Z",
    "pushed_at": "2025-06-18T05:27:23Z",
    "size": 647,
    "stargazers_count": 7,
    "watchers_count": 7,
    "forks_count": 1,
    "open_issues_count": 10,
    "language": "TypeScript",
    "license": "MIT License",
    "topics": [
      "filesystem",
      "mcp",
      "mcp-server",
      "server"
    ],
    "default_branch": "master",
    "owner": {
      "login": "gabrielmaialva33",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/26732067?v=4",
      "html_url": "https://github.com/gabrielmaialva33"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 1,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 70889,
      "JavaScript": 29243,
      "Dockerfile": 1069,
      "Shell": 74
    },
    "language_percentages": {
      "TypeScript": 70,
      "JavaScript": 28.87,
      "Dockerfile": 1.06,
      "Shell": 0.07
    },
    "pull_requests_count": 48,
    "contributors_count": 1,
    "package_json_version": "1.6.1"
  },
  "readme": "<h1 align=\"center\">\n  <br>\n  <img src=\"https://raw.githubusercontent.com/gabrielmaialva33/mcp-filesystem/master/.github/assets/mcp.png\" alt=\"MCP Filesystem\" width=\"200\">\n  <br>\n  Secure <a href=\"https://modelcontextprotocol.io/introduction\">MCP</a> Filesystem Server\n  <br>\n</h1>\n\n<p align=\"center\">\n  <strong>A secure Model Context Protocol (MCP) server providing filesystem access within predefined directories</strong>\n</p>\n\n<p align=\"center\">\n  <img src=\"https://img.shields.io/github/license/gabrielmaialva33/mcp-filesystem?color=00b8d3?style=flat&logo=appveyor\" alt=\"License\" />\n  <img src=\"https://img.shields.io/github/languages/top/gabrielmaialva33/mcp-filesystem?style=flat&logo=appveyor\" alt=\"GitHub top language\" >\n  <img src=\"https://img.shields.io/github/languages/count/gabrielmaialva33/mcp-filesystem?style=flat&logo=appveyor\" alt=\"GitHub language count\" >\n  <img src=\"https://img.shields.io/github/repo-size/gabrielmaialva33/mcp-filesystem?style=flat&logo=appveyor\" alt=\"Repository size\" >\n  <a href=\"https://github.com/gabrielmaialva33/mcp-filesystem/commits/master\">\n    <img src=\"https://img.shields.io/github/last-commit/gabrielmaialva33/mcp-filesystem?style=flat&logo=appveyor\" alt=\"GitHub last commit\" >\n    <img src=\"https://img.shields.io/badge/made%20by-Maia-15c3d6?style=flat&logo=appveyor\" alt=\"Maia\" >  \n  </a>\n</p>\n\n<br>\n\n<p align=\"center\">\n  <a href=\"#bookmark-about\">About</a>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n  <a href=\"#computer-technologies\">Technologies</a>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n  <a href=\"#wrench-tools\">Tools</a>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n  <a href=\"#package-installation\">Installation</a>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n  <a href=\"#gear-usage\">Usage</a>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n  <a href=\"#memo-license\">License</a>\n</p>\n\n<br>\n\n## :bookmark: About\n\n**MCP Filesystem Server** provides secure filesystem access for AI models through the Model Context Protocol. It\nenforces strict path validation and only allows access to predefined directories.\n\n<br>\n\n## :computer: Technologies\n\n- **[TypeScript](https://www.typescriptlang.org/)**\n- **[Node.js](https://nodejs.org/)**\n- **[MCP SDK](https://github.com/modelcontextprotocol/typescript-sdk)**\n- **[Zod](https://zod.dev/)**\n- **[Docker](https://www.docker.com/)**\n- **[pnpm](https://pnpm.io/)**\n\n<br>\n\n## :wrench: Tools\n\n- **[Visual Studio Code](https://code.visualstudio.com/)**\n- **[ESLint](https://eslint.org/)**\n- **[Prettier](https://prettier.io/)**\n- **[Vitest](https://vitest.dev/)**\n- **[Docker Compose](https://docs.docker.com/compose/)**\n\n<br>\n\n## :package: Installation\n\n### :heavy_check_mark: **Prerequisites**\n\nThe following software must be installed:\n\n- **[Node.js](https://nodejs.org/en/)** (>=18.0.0)\n- **[Git](https://git-scm.com/)**\n- **[pnpm](https://pnpm.io/)** (>=8.0.0)\n- **[Docker](https://www.docker.com/)** (optional)\n- **[Docker Compose](https://docs.docker.com/compose/)** (optional)\n\n<br>\n\n### :arrow_down: **Cloning the repository**\n\n```sh\n  $ git clone https://github.com/gabrielmaialva33/mcp-filesystem.git\n  $ cd mcp-filesystem\n```\n\n<br>\n\n### :arrow_forward: **Running the application**\n\n#### Local Development\n\n```sh\n  # Install dependencies\n  $ pnpm install\n\n  # Build the application\n  $ pnpm build\n\n  # Run the server (specify directory to allow access to)\n  $ pnpm start /path/to/allowed/directory\n\n  # Or use configuration file\n  $ pnpm start --config=config.json\n```\n\n#### Using NPM Package\n\n```sh\n  # Install globally\n  $ npm install -g @gabrielmaialva33/mcp-filesystem\n\n  # Run the server\n  $ mcp-filesystem /path/to/allowed/directory\n\n  # Or use with npx (no installation needed)\n  $ npx @gabrielmaialva33/mcp-filesystem /path/to/allowed/directory\n\n  # Create a sample configuration file\n  $ npx @gabrielmaialva33/mcp-filesystem --create-config=config.json\n```\n\n#### Using Docker\n\n```sh\n  # Build the Docker image\n  $ docker build -t gabrielmaialva33/mcp-filesystem .\n\n  # Run using Docker\n  $ docker run -i --rm -v /path/to/data:/data:ro gabrielmaialva33/mcp-filesystem /data\n\n  # Use with config file\n  $ docker run -i --rm -v /path/to/config.json:/app/config.json -v /path/to/data:/data gabrielmaialva33/mcp-filesystem --config=/app/config.json\n```\n\n#### Using Docker Compose\n\n```sh\n  # Create a data directory\n  $ mkdir -p data\n\n  # Start the server\n  $ docker-compose up -d\n```\n\n<br>\n\n## :gear: Usage\n\n### Using with Claude Desktop\n\nClaude Desktop can be configured to use this MCP server for filesystem access. Add the following to your\n`claude_desktop_config.json`:\n\n#### Using Local Installation (Recommended)\n\n```json\n{\n  \"mcpServers\": {\n    \"filesystem\": {\n      \"command\": \"mcp-filesystem\",\n      \"args\": [\n        \"/Users/gabrielmaia/Documents\",\n        \"/Users/gabrielmaia/Desktop\",\n        \"/Users/gabrielmaia/Downloads\"\n      ]\n    }\n  }\n}\n```\n\nMake sure to make the executable available globally:\n\n```sh\n# Make the binary executable\nchmod +x /Users/gabrielmaia/.nvm/versions/node/v22.14.0/bin/mcp-filesystem\n```\n\n#### Using NPX\n\n```json\n{\n  \"mcpServers\": {\n    \"filesystem\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@gabrielmaialva33/mcp-filesystem\",\n        \"/Users/username/Desktop\",\n        \"/path/to/other/allowed/dir\"\n      ]\n    }\n  }\n}\n```\n\n#### Using Docker\n\nNote: When using Docker, all directories must be mounted to `/projects` by default. Adding the `ro` flag will make the\ndirectory read-only.\n\n```json\n{\n  \"mcpServers\": {\n    \"filesystem\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"-i\",\n        \"--rm\",\n        \"--mount\",\n        \"type=bind,src=/Users/username/Desktop,dst=/projects/Desktop\",\n        \"--mount\",\n        \"type=bind,src=/path/to/other/allowed/dir,dst=/projects/other/allowed/dir,ro\",\n        \"--mount\",\n        \"type=bind,src=/path/to/file.txt,dst=/projects/path/to/file.txt\",\n        \"gabrielmaialva33/mcp-filesystem\",\n        \"/projects\"\n      ]\n    }\n  }\n}\n```\n\n### Available Tools\n\nThe MCP Filesystem Server provides these tools:\n\n#### File System Operations\n\n- **read_file**: Read a file's content\n- **read_multiple_files**: Read multiple files at once\n- **write_file**: Create or overwrite a file\n- **edit_file**: Make precise edits with diff preview\n- **create_directory**: Create directories recursively\n- **list_directory**: List directory contents\n- **directory_tree**: Get a recursive tree view\n- **move_file**: Move or rename files\n- **search_files**: Find files matching patterns\n- **get_file_info**: Get file metadata\n- **list_allowed_directories**: See accessible directories\n\n#### System & Network Operations\n\n- **get_metrics**: View server performance metrics (v0.3.0+)\n- **execute_command**: Execute system commands securely (v0.3.1+)\n- **curl_request**: Execute HTTP requests to external APIs (coming in v1.2.0)\n\n#### Using curl_request Tool (Coming in v1.2.0)\n\nThe `curl_request` tool will allow you to make HTTP requests to external APIs:\n\n```javascript\n// Example: Making a GET request with authentication\ncurl_request({\n  url: 'https://api.example.com/data',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer your_token_here',\n  },\n})\n\n// Example: POST request with JSON data\ncurl_request({\n  url: 'https://api.example.com/create',\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  data: '{\"name\":\"Example\",\"value\":123}',\n})\n```\n\nSee the `docs/curl-tool-examples.md` file for more detailed examples.\n\n<br>\n\n## :sparkles: Features\n\n### Core Features\n\n- **Secure Access**: Strict path validation prevents unauthorized access\n- **File Operations**: Read, write, edit, and move files\n- **Directory Operations**: Create, list, get tree views, and search directories\n- **Metadata Access**: View file and directory information\n- **Command Execution**: Securely execute system commands with strict validation\n- **Docker Support**: Easy deployment with Docker and Docker Compose\n\n### New Features in v0.3.0\n\n- **Structured Logging**: Detailed logging with different levels (debug, info, warn, error)\n- **Performance Metrics**: Track operation counts, errors, and execution times\n- **Configuration Management**: Support for JSON configuration files\n- **Path Caching**: Improved performance for frequently accessed paths\n- **Improved Error Handling**: Specialized error types with structured information\n- **File Size Validation**: Prevent loading excessively large files\n- **CLI Improvements**: Help command, version info, and config generation\n\n### Configuration Options\n\nYou can create a configuration file using:\n\n```sh\n$ mcp-filesystem --create-config=config.json\n```\n\nExample configuration:\n\n```json\n{\n  \"allowedDirectories\": [\"/path/to/allowed/dir1\", \"/path/to/allowed/dir2\"],\n  \"logLevel\": \"info\",\n  \"logFile\": \"/path/to/logs/mcp-filesystem.log\",\n  \"serverName\": \"secure-filesystem-server\",\n  \"serverVersion\": \"0.3.0\",\n  \"cache\": {\n    \"enabled\": true,\n    \"maxSize\": 1000,\n    \"ttlMs\": 60000\n  },\n  \"metrics\": {\n    \"enabled\": true,\n    \"reportIntervalMs\": 60000\n  },\n  \"security\": {\n    \"maxFileSize\": 10485760,\n    \"allowSymlinks\": true,\n    \"validateRealPath\": true\n  }\n}\n```\n\n<br>\n\n### :writing_hand: **Author**\n\n| [![Gabriel Maia](https://avatars.githubusercontent.com/u/26732067?size=100)](https://github.com/gabrielmaialva33) |\n| ----------------------------------------------------------------------------------------------------------------- |\n| [Gabriel Maia](https://github.com/gabrielmaialva33)                                                               |\n\n## License\n\n[MIT License](LICENSE)\n\n<p align=\"center\"><img src=\"https://raw.githubusercontent.com/gabrielmaialva33/gabrielmaialva33/master/assets/gray0_ctp_on_line.svg?sanitize=true\" /></p>\n<p align=\"center\">&copy; 2024-present <a href=\"https://github.com/gabrielmaialva33/\" target=\"_blank\">Maia</a>\n</p>\n"
}