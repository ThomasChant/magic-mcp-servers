{
  "mcp_name": "Whois MCP",
  "mcp_description": "MCP server that performs whois lookup against domain, IP, ASN and TLD.",
  "mcp_id": "bharathvaj-ganesan_whois-mcp",
  "fetch_timestamp": "2025-06-23T09:27:12.695067Z",
  "github_url": "https://github.com/bharathvaj-ganesan/whois-mcp",
  "repository": {
    "name": "whois-mcp",
    "full_name": "bharathvaj-ganesan/whois-mcp",
    "description": "MCP Server for whois lookups.",
    "html_url": "https://github.com/bharathvaj-ganesan/whois-mcp",
    "created_at": "2025-03-05T18:20:19Z",
    "updated_at": "2025-06-22T04:21:58Z",
    "pushed_at": "2025-03-15T10:21:52Z",
    "size": 5540,
    "stargazers_count": 28,
    "watchers_count": 28,
    "forks_count": 11,
    "open_issues_count": 1,
    "language": "JavaScript",
    "license": "MIT License",
    "topics": [
      "claude",
      "cursor",
      "mcp",
      "mcp-server",
      "whois-lookup"
    ],
    "default_branch": "main",
    "owner": {
      "login": "bharathvaj-ganesan",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/16360498?v=4",
      "html_url": "https://github.com/bharathvaj-ganesan"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 11,
    "subscribers_count": 1,
    "languages": {
      "JavaScript": 3466,
      "TypeScript": 430
    },
    "language_percentages": {
      "JavaScript": 88.96,
      "TypeScript": 11.04
    },
    "pull_requests_count": 2,
    "contributors_count": 2,
    "package_json_version": "1.0.1"
  },
  "readme": "# Whois MCP\n\n[Model Context Protocol](https://modelcontextprotocol.io) server for whois lookups.\n\n<a href=\"https://glama.ai/mcp/servers/cwu9e3fcwg\">\n  <img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/cwu9e3fcwg/badge\" alt=\"Whois MCP server\" />\n</a>\n\n**Cursor IDE Demo**\n\nhttps://github.com/user-attachments/assets/57a82adc-3f30-453f-aabd-7138c2e6a21d\n\n**Claude Desktop Demo**\n\nhttps://github.com/user-attachments/assets/d30a1f45-fdaf-4280-80f2-d5d4fc9743b1\n\n## Overview\n\nThis MCP server allows AI agents like Claude Desktop, Cursor, Windsurf,.. etc to perform WHOIS lookups and retrieve domain details. \n\n**Purpose**\nYou can directly ask the AI to check if a domain is available, who owns it, when it was registered, and other important details. No need to go to browser and search.\n\n**What is a WHOIS Lookup?**\nA WHOIS lookup is the process of querying a WHOIS database to retrieve registration details about a domain name, IP address, or autonomous system. It helps users find out who owns a domain, when it was registered, when it expires, and other important details.\n\n**What Information Can a WHOIS Lookup Provide?**\n\nWhen you perform a WHOIS lookup, you can retrieve details such as:\n\n- Domain Name – The specific domain queried\n- Registrar Name – The company managing the domain registration (e.g., GoDaddy, Namecheap)\n- Registrant Details – The name, organization, and contact details of the domain owner (unless protected by WHOIS privacy)\n- Registration & Expiry Date – When the domain was registered and when it will expire\n- Name Servers – The DNS servers the domain is using\n- Domain Status – Active, expired, locked, or pending deletion\n- Contact Information – Administrative, technical, and billing contacts (if not hidden)\n\n## Available Tools\n\n| Tool                  | Description                                |\n| --------------------- | ------------------------------------------ |\n| `whois_domain`        | Looksup whois information about the domain |\n| `whois_tld`           | Looksup whois information about the Top Level Domain (TLD)    |\n| `whois_ip`            | Looksup whois information about the IP     |\n| `whois_as`            | Looksup whois information about the Autonomous System Number (ASN)     |\n\n## Using with Cursor\n\n**Installation - Globally**\n\nRun the MCP server using npx:\n\n```bash\nnpx -y @bharathvaj/whois-mcp@latest\n```\n\nIn your Cursor IDE\n\n1. Go to `Cursor Settings` > `MCP`\n2. Click `+ Add New MCP Server`\n3. Fill in the form:\n   - Name: `Whois Lookup` (or any name you prefer)\n   - Type: `command`\n   - Command: `npx -y @bharathvaj/whois-mcp@latest`\n\n\n**Installation - Project-specific**\n\nAdd an `.cursor/mcp.json` file to your project:\n\n```json\n{\n  \"mcpServers\": {\n    \"whois\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@bharathvaj/whois-mcp@latest\"\n      ]\n    }\n  }\n}\n```\n\n**Usage**\n\nOnce configured, the whois tools will be automatically available to the Cursor AI Agent. You can:\n\n1. The tool will be listed under `Available Tools` in MCP settings\n2. Agent will automatically use it when relevant\n3. You can explicitly ask Agent to send notifications\n\n## Using with Roo Code\nAccess the MCP settings by clicking “Edit MCP Settings” in Roo Code settings or using the “Roo Code: Open MCP Config” command in VS Code's command palette.\n\n```json\n{\n  \"mcpServers\": {\n    \"whois\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@bharathvaj/whois-mcp@latest\"\n      ]\n    }\n  }\n}\n```\n3. The whois capabilities will be available to Roo Code's AI agents\n\n## Development\n\n```bash\n# Install dependencies\npnpm install\n\n# Build\npnpm build\n\n```\n\n## Debugging the Server\n\nTo debug your server, you can use the [MCP Inspector](https://github.com/modelcontextprotocol/inspector).\n\nFirst build the server\n\n```\npnpm build\n```\n\nRun the following command in your terminal:\n\n```\n# Start MCP Inspector and server with all tools\nnpx @modelcontextprotocol/inspector node dist/index.js\n```\n\n## License\n\n[MIT](LICENSE)"
}