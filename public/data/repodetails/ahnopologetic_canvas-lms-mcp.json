{
  "mcp_name": "Canvas LMS",
  "mcp_description": "MCP server for easy access to education data through your Canvas LMS instance.",
  "mcp_id": "ahnopologetic_canvas-lms-mcp",
  "fetch_timestamp": "2025-06-23T01:55:59.289037Z",
  "github_url": "https://github.com/ahnopologetic/canvas-lms-mcp",
  "repository": {
    "name": "canvas-lms-mcp",
    "full_name": "ahnopologetic/canvas-lms-mcp",
    "description": null,
    "html_url": "https://github.com/ahnopologetic/canvas-lms-mcp",
    "created_at": "2025-04-12T15:45:04Z",
    "updated_at": "2025-06-11T16:08:59Z",
    "pushed_at": "2025-05-11T14:55:15Z",
    "size": 84,
    "stargazers_count": 4,
    "watchers_count": 4,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "ahnopologetic",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/53694801?v=4",
      "html_url": "https://github.com/ahnopologetic"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "Python": 21784,
      "Dockerfile": 912
    },
    "language_percentages": {
      "Python": 95.98,
      "Dockerfile": 4.02
    },
    "pull_requests_count": 1,
    "contributors_count": 2,
    "latest_release": {
      "tag_name": "v0.1.1",
      "name": "v0.1.1",
      "published_at": "2025-05-11T14:55:15Z",
      "body": "## What's Changed\r\n* Deployment: Dockerfile and Smithery config by @calclavia in https://github.com/ahnopologetic/canvas-lms-mcp/pull/1\r\n\r\n## New Contributors\r\n* @calclavia made their first contribution in https://github.com/ahnopologetic/canvas-lms-mcp/pull/1\r\n\r\n**Full Changelog**: https://github.com/ahnopologetic/canvas-lms-mcp/compare/v0.1.0...v0.1.1",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v0.1.1",
        "commit_sha": "418a296513ae9a8b422d8761b9d07f3f20ed395b"
      },
      {
        "name": "v0.1.0",
        "commit_sha": "2d26810b88481256e4d5e40d5fd41def39867b0c"
      }
    ],
    "latest_version": "v0.1.1"
  },
  "readme": "# Canvas LMS MCP Server\n\n[![smithery badge](https://smithery.ai/badge/@ahnopologetic/canvas-lms-mcp)](https://smithery.ai/server/@ahnopologetic/canvas-lms-mcp)\nA minimal Canvas LMS MCP (Machine Conversation Protocol) server for easy access to education data through your Canvas LMS instance. This server provides a bridge between AI systems (like Cursor) and Canvas Learning Management System.\n\n## Features\n\n- List planner items (assignments, quizzes, etc.)\n- Get and list assignments\n- Get and list quizzes\n- Get and list courses\n- Get course syllabus\n- Get course modules\n- List files\n\n## Installation\n\n### Installing via Smithery\n\nTo install Canvas LMS Server for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@ahnopologetic/canvas-lms-mcp):\n\n```bash\nnpx -y @smithery/cli install @ahnopologetic/canvas-lms-mcp --client claude\n```\n\n### Prerequisites\n\n- Python 3.13+\n- Canvas LMS API token\n- `uv` package manager (recommended)\n\n### Installation Methods\n\n#### Option 1: Install with uvx (Recommended)\n\nThe easiest way to install and run canvas-lms-mcp is using uvx:\n\n```bash\nuvx canvas-lms-mcp\n```\n\nThis will run the server in an isolated environment without installing it permanently.\n\nTo install the tool permanently:\n\n```bash\nuv tool install canvas-lms-mcp\n```\n\n#### Option 2: Install from Source\n\n1. Clone the repository:\n   ```bash\n   git clone https://github.com/yourusername/canvas-lms-mcp.git\n   cd canvas-lms-mcp\n   ```\n\n2. Install with uv:\n   ```bash\n   # Install uv if you don't have it yet\n   curl -LsSf https://astral.sh/uv/install.sh | sh\n\n   # Create a virtual environment and install dependencies\n   uv venv\n   uv pip install -e .\n   ```\n\n   Alternatively, use traditional methods:\n   ```bash\n   python -m venv .venv\n   source .venv/bin/activate  # On Windows: .venv\\Scripts\\activate\n   pip install -e .\n   ```\n\n## Configuration\n\nSet the following environment variables:\n\n```bash\nexport CANVAS_API_TOKEN=\"your_canvas_api_token\"\nexport CANVAS_BASE_URL=\"https://your-institution.instructure.com\"  # Default: https://canvas.instructure.com\n```\n\nYou can get your Canvas API token from your Canvas account settings.\n\n## Running the Server\n\nStart the server with uv:\n\n```bash\nuv run src/canvas_lms_mcp/main.py\n```\n\nIf installed with uvx tool:\n```bash\ncanvas-lms-mcp\n```\n\nBy default, the server runs on http://localhost:8000. You can use the FastMCP interface at http://localhost:8000/docs to interact with the API.\n\n## Available Tools\n\nThe server provides the following tools for interacting with Canvas LMS:\n\n### Courses\n\n#### `list_courses`\nList courses that the user is actively enrolled in.\n\nParameters:\n- `page` (optional, default=1): Page number (1-indexed)\n- `items_per_page` (optional, default=10): Number of items per page\n\n#### `get_course`\nGet a single course by ID.\n\nParameters:\n- `course_id` (required): Course ID\n- `include` (optional): List of additional data to include\n\n#### `get_course_syllabus`\nGet a course's syllabus.\n\nParameters:\n- `course_id` (required): Course ID\n\n#### `get_course_modules`\nGet modules for a course.\n\nParameters:\n- `course_id` (required): Course ID\n- `include` (optional): List of additional data to include\n\n### Assignments\n\n#### `list_assignments`\nList assignments for a course.\n\nParameters:\n- `course_id` (required): Course ID\n- `bucket` (required): Filter assignments by (\"past\", \"overdue\", \"undated\", \"ungraded\", \"unsubmitted\", \"upcoming\", \"future\")\n- `order_by` (required): Field to order assignments by (\"due_at\", \"position\", \"name\")\n- `page` (optional, default=1): Page number (1-indexed)\n- `items_per_page` (optional, default=10): Number of items per page\n\n#### `get_assignment`\nGet a single assignment by ID.\n\nParameters:\n- `course_id` (required): Course ID\n- `assignment_id` (required): Assignment ID\n\n### Quizzes\n\n#### `list_quizzes`\nList quizzes for a course.\n\nParameters:\n- `course_id` (required): Course ID\n- `include` (optional): List of additional data to include\n- `page` (optional, default=1): Page number (1-indexed)\n- `items_per_page` (optional, default=10): Number of items per page\n\n#### `get_quiz`\nGet a single quiz by ID.\n\nParameters:\n- `course_id` (required): Course ID\n- `quiz_id` (required): Quiz ID\n\n### Files\n\n#### `list_files`\nList files for a course or folder.\n\nParameters:\n- `course_id` (optional): Course ID\n- `folder_id` (optional): Folder ID\n- `include` (optional): List of additional data to include\n- `page` (optional, default=1): Page number (1-indexed)\n- `items_per_page` (optional, default=10): Number of items per page\n\n### Planner Items\n\n#### `list_planner_items`\nList planner items for the authenticated user.\n\nParameters:\n- `start_date` (required): Start date in ISO 8601 format\n- `end_date` (required): End date in ISO 8601 format\n- `context_codes` (optional): List of context codes (e.g., [\"course_123\"])\n- `page` (optional, default=1): Page number (1-indexed)\n- `items_per_page` (optional, default=10): Number of items per page\n\n## Integration with Cursor\n\nCursor is an AI-powered IDE that can interact with the Canvas LMS MCP server to provide education data directly within your development environment.\n\n### Setting Up Cursor Integration\n\n1. Install the Cursor IDE from [https://cursor.sh/](https://cursor.sh/)\n\n2. Create a `.cursor/mcp.json` file in your project directory with the following content:\n   ```json\n   {\n       \"mcpServers\": {\n           \"canvas\": {\n               \"command\": \"uvx\",\n               \"args\": [\n                    \"canvas-lms-mcp\"\n               ],\n               \"env\": {\n                   \"CANVAS_API_TOKEN\": \"your_canvas_api_token\",\n                   \"CANVAS_BASE_URL\": \"https://your-institution.instructure.com\"\n               }\n           }\n       }\n   }\n   ```\n\n   Replace:\n   - `your_canvas_api_token` with your actual Canvas API token\n   - `your-institution.instructure.com` with your Canvas institution URL\n\n3. Restart Cursor for the changes to take effect.\n\n### Cursor Time Integration (Optional)\n\nYou can also integrate a time server for timezone-related queries by adding a \"time\" server to your mcp.json:\n\n```json\n\"time\": {\n    \"command\": \"uvx\",\n    \"args\": [\n        \"mcp-server-time\",\n        \"--local-timezone=America/New_York\"\n    ]\n}\n```\n\nThis allows you to use time-related functions with your Canvas data.\n\n### Usage Examples\n\nOnce connected, you can ask Cursor AI about your Canvas data:\n\n- \"What assignments do I have due next week?\"\n- \"Show me the syllabus for my Biology course\"\n- \"List all my upcoming quizzes\"\n- \"What's on my schedule for tomorrow?\"\n\nExample conversation:\n\n```\nYOU: What assignments do I have due soon?\n\nCURSOR: I'll check your upcoming assignments.\n\nBased on your Canvas data, here are your upcoming assignments:\n- \"Final Project\" for CS101 due on December 10, 2023\n- \"Lab Report #5\" for BIOL200 due on December 7, 2023\n- \"Research Paper\" for ENGL301 due on December 15, 2023\n```\n\n## Development\n\nFor detailed development instructions, please see the [DEVELOPMENT.md](DEVELOPMENT.md) file.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\n"
}