{
  "mcp_name": "d-stoll/attio-js",
  "mcp_description": "A JavaScript/TypeScript SDK for Attio that doubles as an MCP server, enabling AI applications to invoke CRM-related operations.",
  "mcp_id": "d-stoll_attio-js",
  "fetch_timestamp": "2025-06-23T02:25:20.281514Z",
  "github_url": "https://github.com/d-stoll/attio-js",
  "repository": {
    "name": "attio-js",
    "full_name": "d-stoll/attio-js",
    "description": "A community-maintained JavaScript/TypeScript SDK for Attio",
    "html_url": "https://github.com/d-stoll/attio-js",
    "created_at": "2025-04-12T08:36:45Z",
    "updated_at": "2025-06-11T10:28:38Z",
    "pushed_at": "2025-04-25T20:52:31Z",
    "size": 2305,
    "stargazers_count": 9,
    "watchers_count": 9,
    "forks_count": 1,
    "open_issues_count": 1,
    "language": "TypeScript",
    "license": "MIT License",
    "topics": [
      "attio",
      "attio-sdk",
      "crm"
    ],
    "default_branch": "main",
    "owner": {
      "login": "d-stoll",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/28706185?v=4",
      "html_url": "https://github.com/d-stoll"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 1,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 2296720,
      "JavaScript": 648
    },
    "language_percentages": {
      "TypeScript": 99.97,
      "JavaScript": 0.03
    },
    "pull_requests_count": 2,
    "contributors_count": 3,
    "latest_release": {
      "tag_name": "v0.1.1",
      "name": "typescript - v0.1.1 - 2025-04-25 20:52:30",
      "published_at": "2025-04-25T20:52:32Z",
      "body": "# Generated by Speakeasy CLI\n\n## 2025-04-25 20:52:30\n### Changes\nBased on:\n- OpenAPI Doc 2.0.0 \n- Speakeasy CLI 1.540.0 (2.593.3) https://github.com/speakeasy-api/speakeasy\n### Generated\n- [typescript v0.1.1] .\n### Releases\n- [NPM v0.1.1] https://www.npmjs.com/package/attio-js/v/0.1.1 - .\n\nPublishing Completed",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v0.1.1",
        "commit_sha": "51d96ef3ee373a55cabef1adc94ce6b447c927a4"
      },
      {
        "name": "v0.1.0",
        "commit_sha": "5617067a4b8e0fdbc30b20f9e1e9e7c356848171"
      },
      {
        "name": "v0.0.9",
        "commit_sha": "7910b5bc01055fc6cb0a8cda9ac413e0f21d45eb"
      },
      {
        "name": "v0.0.8",
        "commit_sha": "d0e9ea3baeaff04bb1e48dd6fe84872c36b5ec7c"
      },
      {
        "name": "v0.0.7",
        "commit_sha": "8adcf24413b738e23cdf3b1859f648b358cda34b"
      },
      {
        "name": "v0.0.6",
        "commit_sha": "0c8b41722632f192889e68a79bcabd830e38eb05"
      },
      {
        "name": "v0.0.5",
        "commit_sha": "e3929d9f416c8937c5c4e5373486b75483ada1fd"
      },
      {
        "name": "v0.0.4",
        "commit_sha": "915437ef12815470e3fd50ebe45d698c8f50ce90"
      },
      {
        "name": "v0.0.3",
        "commit_sha": "91bd186184d2b1bf71771486fb1082f1c83035b3"
      },
      {
        "name": "v0.0.2",
        "commit_sha": "b2432d180d1774cb1d0d17d59f46f514e8e20287"
      }
    ],
    "latest_version": "v0.1.1",
    "package_json_version": "0.1.1"
  },
  "readme": "# Javascript & Typescript SDK for Attio\n\nDeveloper-friendly & type-safe JS/TS SDK based on the official OpenAPI spec of Attio.\n\n<!-- Start Summary [summary] -->\n## Summary\n\nAttio API: Attio is a CRM platform which is highly customisable, incredibly powerful and data-driven. The public API allows you to manipulate records, lists, notes, tasks and more. You can find more information about the Attio API in the [official docs](https://docs.attio.com/docs/overview). Unfortunately, an official JavaScript or TypeScript SDK has not been released yet. In the meantime, we maintain this unofficial SDK to bridge the gap until an official SDK becomes available.\n<!-- End Summary [summary] -->\n\n<!-- Start Table of Contents [toc] -->\n## Table of Contents\n<!-- $toc-max-depth=2 -->\n* [Javascript & Typescript SDK for Attio](#javascript-typescript-sdk-for-attio)\n  * [SDK Installation](#sdk-installation)\n  * [Requirements](#requirements)\n  * [SDK Example Usage](#sdk-example-usage)\n  * [Authentication](#authentication)\n  * [Available Resources and Operations](#available-resources-and-operations)\n  * [Standalone functions](#standalone-functions)\n  * [Retries](#retries)\n  * [Error Handling](#error-handling)\n  * [Server Selection](#server-selection)\n  * [Custom HTTP Client](#custom-http-client)\n  * [Debugging](#debugging)\n* [Development](#development)\n  * [Maturity](#maturity)\n  * [Contributions](#contributions)\n\n<!-- End Table of Contents [toc] -->\n\n<!-- Start SDK Installation [installation] -->\n## SDK Installation\n\nThe SDK can be installed with either [npm](https://www.npmjs.com/), [pnpm](https://pnpm.io/), [bun](https://bun.sh/) or [yarn](https://classic.yarnpkg.com/en/) package managers.\n\n### NPM\n\n```bash\nnpm add attio-js\n```\n\n### PNPM\n\n```bash\npnpm add attio-js\n```\n\n### Bun\n\n```bash\nbun add attio-js\n```\n\n### Yarn\n\n```bash\nyarn add attio-js zod\n\n# Note that Yarn does not install peer dependencies automatically. You will need\n# to install zod as shown above.\n```\n\n> [!NOTE]\n> This package is published with CommonJS and ES Modules (ESM) support.\n<!-- End SDK Installation [installation] -->\n\n<!-- Start Requirements [requirements] -->\n## Requirements\n\nFor supported JavaScript runtimes, please consult [RUNTIMES.md](RUNTIMES.md).\n<!-- End Requirements [requirements] -->\n\n<!-- Start SDK Example Usage [usage] -->\n## SDK Example Usage\n\n### Example\n\n```typescript\nimport { Attio } from \"attio-js\";\n\nconst attio = new Attio({\n  apiKey: process.env[\"ATTIO_API_KEY\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await attio.objects.list();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();\n\n```\n<!-- End SDK Example Usage [usage] -->\n\n<!-- Start Authentication [security] -->\n## Authentication\n\n### Per-Client Security Schemes\n\nThis SDK supports the following security scheme globally:\n\n| Name     | Type | Scheme      | Environment Variable |\n| -------- | ---- | ----------- | -------------------- |\n| `apiKey` | http | HTTP Bearer | `ATTIO_API_KEY`      |\n\nTo authenticate with the API the `apiKey` parameter must be set when initializing the SDK client instance. For example:\n```typescript\nimport { Attio } from \"attio-js\";\n\nconst attio = new Attio({\n  apiKey: process.env[\"ATTIO_API_KEY\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await attio.objects.list();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();\n\n```\n<!-- End Authentication [security] -->\n\n<!-- Start Available Resources and Operations [operations] -->\n## Available Resources and Operations\n\n<details open>\n<summary>Available methods</summary>\n\n\n### [attributes](docs/sdks/attributes/README.md)\n\n* [list](docs/sdks/attributes/README.md#list) - List attributes\n* [create](docs/sdks/attributes/README.md#create) - Create an attribute\n* [get](docs/sdks/attributes/README.md#get) - Get an attribute\n* [update](docs/sdks/attributes/README.md#update) - Update an attribute\n* [listSelectOptions](docs/sdks/attributes/README.md#listselectoptions) - List select options\n* [createSelectOption](docs/sdks/attributes/README.md#createselectoption) - Create a select option\n* [updateOption](docs/sdks/attributes/README.md#updateoption) - Update a select option\n* [listStatuses](docs/sdks/attributes/README.md#liststatuses) - List statuses\n\n#### [attributes.statuses](docs/sdks/statuses/README.md)\n\n* [create](docs/sdks/statuses/README.md#create) - Create a status\n* [update](docs/sdks/statuses/README.md#update) - Update a status\n\n### [comments](docs/sdks/comments/README.md)\n\n* [create](docs/sdks/comments/README.md#create) - Create a comment\n* [get](docs/sdks/comments/README.md#get) - Get a comment\n* [delete](docs/sdks/comments/README.md#delete) - Delete a comment\n\n### [entries](docs/sdks/entries/README.md)\n\n* [query](docs/sdks/entries/README.md#query) - List entries\n* [create](docs/sdks/entries/README.md#create) - Create an entry (add record to list)\n* [assert](docs/sdks/entries/README.md#assert) - Assert a list entry by parent\n* [getEntry](docs/sdks/entries/README.md#getentry) - Get a list entry\n* [update](docs/sdks/entries/README.md#update) - Update a list entry (append multiselect values)\n* [overwrite](docs/sdks/entries/README.md#overwrite) - Update a list entry (overwrite multiselect values)\n* [delete](docs/sdks/entries/README.md#delete) - Delete a list entry\n\n#### [entries.attributes](docs/sdks/entriesattributes/README.md)\n\n\n#### [entries.attributes.values](docs/sdks/values/README.md)\n\n* [list](docs/sdks/values/README.md#list) - List attribute values for a list entry\n\n### [lists](docs/sdks/lists/README.md)\n\n* [listAll](docs/sdks/lists/README.md#listall) - List all lists\n* [create](docs/sdks/lists/README.md#create) - Create a list\n* [get](docs/sdks/lists/README.md#get) - Get a list\n* [update](docs/sdks/lists/README.md#update) - Update a list\n\n### [meta](docs/sdks/meta/README.md)\n\n* [identify](docs/sdks/meta/README.md#identify) - Identify\n\n### [notes](docs/sdks/notes/README.md)\n\n* [list](docs/sdks/notes/README.md#list) - List notes\n* [create](docs/sdks/notes/README.md#create) - Create a note\n* [get](docs/sdks/notes/README.md#get) - Get a note\n* [delete](docs/sdks/notes/README.md#delete) - Delete a note\n\n### [objects](docs/sdks/objects/README.md)\n\n* [list](docs/sdks/objects/README.md#list) - List objects\n* [create](docs/sdks/objects/README.md#create) - Create an object\n* [get](docs/sdks/objects/README.md#get) - Get an object\n* [partialUpdate](docs/sdks/objects/README.md#partialupdate) - Update an object\n\n### [records](docs/sdks/records/README.md)\n\n* [query](docs/sdks/records/README.md#query) - List records\n* [create](docs/sdks/records/README.md#create) - Create a record\n* [assert](docs/sdks/records/README.md#assert) - Assert a record\n* [get](docs/sdks/records/README.md#get) - Get a record\n* [partialUpdate](docs/sdks/records/README.md#partialupdate) - Update a record (append multiselect values)\n* [update](docs/sdks/records/README.md#update) - Update a record (overwrite multiselect values)\n* [delete](docs/sdks/records/README.md#delete) - Delete a record\n* [listAttributeValues](docs/sdks/records/README.md#listattributevalues) - List record attribute values\n* [listEntries](docs/sdks/records/README.md#listentries) - List record entries\n\n### [tasks](docs/sdks/tasks/README.md)\n\n* [list](docs/sdks/tasks/README.md#list) - List tasks\n* [create](docs/sdks/tasks/README.md#create) - Create a task\n* [get](docs/sdks/tasks/README.md#get) - Get a task\n* [update](docs/sdks/tasks/README.md#update) - Update a task\n* [delete](docs/sdks/tasks/README.md#delete) - Delete a task\n\n### [threads](docs/sdks/threads/README.md)\n\n* [list](docs/sdks/threads/README.md#list) - List threads\n* [get](docs/sdks/threads/README.md#get) - Get a thread\n\n### [webhooks](docs/sdks/webhooks/README.md)\n\n* [list](docs/sdks/webhooks/README.md#list) - List webhooks\n* [create](docs/sdks/webhooks/README.md#create) - Create a webhook\n* [get](docs/sdks/webhooks/README.md#get) - Get a webhook\n* [partialUpdate](docs/sdks/webhooks/README.md#partialupdate) - Update a webhook\n* [delete](docs/sdks/webhooks/README.md#delete) - Delete a webhook\n\n### [workspaceMembers](docs/sdks/workspacemembers/README.md)\n\n* [list](docs/sdks/workspacemembers/README.md#list) - List workspace members\n* [get](docs/sdks/workspacemembers/README.md#get) - Get a workspace member\n\n</details>\n<!-- End Available Resources and Operations [operations] -->\n\n<!-- Start Standalone functions [standalone-funcs] -->\n## Standalone functions\n\nAll the methods listed above are available as standalone functions. These\nfunctions are ideal for use in applications running in the browser, serverless\nruntimes or other environments where application bundle size is a primary\nconcern. When using a bundler to build your application, all unused\nfunctionality will be either excluded from the final bundle or tree-shaken away.\n\nTo read more about standalone functions, check [FUNCTIONS.md](./FUNCTIONS.md).\n\n<details>\n\n<summary>Available standalone functions</summary>\n\n- [`attributesCreate`](docs/sdks/attributes/README.md#create) - Create an attribute\n- [`attributesCreateSelectOption`](docs/sdks/attributes/README.md#createselectoption) - Create a select option\n- [`attributesGet`](docs/sdks/attributes/README.md#get) - Get an attribute\n- [`attributesList`](docs/sdks/attributes/README.md#list) - List attributes\n- [`attributesListSelectOptions`](docs/sdks/attributes/README.md#listselectoptions) - List select options\n- [`attributesListStatuses`](docs/sdks/attributes/README.md#liststatuses) - List statuses\n- [`attributesStatusesCreate`](docs/sdks/statuses/README.md#create) - Create a status\n- [`attributesStatusesUpdate`](docs/sdks/statuses/README.md#update) - Update a status\n- [`attributesUpdate`](docs/sdks/attributes/README.md#update) - Update an attribute\n- [`attributesUpdateOption`](docs/sdks/attributes/README.md#updateoption) - Update a select option\n- [`commentsCreate`](docs/sdks/comments/README.md#create) - Create a comment\n- [`commentsDelete`](docs/sdks/comments/README.md#delete) - Delete a comment\n- [`commentsGet`](docs/sdks/comments/README.md#get) - Get a comment\n- [`entriesAssert`](docs/sdks/entries/README.md#assert) - Assert a list entry by parent\n- [`entriesAttributesValuesList`](docs/sdks/values/README.md#list) - List attribute values for a list entry\n- [`entriesCreate`](docs/sdks/entries/README.md#create) - Create an entry (add record to list)\n- [`entriesDelete`](docs/sdks/entries/README.md#delete) - Delete a list entry\n- [`entriesGetEntry`](docs/sdks/entries/README.md#getentry) - Get a list entry\n- [`entriesOverwrite`](docs/sdks/entries/README.md#overwrite) - Update a list entry (overwrite multiselect values)\n- [`entriesQuery`](docs/sdks/entries/README.md#query) - List entries\n- [`entriesUpdate`](docs/sdks/entries/README.md#update) - Update a list entry (append multiselect values)\n- [`listsCreate`](docs/sdks/lists/README.md#create) - Create a list\n- [`listsGet`](docs/sdks/lists/README.md#get) - Get a list\n- [`listsListAll`](docs/sdks/lists/README.md#listall) - List all lists\n- [`listsUpdate`](docs/sdks/lists/README.md#update) - Update a list\n- [`metaIdentify`](docs/sdks/meta/README.md#identify) - Identify\n- [`notesCreate`](docs/sdks/notes/README.md#create) - Create a note\n- [`notesDelete`](docs/sdks/notes/README.md#delete) - Delete a note\n- [`notesGet`](docs/sdks/notes/README.md#get) - Get a note\n- [`notesList`](docs/sdks/notes/README.md#list) - List notes\n- [`objectsCreate`](docs/sdks/objects/README.md#create) - Create an object\n- [`objectsGet`](docs/sdks/objects/README.md#get) - Get an object\n- [`objectsList`](docs/sdks/objects/README.md#list) - List objects\n- [`objectsPartialUpdate`](docs/sdks/objects/README.md#partialupdate) - Update an object\n- [`recordsAssert`](docs/sdks/records/README.md#assert) - Assert a record\n- [`recordsCreate`](docs/sdks/records/README.md#create) - Create a record\n- [`recordsDelete`](docs/sdks/records/README.md#delete) - Delete a record\n- [`recordsGet`](docs/sdks/records/README.md#get) - Get a record\n- [`recordsListAttributeValues`](docs/sdks/records/README.md#listattributevalues) - List record attribute values\n- [`recordsListEntries`](docs/sdks/records/README.md#listentries) - List record entries\n- [`recordsPartialUpdate`](docs/sdks/records/README.md#partialupdate) - Update a record (append multiselect values)\n- [`recordsQuery`](docs/sdks/records/README.md#query) - List records\n- [`recordsUpdate`](docs/sdks/records/README.md#update) - Update a record (overwrite multiselect values)\n- [`tasksCreate`](docs/sdks/tasks/README.md#create) - Create a task\n- [`tasksDelete`](docs/sdks/tasks/README.md#delete) - Delete a task\n- [`tasksGet`](docs/sdks/tasks/README.md#get) - Get a task\n- [`tasksList`](docs/sdks/tasks/README.md#list) - List tasks\n- [`tasksUpdate`](docs/sdks/tasks/README.md#update) - Update a task\n- [`threadsGet`](docs/sdks/threads/README.md#get) - Get a thread\n- [`threadsList`](docs/sdks/threads/README.md#list) - List threads\n- [`webhooksCreate`](docs/sdks/webhooks/README.md#create) - Create a webhook\n- [`webhooksDelete`](docs/sdks/webhooks/README.md#delete) - Delete a webhook\n- [`webhooksGet`](docs/sdks/webhooks/README.md#get) - Get a webhook\n- [`webhooksList`](docs/sdks/webhooks/README.md#list) - List webhooks\n- [`webhooksPartialUpdate`](docs/sdks/webhooks/README.md#partialupdate) - Update a webhook\n- [`workspaceMembersGet`](docs/sdks/workspacemembers/README.md#get) - Get a workspace member\n- [`workspaceMembersList`](docs/sdks/workspacemembers/README.md#list) - List workspace members\n\n</details>\n<!-- End Standalone functions [standalone-funcs] -->\n\n<!-- Start Retries [retries] -->\n## Retries\n\nSome of the endpoints in this SDK support retries.  If you use the SDK without any configuration, it will fall back to the default retry strategy provided by the API.  However, the default retry strategy can be overridden on a per-operation basis, or across the entire SDK.\n\nTo change the default retry strategy for a single API call, simply provide a retryConfig object to the call:\n```typescript\nimport { Attio } from \"attio-js\";\n\nconst attio = new Attio({\n  apiKey: process.env[\"ATTIO_API_KEY\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await attio.objects.list({\n    retries: {\n      strategy: \"backoff\",\n      backoff: {\n        initialInterval: 1,\n        maxInterval: 50,\n        exponent: 1.1,\n        maxElapsedTime: 100,\n      },\n      retryConnectionErrors: false,\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();\n\n```\n\nIf you'd like to override the default retry strategy for all operations that support retries, you can provide a retryConfig at SDK initialization:\n```typescript\nimport { Attio } from \"attio-js\";\n\nconst attio = new Attio({\n  retryConfig: {\n    strategy: \"backoff\",\n    backoff: {\n      initialInterval: 1,\n      maxInterval: 50,\n      exponent: 1.1,\n      maxElapsedTime: 100,\n    },\n    retryConnectionErrors: false,\n  },\n  apiKey: process.env[\"ATTIO_API_KEY\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await attio.objects.list();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();\n\n```\n<!-- End Retries [retries] -->\n\n<!-- Start Error Handling [errors] -->\n## Error Handling\n\nSome methods specify known errors which can be thrown. All the known errors are enumerated in the `models/errors/errors.ts` module. The known errors for a method are documented under the *Errors* tables in SDK docs. For example, the `create` method may throw the following errors:\n\n| Error Type                            | Status Code | Content Type     |\n| ------------------------------------- | ----------- | ---------------- |\n| errors.PostV2ObjectsSlugConflictError | 409         | application/json |\n| errors.APIError                       | 4XX, 5XX    | \\*/\\*            |\n\nIf the method throws an error and it is not captured by the known errors, it will default to throwing a `APIError`.\n\n```typescript\nimport { Attio } from \"attio-js\";\nimport { PostV2ObjectsSlugConflictError } from \"attio-js/models/errors/getv2objectsobject.js\";\nimport { SDKValidationError } from \"attio-js/models/errors/sdkvalidationerror.js\";\n\nconst attio = new Attio({\n  apiKey: process.env[\"ATTIO_API_KEY\"] ?? \"\",\n});\n\nasync function run() {\n  let result;\n  try {\n    result = await attio.objects.create({\n      data: {\n        apiSlug: \"people\",\n        singularNoun: \"Person\",\n        pluralNoun: \"People\",\n      },\n    });\n\n    // Handle the result\n    console.log(result);\n  } catch (err) {\n    switch (true) {\n      // The server response does not match the expected SDK schema\n      case (err instanceof SDKValidationError): {\n        // Pretty-print will provide a human-readable multi-line error message\n        console.error(err.pretty());\n        // Raw value may also be inspected\n        console.error(err.rawValue);\n        return;\n      }\n      case (err instanceof PostV2ObjectsSlugConflictError): {\n        // Handle err.data$: PostV2ObjectsSlugConflictErrorData\n        console.error(err);\n        return;\n      }\n      default: {\n        // Other errors such as network errors, see HTTPClientErrors for more details\n        throw err;\n      }\n    }\n  }\n}\n\nrun();\n\n```\n\nValidation errors can also occur when either method arguments or data returned from the server do not match the expected format. The `SDKValidationError` that is thrown as a result will capture the raw value that failed validation in an attribute called `rawValue`. Additionally, a `pretty()` method is available on this error that can be used to log a nicely formatted multi-line string since validation errors can list many issues and the plain error string may be difficult read when debugging.\n\nIn some rare cases, the SDK can fail to get a response from the server or even make the request due to unexpected circumstances such as network conditions. These types of errors are captured in the `models/errors/httpclienterrors.ts` module:\n\n| HTTP Client Error                                    | Description                                          |\n| ---------------------------------------------------- | ---------------------------------------------------- |\n| RequestAbortedError                                  | HTTP request was aborted by the client               |\n| RequestTimeoutError                                  | HTTP request timed out due to an AbortSignal signal  |\n| ConnectionError                                      | HTTP client was unable to make a request to a server |\n| InvalidRequestError                                  | Any input used to create a request is invalid        |\n| UnexpectedClientError                                | Unrecognised or unexpected error                     |\n<!-- End Error Handling [errors] -->\n\n<!-- Start Server Selection [server] -->\n## Server Selection\n\n### Override Server URL Per-Client\n\nThe default server can be overridden globally by passing a URL to the `serverURL: string` optional parameter when initializing the SDK client instance. For example:\n```typescript\nimport { Attio } from \"attio-js\";\n\nconst attio = new Attio({\n  serverURL: \"https://api.attio.com\",\n  apiKey: process.env[\"ATTIO_API_KEY\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await attio.objects.list();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();\n\n```\n<!-- End Server Selection [server] -->\n\n<!-- Start Custom HTTP Client [http-client] -->\n## Custom HTTP Client\n\nThe TypeScript SDK makes API calls using an `HTTPClient` that wraps the native\n[Fetch API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API). This\nclient is a thin wrapper around `fetch` and provides the ability to attach hooks\naround the request lifecycle that can be used to modify the request or handle\nerrors and response.\n\nThe `HTTPClient` constructor takes an optional `fetcher` argument that can be\nused to integrate a third-party HTTP client or when writing tests to mock out\nthe HTTP client and feed in fixtures.\n\nThe following example shows how to use the `\"beforeRequest\"` hook to to add a\ncustom header and a timeout to requests and how to use the `\"requestError\"` hook\nto log errors:\n\n```typescript\nimport { Attio } from \"attio-js\";\nimport { HTTPClient } from \"attio-js/lib/http\";\n\nconst httpClient = new HTTPClient({\n  // fetcher takes a function that has the same signature as native `fetch`.\n  fetcher: (request) => {\n    return fetch(request);\n  }\n});\n\nhttpClient.addHook(\"beforeRequest\", (request) => {\n  const nextRequest = new Request(request, {\n    signal: request.signal || AbortSignal.timeout(5000)\n  });\n\n  nextRequest.headers.set(\"x-custom-header\", \"custom value\");\n\n  return nextRequest;\n});\n\nhttpClient.addHook(\"requestError\", (error, request) => {\n  console.group(\"Request Error\");\n  console.log(\"Reason:\", `${error}`);\n  console.log(\"Endpoint:\", `${request.method} ${request.url}`);\n  console.groupEnd();\n});\n\nconst sdk = new Attio({ httpClient });\n```\n<!-- End Custom HTTP Client [http-client] -->\n\n<!-- Start Debugging [debug] -->\n## Debugging\n\nYou can setup your SDK to emit debug logs for SDK requests and responses.\n\nYou can pass a logger that matches `console`'s interface as an SDK option.\n\n> [!WARNING]\n> Beware that debug logging will reveal secrets, like API tokens in headers, in log messages printed to a console or files. It's recommended to use this feature only during local development and not in production.\n\n```typescript\nimport { Attio } from \"attio-js\";\n\nconst sdk = new Attio({ debugLogger: console });\n```\n\nYou can also enable a default debug logger by setting an environment variable `ATTIO_DEBUG` to true.\n<!-- End Debugging [debug] -->\n\n<!-- Placeholder for Future Speakeasy SDK Sections -->\n\n# Development\n\n## Maturity\n\nThis SDK is in beta, and there may be breaking changes between versions without a major version update. Therefore, we recommend pinning usage\nto a specific package version. This way, you can install the same version each time without breaking changes unless you are intentionally\nlooking for the latest version.\n\n## Contributions\n\nWhile we value open-source contributions to this SDK, this library is generated programmatically. Any manual changes added to internal files will be overwritten on the next generation. \nWe look forward to hearing your feedback. Feel free to open a PR or an issue with a proof of concept and we'll do our best to include it in a future release. \n\n### SDK Created by [Speakeasy](https://www.speakeasy.com/?utm_source=attio-js&utm_campaign=typescript)\n"
}