{
  "mcp_name": "yoda-digital/horologic-mcp",
  "mcp_description": "Horologic MCP is a TypeScript server for time and timezone operations, seamlessly integrating with MCP-compatible clients like Claude Desktop.",
  "mcp_id": "yoda-digital_horologic-mcp",
  "fetch_timestamp": "2025-06-23T09:40:17.112159Z",
  "github_url": "https://github.com/yoda-digital/horologic-mcp",
  "repository": {
    "name": "horologic-mcp",
    "full_name": "yoda-digital/horologic-mcp",
    "description": null,
    "html_url": "https://github.com/yoda-digital/horologic-mcp",
    "created_at": "2025-04-16T15:25:08Z",
    "updated_at": "2025-05-06T11:51:02Z",
    "pushed_at": "2025-04-17T11:29:55Z",
    "size": 1273,
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "TypeScript",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "yoda-digital",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/175815773?v=4",
      "html_url": "https://github.com/yoda-digital"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 11086
    },
    "language_percentages": {
      "TypeScript": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "package_json_version": "1.0.0"
  },
  "readme": "<p align=\"center\"><img src=\"assets/horologic-logo.png\" width=\"200\" alt=\"Horologic MCP Logo\"></p>\n\n# Horologic MCP\n\n**TypeScript Model Context Protocol (MCP) Time Server by Yoda Digital**\n\n---\n\nHorologic MCP is a reliable Model Context Protocol (MCP) server for time and timezone operations, built with TypeScript. It provides seamless integration with Claude Desktop and other MCP-compatible clients, offering the same functionality as the [Python time reference server](https://github.com/modelcontextprotocol/servers/tree/main/src/time).\n\n## Key Features\n\n- **Time & Timezone Tools:**\n  - `get_current_time`: Retrieve the current time in any IANA timezone\n  - `convert_time`: Convert times between any two IANA timezones with daylight saving handling\n- **MCP Protocol Compliance:**\n  - Full support for the latest MCP specifications\n  - Integrates with Claude Desktop and other MCP clients\n  - Uses STDIO transport for local, secure operation\n- **TypeScript Implementation:**\n  - Type-safe codebase with modern JavaScript features\n  - Modular design with comprehensive error handling\n  - Consistent with the Python reference implementation\n\n## Quick Start\n\n1. **Install dependencies and build:**\n\n   ```bash\n   npm install\n   npm run build\n   ```\n\n2. **Configure your AI assistant:**\n\n   **For Claude Desktop:**\n   Add the following to your `claude_desktop_config.json`:\n\n   ```json\n   {\n     \"mcpServers\": {\n       \"horologic-mcp\": {\n         \"command\": \"node\",\n         \"args\": [\"/absolute/path/to/horologic-mcp/dist/index.js\"]\n       }\n     }\n   }\n   ```\n\n   **For Cursor:**\n   Go to Settings > Features > MCP and add a new server:\n\n   - Type: stdio\n   - Name: horologic-mcp\n   - Command: node /absolute/path/to/horologic-mcp/dist/index.js\n\n   **For Cline/RooCoder:**\n   Add a new MCP server in the settings with:\n\n   - Name: horologic-mcp\n   - Command: node /absolute/path/to/horologic-mcp/dist/index.js\n\n   Restart your AI assistant. The Horologic MCP tools will appear automatically.\n\n## Using with Claude\n\nAfter setting up Horologic MCP, you can ask Claude questions like:\n\n- \"What time is it right now in Tokyo?\"\n- \"Can you convert 3:00 PM New York time to London time?\"\n- \"What's the current time in Sydney, Australia?\"\n- \"If it's 9:00 AM in Berlin, what time is it in San Francisco?\"\n\n## How It Works\n\n```\n┌─────────────┐     ┌───────────────┐     ┌─────────────┐\n│             │     │               │     │             │\n│   Claude    │◄────┤ Horologic MCP │◄────┤  Time API   │\n│  Assistant  │     │    Server     │     │             │\n│             │     │               │     │             │\n└─────────────┘     └───────────────┘     └─────────────┘\n      ▲                                          ▲\n      │                                          │\n      │                                          │\n      │                                          │\n      ▼                                          │\n┌─────────────┐                                  │\n│             │                                  │\n│    User     │──────────────────────────────────┘\n│             │       (Timezone queries)\n└─────────────┘\n```\n\n## Documentation\n\n- [Full API & Integration Guide](docs/horologic-mcp.md)\n- [Official MCP Specification](https://modelcontextprotocol.io/specification/)\n- [Python Reference Server](https://github.com/modelcontextprotocol/servers/tree/main/src/time)\n\n## License\n\nThis project is licensed under the MIT License.  \n© Yoda Digital. All rights reserved.\n"
}