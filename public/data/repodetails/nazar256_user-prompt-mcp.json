{
  "mcp_name": "User Prompt MCP",
  "mcp_description": "An MCP server for Cursor that enables requesting user input during generation process.",
  "mcp_id": "nazar256_user-prompt-mcp",
  "fetch_timestamp": "2025-06-23T09:13:26.069665Z",
  "github_url": "https://github.com/nazar256/user-prompt-mcp",
  "repository": {
    "name": "user-prompt-mcp",
    "full_name": "nazar256/user-prompt-mcp",
    "description": "A Model Context Protocol (MCP) server for Cursor that enables requesting user input during generation",
    "html_url": "https://github.com/nazar256/user-prompt-mcp",
    "created_at": "2025-03-31T19:27:27Z",
    "updated_at": "2025-06-20T13:18:53Z",
    "pushed_at": "2025-04-02T11:13:30Z",
    "size": 30,
    "stargazers_count": 12,
    "watchers_count": 12,
    "forks_count": 3,
    "open_issues_count": 1,
    "language": "Go",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "nazar256",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/5476057?v=4",
      "html_url": "https://github.com/nazar256"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 3,
    "subscribers_count": 3,
    "languages": {
      "Go": 17164,
      "Shell": 7947,
      "Makefile": 659
    },
    "language_percentages": {
      "Go": 66.6,
      "Shell": 30.84,
      "Makefile": 2.56
    },
    "pull_requests_count": 1,
    "contributors_count": 1,
    "latest_release": {
      "tag_name": "v1.0.1",
      "name": "v1.0.1",
      "published_at": "2025-04-02T10:25:55Z",
      "body": "**Full Changelog**: https://github.com/nazar256/user-prompt-mcp/compare/v1.0.0...v1.0.1",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v1.0.1",
        "commit_sha": "e5e9b38fe8f083fad0c5ffe7d55a83a9b5b462f1"
      },
      {
        "name": "v1.0.0",
        "commit_sha": "c0d37a4e990c7ff6f3bc9e395e62aaffdefa7162"
      }
    ],
    "latest_version": "v1.0.1"
  },
  "readme": "# User Prompt MCP\n\nA Model Context Protocol (MCP) server for Cursor that enables requesting user input during generation. This is mostly AI-generated code.\n\n## Overview\n\nThis project implements an MCP server that allows Cursor (or any MCP-compatible client) to request additional input from users during model generation without ending the generation process. It serves as a bridge between the AI model and the user, creating a more interactive experience.\n\n## Features\n\n- **User Input Prompting**: Allows the AI to ask for more information during generation\n- **Simple GUI**: Presents input prompts in a dialog box with text wrapping\n- **Cross-Platform**: Should work on both Linux (tested) and macOS\n- **Stdio Transport**: Integration with Cursor via stdio\n\n## Installation\n\n### Prerequisites\n\n- For GUI functionality:\n  - Linux: zenity\n  - macOS: osascript (built-in)\n\n### Quick Install (Recommended)\n\nThe easiest way to install user-prompt-mcp is using our installation script, which automatically downloads the appropriate binary for your system:\n\n```bash\n# Install the latest version\ncurl -sSL https://raw.githubusercontent.com/nazar256/user-prompt-mcp/main/install.sh | bash\n\n# Or install a specific version\ncurl -sSL https://raw.githubusercontent.com/nazar256/user-prompt-mcp/main/install.sh | bash -s -- -v v1.0.0\n```\n\nThe installation script will:\n- Detect your OS and architecture (Linux or macOS, amd64 or arm64)\n- Download the appropriate pre-compiled binary\n- Install it to a suitable directory in your PATH\n- Make it executable\n\n### Install from source\n\nIf you prefer to build from source (requires Go 1.18+):\n\n```bash\ngo install github.com/nazar256/user-prompt-mcp/cmd/user-prompt-mcp@latest\n```\n\n### Manual Installation\n\nYou can also download pre-compiled binaries directly from the [Releases page](https://github.com/nazar256/user-prompt-mcp/releases).\n\n## Usage with Cursor\n\n1. Open Cursor and go to Settings\n2. Navigate to the MCP Servers section and add a new server by editing JSON:\n```json\n{\n  \"mcpServers\": {\n    \"prompt\": {\n      \"command\": \"user-prompt-mcp\"\n    }\n  }\n}\n```\n\n3. Save and refresh\n\n4. Add to global rules something like: \"Important - do not finish responding until explicitly told to do so, instead always use MCP `input_user_prompt` and wait for response in all cases, either you feel stuck, you have question or you finished work on a prompt - always communicate with the user using this MCP.\"\n\n### Configuration\n\nThe server can be configured using command-line flags or environment variables:\n\n#### Timeout Configuration\nBy default, the server will wait 20 minutes for user input before timing out. You can customize this timeout using:\n\n- Command line flag: `--timeout <seconds>`\n  ```bash\n  user-prompt-mcp --timeout 600  # Set timeout to 10 minutes\n  ```\n- Environment variable: `USER_PROMPT_TIMEOUT=<seconds>`\n  ```bash\n  export USER_PROMPT_TIMEOUT=1800  # Set timeout to 30 minutes\n  user-prompt-mcp\n  ```\n\nNow when using Cursor, the AI can request additional input from you without ending its generation.\n\n## License\n\nMIT\n\n## Acknowledgements\n\n- [Model Context Protocol](https://modelcontextprotocol.io)\n- [mark3labs/mcp-go](https://github.com/mark3labs/mcp-go) "
}