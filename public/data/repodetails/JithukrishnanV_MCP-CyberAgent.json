{
  "mcp_name": "JithukrishnanV/MCP-CyberAgent",
  "mcp_description": "MCP-CyberAgent connects Claude Desktop with cybersecurity tools like VirusTotal, Nmap, and Shodan for AI-driven threat detection and network analysis.",
  "mcp_id": "JithukrishnanV_MCP-CyberAgent",
  "fetch_timestamp": "2025-06-23T05:26:40.194509Z",
  "github_url": "https://github.com/JithukrishnanV/MCP-CyberAgent",
  "repository": {
    "name": "MCP-CyberAgent",
    "full_name": "JithukrishnanV/MCP-CyberAgent",
    "description": "MCP-CyberAgent is an MCP-compliant AI security assistant that connects Claude Desktop (or any MCP client) with real-world cybersecurity tools like VirusTotal, Nmap, Shodan, and PowerShell.",
    "html_url": "https://github.com/JithukrishnanV/MCP-CyberAgent",
    "created_at": "2025-04-09T04:00:05Z",
    "updated_at": "2025-05-30T06:42:23Z",
    "pushed_at": "2025-05-28T03:02:15Z",
    "size": 37,
    "stargazers_count": 5,
    "watchers_count": 5,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "JithukrishnanV",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/48850291?v=4",
      "html_url": "https://github.com/JithukrishnanV"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "Python": 7537,
      "PowerShell": 1453
    },
    "language_percentages": {
      "Python": 83.84,
      "PowerShell": 16.16
    },
    "pull_requests_count": 0,
    "contributors_count": 1
  },
  "readme": "[![license](https://img.shields.io/github/license/mashape/apistatus.svg?maxAge=2592000)](https://choosealicense.com/licenses/mit/)\n\n![mcp_cyberagent_banner](https://github.com/JithukrishnanV/j/blob/master/pics/Logo.png)\n\n# MCP-CyberAgent 🛡️\nMCP-CyberAgent is an **MCP-compliant AI security assistant** that connects Claude Desktop (or any MCP client) with real-world cybersecurity tools like **VirusTotal, Nmap, Shodan**, and **PowerShell**.\n\n🔬 In this project, I’ve integrated automated hash extraction from running startup applications — enabling Claude to act like a personalized  \n**AI-powered Malware Scanner**.\n\nIt supports natural language interaction to:\n- Scan for malware using VirusTotal\n- Discover active network services\n- Gather threat intelligence from Shodan\n- Test network health and connectivity\n\nAll this runs **locally** in your environment — no cloud integration required. And it's completely free.\n\n---\n\n## 🎥 Demo\n\nhttps://github.com/user-attachments/assets/469d2800-8c06-461f-8336-6a1751b851cc\n\n---\n\n## ⚙️ Tools & Prompts\n\n### 🔬 VirusTotal Integration\nUsing PowerShell, MCP-CyberAgent extracts SHA256 hashes from startup applications and checks them against **VirusTotal’s threat database**.\n\n> 🧠 Try asking Claude:  \n> `\"Scan running processes with VirusTotal\"`  \n> `\"Check for malware in startup applications\"`\n\n![virustotal_demo](https://github.com/JithukrishnanV/j/blob/master/pics/VirusTotal.png)\n\n---\n\n### 🌐 Nmap Port Scanner\nScan open ports, services, and protocols on any IP using Claude.\n\n> 🧠 Try:  \n> `\"Check what ports are open on 127.0.0.1\"`\n\n![nmap_demo](https://github.com/JithukrishnanV/j/blob/master/pics/Nmap1.png)\n\n---\n\n### 🌍 Shodan IP Intelligence\nGet real-time internet-facing service information for any public IP address using Shodan.\n\n> 🧠 Try:  \n> `\"What does Shodan know about 1.1.1.1?\"`\n\n![shodan_demo](https://github.com/JithukrishnanV/j/blob/master/pics/Shodan.png)\n\n---\n\n### 🌐 Get Public IP\nQuery your external/public IP address.\n\n> 🧠 Try:  \n> `\"What is my IP?\"`\n\n![MyIp_demo](https://github.com/JithukrishnanV/j/blob/master/pics/MyIp.png)\n\n---\n\n### 🏓 Ping Checker\nTest latency and host reachability via ICMP.\n\n> 🧠 Try:  \n> `\"Ping 8.8.8.8\"`  \n> `\"Check if google.com is online\"`\n\n![ping_demo](https://github.com/JithukrishnanV/j/blob/master/pics/Ping.png)\n\n---\n\n## ✅ Requirements\n\n- Python 3.10+\n- Windows PowerShell (for startup hash scanning)\n- Claude Desktop or 5ire\n- API Keys:\n  - [VirusTotal](https://virustotal.com)\n  - [Shodan](https://shodan.io) (free key is enough)\n\nInstall dependencies:\n\n```bash\npip install -r requirements.txt\n\n\n\n## 🔧 Setup Guide\n\n### 📁 Project Layout\n```\nMCP-CyberAgent/\n├── bridge_mcp_cyberagent.py\n├── modules/\n│   ├── virustotal_module.py\n│   ├── nmap_module.py\n│   ├── shodan_module.py\n│   └── sysinfo.ps1\n├── configs/\n│   └── api_keys.env\n├── README.md\n└── requirements.txt\n```\n\n### ✅ Installation\n\n1. **Clone the repository:**\n   ```bash\n   git clone https://github.com/JithukrishnanV/MCP-CyberAgent\n   cd MCP-CyberAgent\n   ```\n\n2. **Create a virtual environment (optional but recommended):**\n   ```bash\n   python -m venv .venv\n   .venv\\Scripts\\activate\n   ```\n\n3. **Install dependencies:**\n   ```bash\n   pip install -r requirements.txt\n   ```\n\n4. **Add your API keys in `configs/api_keys.env`:**\n   ```\n   VT_API_KEY=your_virustotal_api_key\n   SHODAN_API_KEY=your_shodan_api_key\n   ```\n\n5. **Edit Claude Desktop config:**\nClaude Desktop\nTo set up Claude Desktop as a Ghidra MCP client, go to Claude -> Settings -> Developer -> Edit Config -> claude_desktop_config.json and add the following:\n\n   ```json\n   {\n     \"mcpServers\": {\n       \"cyberagent\": {\n         \"command\": \"C:/Path/To/python.exe\",\n         \"args\": [\n           \"\"/ABSOLUTE_PATH_TO/bridge_mcp_cyberagent.py\"\n         ]\n       }\n     }\n   }\n   ```\n\n6. **Launch Claude and select the MCP-CyberAgent from the MCP tab.**\n\n---\n\n## 🔗 Resources\n\n- 🧠 [Claude MCP Docs](https://modelcontextprotocol.io)\n- 🔍 [VirusTotal](https://virustotal.com)\n- 🌐 [Shodan](https://shodan.io)\n- 🛰️ [Nmap](https://nmap.org)\n- 📚 [Python SDK for MCP](https://pypi.org/project/mcp/)\n- 🛠️ [ping3](https://pypi.org/project/ping3/)\n- 🌍 [ipify - Get Public IP](https://www.ipify.org/)\n\n---\n"
}