{
  "mcp_name": "Inbox Zero",
  "mcp_description": "üêç ‚òÅÔ∏è - An MCP server for Inbox Zero. Adds functionality on top of Gmail like finding out which emails you need to reply to or need to follow up on.",
  "mcp_id": "elie222_inbox-zero",
  "fetch_timestamp": "2025-06-23T04:57:59.984325Z",
  "github_url": "https://github.com/elie222/inbox-zero/tree/main/apps/mcp-server",
  "repository": {
    "name": "inbox-zero",
    "full_name": "elie222/inbox-zero",
    "description": "The world's best AI personal assistant for email. Open source app to help you reach inbox zero fast.",
    "html_url": "https://github.com/elie222/inbox-zero",
    "created_at": "2023-07-12T15:34:57Z",
    "updated_at": "2025-06-23T04:24:21Z",
    "pushed_at": "2025-06-22T19:41:23Z",
    "size": 25514,
    "stargazers_count": 8147,
    "watchers_count": 8147,
    "forks_count": 864,
    "open_issues_count": 66,
    "language": "TypeScript",
    "license": "Other",
    "topics": [
      "ai",
      "email",
      "gmail",
      "loops",
      "nextjs",
      "openai",
      "postgresql",
      "posthog",
      "prisma",
      "productivity",
      "resend",
      "shadcn-ui",
      "tailwind",
      "tinybird",
      "turborepo",
      "typescript",
      "upstash"
    ],
    "default_branch": "main",
    "owner": {
      "login": "elie222",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/3090527?v=4",
      "html_url": "https://github.com/elie222"
    },
    "has_issues": true,
    "has_projects": false,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 864,
    "subscribers_count": 30,
    "languages": {
      "TypeScript": 2579160,
      "JavaScript": 9304,
      "MDX": 8126,
      "CSS": 2622,
      "Shell": 974,
      "PLpgSQL": 658
    },
    "language_percentages": {
      "TypeScript": 99.17,
      "JavaScript": 0.36,
      "MDX": 0.31,
      "CSS": 0.1,
      "Shell": 0.04,
      "PLpgSQL": 0.03
    },
    "pull_requests_count": 378,
    "contributors_count": 41,
    "tags": [
      {
        "name": "v1.7.2",
        "commit_sha": "cc09341a1114007976211d33912792df1510c0c1"
      },
      {
        "name": "v1.7.1",
        "commit_sha": "54dbb3202dfa7d31d85724e495895f2b83a70df8"
      },
      {
        "name": "v1.6.8",
        "commit_sha": "363446a91f4c68c8037ec1f4d4ea8dfc2babc42b"
      },
      {
        "name": "v1.6.6",
        "commit_sha": "50acb3fb53c972870c9cef27d56ac25025448e1a"
      },
      {
        "name": "v1.6.5",
        "commit_sha": "3ac02ea4950cd54538e3790b12b2951a3d18a125"
      },
      {
        "name": "v1.6.4",
        "commit_sha": "b8b9586ab2150021d3196c301f39f1cce73665ad"
      },
      {
        "name": "v1.6.3",
        "commit_sha": "a75834a90a7f9d9eab9fe308ff10b3c8fdbcd2a0"
      },
      {
        "name": "v1.6.2",
        "commit_sha": "eef76cbe6731d770d2f2d5ad950e723bc4207182"
      },
      {
        "name": "v1.6.1",
        "commit_sha": "3f91224474e4bec8cce9e8bbdc229d5c16a692ff"
      },
      {
        "name": "v1.6.0",
        "commit_sha": "7da3124ece3cc5c9a04bcbc06df5ac6ddfb03bdf"
      }
    ],
    "latest_version": "v1.7.2"
  },
  "readme": "[![](apps/web/app/opengraph-image.png)](https://www.getinboxzero.com)\n\n<p align=\"center\">\n  <a href=\"https://www.getinboxzero.com\">\n    <h1 align=\"center\">Inbox Zero - Your AI Email Assistant</h1>\n  </a>\n  <p align=\"center\">\n    Open source email app to reach inbox zero fast.\n    <br />\n    <a href=\"https://www.getinboxzero.com\">Website</a>\n    ¬∑\n    <a href=\"https://www.getinboxzero.com/discord\">Discord</a>\n    ¬∑\n    <a href=\"https://github.com/elie222/inbox-zero/issues\">Issues</a>\n  </p>\n</p>\n\n## About\n\nThere are two parts to Inbox Zero:\n\n1. An AI email assistant that helps you spend less time on email.\n2. Open source AI email client.\n\nIf you're looking to contribute to the project, the email client is the best place to do this.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Felie222%2Finbox-zero&env=NEXTAUTH_SECRET,GOOGLE_CLIENT_ID,GOOGLE_CLIENT_SECRET,GOOGLE_ENCRYPT_SECRET,GOOGLE_ENCRYPT_SALT,UPSTASH_REDIS_URL,UPSTASH_REDIS_TOKEN,GOOGLE_PUBSUB_TOPIC_NAME,DATABASE_URL)\n\nThanks to Vercel for sponsoring Inbox Zero in support of open-source software.\n\n## Features\n\n- **AI Personal Assistant:** Manages your email for you based on a plain text prompt file. It can take any action a human assistant can take on your behalf (Draft reply, Label, Archive, Reply, Forward, Mark Spam, and even call a webhook).\n- **Reply Zero:** Track emails that need your reply and those awaiting responses.\n- **Smart Categories:** Categorize everyone that's ever emailed you.\n- **Bulk Unsubscriber:** Quickly unsubscribe from emails you never read in one-click.\n- **Cold Email Blocker:** Automatically block cold emails.\n- **Email Analytics:** Track your email activity with daily, weekly, and monthly stats.\n\nLearn more in our [docs](https://docs.getinboxzero.com).\n\n## Feature Screenshots\n\n| ![AI Assistant](.github/screenshots/email-assistant.png) |        ![Reply Zero](.github/screenshots/reply-zero.png)        |\n| :------------------------------------------------------: | :-------------------------------------------------------------: |\n|                      _AI Assistant_                      |                          _Reply Zero_                           |\n|  ![Gmail Client](.github/screenshots/email-client.png)   | ![Bulk Unsubscriber](.github/screenshots/bulk-unsubscriber.png) |\n|                      _Gmail client_                      |                       _Bulk Unsubscriber_                       |\n\n## Demo Video\n\n[![Inbox Zero demo](/video-thumbnail.png)](http://www.youtube.com/watch?v=hfvKvTHBjG0)\n\n## Built with\n\n- [Next.js](https://nextjs.org/)\n- [Tailwind CSS](https://tailwindcss.com/)\n- [shadcn/ui](https://ui.shadcn.com/)\n- [Prisma](https://www.prisma.io/)\n- [Upstash](https://upstash.com/)\n- [Turborepo](https://turbo.build/)\n\n## Star History\n\n[![Star History Chart](https://api.star-history.com/svg?repos=elie222/inbox-zero&type=Date)](https://www.star-history.com/#elie222/inbox-zero&Date)\n\n## Feature Requests\n\nTo request a feature open a [GitHub issue](https://github.com/elie222/inbox-zero/issues), or join our [Discord](https://www.getinboxzero.com/discord).\n\n## Getting Started for Developers\n\nWe offer a hosted version of Inbox Zero at [https://getinboxzero.com](https://getinboxzero.com). To self-host follow the steps below.\n\n### Setup\n\n[Here's a video](https://youtu.be/hVQENQ4WT2Y) on how to set up the project. It covers the same steps mentioned in this document. But goes into greater detail on setting up the external services.\n\n### Requirements\n\n- [Node.js](https://nodejs.org/en/) >= 18.0.0\n- [pnpm](https://pnpm.io/) >= 8.6.12\n- [Docker desktop](https://www.docker.com/products/docker-desktop/) (recommended but optional)\n\nMake sure you have the above installed before starting.\n\nThe external services that are required are (detailed setup instructions below):\n\n- [Google OAuth](https://console.cloud.google.com/apis/credentials)\n- [Google PubSub](https://console.cloud.google.com/cloudpubsub/topic/list)\n\n### Updating .env file: secrets\n\nCreate your own `.env` file from the example supplied:\n\n```bash\ncp apps/web/.env.example apps/web/.env\ncd apps/web\npnpm install\n```\n\nSet the environment variables in the newly created `.env`. You can see a list of required variables in: `apps/web/env.ts`.\n\nThe required environment variables:\n\nSecrets:\n\n- `NEXTAUTH_SECRET` -- can be any random string (try using `openssl rand -hex 32` for a quick secure random string)\n- `GOOGLE_ENCRYPT_SECRET` -- Secret key for encrypting OAuth tokens (try using `openssl rand -hex 32` for a secure key)\n- `GOOGLE_ENCRYPT_SALT` -- Salt for encrypting OAuth tokens (try using `openssl rand -hex 16` for a secure salt)\n\nRedis:\n\n- `UPSTASH_REDIS_URL` -- Redis URL from Upstash. (can be empty if you are using Docker Compose)\n- `UPSTASH_REDIS_TOKEN` -- Redis token from Upstash. (or specify your own random string if you are using Docker Compose)\n\nWhen using Vercel with Fluid Compute turned off, you should set `MAX_DURATION=300` or lower. See Vercel limits for different plans [here](https://vercel.com/docs/functions/configuring-functions/duration#duration-limits).\n\n### Updating .env file with Google OAuth credentials:\n\n- `GOOGLE_CLIENT_ID` -- Google OAuth client ID. More info [here](https://next-auth.js.org/providers/google)\n- `GOOGLE_CLIENT_SECRET` -- Google OAuth client secret. More info [here](https://next-auth.js.org/providers/google)\n\nGo to [Google Cloud](https://console.cloud.google.com/). Create a new project if necessary.\n\nCreate [new credentials](https://console.cloud.google.com/apis/credentials):\n\n1.  If the banner shows up, configure **consent screen** (if not, you can do this later)\n    1. Click the banner, then Click `Get Started`.\n    2. Choose a name for your app, and enter your email.\n    3. In Audience, choose `External`\n    4. Enter your contact information\n    5. Agree to the User Data policy and then click `Create`.\n    6. Return to APIs and Services using the left sidebar.\n2.  Create new [credentials](https://console.cloud.google.com/apis/credentials):\n    1. Click the `+Create Credentials` button. Choose OAuth Client ID.\n    2. In `Application Type`, Choose `Web application`\n    3. Choose a name for your web client\n    4. In Authorized JavaScript origins, add a URI and enter `http://localhost:3000`\n    5. In `Authorized redirect URIs` enter `http://localhost:3000/api/auth/callback/google`\n    6. Click `Create`.\n    7. A popup will show up with the new credentials, including the Client ID and secret.\n3.  Update .env file:\n    1. Copy the Client ID to `GOOGLE_CLIENT_ID`\n    2. Copy the Client secret to `GOOGLE_CLIENT_SECRET`\n4.  Update [scopes](https://console.cloud.google.com/auth/scopes)\n\n    1. Go to `Data Access` in the left sidebar (or click link above)\n    2. Click `Add or remove scopes`\n    3. Copy paste the below into the `Manually add scopes` box:\n\n    ```plaintext\n    https://www.googleapis.com/auth/userinfo.profile\n    https://www.googleapis.com/auth/userinfo.email\n    https://www.googleapis.com/auth/gmail.modify\n    https://www.googleapis.com/auth/gmail.settings.basic\n    https://www.googleapis.com/auth/contacts\n    ```\n\n    4. Click `Update`\n    5. Click `Save` in the Data Access page.\n\n5.  Add yourself as a test user\n    1. Go to [Audience](https://console.cloud.google.com/auth/audience)\n    2. In the `Test users` section, click `+Add users`\n    3. Enter your email and press `Save`\n\n### Updating .env file with LLM parameters\n\nYou need to set an LLM, but you can use a local one too:\n\n- [Anthropic](https://console.anthropic.com/settings/keys)\n- [OpenAI](https://platform.openai.com/api-keys)\n- AWS Bedrock Anthropic\n- Google Gemini\n- Groq Llama 3.3 70B\n- Ollama (local)\n\nFor the LLM, you can use Anthropic, OpenAI, or Anthropic on AWS Bedrock. You\ncan also use Ollama by setting the following enviroment variables:\n\n```sh\nOLLAMA_BASE_URL=http://localhost:11434/api\nNEXT_PUBLIC_OLLAMA_MODEL=phi3\n```\n\nNote: If you need to access Ollama hosted locally and the application is running on Docker setup, you can use `http://host.docker.internal:11434/api` as the base URL. You might also need to set `OLLAMA_HOST` to `0.0.0.0` in the Ollama configuration file.\n\nYou can select the model you wish to use in the app on the `/settings` page of the app.\n\nIf you are using local ollama, you can set it to be default:\n\n```sh\nDEFAULT_LLM_PROVIDER=ollama\n```\n\nIf this is the case you must also set the `ECONOMY_LLM_PROVIDER` environment variable.\n\n### Redis and Postgres\n\nWe use Postgres for the database.\nFor Redis, you can use [Upstash Redis](https://upstash.com/) or set up your own Redis instance.\n\nYou can run Postgres & Redis locally using `docker-compose`\n\n```bash\ndocker-compose up -d # -d will run the services in the background\n```\n\n### Running the app\n\nTo run the migrations:\n\n```bash\npnpm prisma migrate dev\n```\n\nTo run the app locally for development (slower):\n\n```bash\npnpm run dev\n```\n\nOr from the project root:\n\n```bash\nturbo dev\n```\n\nTo build and run the app locally in production mode (faster):\n\n```bash\npnpm run build\npnpm start\n```\n\nOpen [http://localhost:3000](http://localhost:3000) to view the app in your browser.\n\n### Premium\n\nMany features are available only to premium users. To upgrade yourself, make yourself an admin in the `.env`: `ADMINS=hello@gmail.com`\nThen upgrade yourself at: [http://localhost:3000/admin](http://localhost:3000/admin).\n\n### Set up push notifications via Google PubSub to handle emails in real time\n\nFollow instructions [here](https://developers.google.com/gmail/api/guides/push).\n\n1. [Create a topic](https://developers.google.com/gmail/api/guides/push#create_a_topic)\n2. [Create a subscription](https://developers.google.com/gmail/api/guides/push#create_a_subscription)\n3. [Grant publish rights on your topic](https://developers.google.com/gmail/api/guides/push#grant_publish_rights_on_your_topic)\n\nSet env var `GOOGLE_PUBSUB_TOPIC_NAME`.\nWhen creating the subscription select Push and the url should look something like: `https://www.getinboxzero.com/api/google/webhook?token=TOKEN` or `https://abc.ngrok-free.app/api/google/webhook?token=TOKEN` where the domain is your domain. Set `GOOGLE_PUBSUB_VERIFICATION_TOKEN` in your `.env` file to be the value of `TOKEN`.\n\nTo run in development ngrok can be helpful:\n\n```sh\nngrok http 3000\n# or with an ngrok domain to keep your endpoint stable (set `XYZ`):\nngrok http --domain=XYZ.ngrok-free.app 3000\n```\n\nAnd then update the webhook endpoint in the [Google PubSub subscriptions dashboard](https://console.cloud.google.com/cloudpubsub/subscription/list).\n\nTo start watching emails visit: `/api/google/watch/all`\n\n### Watching for email updates\n\nSet a cron job to run these:\nThe Google watch is necessary. Others are optional.\n\n```json\n  \"crons\": [\n    {\n      \"path\": \"/api/google/watch/all\",\n      \"schedule\": \"0 1 * * *\"\n    },\n    {\n      \"path\": \"/api/resend/summary/all\",\n      \"schedule\": \"0 16 * * 1\"\n    },\n    {\n      \"path\": \"/api/reply-tracker/disable-unused-auto-draft\",\n      \"schedule\": \"0 3 * * *\"\n    }\n  ]\n```\n\n[Here](https://vercel.com/guides/how-to-setup-cron-jobs-on-vercel#alternative-cron-providers) are some easy ways to run cron jobs. Upstash is a free, easy option. I could never get the Vercel `vercel.json`. Open to PRs if you find a fix for that.\n\n### Contributing to the project\n\nYou can view open tasks in our [GitHub Issues](https://github.com/elie222/inbox-zero/issues).\nJoin our [Discord](https://www.getinboxzero.com/discord) to discuss tasks and check what's being worked on.\n\n[ARCHITECTURE.md](./ARCHITECTURE.md) explains the architecture of the project (LLM generated).\n"
}