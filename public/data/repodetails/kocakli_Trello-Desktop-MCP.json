{
  "mcp_name": "Trello MCP",
  "mcp_description": "Trello Desktop MCP server that enables Claude Desktop to interact with Trello boards, cards, lists, and team members through natural language commands.",
  "mcp_id": "kocakli_Trello-Desktop-MCP",
  "fetch_timestamp": "2025-06-23T09:04:14.085886Z",
  "github_url": "https://github.com/kocakli/Trello-Desktop-MCP",
  "repository": {
    "name": "Trello-Desktop-MCP",
    "full_name": "kocakli/Trello-Desktop-MCP",
    "description": "Trello integration for Claude Desktop via Model Context Protocol (MCP) - 19 tools for comprehensive board, card, and list management",
    "html_url": "https://github.com/kocakli/Trello-Desktop-MCP",
    "created_at": "2025-06-12T09:59:40Z",
    "updated_at": "2025-06-14T18:27:40Z",
    "pushed_at": "2025-06-14T18:27:37Z",
    "size": 171,
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "TypeScript",
    "license": "MIT License",
    "topics": [
      "antrophic",
      "claude",
      "mcp",
      "mcp-server",
      "openai",
      "trello",
      "typescript"
    ],
    "default_branch": "main",
    "owner": {
      "login": "kocakli",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/10248721?v=4",
      "html_url": "https://github.com/kocakli"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 0,
    "languages": {
      "TypeScript": 100111,
      "JavaScript": 6841
    },
    "language_percentages": {
      "TypeScript": 93.6,
      "JavaScript": 6.4
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "package_json_version": "1.0.0"
  },
  "readme": "# Trello Desktop MCP\n\nA Model Context Protocol (MCP) server that provides comprehensive Trello integration for Claude Desktop. This server enables Claude to interact with Trello boards, cards, lists, and more through a secure local connection.\n\n## Features\n\n### üîç Search & Discovery\n- **Universal Search**: Search across all Trello content (boards, cards, members, organizations)\n- **User Boards**: Get all boards accessible to the current user\n- **Board Details**: Retrieve detailed information about boards including lists and cards\n\n### üìù Card Management\n- **Create Cards**: Add new cards to any list with descriptions, due dates, and assignments\n- **Update Cards**: Modify card properties like name, description, due dates, and status\n- **Move Cards**: Transfer cards between lists to update workflow status\n- **Get Card Details**: Fetch comprehensive card information including members, labels, and checklists\n\n### üí¨ Collaboration\n- **Add Comments**: Post comments on cards for team communication\n- **Member Management**: View board members and member details\n- **Activity History**: Track card actions and changes\n\n### üìã Organization\n- **List Management**: Create new lists and get cards within specific lists\n- **Labels**: View and manage board labels for categorization\n- **Checklists**: Access card checklists and checklist items\n- **Attachments**: View card attachments and linked files\n\n## Installation\n\n### Prerequisites\n- Node.js 18+ installed\n- Claude Desktop application\n- Trello account with API credentials\n\n### Setup Steps\n\n1. **Clone the repository**\n   ```bash\n   git clone https://github.com/kocakli/trello-desktop-mcp.git\n   cd trello-desktop-mcp\n   ```\n\n2. **Install dependencies**\n   ```bash\n   npm install\n   ```\n\n3. **Build the project**\n   ```bash\n   npm run build\n   ```\n\n4. **Get Trello API credentials**\n   - Visit https://trello.com/app-key\n   - Copy your API Key\n   - Generate a Token (never expires, read/write access)\n\n5. **Configure Claude Desktop**\n   \n   Edit your Claude Desktop configuration file:\n   - macOS: `~/Library/Application Support/Claude/claude_desktop_config.json`\n   - Windows: `%APPDATA%\\Claude\\claude_desktop_config.json`\n\n   Add the Trello MCP server:\n   ```json\n   {\n     \"mcpServers\": {\n       \"trello\": {\n         \"command\": \"node\",\n         \"args\": [\"/absolute/path/to/trello-desktop-mcp/dist/index.js\"],\n         \"env\": {\n           \"TRELLO_API_KEY\": \"your-api-key-here\",\n           \"TRELLO_TOKEN\": \"your-token-here\"\n         }\n       }\n     }\n   }\n   ```\n\n6. **Restart Claude Desktop**\n\n## Available Tools\n\nThe MCP server provides 19 tools organized into three phases:\n\n### Phase 1: Essential Tools\n- `trello_search` - Universal search across all Trello content\n- `trello_get_user_boards` - Get all boards accessible to the current user\n- `get_board_details` - Get detailed board information with lists and cards\n- `get_card` - Get comprehensive card details\n- `create_card` - Create new cards in any list\n\n### Phase 2: Core Operations\n- `update_card` - Update card properties\n- `move_card` - Move cards between lists\n- `trello_add_comment` - Add comments to cards\n- `trello_get_list_cards` - Get all cards in a specific list\n- `trello_create_list` - Create new lists on boards\n\n### Phase 3: Advanced Features\n- `trello_get_board_cards` - Get all cards from a board with filtering\n- `trello_get_card_actions` - Get card activity history\n- `trello_get_card_attachments` - Get card attachments\n- `trello_get_card_checklists` - Get card checklists\n- `trello_get_board_members` - Get board members\n- `trello_get_board_labels` - Get board labels\n- `trello_get_member` - Get member details\n\n### Legacy Tools (Backward Compatibility)\n- `list_boards` - List user's boards\n- `get_lists` - Get lists in a board\n\n## Usage Examples\n\nOnce configured, you can use natural language with Claude to interact with Trello:\n\n```\n\"Show me all my Trello boards\"\n\"Create a new card called 'Update documentation' in the To Do list\"\n\"Move card X from In Progress to Done\"\n\"Add a comment to card Y saying 'This is ready for review'\"\n\"Search for all cards with 'bug' in the title\"\n\"Show me all cards assigned to me\"\n```\n\n## Architecture\n\n### MCP Protocol\nThe server implements the Model Context Protocol (MCP), which provides:\n- Standardized tool discovery and invocation\n- Type-safe parameter validation\n- Structured error handling\n- Automatic credential management\n\n### Security\n- API credentials are stored locally in Claude Desktop's config\n- No credentials are transmitted over the network\n- All Trello API calls use HTTPS\n- Rate limiting is respected with automatic retry logic\n\n### Technical Stack\n- TypeScript for type safety\n- MCP SDK for protocol implementation\n- Zod for schema validation\n- Fetch API for HTTP requests\n\n## Development\n\n### Project Structure\n```\n‚îú‚îÄ‚îÄ src/\n‚îÇ   ‚îú‚îÄ‚îÄ index.ts          # Main entry point for Claude Desktop\n‚îÇ   ‚îú‚îÄ‚îÄ server.ts         # Alternative server implementation\n‚îÇ   ‚îú‚îÄ‚îÄ tools/            # Tool implementations\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ boards.ts     # Board-related tools\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ cards.ts      # Card-related tools\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ lists.ts      # List-related tools\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ members.ts    # Member-related tools\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ search.ts     # Search functionality\n‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ advanced.ts   # Advanced features\n‚îÇ   ‚îú‚îÄ‚îÄ trello/           # Trello API client\n‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ client.ts     # API client with retry logic\n‚îÇ   ‚îú‚îÄ‚îÄ types/            # TypeScript type definitions\n‚îÇ   ‚îî‚îÄ‚îÄ utils/            # Utility functions\n‚îú‚îÄ‚îÄ dist/                 # Compiled JavaScript\n‚îî‚îÄ‚îÄ package.json          # Project configuration\n```\n\n### Building from Source\n```bash\n# Install dependencies\nnpm install\n\n# Build the project\nnpm run build\n\n# Run type checking\nnpm run type-check\n```\n\n### Testing\nThe server includes comprehensive error handling and validation. Test your setup by:\n1. Checking Claude Desktop's MCP connection status\n2. Running a simple command like \"Show me my Trello boards\"\n3. Verifying the response includes your board data\n\n## Troubleshooting\n\n### Common Issues\n\n1. **\"No Trello tools available\"**\n   - Ensure Claude Desktop is fully restarted after configuration\n   - Check that the path in config points to `dist/index.js`\n   - Verify the file exists and is built\n\n2. **\"Invalid credentials\"**\n   - Double-check your API key and token\n   - Ensure token has read/write permissions\n   - Regenerate token if needed\n\n3. **\"Rate limit exceeded\"**\n   - The server includes automatic retry logic\n   - Wait a few minutes if you hit limits\n   - Consider reducing request frequency\n\n### Debug Logging\nCheck MCP logs at:\n- macOS: `~/Library/Logs/Claude/mcp-server-trello.log`\n- Windows: `%APPDATA%\\Claude\\Logs\\mcp-server-trello.log`\n\n## Contributing\n\nContributions are welcome! Please:\n1. Fork the repository\n2. Create a feature branch\n3. Add tests for new functionality\n4. Submit a pull request\n\n## License\n\nMIT License - see LICENSE file for details\n\n## Acknowledgments\n\n- Built with the [Model Context Protocol SDK](https://github.com/anthropics/mcp)\n- Uses the [Trello REST API](https://developer.atlassian.com/cloud/trello/rest/)\n- Designed for [Claude Desktop](https://claude.ai/download)\n"
}