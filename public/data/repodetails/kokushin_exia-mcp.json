{
  "mcp_name": "kokushin/exia-mcp",
  "mcp_description": "Generates and displays scenario files for the exia visual novel engine in the Kotoha Sisters explanation format.",
  "mcp_id": "kokushin_exia-mcp",
  "fetch_timestamp": "2025-06-23T05:51:40.587042Z",
  "github_url": "https://github.com/kokushin/exia-mcp",
  "repository": {
    "name": "exia-mcp",
    "full_name": "kokushin/exia-mcp",
    "description": "解説シナリオを自動生成するMCPサーバ",
    "html_url": "https://github.com/kokushin/exia-mcp",
    "created_at": "2025-04-25T10:18:14Z",
    "updated_at": "2025-04-27T21:20:40Z",
    "pushed_at": "2025-04-26T16:47:01Z",
    "size": 84,
    "stargazers_count": 9,
    "watchers_count": 9,
    "forks_count": 1,
    "open_issues_count": 1,
    "language": "TypeScript",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "kokushin",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/4176300?v=4",
      "html_url": "https://github.com/kokushin"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 1,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 19738,
      "JavaScript": 696
    },
    "language_percentages": {
      "TypeScript": 96.59,
      "JavaScript": 3.41
    },
    "pull_requests_count": 1,
    "contributors_count": 1,
    "package_json_version": "1.0.0"
  },
  "readme": "# exia-scenario-generator MCP Server\n\n[exia](https://github.com/kokushin/exia) というノベルゲームエンジン向けのシナリオファイルを作成する MCP サーバです。  \n「琴葉姉妹解説」形式のシナリオを生成し、exia で表示します。\n\n<img width=\"800\" alt=\"\" src=\"https://github.com/user-attachments/assets/f02cc41a-6456-44d3-bb22-190cb899515d\" />\n\n## 機能\n\n- 指定されたお題について「琴葉姉妹解説」形式のシナリオを生成\n- 生成したシナリオを exia 用の JSON 形式に変換\n- exia を GitHub からダウンロードしてセットアップ\n- 生成したシナリオを exia で表示\n\n## 必要条件\n\n- Node.js v20.x 以上\n- OpenAI API キー\n- Git\n\n## セットアップ\n\n1. リポジトリをクローンまたはダウンロード\n\n```bash\ngit clone https://github.com/kokushin/exia-mcp.git\ncd exia-mcp\n```\n\n2. 必要なパッケージをインストール\n\n```bash\nnpm install\n```\n\n3. TypeScript のコンパイル (変更を加えたら実行してください)\n\n```bash\nnpm run build\n```\n\n## Claude Desktop での利用方法\n\n1. Claude Desktop を起動\n\n2. 設定画面を開き、MCP サーバを追加\n\n```json\n{\n  \"mcpServers\": {\n    \"exia-scenario-generator\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"/path/to/exia-mcp\", //（clone した exia-mcp のパスに置き換えてください）\n        \"--openai-api-key=YOUR_API_KEY\", //（OpenAI API キーに置き換えてください）\n        \"--stdio\"\n      ]\n    }\n  }\n}\n```\n\n- ※ `YOUR_API_KEY` は実際の OpenAI API キーに置き換えてください\n- ※ `npx` が実行できない場合は絶対パスで指定してください `例: /path/to/.volta/bin/npx`\n\n3. Claude Desktop で以下のように使用\n   - 「exia で量子コンピュータについて解説して」と入力\n   - MCP サーバが起動し、シナリオを生成して exia を起動\n   - exia アプリケーション（Electron）が別ウィンドウで起動し、シナリオをプレイ\n\n## 利用可能なツール\n\n- `generateScenario`: お題からシナリオを生成\n- `setupExia`: exia をダウンロードしてセットアップ\n- `saveScenario`: 生成したシナリオを保存\n- `exiaVoiceroidExplain`: シナリオ生成から exia 起動までを一括実行（推奨）\n\n## 注意事項\n\n- 初回実行時は exia のダウンロードとセットアップに時間がかかります\n- キャラクター画像は自前で用意して手動で差し替える必要があります\n  - exia のドキュメントは[こちら](https://github.com/kokushin/exia?tab=readme-ov-file#%E7%94%BB%E5%83%8F%E3%82%84%E3%82%B7%E3%83%8A%E3%83%AA%E3%82%AA%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%97%E3%81%9F%E3%81%84%E5%A0%B4%E5%90%88)\n- OpenAI API の利用には料金がかかる場合があります\n\n## ライセンス\n\nMIT\n"
}