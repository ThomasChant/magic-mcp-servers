{
  "mcp_name": "Moonlight-CL/redshift-mcp-server",
  "mcp_description": "Facilitates AI assistant interactions with Amazon Redshift databases through a Python-based MCP server.",
  "mcp_id": "Moonlight-CL_redshift-mcp-server",
  "fetch_timestamp": "2025-06-23T06:52:56.680523Z",
  "github_url": "https://github.com/Moonlight-CL/redshift-mcp-server",
  "repository": {
    "name": "redshift-mcp-server",
    "full_name": "Moonlight-CL/redshift-mcp-server",
    "description": null,
    "html_url": "https://github.com/Moonlight-CL/redshift-mcp-server",
    "created_at": "2025-04-24T00:09:19Z",
    "updated_at": "2025-05-18T09:02:50Z",
    "pushed_at": "2025-05-18T09:02:46Z",
    "size": 26,
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks_count": 2,
    "open_issues_count": 1,
    "language": "Python",
    "license": "Apache License 2.0",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "Moonlight-CL",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/131578653?v=4",
      "html_url": "https://github.com/Moonlight-CL"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 2,
    "subscribers_count": 1,
    "languages": {
      "Python": 9480
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 1,
    "contributors_count": 1
  },
  "readme": "# Redshift MCP Server\n\nA Model Context Protocol (MCP) server for Amazon Redshift that enables AI assistants to interact with Redshift databases.\n\n## Introduction\n\nRedshift MCP Server is a Python-based implementation of the [Model Context Protocol](https://github.com/modelcontextprotocol/mcp) that provides tools and resources for interacting with Amazon Redshift databases. It allows AI assistants to:\n\n- List schemas and tables in a Redshift database\n- Retrieve table DDL (Data Definition Language) scripts\n- Get table statistics\n- Execute SQL queries\n- Analyze tables to collect statistics information\n- Get execution plans for SQL queries\n\n## Installation\n\n### Prerequisites\n\n- Python 3.13 or higher\n- Amazon Redshift cluster\n- Redshift credentials (host, port, username, password, database)\n\n### Install from source\n\n```bash\n# Clone the repository\ngit clone https://github.com/Moonlight-CL/redshift-mcp-server.git\ncd redshift-mcp-server\n\n# Install dependencies\nuv sync\n```\n\n## Configuration\n\nThe server requires the following environment variables to connect to your Redshift cluster:\n\n```\nRS_HOST=your-redshift-cluster.region.redshift.amazonaws.com\nRS_PORT=5439\nRS_USER=your_username\nRS_PASSWORD=your_password\nRS_DATABASE=your_database\nRS_SCHEMA=your_schema  # Optional, defaults to \"public\"\n```\n\nYou can set these environment variables directly or use a `.env` file.\n\n## Usage\n\n### Starting the server\n\n```bash\n# Start the server\nuv run --with mcp python-dotenv redshift-connector mcp\nmcp run src/redshift_mcp_server/server.py\n```\n\n### Integrating with AI assistants\n\nTo use this server with an AI assistant that supports MCP, add the following configuration to your MCP settings:\n\n```json\n{\n  \"mcpServers\": {\n    \"redshift\": {\n      \"command\": \"uv\",\n      \"args\": [\"--directory\", \"src/redshift_mcp_server\", \"run\", \"server.py\"],\n      \"env\": {\n        \"RS_HOST\": \"your-redshift-cluster.region.redshift.amazonaws.com\",\n        \"RS_PORT\": \"5439\",\n        \"RS_USER\": \"your_username\",\n        \"RS_PASSWORD\": \"your_password\",\n        \"RS_DATABASE\": \"your_database\",\n        \"RS_SCHEMA\": \"your_schema\"\n      }\n    }\n  }\n}\n```\n\n## Features\n\n### Resources\n\nThe server provides the following resources:\n\n- `rs:///schemas` - Lists all schemas in the database\n- `rs:///{schema}/tables` - Lists all tables in a specific schema\n- `rs:///{schema}/{table}/ddl` - Gets the DDL script for a specific table\n- `rs:///{schema}/{table}/statistic` - Gets statistics for a specific table\n\n### Tools\n\nThe server provides the following tools:\n\n- `execute_sql` - Executes a SQL query on the Redshift cluster\n- `analyze_table` - Analyzes a table to collect statistics information\n- `get_execution_plan` - Gets the execution plan with runtime statistics for a SQL query\n\n## Examples\n\n### Listing schemas\n\n```\naccess_mcp_resource(\"redshift-mcp-server\", \"rs:///schemas\")\n```\n\n### Listing tables in a schema\n\n```\naccess_mcp_resource(\"redshift-mcp-server\", \"rs:///public/tables\")\n```\n\n### Getting table DDL\n\n```\naccess_mcp_resource(\"redshift-mcp-server\", \"rs:///public/users/ddl\")\n```\n\n### Executing SQL\n\n```\nuse_mcp_tool(\"redshift-mcp-server\", \"execute_sql\", {\"sql\": \"SELECT * FROM public.users LIMIT 10\"})\n```\n\n### Analyzing a table\n\n```\nuse_mcp_tool(\"redshift-mcp-server\", \"analyze_table\", {\"schema\": \"public\", \"table\": \"users\"})\n```\n\n### Getting execution plan\n\n```\nuse_mcp_tool(\"redshift-mcp-server\", \"get_execution_plan\", {\"sql\": \"SELECT * FROM public.users WHERE user_id = 123\"})\n```\n\n## Development\n\n### Project structure\n\n```\nredshift-mcp-server/\n├── src/\n│   └── redshift_mcp_server/\n│       ├── __init__.py\n│       └── server.py\n├── pyproject.toml\n└── README.md\n```\n\n### Dependencies\n\n- `mcp[cli]>=1.5.0` - Model Context Protocol SDK\n- `python-dotenv>=1.1.0` - For loading environment variables from .env files\n- `redshift-connector>=2.1.5` - Python connector for Amazon Redshift\n"
}