{
  "mcp_name": "gopalcnepal/mcp-wordpress",
  "mcp_description": "Facilitates interaction with WordPress sites by fetching posts, pages, and categories using the REST API.",
  "mcp_id": "gopalcnepal_mcp-wordpress",
  "fetch_timestamp": "2025-06-23T04:11:52.095893Z",
  "github_url": "https://github.com/gopalcnepal/mcp-wordpress",
  "repository": {
    "name": "mcp-wordpress",
    "full_name": "gopalcnepal/mcp-wordpress",
    "description": "A Model Context Protocol (MCP) server for interacting with WordPress sites. This server provides tools to fetch posts, pages, categories, and site information from any WordPress installation with REST API enabled.",
    "html_url": "https://github.com/gopalcnepal/mcp-wordpress",
    "created_at": "2025-04-10T08:28:24Z",
    "updated_at": "2025-05-05T13:18:01Z",
    "pushed_at": "2025-04-10T08:35:27Z",
    "size": 13,
    "stargazers_count": 3,
    "watchers_count": 3,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "master",
    "owner": {
      "login": "gopalcnepal",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/16029928?v=4",
      "html_url": "https://github.com/gopalcnepal"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "Python": 6200
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 1
  },
  "readme": "# WordPress MCP Server\n\nA Model Context Protocol (MCP) server for interacting with WordPress sites. This server provides tools to fetch posts, pages, categories, and site information from any WordPress installation with REST API enabled.\n\n## Prerequisites\n\n- Python 3.13 \n- WordPress site with REST API enabled\n- UV package installer (recommended)\n\n## Installation\n\n1. Install UV (Universal Virtualenv):\n```bash\ncurl -LsSf https://astral.sh/uv/install.sh | sh\n```\n\n2. Clone the repository:\n```bash\ngit clone <repository-url>\ncd wordpress\n```\n\n3. Create and activate a virtual environment:\n```bash\nuv venv\nsource .venv/bin/activate  # On Windows, use `.venv\\Scripts\\activate`\n```\n\n4. Install dependencies using UV:\n```bash\nuv add \"mcp[cli]\" httpx\n```\n\n## Configuration\n\n1. Create a `.env` file in the project root:\n```bash\nWORDPRESS_URL=\"https://your-wordpress-site.com\"\n```\n\n## Usage\n\nUsing Claude for Desktop:\n   - First, start the server:\n   ```bash\n   uv run main.py\n   ```\n   - In Claude for Desktop, go to Settings > Developer\n   - Click \"Edit Config\"\n   - Alternative Edit config approach using VSCode in Mac/Windows:\n       ```\n       # For Mac Users\n       code ~/Library/Application\\ Support/Claude/claude_desktop_config.json\n    \n       # For Windows Users\n       code $env:AppData\\Claude\\claude_desktop_config.json\n       ```\n   - Add the file to config:\n   \n    {\n        \"mcpServers\": {\n            \"weather\": {\n                \"command\": \"uv\",\n                \"args\": [\n                    \"--directory\",\n                    \"/ABSOLUTE/PATH/TO/PARENT/FOLDER/wordpress\",\n                    \"run\",\n                    \"main.py\"\n                ]\n            }\n        }\n    }\n\nThe server provides these testable tools:\n- `fetch_wordpress_info`: Get basic site information\n- `fetch_posts`: Get recent posts\n- `fetch_categories`: List all categories\n- `fetch_posts_by_category`: Get posts in a specific category\n- `fetch_pages`: Get site pages\n- `fetch_post_by_id`: Get a specific post\n- `fetch_page_by_id`: Get a specific page\n\n## Error Handling\n\nThe server includes robust error handling for:\n- Invalid JSON responses\n- Network errors\n- WordPress API errors\n- Invalid URLs\n- API authentication issues\n"
}