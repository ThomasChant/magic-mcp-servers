{
  "mcp_name": "BrowserStack",
  "mcp_description": "",
  "mcp_id": "browserstack_mcp-server",
  "fetch_timestamp": "2025-06-23T01:48:27.457159Z",
  "github_url": "https://github.com/browserstack/mcp-server",
  "repository": {
    "name": "mcp-server",
    "full_name": "browserstack/mcp-server",
    "description": "BrowserStack's Official MCP Server",
    "html_url": "https://github.com/browserstack/mcp-server",
    "created_at": "2025-04-17T09:14:44Z",
    "updated_at": "2025-06-22T08:20:03Z",
    "pushed_at": "2025-06-16T06:28:47Z",
    "size": 1346,
    "stargazers_count": 67,
    "watchers_count": 67,
    "forks_count": 14,
    "open_issues_count": 13,
    "language": "TypeScript",
    "license": "GNU Affero General Public License v3.0",
    "topics": [
      "accessibility",
      "automation",
      "browserstack",
      "mcp-server",
      "quality-assurance",
      "testing"
    ],
    "default_branch": "main",
    "owner": {
      "login": "browserstack",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/1119453?v=4",
      "html_url": "https://github.com/browserstack"
    },
    "has_issues": true,
    "has_projects": false,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 14,
    "subscribers_count": 2,
    "languages": {
      "TypeScript": 218259,
      "Shell": 7993,
      "JavaScript": 2195,
      "Dockerfile": 637
    },
    "language_percentages": {
      "TypeScript": 95.27,
      "Shell": 3.49,
      "JavaScript": 0.96,
      "Dockerfile": 0.28
    },
    "pull_requests_count": 67,
    "contributors_count": 10,
    "latest_release": {
      "tag_name": "v1.1.7",
      "name": "v1.1.7",
      "published_at": "2025-06-16T06:28:51Z",
      "body": "### Added\n- [#72](https://github.com/browserstack/mcp-server/pull/72) chore: bump version to 1.1.7\n- [#70](https://github.com/browserstack/mcp-server/pull/70) feat: integrate browserstackLocalOptions into local binary setup\n- [#58](https://github.com/browserstack/mcp-server/pull/58) feat : add sdk support for Java + Testng  + Cucumber\n\n### Fixed\n- [#71](https://github.com/browserstack/mcp-server/pull/71) fix: handle existing scan name error and improve WebDriver Init\n- [#66](https://github.com/browserstack/mcp-server/pull/66) fix: correct condition check for exact device matches in findDeviceByName function\n\n\nPublished by Vishalan",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v1.1.7",
        "commit_sha": "221c6ec348bf106d2b5e7a55e29d04f208966f6b"
      },
      {
        "name": "v1.1.6",
        "commit_sha": "a8568d421acff87bc9c4d575431f2f632afb5593"
      },
      {
        "name": "v1.1.5",
        "commit_sha": "b3707602038230f54b19b2b81d9928ace5680af3"
      },
      {
        "name": "v1.1.4",
        "commit_sha": "301f4b066a54028865d8ae1a81aeeb5b137fab0e"
      },
      {
        "name": "v1.1.3",
        "commit_sha": "a237b3d08f20e902372c237485951e6f45041ebc"
      },
      {
        "name": "v1.1.2",
        "commit_sha": "8a960b749285c1852c47c59e0d432c9c169b54d9"
      },
      {
        "name": "v1.1.1",
        "commit_sha": "fc3af0554b78570da5eb0435824e87e50ed79620"
      },
      {
        "name": "v1.1.0",
        "commit_sha": "10ee4393f00fa2c4a55f7fcf19879eb6f13324d8"
      },
      {
        "name": "v1.0.15",
        "commit_sha": "f0b4a14ea7df1f26de1e98f6ac74dd9db5bf8c2f"
      },
      {
        "name": "v1.0.14",
        "commit_sha": "6dd14f2e8f5a5661e15f6d294de39260429eea1a"
      }
    ],
    "latest_version": "v1.1.7",
    "package_json_version": "1.1.7"
  },
  "readme": "# BrowserStack MCP Server\n\n<div align=\"center\">\n<img src=\"assets/browserstack-logo.png\" alt=\"BrowserStack Logo\" height=\"100\"> <img src=\"assets/mcp-logo.png\" alt=\"MCP Server Logo\" width=\"100\">\n</div>\n\n\n<div align=\"center\">\n<a href=\"https://www.npmjs.com/package/@browserstack/mcp-server\">\n<img alt=\"NPM Version\" src=\"https://img.shields.io/npm/v/%40browserstack%2Fmcp-server\">\n</a>\n\n</div>\n\n<p align=\"center\">One Platform For All Your Testing Needs</p>\n\n<div align=\"center\">\n<a href=\"https://glama.ai/mcp/servers/@browserstack/mcp-server\">\n  <img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/@browserstack/mcp-server/badge\" alt=\"BrowserStack server MCP server\" />\n</a>\n</div>\n\n<div>\n    <a href=\"https://www.youtube.com/watch?v=sLA7K9v7qZc\">\n      <img src=\"assets/thumbnail.webp\">\n    </a>\n  </div>\n  \nEnable every developer and tester in your team, whether they are testing manually, starting their automation journey, or scaling test automation.\nBrowserStack MCP Server allows you to use our cutting-edge [Test Platform](https://www.browserstack.com/test-platform) directly from your favourite AI tools.\n\n### Why BrowserStack ?\n\n<p align=\"center\">\n  <img src=\"assets/overview.png\" alt=\"overview\">\n</p>\n\n## üí° Usage Examples\n\n### üì± Manual App Testing\n\nUse the following prompts to use your **mobile apps** on BrowserStack's extensive cloud of real devices. Stop using emulators!\n\n```bash\n# Open app on specific device\n\"open my app on a iPhone 15 Pro Max\"\n\n# Debug app crashes\n\"My app crashed on Android 14 device, can you help me debug?\"\n```\n\n\n- Unlike emulators, test your app's real-world performance on actual devices. With advanced [App-Profiling features](https://www.browserstack.com/docs/app-live/app-performance-testing), you can debug crashes and performance issues in real-time.\n- Access all major devices and OS versions from our [device grid](https://www.browserstack.com/list-of-browsers-and-platforms/app_live), We have strict SLAs to provision our global datacenters with newly released devices on [launch day](https://www.browserstack.com/blog/browserstack-launches-iphone-15-on-day-0-behind-the-scenes/).\n\n### üåê Manual Web Testing\n\nSimilar to the app testing, you can use the following prompts to test your **websites** on BrowserStack's extensive cloud of real browsers and devices. Don't have Edge browser installed on your machine ? We've got you covered!\n\n```bash\n# Test your local websites\n\"open my website hosted on localhost:3001 on Edge\"\n```\n\n- Test websites across different browsers and devices. We support [every major browser](https://www.browserstack.com/list-of-browsers-and-platforms/live) across every major OS.\n- Seamlessly test websites hosted locally on your machine, no need to deploy to a remote server!\n\n### üß™ Automated Testing (Playwright, Selenium, A11y and more..)\n\nUse the following prompts to run/debug/fix your **automated tests** on BrowserStack's [Test Platform](https://www.browserstack.com/test-platform).\n\n```bash\n# Port test suite to BrowserStack\n\"run my test suite on BrowserStack infra\"\n\n# Debug test failures\n\"My test suite failed, can you help me fix the new failures?\"\n\n# Accessibility testing\n\"check for accessibility issues on my www.mywebsite.com\"\n```\n\n- Fix test failures reported by your CI/CD pipeline by utilising our industry leading [Test Observability](https://www.browserstack.com/docs/test-observability) features. Find more info [here](https://www.browserstack.com/docs/test-observability/features/smart-tags).\n- Run tests written in Jest, Playwright, Selenium, and more on BrowserStack's [Test Platform](https://www.browserstack.com/test-platform)\n- **Accessibility Testing**: Ensure WCAG and ADA compliance with our [Accessibility Testing](https://www.browserstack.com/accessibility-testing) tool\n\n\n### üìã Test Management \n\nUse the following prompts to utilise capabilities of BrowserStack's [Test Management](https://www.browserstack.com/test-management) with MCP server.\n\n```bash\n# Create project & folder structure\n\"create new Test management project named My Demo Project with two sub folders - Login & Checkout\"\n\n# Add test cases\n\"add invalid login test case in Test Management project named My Demo Project\"\n\n# List added test cases \n\"list high priority Login test cases from Test Management project - My Demo Project\"\n\n# Create test run\n\"create a test run for Login tests from Test Management project - My Demo Project\"\n\n# Update test results\n\"update test results as passed for Login tests test run from My Demo Project\"\n```\n\n## üõ†Ô∏è Installation\n\n1. **Create a BrowserStack Account**\n\n   - Sign up for [BrowserStack](https://www.browserstack.com/users/sign_up) if you don't have an account already.\n\n   - ‚ÑπÔ∏è If you have an open-source project, we'll be able to provide you with a [free plan](https://www.browserstack.com/open-source).\n   <div align=\"center\">\n   <img src=\"assets/open-source-plan.png\" alt=\"Open Source Plan\">\n   </div>\n\n   - Once you have an account (and purchased appropriate plan), note down your `username` and `access_key` from [Account Settings](https://www.browserstack.com/accounts/profile/details).\n\n2. Ensure you are using Node version >= `18.0`. Check your node version using `node --version`. Recommended version: `v22.15.0` (LTS)\n3. **Install the MCP Server**\n\n   - VSCode (Copilot - Agent Mode): `.vscode/mcp.json`:\n\n   ```json\n   {\n     \"servers\": {\n       \"browserstack\": {\n         \"command\": \"npx\",\n         \"args\": [\"-y\", \"@browserstack/mcp-server@latest\"],\n         \"env\": {\n           \"BROWSERSTACK_USERNAME\": \"<username>\",\n           \"BROWSERSTACK_ACCESS_KEY\": \"<access_key>\"\n         }\n       }\n     }\n   }\n   ```\n\n   - In VSCode, make sure to click on `Start` button in the MCP Server to start the server.\n     ![Start MCP Server](assets/vscode_install.png)\n\n   * For Cursor: `.cursor/mcp.json`:\n\n   ```json\n   {\n     \"mcpServers\": {\n       \"browserstack\": {\n         \"command\": \"npx\",\n         \"args\": [\"-y\", \"@browserstack/mcp-server@latest\"],\n         \"env\": {\n           \"BROWSERSTACK_USERNAME\": \"<username>\",\n           \"BROWSERSTACK_ACCESS_KEY\": \"<access_key>\"\n         }\n       }\n     }\n   }\n   ```\n\n   - Claude Desktop: `~/claude_desktop_config.json`:\n\n   ```json\n   {\n     \"mcpServers\": {\n       \"browserstack\": {\n         \"command\": \"npx\",\n         \"args\": [\"-y\", \"@browserstack/mcp-server@latest\"],\n         \"env\": {\n           \"BROWSERSTACK_USERNAME\": \"<username>\",\n           \"BROWSERSTACK_ACCESS_KEY\": \"<access_key>\"\n         }\n       }\n     }\n   }\n   ```\n\n### Installing via Smithery\n\nTo install BrowserStack Test Platform Server for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@browserstack/mcp-server):\n\n```bash\nnpx -y @smithery/cli install @browserstack/mcp-server --client claude\n```\n\n## ü§ù Recommended MCP Clients\n\n- We recommend using **Github Copilot or Cursor** for automated testing + debugging use cases.\n- For manual testing use cases (Live Testing), we recommend using **Claude Desktop**.\n\n## ‚ö†Ô∏è Important Notes\n\n- The BrowserStack MCP Server is under active development and currently supports a subset of the MCP spec. More features will be added soon.\n- Tool invocations rely on the MCP Client which in turn relies on an LLM, hence there can be some non-deterministic behaviour that can lead to unexpected results. If you have any suggestions or feedback, please open an issue to discuss.\n\n## üìù Contributing\n\nWe welcome contributions! Please open an issue to discuss any changes you'd like to make.\nüëâ [**Click here to view our Contributing Guidelines**](https://github.com/browserstack/mcp-server/blob/main/CONTRIBUTING.md)\n\n## üìû Support\n\nFor support, please:\n\n- Check our [documentation](https://www.browserstack.com/docs)\n- Open an issue in our [GitHub repository](https://github.com/browserstack/mcp-server) if you face any issues related to the MCP Server.\n- Contact our [support team](https://www.browserstack.com/contact) for any other queries.\n\n## üöÄ More Features Coming Soon\n\nStay tuned for exciting updates! Have any suggestions? Please open an issue to discuss.\n\n## üîó Resources\n\n- [BrowserStack Test Platform](https://www.browserstack.com/test-platform)\n- [MCP Protocol Documentation](https://modelcontextprotocol.io)\n- [Device Grid](https://www.browserstack.com/list-of-browsers-and-platforms/app_live)\n- [Accessibility Testing](https://www.browserstack.com/accessibility-testing)\n"
}