{
  "mcp_name": "sugarforever/amap-mcp-server",
  "mcp_description": "Facilitates geocoding, location services, and route planning using Amap's API for various transportation modes.",
  "mcp_id": "sugarforever_amap-mcp-server",
  "fetch_timestamp": "2025-06-23T08:42:23.956920Z",
  "github_url": "https://github.com/sugarforever/amap-mcp-server",
  "repository": {
    "name": "amap-mcp-server",
    "full_name": "sugarforever/amap-mcp-server",
    "description": "高德地图MCP Server，支持stdio, sse和streamable-http",
    "html_url": "https://github.com/sugarforever/amap-mcp-server",
    "created_at": "2025-04-19T19:05:52Z",
    "updated_at": "2025-06-20T06:13:18Z",
    "pushed_at": "2025-05-26T23:15:33Z",
    "size": 103,
    "stargazers_count": 40,
    "watchers_count": 40,
    "forks_count": 7,
    "open_issues_count": 3,
    "language": "Python",
    "license": "MIT License",
    "topics": [
      "mcp"
    ],
    "default_branch": "main",
    "owner": {
      "login": "sugarforever",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/404421?v=4",
      "html_url": "https://github.com/sugarforever"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 7,
    "subscribers_count": 1,
    "languages": {
      "Python": 34384
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 8,
    "contributors_count": 1,
    "latest_release": {
      "tag_name": "0.1.9",
      "name": "Update user guide",
      "published_at": "2025-05-26T23:15:33Z",
      "body": "Updated the documentation for 3 transport types configuration guide.",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "0.1.9",
        "commit_sha": "478680ed9a26d914920697f7d09701bdefe28f96"
      },
      {
        "name": "0.1.8",
        "commit_sha": "e8670ab94ab0b26f600500164ba6ae6df8edd983"
      },
      {
        "name": "0.1.7",
        "commit_sha": "6e585ff71e4077f3a28af6579ce3da20683da2d4"
      },
      {
        "name": "0.1.6",
        "commit_sha": "74728313dce6bfc4c534df4c3ea6d09839a35c1f"
      },
      {
        "name": "0.1.5",
        "commit_sha": "ec47517a37a696c995d25c626244f1ece4fa5a1f"
      },
      {
        "name": "0.1.4",
        "commit_sha": "90147dc106ad9832f1c358d6715df7973493290b"
      },
      {
        "name": "0.1.3",
        "commit_sha": "6df0f2a32df720e4e8a50fc7e90e8523ca9f364d"
      },
      {
        "name": "0.1.2",
        "commit_sha": "92f0aa66b80c16161b7bda667e5e165e9d2f7b4c"
      },
      {
        "name": "0.1.1",
        "commit_sha": "d9a731415a0ccfca71c7dce074113ec642f3169f"
      }
    ],
    "latest_version": "0.1.9"
  },
  "readme": "# 高德地图 MCP Server\n\n该高德地图 MCP Server 发布在 [PyPI](https://pypi.org/project/amap-mcp-server/)。\n\n## MCP 工具列表\n\n本服务提供以下工具：\n\n### 地理编码工具\n\n#### maps_regeocode\n将一个高德经纬度坐标转换为行政区划地址信息\n\n**参数：**\n- `location`: 经纬度坐标\n\n#### maps_geo\n将详细的结构化地址转换为经纬度坐标。支持对地标性名胜景区、建筑物名称解析为经纬度坐标\n\n**参数：**\n- `address`: 结构化地址\n- `city` (可选): 指定查询的城市\n\n### 位置服务工具\n\n#### maps_ip_location\nIP 定位根据用户输入的 IP 地址，定位 IP 的所在位置\n\n**参数：**\n- `ip`: IP地址\n\n#### maps_weather\n根据城市名称或者标准adcode查询指定城市的天气\n\n**参数：**\n- `city`: 城市名称或者adcode\n\n### 路线规划工具\n\n#### 骑行路线\n##### maps_bicycling_by_coordinates\n骑行路径规划用于规划骑行通勤方案，规划时会考虑天桥、单行线、封路等情况。最大支持 500km 的骑行路线规划\n\n**参数：**\n- `origin`: 起点经纬度坐标\n- `destination`: 终点经纬度坐标\n\n##### maps_bicycling_by_address\n骑行路径规划（地址版），使用地址进行骑行路线规划，推荐优先使用此工具\n\n**参数：**\n- `origin_address`: 起点地址（例如：\"北京市朝阳区阜通东大街6号\"）\n- `destination_address`: 终点地址（例如：\"北京市海淀区上地十街10号\"）\n- `origin_city` (可选): 起点所在城市，用于提高地理编码准确性\n- `destination_city` (可选): 终点所在城市，用于提高地理编码准确性\n\n#### 步行路线\n##### maps_direction_walking_by_coordinates\n步行路径规划 API 可以根据输入起点终点经纬度坐标规划100km 以内的步行通勤方案，并且返回通勤方案的数据\n\n**参数：**\n- `origin`: 起点经纬度坐标\n- `destination`: 终点经纬度坐标\n\n##### maps_direction_walking_by_address\n步行路径规划（地址版），使用地址进行步行路线规划，推荐优先使用此工具\n\n**参数：**\n- `origin_address`: 起点地址（例如：\"北京市朝阳区阜通东大街6号\"）\n- `destination_address`: 终点地址（例如：\"北京市海淀区上地十街10号\"）\n- `origin_city` (可选): 起点所在城市，用于提高地理编码准确性\n- `destination_city` (可选): 终点所在城市，用于提高地理编码准确性\n\n#### 驾车路线\n##### maps_direction_driving_by_coordinates\n驾车路径规划 API 可以根据用户起终点经纬度坐标规划以小客车、轿车通勤出行的方案，并且返回通勤方案的数据\n\n**参数：**\n- `origin`: 起点经纬度坐标\n- `destination`: 终点经纬度坐标\n\n##### maps_direction_driving_by_address\n驾车路径规划（地址版），使用地址进行驾车路线规划，推荐优先使用此工具\n\n**参数：**\n- `origin_address`: 起点地址（例如：\"北京市朝阳区阜通东大街6号\"）\n- `destination_address`: 终点地址（例如：\"北京市海淀区上地十街10号\"）\n- `origin_city` (可选): 起点所在城市，用于提高地理编码准确性\n- `destination_city` (可选): 终点所在城市，用于提高地理编码准确性\n\n#### 公共交通路线\n##### maps_direction_transit_integrated_by_coordinates\n根据用户起终点经纬度坐标规划综合各类公共（火车、公交、地铁）交通方式的通勤方案，并且返回通勤方案的数据，跨城场景下必须传起点城市与终点城市\n\n**参数：**\n- `origin`: 起点经纬度坐标\n- `destination`: 终点经纬度坐标\n- `city`: 起点城市\n- `cityd`: 终点城市\n\n##### maps_direction_transit_integrated_by_address\n公共交通路径规划（地址版），使用地址进行公共交通路线规划，推荐优先使用此工具\n\n**参数：**\n- `origin_address`: 起点地址（例如：\"北京市朝阳区阜通东大街6号\"）\n- `destination_address`: 终点地址（例如：\"北京市海淀区上地十街10号\"）\n- `origin_city`: 起点所在城市（跨城交通必需）\n- `destination_city`: 终点所在城市（跨城交通必需）\n\n### 距离测量工具\n\n#### maps_distance\n测量两个经纬度坐标之间的距离,支持驾车、步行以及球面距离测量\n\n**参数：**\n- `origins`: 起点经纬度坐标\n- `destination`: 终点经纬度坐标\n- `type` (可选，默认为\"1\"): 测量类型\n\n### POI搜索工具\n\n#### maps_text_search\n关键词搜索 API 根据用户输入的关键字进行 POI 搜索，并返回相关的信息\n\n**参数：**\n- `keywords`: 搜索关键词\n- `city` (可选): 查询城市\n- `citylimit` (可选，默认为\"false\"): 是否限制城市范围内搜索\n\n#### maps_around_search\n周边搜，根据用户传入关键词以及坐标location，搜索出radius半径范围的POI\n\n**参数：**\n- `location`: 中心点经纬度坐标\n- `radius` (可选，默认为\"1000\"): 搜索半径\n- `keywords` (可选): 搜索关键词\n\n#### maps_search_detail\n查询关键词搜或者周边搜获取到的POI ID的详细信息\n\n**参数：**\n- `id`: POI ID\n\n## 配置方法\n\n要使用此服务，您需要在应用中添加以下MCP配置。服务支持三种传输方式：`stdio`（默认）、`sse` 和 `streamable-http`。\n\n### stdio 传输（默认）\n\n直接在客户端配置如下MCP Server即可。\n\n```json\n{\n    \"mcpServers\": {\n        \"amap-mcp-server\": {\n            \"command\": \"uvx\",\n            \"args\": [\n                \"amap-mcp-server\"\n            ],\n            \"env\": {\n                \"AMAP_MAPS_API_KEY\": \"your valid amap maps api key\"\n            }\n        }\n    }\n}\n```\n\n### SSE 传输\n\nSSE传输支持实时数据推送，适合远程部署MCP Server。\n\n本地以SSE运行 `amap-mcp-server`：\n\n```bash\n$ export AMAP_MAPS_API_KEY=你的有效API Key\n$ uvx amap-mcp-server sse\n\nINFO:     Started server process [50125]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\nINFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)\n```\n\nMCP客户端配置：\n\n```json\n{\n    \"mcpServers\": {\n        \"amap-mcp-server\": {\n            \"url\": \"http://0.0.0.0:8000/sse\"\n        }\n    }\n}\n```\n\n### Streamable HTTP 传输\n\n本地以Streamable HTTP运行 `amap-mcp-server`：\n\n```bash\n$ export AMAP_MAPS_API_KEY=你的有效API Key\n$ uvx amap-mcp-server streamable-http\n\nINFO:     Started server process [50227]\nINFO:     Waiting for application startup.\nStreamableHTTP session manager started\nINFO:     Application startup complete.\nINFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)\n```\n\nMCP客户端配置：\n\n```json\n{\n    \"mcpServers\": {\n        \"amap-mcp-server\": {\n            \"url\": \"http://localhost:8000/mcp\"\n        }\n    }\n}\n```\n\n您可以在[高德开放平台](https://lbs.amap.com/)注册并获取API密钥。"
}