{
  "mcp_name": "Aeron-cell/git-mcp-options",
  "mcp_description": "Enhances Git operations with a standardized interface for AI assistants, integrating seamlessly with the MCP ecosystem.",
  "mcp_id": "Aeron-cell_git-mcp-options",
  "fetch_timestamp": "2025-06-23T00:16:13.923949Z",
  "github_url": "https://github.com/Aeron-cell/git-mcp-options",
  "repository": {
    "name": "git-mcp-options",
    "full_name": "Aeron-cell/git-mcp-options",
    "description": null,
    "html_url": "https://github.com/Aeron-cell/git-mcp-options",
    "created_at": "2025-04-07T10:59:26Z",
    "updated_at": "2025-04-07T10:59:55Z",
    "pushed_at": "2025-04-07T10:59:51Z",
    "size": 45,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "TypeScript",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "Aeron-cell",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/194103094?v=4",
      "html_url": "https://github.com/Aeron-cell"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 192297,
      "JavaScript": 3429
    },
    "language_percentages": {
      "TypeScript": 98.25,
      "JavaScript": 1.75
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "package_json_version": "1.0.0"
  },
  "readme": "# Git MCP Server\n\nA Model Context Protocol (MCP) server that provides enhanced Git operations through a standardized interface. This server integrates with the MCP ecosystem to provide Git functionality to AI assistants.\n\n## Features\n\n- **Core Git Operations**: init, clone, status, add, commit, push, pull\n- **Branch Management**: list, create, delete, checkout\n- **Tag Operations**: list, create, delete\n- **Remote Management**: list, add, remove\n- **Stash Operations**: list, save, pop\n- **Bulk Actions**: Execute multiple Git operations in sequence\n- **GitHub Integration**: Built-in GitHub support via Personal Access Token\n- **Path Resolution**: Smart path handling with optional default path configuration\n- **Error Handling**: Comprehensive error handling with custom error types\n- **Repository Caching**: Efficient repository state management\n- **Performance Monitoring**: Built-in performance tracking\n\n## Installation\n\n1. Clone the repository:\n```bash\ngit clone https://github.com/yourusername/git-mcp-v2.git\ncd git-mcp-v2\n```\n\n2. Install dependencies:\n```bash\nnpm install\n```\n\n3. Build the project:\n```bash\nnpm run build\n```\n\n## Configuration\n\nAdd to your MCP settings file:\n\n```json\n{\n  \"mcpServers\": {\n    \"git-v2\": {\n      \"command\": \"node\",\n      \"args\": [\"path/to/git-mcp-v2/build/index.js\"],\n      \"env\": {\n        \"GIT_DEFAULT_PATH\": \"/path/to/default/git/directory\",\n        \"GITHUB_PERSONAL_ACCESS_TOKEN\": \"your-github-pat\"\n      }\n    }\n  }\n}\n```\n\n## Environment Variables\n\n- `GIT_DEFAULT_PATH`: (Optional) Default path for Git operations\n- `GITHUB_PERSONAL_ACCESS_TOKEN`: (Optional) GitHub Personal Access Token for GitHub operations\n\n## Available Tools\n\n### Basic Operations\n- `init`: Initialize a new Git repository\n- `clone`: Clone a repository\n- `status`: Get repository status\n- `add`: Stage files\n- `commit`: Create a commit\n- `push`: Push commits to remote\n- `pull`: Pull changes from remote\n\n### Branch Operations\n- `branch_list`: List all branches\n- `branch_create`: Create a new branch\n- `branch_delete`: Delete a branch\n- `checkout`: Switch branches or restore working tree files\n\n### Tag Operations\n- `tag_list`: List tags\n- `tag_create`: Create a tag\n- `tag_delete`: Delete a tag\n\n### Remote Operations\n- `remote_list`: List remotes\n- `remote_add`: Add a remote\n- `remote_remove`: Remove a remote\n\n### Stash Operations\n- `stash_list`: List stashes\n- `stash_save`: Save changes to stash\n- `stash_pop`: Apply and remove a stash\n\n### Bulk Operations\n- `bulk_action`: Execute multiple Git operations in sequence\n\n## Development\n\n```bash\n# Run tests\nnpm test\n\n# Run tests with coverage\nnpm run test:coverage\n\n# Run linter\nnpm run lint\n\n# Format code\nnpm run format\n```\n\n## License\n\nMIT\n\n## Contributing\n\n1. Fork the repository\n2. Create your feature branch (`git checkout -b feature/amazing-feature`)\n3. Commit your changes (`git commit -m 'Add some amazing feature'`)\n4. Push to the branch (`git push origin feature/amazing-feature`)\n5. Open a Pull Request\n"
}