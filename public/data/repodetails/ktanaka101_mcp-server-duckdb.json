{
  "mcp_name": "DuckDB",
  "mcp_description": "üêç üè† - DuckDB database integration with schema inspection and query capabilities",
  "mcp_id": "ktanaka101_mcp-server-duckdb",
  "fetch_timestamp": "2025-06-23T02:44:10.044908Z",
  "github_url": "https://github.com/ktanaka101/mcp-server-duckdb",
  "repository": {
    "name": "mcp-server-duckdb",
    "full_name": "ktanaka101/mcp-server-duckdb",
    "description": "A Model Context Protocol (MCP) server implementation for DuckDB, providing database interaction capabilities",
    "html_url": "https://github.com/ktanaka101/mcp-server-duckdb",
    "created_at": "2024-11-30T14:25:37Z",
    "updated_at": "2025-06-20T22:50:45Z",
    "pushed_at": "2025-05-05T11:02:57Z",
    "size": 73,
    "stargazers_count": 120,
    "watchers_count": 120,
    "forks_count": 14,
    "open_issues_count": 2,
    "language": "Python",
    "license": "MIT License",
    "topics": [
      "duckdb",
      "mcp",
      "mcp-server"
    ],
    "default_branch": "main",
    "owner": {
      "login": "ktanaka101",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/10344925?v=4",
      "html_url": "https://github.com/ktanaka101"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 14,
    "subscribers_count": 4,
    "languages": {
      "Python": 14382
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 19,
    "contributors_count": 4,
    "latest_release": {
      "tag_name": "v1.1.0",
      "name": "v1.1.0",
      "published_at": "2025-05-05T11:00:02Z",
      "body": "## What's Changed\r\n* **Add `--keep-connection` option** ‚Äì keeps a persistent DuckDB connection so `TEMP` tables and `TEMP MACRO` objects survive across queries by @risyou in https://github.com/ktanaka101/mcp-server-duckdb/pull/24\r\n\r\n## New Contributors\r\n* @risyou made their first contribution in https://github.com/ktanaka101/mcp-server-duckdb/pull/24\r\n\r\n**Full Changelog**: https://github.com/ktanaka101/mcp-server-duckdb/compare/v1.0.1...v1.1.0",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v1.1.0",
        "commit_sha": "2cc7c29e22b5300e310ba38f86a1105c0dd7ff6d"
      },
      {
        "name": "v1.0.1",
        "commit_sha": "4fa9df0422658392717b90391f2b488206f2acff"
      },
      {
        "name": "v1.0.0",
        "commit_sha": "05b46f65143afc7042435a3baa65e1b8a8c8da4a"
      },
      {
        "name": "v0.2.4",
        "commit_sha": "82c9a580672c5f5c3a939a317d6f3489a0ea2f5c"
      },
      {
        "name": "v0.2.3",
        "commit_sha": "327f14e8b097ab49a80046eb270643945b7d8f32"
      },
      {
        "name": "v0.2.2",
        "commit_sha": "ef84037e98ac98e97052a783f34085feb6b019c7"
      },
      {
        "name": "v0.2.1",
        "commit_sha": "1934112dac76b86f03552f143f3912144939b0a0"
      },
      {
        "name": "v0.2.0",
        "commit_sha": "efde9caa740363cd35cbedc4e98df55b77f9f10c"
      },
      {
        "name": "v0.1.0",
        "commit_sha": "a67d2e154e63d098554a951c76173788c580c11b"
      }
    ],
    "latest_version": "v1.1.0"
  },
  "readme": "# mcp-server-duckdb\n\n[![PyPI - Version](https://img.shields.io/pypi/v/mcp-server-duckdb)](https://pypi.org/project/mcp-server-duckdb/)\n[![PyPI - License](https://img.shields.io/pypi/l/mcp-server-duckdb)](LICENSE)\n[![smithery badge](https://smithery.ai/badge/mcp-server-duckdb)](https://smithery.ai/server/mcp-server-duckdb)\n\nA Model Context Protocol (MCP) server implementation for DuckDB, providing database interaction capabilities through MCP tools.\nIt would be interesting to have LLM analyze it. DuckDB is suitable for local analysis.\n\n<a href=\"https://glama.ai/mcp/servers/fwggl49w22\"><img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/fwggl49w22/badge\" alt=\"mcp-server-duckdb MCP server\" /></a>\n\n## Overview\n\nThis server enables interaction with a DuckDB database through the Model Context Protocol, allowing for database operations like querying, table creation, and schema inspection.\n\n## Components\n\n### Resources\n\nCurrently, no custom resources are implemented.\n\n### Prompts\n\nCurrently, no custom prompts are implemented.\n\n### Tools\n\nThe server implements the following database interaction tool:\n\n- **query**: Execute any SQL query on the DuckDB database\n  - **Input**: `query` (string) - Any valid DuckDB SQL statement\n  - **Output**: Query results as text (or success message for operations like CREATE/INSERT)\n\n> [!NOTE]\n> The server provides a single unified `query` function rather than separate specialized functions, as modern LLMs can generate appropriate SQL for any database operation (SELECT, CREATE TABLE, JOIN, etc.) without requiring separate endpoints.\n\n> [!NOTE]\n> When the server is running in `readonly` mode, DuckDB's native readonly protection is enforced.\n> This ensures that the Language Model (LLM) cannot perform any write operations (CREATE, INSERT, UPDATE, DELETE), maintaining data integrity and preventing unintended changes.\n\n## Configuration\n\n### Required Parameters\n\n- **db-path** (string): Path to the DuckDB database file\n  - The server will automatically create the database file and parent directories if they don't exist\n  - If `--readonly` is specified and the database file doesn't exist, the server will fail to start with an error\n\n### Optional Parameters\n\n- **--readonly**: Run server in read-only mode (default: `false`)\n  - **Description**: When this flag is set, the server operates in read-only mode. This means:\n    - The DuckDB database will be opened with `read_only=True`, preventing any write operations.\n    - If the specified database file does not exist, it **will not** be created.\n    - **Security Benefit**: Prevents the Language Model (LLM) from performing any write operations, ensuring that the database remains unaltered.\n  - **Reference**: For more details on read-only connections in DuckDB, see the [DuckDB Python API documentation](https://duckdb.org/docs/api/python/dbapi.html#read_only-connections).\n- **--keep-connection**: Re-uses a single DuckDB connection mode (default: `false`)\n  - **Description**: When this flag is set, Re-uses a single DuckDB connection for the entire server lifetime. Enables TEMP objects & slightly faster queries, but can hold an exclusive lock on the file.\n\n## Installation\n\n### Installing via Smithery\n\nTo install DuckDB Server for Claude Desktop automatically via [Smithery](https://smithery.ai/server/mcp-server-duckdb):\n\n```bash\nnpx -y @smithery/cli install mcp-server-duckdb --client claude\n```\n\n### Claude Desktop Integration\n\nConfigure the MCP server in Claude Desktop's configuration file:\n\n#### MacOS\nLocation: `~/Library/Application Support/Claude/claude_desktop_config.json`\n\n#### Windows\nLocation: `%APPDATA%/Claude/claude_desktop_config.json`\n\n```json\n{\n  \"mcpServers\": {\n    \"duckdb\": {\n      \"command\": \"uvx\",\n      \"args\": [\n        \"mcp-server-duckdb\",\n        \"--db-path\",\n        \"~/mcp-server-duckdb/data/data.db\"\n      ]\n    }\n  }\n}\n```\n\n* Note: `~/mcp-server-duckdb/data/data.db` should be replaced with the actual path to the DuckDB database file.\n\n## Development\n\n### Prerequisites\n\n- Python with `uv` package manager\n- DuckDB Python package\n- MCP server dependencies\n\n### Debugging\n\nDebugging MCP servers can be challenging due to their stdio-based communication. We recommend using the [MCP Inspector](https://github.com/modelcontextprotocol/inspector) for the best debugging experience.\n\n#### Using MCP Inspector\n\n1. Install the inspector using npm:\n```bash\nnpx @modelcontextprotocol/inspector uv --directory ~/codes/mcp-server-duckdb run mcp-server-duckdb --db-path ~/mcp-server-duckdb/data/data.db\n```\n\n2. Open the provided URL in your browser to access the debugging interface\n\nThe inspector provides visibility into:\n- Request/response communication\n- Tool execution\n- Server state\n- Error messages\n"
}