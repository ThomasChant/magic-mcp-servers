{
  "mcp_name": "JordiNei/mcp-databricks-server",
  "mcp_description": "üêç ‚òÅÔ∏è - Connect to Databricks API, allowing LLMs to run SQL queries, list jobs, and get job status.",
  "mcp_id": "JordiNeil_mcp-databricks-server",
  "fetch_timestamp": "2025-06-23T05:33:48.463905Z",
  "github_url": "https://github.com/JordiNeil/mcp-databricks-server",
  "repository": {
    "name": "mcp-databricks-server",
    "full_name": "JordiNeil/mcp-databricks-server",
    "description": "MCP Server for Databricks",
    "html_url": "https://github.com/JordiNeil/mcp-databricks-server",
    "created_at": "2025-03-21T02:54:04Z",
    "updated_at": "2025-06-09T13:18:37Z",
    "pushed_at": "2025-04-24T04:16:57Z",
    "size": 21,
    "stargazers_count": 33,
    "watchers_count": 33,
    "forks_count": 14,
    "open_issues_count": 6,
    "language": "Python",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "JordiNeil",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/30764904?v=4",
      "html_url": "https://github.com/JordiNeil"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 14,
    "subscribers_count": 1,
    "languages": {
      "Python": 11717
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 6,
    "contributors_count": 1
  },
  "readme": "# Databricks MCP Server\n\nA Model Context Protocol (MCP) server that connects to Databricks API, allowing LLMs to run SQL queries, list jobs, and get job status.\n\n## Features\n\n- Run SQL queries on Databricks SQL warehouses\n- List all Databricks jobs \n- Get status of specific Databricks jobs\n- Get detailed information about Databricks jobs\n\n## Prerequisites\n\n- Python 3.7+\n- Databricks workspace with:\n  - Personal access token\n  - SQL warehouse endpoint\n  - Permissions to run queries and access jobs\n\n## Setup\n\n1. Clone this repository\n2. Create and activate a virtual environment (recommended):\n   ```\n   python -m venv .venv\n   source .venv/bin/activate  # On Windows: .venv\\Scripts\\activate\n   ```\n3. Install dependencies:\n   ```\n   pip install -r requirements.txt\n   ```\n4. Create a `.env` file in the root directory with the following variables:\n   ```\n   DATABRICKS_HOST=your-databricks-instance.cloud.databricks.com\n   DATABRICKS_TOKEN=your-personal-access-token\n   DATABRICKS_HTTP_PATH=/sql/1.0/warehouses/your-warehouse-id\n   ```\n5. Test your connection (optional but recommended):\n   ```\n   python test_connection.py\n   ```\n\n### Obtaining Databricks Credentials\n\n1. **Host**: Your Databricks instance URL (e.g., `your-instance.cloud.databricks.com`)\n2. **Token**: Create a personal access token in Databricks:\n   - Go to User Settings (click your username in the top right)\n   - Select \"Developer\" tab\n   - Click \"Manage\" under \"Access tokens\"\n   - Generate a new token, and save it immediately\n3. **HTTP Path**: For your SQL warehouse:\n   - Go to SQL Warehouses in Databricks\n   - Select your warehouse\n   - Find the connection details and copy the HTTP Path\n\n## Running the Server\n\nStart the MCP server:\n```\npython main.py\n```\n\nYou can test the MCP server using the inspector by running \n\n```\nnpx @modelcontextprotocol/inspector python3 main.py\n```\n\n## Available MCP Tools\n\nThe following MCP tools are available:\n\n1. **run_sql_query(sql: str)** - Execute SQL queries on your Databricks SQL warehouse\n2. **list_jobs()** - List all Databricks jobs in your workspace\n3. **get_job_status(job_id: int)** - Get the status of a specific Databricks job by ID\n4. **get_job_details(job_id: int)** - Get detailed information about a specific Databricks job\n\n## Example Usage with LLMs\n\nWhen used with LLMs that support the MCP protocol, this server enables natural language interaction with your Databricks environment:\n\n- \"Show me all tables in the database\"\n- \"Run a query to count records in the customer table\"\n- \"List all my Databricks jobs\"\n- \"Check the status of job #123\"\n- \"Show me details about job #456\"\n\n## Troubleshooting\n\n### Connection Issues\n\n- Ensure your Databricks host is correct and doesn't include `https://` prefix\n- Check that your SQL warehouse is running and accessible\n- Verify your personal access token has the necessary permissions\n- Run the included test script: `python test_connection.py`\n\n## Security Considerations\n\n- Your Databricks personal access token provides direct access to your workspace\n- Secure your `.env` file and never commit it to version control\n- Consider using Databricks token with appropriate permission scopes only\n- Run this server in a secure environment\n"
}