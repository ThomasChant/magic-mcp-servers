{
  "mcp_name": "erithwik/mcp-hn",
  "mcp_description": "üêç ‚òÅÔ∏è - An MCP server to search Hacker News, get top stories, and more.",
  "mcp_id": "erithwik_mcp-hn",
  "fetch_timestamp": "2025-06-23T02:54:04.141726Z",
  "github_url": "https://github.com/erithwik/mcp-hn",
  "repository": {
    "name": "mcp-hn",
    "full_name": "erithwik/mcp-hn",
    "description": "MCP Server for Hackernews",
    "html_url": "https://github.com/erithwik/mcp-hn",
    "created_at": "2024-12-28T23:00:56Z",
    "updated_at": "2025-06-10T11:18:48Z",
    "pushed_at": "2025-01-02T05:43:45Z",
    "size": 20,
    "stargazers_count": 41,
    "watchers_count": 41,
    "forks_count": 12,
    "open_issues_count": 4,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "erithwik",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/44277401?v=4",
      "html_url": "https://github.com/erithwik"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 12,
    "subscribers_count": 1,
    "languages": {
      "Python": 15080
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 4,
    "contributors_count": 3
  },
  "readme": "# Hacker News MCP Server\n\nA Model Context Protocol (MCP) server that provides tools for fetching information from Hacker News.\n\n## Tools\n\n- `get_stories` Fetching (top, new, ask_hn, show_hn) stories\n- `get_story_info` Fetching comments associated with a story\n- `search_stories` Searching for stories by query\n- `get_user_info` Fetching user info\n\n## Example Usage\n\nUse prompts like the following:\n\n```\nUser: Get the top stories of today\n  Output: Uses `get_stories` tool and returns a story about AI\nUser: What does the details of the story today that talks about the future of AI\n  Output: Uses `get_story_info` tool based on the results of the previous tool\nUser: What has the user `pg` been up to?\n  Output: Uses `get_user_info` tool and returns a summary of the user's activity\nUser: What does hackernews say about careers in AI?\n  Output: Uses `search_stories` tool and returns a summary of the comments\n```\n\nA more detailed example with the puppeteer MCP server:\n\n```\nUser: What are the top stories of today?\n  Output: Uses `get_stories` tool and returns a story about AI\nUser: Can you use the puppeteer tool to read the article about <AI> and also use the hackernews tool to view the comments and give me a summary of what the main comments are about the article?\n  Output: Uses puppeteer tool to read the article about AI and then uses the `get_story_info` hn tool to get the comments and returns a summary of the comments\n```\n\n## Quickstart\n\n### Claude Desktop:\n\nUpdate the following:\n\nOn MacOS: `~/Library/Application\\ Support/Claude/claude_desktop_config.json`\n\nOn Windows: `%APPDATA%/Claude/claude_desktop_config.json`\n\nWith the following for production:\n\n```json\n{\n  \"mcpServers\": {\n    \"mcp-hn\": {\n      \"command\": \"uvx\",\n      \"args\": [\"mcp-hn\"]\n    }\n  }\n}\n```\n\n\n\n\n\n\n\n"
}