{
  "mcp_name": "4workspace/Cursor-MCP-test",
  "mcp_description": "Facilitates GitHub integration within Cursor IDE using the Model Control Protocol for streamlined repository management.",
  "mcp_id": "4workspace_Cursor-MCP-test",
  "fetch_timestamp": "2025-06-23T00:09:08.588923Z",
  "github_url": "https://github.com/4workspace/Cursor-MCP-test",
  "repository": {
    "name": "Cursor-MCP-test",
    "full_name": "4workspace/Cursor-MCP-test",
    "description": "A test repository for Cursor MCP integration",
    "html_url": "https://github.com/4workspace/Cursor-MCP-test",
    "created_at": "2025-04-21T09:20:33Z",
    "updated_at": "2025-04-21T09:23:07Z",
    "pushed_at": "2025-04-21T09:23:04Z",
    "size": 1,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": null,
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "4workspace",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/64164271?v=4",
      "html_url": "https://github.com/4workspace"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "pull_requests_count": 0,
    "contributors_count": 1
  },
  "readme": "# Cursor MCP (Model Control Protocol) Kurulum ve Kullanım Kılavuzu\n\nBu repository, Cursor IDE'de MCP (Model Control Protocol) entegrasyonunun nasıl kurulacağını ve kullanılacağını açıklamaktadır.\n\n## MCP Nedir?\n\nMCP (Model Control Protocol), Cursor IDE'de GitHub entegrasyonu gibi çeşitli servisleri kullanmanızı sağlayan bir protokoldür. Bu protokol sayesinde doğrudan IDE üzerinden GitHub işlemlerini gerçekleştirebilirsiniz.\n\n## Kurulum Adımları\n\n### 1. GitHub Personal Access Token Oluşturma\n\n1. GitHub hesabınızda Settings > Developer settings > Personal access tokens > Tokens (classic) bölümüne gidin\n2. \"Generate new token\" butonuna tıklayın\n3. Token için gerekli izinleri seçin:\n   - `repo` (tüm repo işlemleri için)\n   - `workflow`\n   - `read:org`\n4. Token'ı oluşturun ve güvenli bir yerde saklayın\n\n### 2. MCP Konfigürasyonu\n\n1. Cursor IDE'de `.cursor` klasörü içinde `mcp.json` dosyası oluşturun\n2. Aşağıdaki yapılandırmayı ekleyin:\n\n```json\n{\n  \"name\": \"GitHub Integration\",\n  \"model\": \"github\",\n  \"apiKey\": \"YOUR_GITHUB_PERSONAL_ACCESS_TOKEN\",\n  \"baseUrl\": \"https://api.github.com\",\n  \"options\": {\n    \"repository\": \"YOUR_USERNAME/YOUR_REPO\",\n    \"branch\": \"main\"\n  },\n  \"mcpServers\": {\n    \"github\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@smithery/cli@latest\",\n        \"run\",\n        \"@smithery-ai/github\",\n        \"--config\",\n        \"{\\\"githubPersonalAccessToken\\\":\\\"YOUR_GITHUB_PERSONAL_ACCESS_TOKEN\\\"}\"\n      ]\n    }\n  }\n}\n```\n\n## Kullanım\n\nMCP kurulumundan sonra Cursor IDE üzerinden şu işlemleri yapabilirsiniz:\n\n- Repository oluşturma\n- Dosya oluşturma/düzenleme\n- Issue oluşturma ve yönetme\n- Pull request oluşturma\n- Commit ve push işlemleri\n- Repository fork'lama\n- Branch oluşturma\n- Ve daha fazlası...\n\n## Güvenlik Notları\n\n- GitHub Personal Access Token'ınızı asla public repolarda paylaşmayın\n- Token'ı güvenli bir şekilde saklayın\n- Sadece ihtiyacınız olan izinleri verin\n- Token'ı düzenli aralıklarla yenileyin\n\n## Sorun Giderme\n\nEğer MCP ile ilgili sorunlar yaşıyorsanız:\n\n1. Token'ın geçerli olduğundan emin olun\n2. İzinlerin doğru ayarlandığını kontrol edin\n3. `mcp.json` dosyasının doğru formatta olduğunu kontrol edin\n4. Cursor IDE'yi yeniden başlatmayı deneyin\n\n## Katkıda Bulunma\n\nBu repository'ye katkıda bulunmak için:\n\n1. Repository'yi fork'layın\n2. Yeni bir branch oluşturun\n3. Değişikliklerinizi yapın\n4. Pull request açın\n\n## Lisans\n\nBu proje MIT lisansı altında lisanslanmıştır."
}