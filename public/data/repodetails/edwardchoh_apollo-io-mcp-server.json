{
  "mcp_name": "edwardchoh/apollo-io-mcp-server",
  "mcp_description": "Facilitates interaction with Apollo.io API through MCP tools for data enrichment and search functionalities.",
  "mcp_id": "edwardchoh_apollo-io-mcp-server",
  "fetch_timestamp": "2025-06-23T02:48:47.097581Z",
  "github_url": "https://github.com/edwardchoh/apollo-io-mcp-server",
  "repository": {
    "name": "apollo-io-mcp-server",
    "full_name": "edwardchoh/apollo-io-mcp-server",
    "description": "MCP server that exposes the Apollo.io API functionalities as tools",
    "html_url": "https://github.com/edwardchoh/apollo-io-mcp-server",
    "created_at": "2025-04-11T22:57:19Z",
    "updated_at": "2025-06-06T22:49:35Z",
    "pushed_at": "2025-04-11T23:20:50Z",
    "size": 29,
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks_count": 1,
    "open_issues_count": 0,
    "language": "Python",
    "license": "Other",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "edwardchoh",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/69545?v=4",
      "html_url": "https://github.com/edwardchoh"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 1,
    "subscribers_count": 1,
    "languages": {
      "Python": 62116
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 1
  },
  "readme": "# Apollo.io MCP Server\n\nThis project provides an MCP server that exposes the Apollo.io API functionalities as tools. It allows you to interact with the Apollo.io API using the Model Context Protocol (MCP).\n\n## Overview\n\nThe project consists of the following main components:\n\n- `apollo_client.py`: Defines the `ApolloClient` class, which is used to interact with the Apollo.io API. It includes methods for people enrichment, organization enrichment, people search, organization search, and organization job postings.\n- `server.py`: Defines the FastMCP server, which exposes the Apollo.io API functionalities as tools. It uses the `ApolloClient` class defined in `apollo_client.py` to interact with the API.\n- `apollo/`: Contains the data models for the Apollo.io API, such as `PeopleEnrichmentQuery`, `OrganizationEnrichmentQuery`, `PeopleSearchQuery`, `OrganizationSearchQuery`, and `OrganizationJobPostingsQuery`.\n\n## Functionalities\n\nThe following functionalities are exposed as MCP tools:\n\n-   `people_enrichment`: Use the People Enrichment endpoint to enrich data for 1 person.\n-   `organization_enrichment`: Use the Organization Enrichment endpoint to enrich data for 1 company.\n-   `people_search`: Use the People Search endpoint to find people.\n-   `organization_search`: Use the Organization Search endpoint to find organizations.\n-   `organization_job_postings`: Use the Organization Job Postings endpoint to find job postings for a specific organization.\n\n## Usage\n\nTo use this MCP server, you need to:\n\n1. Set the `APOLLO_IO_API_KEY` environment variable with your Apollo.io API key. Or create '.env' file in the project root with `APOLLO_IO_API_KEY`.\n2. Get dependencies: `uv sync`\n3. Run the `uv run mcp run server.py`\n\n## Data Models\n\nThe `apollo/` directory contains the data models for the Apollo.io API. These models are used to define the input and output of the MCP tools.\n\n- `apollo/people.py`: Defines the data models for the People Enrichment endpoint.\n- `apollo/organization.py`: Defines the data models for the Organization Enrichment endpoint.\n- `apollo/people_search.py`: Defines the data models for the People Search endpoint.\n- `apollo/organization_search.py`: Defines the data models for the Organization Search endpoint.\n- `apollo/organization_job_postings.py`: Defines the data models for the Organization Job Postings endpoint.\n\n## Testing\n\nTo test, set `APOLLO_IO_API_KEY` environment variable and run `uv run apollo_client.py`.\n\n## Usage with Claude for Desktop\n\n1. Configure Claude for Desktop to use these MCP servers by adding them to your `claude_desktop_config.json` file:\n\n```json\n{\n  \"mcpServers\": {\n    \"apollo-io-mcp-server\": {\n      \"type\": \"stdio\",\n      \"command\": \"uv\",\n      \"args\": [\n        \"run\",\n        \"mcp\",\n        \"run\",\n        \"path/to/apollo-io-mcp-server/server.py\"\n      ]\n    }\n  }\n}\n```\n\n## Resources\n\n- [Apollo.io API Documentation](https://docs.apollo.io/reference/)\n- [MCP Protocol Documentation](https://github.com/modelcontextprotocol/mcp)\n- [Claude for Desktop Documentation](https://claude.ai/docs)\n"
}