{
  "mcp_name": "MCP Aggregator",
  "mcp_description": "An MCP (Model Context Protocol) aggregator that allows you to combine multiple MCP servers into a single endpoint allowing to filter specific tools.",
  "mcp_id": "nazar256_combine-mcp",
  "fetch_timestamp": "2025-06-23T06:30:52.354292Z",
  "github_url": "https://github.com/nazar256/combine-mcp",
  "repository": {
    "name": "combine-mcp",
    "full_name": "nazar256/combine-mcp",
    "description": null,
    "html_url": "https://github.com/nazar256/combine-mcp",
    "created_at": "2025-03-28T21:11:11Z",
    "updated_at": "2025-06-20T02:01:59Z",
    "pushed_at": "2025-05-02T14:03:54Z",
    "size": 58,
    "stargazers_count": 7,
    "watchers_count": 7,
    "forks_count": 0,
    "open_issues_count": 1,
    "language": "Go",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "nazar256",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/5476057?v=4",
      "html_url": "https://github.com/nazar256"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "Go": 42828,
      "Shell": 8201,
      "Makefile": 490,
      "Dockerfile": 375
    },
    "language_percentages": {
      "Go": 82.53,
      "Shell": 15.8,
      "Makefile": 0.94,
      "Dockerfile": 0.72
    },
    "pull_requests_count": 0,
    "contributors_count": 2,
    "latest_release": {
      "tag_name": "v1.1.0",
      "name": "v1.1.0",
      "published_at": "2025-04-30T14:42:35Z",
      "body": "Added tools filtering.\r\n\r\n**Full Changelog**: https://github.com/nazar256/combine-mcp/compare/v1.0.0...v1.1.0",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v1.1.0",
        "commit_sha": "5e7f10779b4303a283d5946cbb4de75f2f61e417"
      },
      {
        "name": "v1.0.0",
        "commit_sha": "aabc7c00f8d4dde62e6033e79596c089b1fe316e"
      }
    ],
    "latest_version": "v1.1.0"
  },
  "readme": "# MCP Aggregator\n\nAn MCP (Model Context Protocol) aggregator that allows you to combine multiple MCP servers into a single interface. The code is mostly AI-generated.\n\n## Why combine MCP servers into one?\n\nThe primary reason for this app was to work around Cursor's limitation of only being able to use 2 MCP servers at a time. No matter which, in my case when I added 3rd MCP server, it was breaking the ability to use one of other two.\n\n## Overview\n\nThe MCP Aggregator acts as a bridge between Cursor (or any other MCP client) and multiple MCP servers. It functions both as an MCP server (when talking to Cursor) and as an MCP client (when talking to backend MCP servers).\n\nKey features:\n- Provides a stdio interface for Cursor and other MCP clients\n- Connects to multiple backend MCP servers\n- Prefixes methods from backend servers (e.g., \"shortcut_search_stories\" for \"search_stories\" method from a \"shortcut\" MCP)\n- Automatically sanitizes tool names by replacing dashes with underscores for Cursor compatibility\n- Configurable via environment variables and JSON config file\n- Debug logging with configurable levels\n\n## Installation\n\n### Using install script (recommended)\n\nYou can install the latest version of combine-mcp using our installation script:\n\n```bash\n# Download and run the installation script\ncurl -fsSL https://raw.githubusercontent.com/nazar256/combine-mcp/main/install.sh | bash\n\n# Or install a specific version\ncurl -fsSL https://raw.githubusercontent.com/nazar256/combine-mcp/main/install.sh | bash -s -- -v v1.0.0\n```\n\nThe script will:\n- Detect your operating system and architecture\n- Download the appropriate pre-compiled binary\n- Verify the checksum\n- Install it to a suitable location in your PATH\n- Make it executable\n\n### Using go install (alternative)\n\n```bash\n# Install directly from GitHub (binary will be placed in $GOPATH/bin)\ngo install github.com/nazar256/combine-mcp/cmd/combine-mcp@latest\n\n# Ensure $GOPATH/bin is in your PATH\n# For example, add this to your .bashrc or .zshrc:\n# export PATH=$PATH:$(go env GOPATH)/bin\n```\n\n### Using Docker (alternative)\n\nYou can run combine-mcp directly using Docker without installing it locally:\n\n```bash\n# Run the latest version\ndocker run --rm -v ~/.config/mcp:/config ghcr.io/nazar256/combine-mcp:latest\n\n# Run a specific version\ndocker run --rm -v ~/.config/mcp:/config ghcr.io/nazar256/combine-mcp:v1.0.0\n\n# Set environment variables\ndocker run --rm -v ~/.config/mcp:/config -e MCP_CONFIG=/config/config.json -e MCP_LOG_LEVEL=debug ghcr.io/nazar256/combine-mcp:latest\n```\n\nTo use it with Cursor, you'd need to configure the MCP server to use Docker:\n\n```json\n{\n  \"mcpServers\": {\n    \"aggregator\": {\n      \"command\": \"docker\",\n      \"args\": [\"run\", \"--rm\", \"-v\", \"~/.config/mcp:/config\", \"ghcr.io/nazar256/combine-mcp:latest\"],\n      \"env\": {\n        \"MCP_CONFIG\": \"/config/config.json\"\n      }\n    }\n  }\n}\n```\n\n### Using the Makefile\n\nThe project includes a Makefile for common tasks:\n\n```bash\n# Build the binary\nmake build\n\n# Run tests\nmake test\n\n# Clean up build artifacts\nmake clean\n```\n\n## Usage\n\n### Configure the aggregator\n\nBasically you can copy existing Cursor MCP config to a location of your choice, let's say `~/.config/mcp/config.json`. It should look like this:\n\nNice feature for Cursor users is filtering tools from MCP servers. You can manage tools to not reach the limit of 40 tools in Cursor and not expose the ones you don't want Cursor to use.\n\n```json\n{\n  \"mcpServers\": {\n    \"shortcut\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"@shortcut/mcp\"],\n      \"env\": {\n        \"SHORTCUT_API_TOKEN\": \"your-shortcut-api-token-here\"\n      },\n      \"tools\": {\n        \"allowed\": [\"search-stories\", \"get-story\", \"create-story\"]\n      }\n    },\n    \"github\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"@modelcontextprotocol/server-github\"],\n      \"env\": {\n        \"GITHUB_TOKEN\": \"your-github-token-here\"  \n      }\n    }\n  }\n}\n```\n\n### Configure the aggregator in Cursor\n\nNow in Cursor config you may leave the only one MCP server - aggregator. The config may look like this (assuming you have `combine-mcp` binary is instlaled your PATH and you have `~/.config/mcp/config.json` file):\n\n```json\n{\n  \"mcpServers\": {\n    \"aggregator\": {\n      \"command\": \"combine-mcp\",\n      \"env\": {\n        \"MCP_CONFIG\": \"~/.config/mcp/config.json\"\n      }\n    }\n  }\n}\n```\n\n### Environment Variables\n\n- `MCP_CONFIG`: Path to the configuration file (required)\n- `MCP_LOG_LEVEL`: Logging level (error, info, debug, trace) - default: info\n- `MCP_LOG_FILE`: Path to the log file\n- `MCP_PROTOCOL_VERSION`: Force a specific protocol version for compatibility\n- `MCP_CURSOR_MODE`: Enable Cursor-specific compatibility adjustments\n\n## Tool Name Sanitization\n\nThe MCP Aggregator automatically sanitizes tool names by replacing dashes with underscores. This is necessary because Cursor has a known issue where it cannot properly detect or use tools with dashes in their names.\n\nFor example:\n- Original tool name: `get-user`\n- Sanitized tool name: `get_user`\n- Prefixed tool name (for shortcut server): `shortcut_get_user`\n\nThe sanitization is transparent - when you call a tool using the sanitized name, the aggregator maps it back to the original name when forwarding the request to the backend server.\n\n### Tool Filtering\n\nThe MCP Aggregator supports optional tool filtering per server. This is useful when you want to:\n- Limit the number of exposed tools to stay within Cursor's tool limit (40 tools maximum)\n- Only expose specific tools from each server\n- Avoid tool name conflicts between servers\n- Improve performance by reducing the number of tools to process\n\nTo enable tool filtering, add a `tools` object to your server configuration with an `allowed` array listing the tools you want to expose:\n\n```json\n{\n  \"mcpServers\": {\n    \"shortcut\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"@shortcut/mcp\"],\n      \"env\": {\n        \"SHORTCUT_API_TOKEN\": \"your-shortcut-api-token-here\"\n      },\n      \"tools\": {\n        \"allowed\": [\n          \"search-stories\",\n          \"get-story\",\n          \"create-story\",\n          \"assign-current-user-as-owner\"\n        ]\n      }\n    },\n    \"github\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"@modelcontextprotocol/server-github\"],\n      \"env\": {\n        \"GITHUB_TOKEN\": \"your-github-token-here\"\n      },\n      \"tools\": {\n        \"allowed\": [\n          \"create-pr\",\n          \"list-prs\",\n          \"get-pr\",\n          \"merge-pr\"\n        ]\n      }\n    }\n  }\n}\n```\n"
}