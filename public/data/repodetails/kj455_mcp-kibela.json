{
  "mcp_name": "kj455/mcp-kibela",
  "mcp_description": "üìá ‚òÅÔ∏è Allows AI models to interact with [Kibela](https://kibe.la/)",
  "mcp_id": "kj455_mcp-kibela",
  "fetch_timestamp": "2025-06-23T05:49:31.767481Z",
  "github_url": "https://github.com/kj455/mcp-kibela",
  "repository": {
    "name": "mcp-kibela",
    "full_name": "kj455/mcp-kibela",
    "description": "MCP server implementation that enables AI assistants to search and reference Kibela content",
    "html_url": "https://github.com/kj455/mcp-kibela",
    "created_at": "2025-02-22T01:13:17Z",
    "updated_at": "2025-05-01T23:49:03Z",
    "pushed_at": "2025-04-06T01:28:44Z",
    "size": 124,
    "stargazers_count": 12,
    "watchers_count": 12,
    "forks_count": 5,
    "open_issues_count": 1,
    "language": "TypeScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "kj455",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/38521709?v=4",
      "html_url": "https://github.com/kj455"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 5,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 17363,
      "JavaScript": 1137,
      "Dockerfile": 608
    },
    "language_percentages": {
      "TypeScript": 90.87,
      "JavaScript": 5.95,
      "Dockerfile": 3.18
    },
    "pull_requests_count": 15,
    "contributors_count": 2,
    "latest_release": {
      "tag_name": "v0.3.1",
      "name": "v0.3.1",
      "published_at": "2025-04-06T01:23:30Z",
      "body": "### Patch Changes\n\n-   707c0f0: fix: release gha\n",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v0.3.1",
        "commit_sha": "36fbe9728ad1305f696f1fc2335c4678fcb1584f"
      },
      {
        "name": "v0.3.0",
        "commit_sha": "f9cbcbf5eae0cf6b169bf4ed5613255363203556"
      },
      {
        "name": "v0.2.0",
        "commit_sha": "e19c05abb382d359274f57c402802cbe754dc4f4"
      },
      {
        "name": "v0.1.10",
        "commit_sha": "23d8600860b443c78a80b4dabd901fd0e96d4421"
      }
    ],
    "latest_version": "v0.3.1",
    "package_json_version": "0.3.1"
  },
  "readme": "# mcp-kibela üóíÔ∏è\n\n[![smithery badge](https://smithery.ai/badge/@kj455/mcp-kibela)](https://smithery.ai/server/@kj455/mcp-kibela)\n[![npm version](https://badge.fury.io/js/@kj455%2Fmcp-kibela.svg)](https://www.npmjs.com/package/@kj455/mcp-kibela)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\nA Model Context Protocol (MCP) server implementation that enables AI assistants to search and reference Kibela content. This setup allows AI models like Claude to securely access information stored in Kibela.\n\n## Features üöÄ\n\nThe mcp-kibela server provides the following features:\n\n- **Note Search**: Search Kibela notes by keywords\n- **My Notes**: Fetch your latest notes\n- **Note Content**: Get note content and comments by ID\n- **Note by Path**: Get note content by path\n- **Create Note**: Create a new note\n- **Update Note Content**: Update note content by note id\n\n---\n\n## Prerequisites üìã\n\nBefore you begin, ensure you have:\n\n- Node.js (v18 or higher)\n- MCP Client (Claude Desktop, Cursor, etc.)\n- Kibela Access Token ([How to get a token](https://support.kibe.la/hc/ja/articles/360036089931-API%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E3%83%88%E3%83%BC%E3%82%AF%E3%83%B3%E3%81%AE%E5%8F%96%E5%BE%97%E6%96%B9%E6%B3%95%E3%82%92%E6%95%99%E3%81%88%E3%81%A6%E3%81%8F%E3%81%A0%E3%81%95%E3%81%84))\n- Git (if building from source)\n\n## Installation üõ†Ô∏è\n\n### Usage with Cursor\n\n```json\n{\n  \"kibela\": {\n    \"command\": \"docker\",\n    \"args\": [\n      \"run\",\n      \"-i\",\n      \"--rm\",\n      \"-e\",\n      \"KIBELA_TEAM\",\n      \"-e\",\n      \"KIBELA_TOKEN\",\n      \"ghcr.io/kj455/mcp-kibela:latest\"\n    ],\n    \"env\": {\n      \"KIBELA_TEAM\": \"your-team-name from https://[team-name].kibe.la\",\n      \"KIBELA_TOKEN\": \"your-token\"\n    }\n  }\n}\n```\n\n### Usage with VSCode\n\n```json\n{\n  \"mcp\": {\n    \"inputs\": [\n      {\n        \"type\": \"promptString\",\n        \"id\": \"kibela_team\",\n        \"description\": \"Kibela team name\",\n        \"password\": false\n      },\n      {\n        \"type\": \"promptString\",\n        \"id\": \"kibela_token\",\n        \"description\": \"Kibela token\",\n        \"password\": true\n      },\n    ],\n    \"servers\": {\n      \"kibela\": {\n        \"command\": \"docker\",\n        \"args\": [\n          \"run\",\n          \"-i\",\n          \"--rm\",\n          \"-e\",\n          \"KIBELA_TEAM\",\n          \"-e\",\n          \"KIBELA_TOKEN\",\n          \"ghcr.io/kj455/mcp-kibela:latest\"\n        ],\n        \"env\": {\n          \"KIBELA_TEAM\": \"${input:kibela_team}\",\n          \"KIBELA_TOKEN\": \"${input:kibela_token}\"\n        }\n      }\n    }\n  }\n}\n```\n\n\n### Usage with Claude Desktop\n\n```json\n{\n  \"mcpServers\": {\n    \"mcp-kibela\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"-i\",\n        \"--rm\",\n        \"-e\",\n        \"KIBELA_TEAM\",\n        \"-e\",\n        \"KIBELA_TOKEN\",\n        \"ghcr.io/kj455/mcp-kibela:latest\"\n      ],\n      \"env\": {\n        \"KIBELA_TEAM\": \"your-team-name from https://[team-name].kibe.la\",\n        \"KIBELA_TOKEN\": \"your-token\"\n      }\n    }\n  }\n}\n```\n\n### Using Smithery\n\n```bash\nnpx -y @smithery/cli install @kj455/mcp-kibela --client claude\n```\n\n## Environment Variables\n\nThe following environment variables are required:\n\n- `KIBELA_TEAM`: Your Kibela team name (required). You can find it from the URL of your Kibela team page. e.g. https://[team-name].kibe.la\n- `KIBELA_TOKEN`: Your Kibela API token (required)\n\n## Contributing\n\nAny contributions are welcome!\n\n## Development\n\n1. Use `npm run build:watch` to build the project in watch mode.\n\n```bash\nnpm run build:watch\n```\n\n2. Use `npx @modelcontextprotocol/inspector` to inspect the MCP server.\n\n```bash\nnpx @modelcontextprotocol/inspector node /path/to/mcp-kibela/dist/index.js\n```\n\n\n## License üìÑ\n\nMIT\n"
}