{
  "mcp_name": "bads1de/youtube-mp3-mcp",
  "mcp_description": "Facilitates the extraction of high-quality MP3 audio from YouTube URLs with seamless Claude Desktop integration.",
  "mcp_id": "bads1de_youtube-mp3-mcp",
  "fetch_timestamp": "2025-06-23T01:33:12.482663Z",
  "github_url": "https://github.com/bads1de/youtube-mp3-mcp",
  "repository": {
    "name": "youtube-mp3-mcp",
    "full_name": "bads1de/youtube-mp3-mcp",
    "description": null,
    "html_url": "https://github.com/bads1de/youtube-mp3-mcp",
    "created_at": "2025-04-19T02:08:42Z",
    "updated_at": "2025-04-19T10:03:15Z",
    "pushed_at": "2025-04-19T09:41:06Z",
    "size": 113,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "TypeScript",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "bads1de",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/108092339?v=4",
      "html_url": "https://github.com/bads1de"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 37743,
      "Dockerfile": 2515,
      "JavaScript": 304
    },
    "language_percentages": {
      "TypeScript": 93.05,
      "Dockerfile": 6.2,
      "JavaScript": 0.75
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "package_json_version": "1.0.0"
  },
  "readme": "# YouTube MP3 Downloader (MCP)\n\n[EN] A Model-Context-Protocol (MCP) server that downloads MP3 audio from YouTube URLs. Easily integrate with Claude Desktop to extract high-quality audio files.\n\n[JA] YouTubeのURLからMP3形式の音声をダウンロードするModel-Context-Protocol (MCP) サーバーです。Claude Desktopなどと連携して、簡単に高品質な音声ファイルを取得できます。\n\n## Features / 機能\n\n- **MP3 Extraction**: Extract high-quality MP3 files from YouTube URLs / **MP3抽出**: YouTube URLから高品質なMP3を抽出\n- **Quality Selection**: Choose from low, medium, or high quality / **音質選択**: 低・中・高の音質から選択可能\n- **Custom Output**: Customize download directory / **出力先指定**: ダウンロード先をカスタマイズ可能\n- **Docker Support**: Run as a Docker container / **Docker対応**: Dockerコンテナとして実行可能\n- **Claude Integration**: Easy integration with Claude Desktop / **Claude連携**: Claude Desktopと簡単に連携\n\n## Installation & Setup / インストールと設定\n\n### Standard Installation / 通常のインストール\n\n```bash\n# Clone repository / リポジトリのクローン\ngit clone https://github.com/bads1de/youtube-mp3-mcp.git\ncd youtube-mp3-mcp\n\n# Install dependencies / 依存関係のインストール\nnpm install\n\n# Build / ビルド\nnpm run build\n```\n\n### Docker Installation / Dockerを使用したインストール\n\n```bash\n# Clone repository / リポジトリのクローン\ngit clone https://github.com/bads1de/youtube-mp3-mcp.git\ncd youtube-mp3-mcp\n\n# Build Docker image / Dockerイメージのビルド\ndocker build -t youtube-mp3-mcp .\n```\n\n### Environment Variables / 環境変数\n\n[EN] Customize the application with these environment variables:\n\n- `YOUTUBE_MP3_OUTPUT_DIR`: Output directory for MP3 files (default: `~/Downloads`)\n- `YOUTUBE_MP3_DEFAULT_QUALITY`: Audio quality (`low`, `medium`, `high`, default: `medium`)\n- `YOUTUBE_MP3_TEMP_DIR`: Temporary files directory (default: system temp dir)\n\n[JA] 以下の環境変数でアプリケーションをカスタマイズできます：\n\n- `YOUTUBE_MP3_OUTPUT_DIR`: MP3ファイルの出力先 (デフォルト: `~/Downloads`)\n- `YOUTUBE_MP3_DEFAULT_QUALITY`: 音質 (`low`, `medium`, `high`, デフォルト: `medium`)\n- `YOUTUBE_MP3_TEMP_DIR`: 一時ファイルの保存先 (デフォルト: システムの一時ディレクトリ)\n\n### Claude Desktop Configuration / Claude Desktopの設定\n\n#### Standard Setup / 通常の設定\n\n[EN] Add this to your `claude_desktop_config.json`:\n\n[JA] `claude_desktop_config.json`に以下のように設定します：\n\n```json\n{\n  \"mcpServers\": {\n    \"youtube-mp3\": {\n      \"command\": \"node\",\n      \"args\": [\"path/to/youtube-mp3-mcp/dist/index.js\"],\n      \"env\": {\n        \"YOUTUBE_MP3_OUTPUT_DIR\": \"C:/Users/username/Downloads\",\n        \"YOUTUBE_MP3_DEFAULT_QUALITY\": \"high\"\n      }\n    }\n  }\n}\n```\n\n#### Docker Setup / Dockerを使用した設定\n\n```json\n{\n  \"mcpServers\": {\n    \"youtube-mp3\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"-i\",\n        \"--rm\",\n        \"-v\",\n        \"C:/Users/username/Downloads:/downloads\",\n        \"youtube-mp3-mcp\"\n      ],\n      \"env\": {\n        \"YOUTUBE_MP3_DEFAULT_QUALITY\": \"high\"\n      }\n    }\n  }\n}\n```\n\n[EN] The `-v` option mounts your host directory (e.g., `C:/Users/username/Downloads`) to the container's `/downloads` directory. Downloaded MP3 files will be saved to this directory. **Note**: On Windows, use forward slashes (`/`) in paths.\n\n[JA] `-v`オプションでホストのディレクトリ（例: `C:/Users/username/Downloads`）をコンテナの`/downloads`ディレクトリにマウントします。ダウンロードしたMP3ファイルはこのディレクトリに保存されます。**注意**: Windowsではパスにフォワードスラッシュ(`/`)を使用してください。\n\n## Architecture / アーキテクチャ\n\n[EN] This project uses a simple service-oriented architecture implementing the Model-Context-Protocol (MCP):\n\n- **Service Layer**: YouTubeService and DownloaderService provide core functionality\n- **MCP Layer**: Exposes functionality through resources and tools\n- **Type Definitions**: Defines types used throughout the application\n\n[JA] このプロジェクトはシンプルなサービス指向アーキテクチャを採用し、Model-Context-Protocol (MCP) を実装しています：\n\n- **サービス層**: YouTubeServiceとDownloaderServiceが主要機能を提供\n- **MCP層**: リソースとツールを通じて機能を公開\n- **型定義**: アプリケーション全体で使用される型を定義\n\n### MCP Tool / MCPツール\n\n- **download-mp3**: Download MP3 from YouTube URL / YouTubeのURLからMP3をダウンロード\n  - `url`: YouTube video URL (required) / YouTube動画のURL (必須)\n  - `quality`: Audio quality (`low`, `medium`, `high`) (optional) / 音質設定 (オプション)\n  - `outputDir`: Output directory (optional) / 出力ディレクトリ (オプション)\n\n## Notes / 注意事項\n\n[EN]\n\n- Use this application only in compliance with YouTube's terms of service\n- Users are responsible for legal compliance when downloading copyrighted content\n- youtube-dl-exec uses Python and ffmpeg internally\n\n[JA]\n\n- このアプリケーションはYouTubeの利用規約を遵守する範囲でのみ使用してください\n- 著作権保護されたコンテンツのダウンロードに関する法的責任はユーザーにあります\n- youtube-dl-execは内部でPythonとffmpegを使用します\n\n## License / ライセンス\n\nMIT\n"
}