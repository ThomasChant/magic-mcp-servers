{
  "mcp_name": "bravoure/clickup-mcp",
  "mcp_description": "Facilitates seamless integration between AI assistants and ClickUp for task management and collaboration.",
  "mcp_id": "bravoure_clickup-mcp",
  "fetch_timestamp": "2025-06-23T01:46:10.324322Z",
  "github_url": "https://github.com/bravoure/clickup-mcp",
  "repository": {
    "name": "clickup-mcp",
    "full_name": "bravoure/clickup-mcp",
    "description": null,
    "html_url": "https://github.com/bravoure/clickup-mcp",
    "created_at": "2025-04-15T15:40:03Z",
    "updated_at": "2025-05-20T10:16:30Z",
    "pushed_at": "2025-05-20T10:16:26Z",
    "size": 44,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "JavaScript",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "bravoure",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/67317355?v=4",
      "html_url": "https://github.com/bravoure"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 2,
    "languages": {
      "JavaScript": 45619,
      "Dockerfile": 289
    },
    "language_percentages": {
      "JavaScript": 99.37,
      "Dockerfile": 0.63
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "package_json_version": "1.0.0"
  },
  "readme": "# ClickUp MCP Server\n\nA Model Context Protocol (MCP) server for ClickUp integration, allowing AI assistants like Claude to communicate with ClickUp.\n\n## Quick Start for Users\n\nIf you just want to use the ClickUp MCP server with your AI assistant, follow these steps:\n\n### Prerequisites\n\n- A ClickUp account with an API token (see [Getting a ClickUp API Token](#getting-a-clickup-api-token))\n- Docker installed on your machine\n- Claude Desktop or VS Code with Augment extension\n\n### Integration with Claude Desktop\n\n1. Make sure you have Claude Desktop installed\n2. Open the configuration file at `~/Library/Application Support/Claude/claude_desktop_config.json`\n3. Add the following configuration:\n\n```json\n{\n  \"mcpServers\": {\n    \"clickup\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"--rm\",\n        \"-i\",\n        \"-v\", \"/path/to/local/downloads:/app/downloads\",\n        \"-e\",\n        \"CLICKUP_API_TOKEN=your_api_token_here\",\n        \"ghcr.io/bravoure/clickup-mcp:latest\"\n      ]\n    }\n  }\n}\n```\n[claude_desktop_config.json](../../../../Library/Application%20Support/Claude/claude_desktop_config.json)\n4. Replace `/path/to/local/downloads` with the path where you want to save downloaded attachments (e.g., `/Users/yourusername/Downloads/clickup-downloads`)\n5. Replace `your_api_token_here` with your ClickUp API token\n6. Restart Claude Desktop\n\nNote: The `-i` flag is important as it keeps stdin open, which is required for the MCP protocol to work correctly. The `-v` flag creates a volume mount that allows downloaded files to be accessible on your local system.\n\n### Integration with Augment\n\n1. Open VS Code\n2. Press Cmd/Ctrl+Shift+P\n3. Type \"Augment: Edit Settings\"\n4. Click on \"Edit in settings.json\"\n5. Add the following configuration:\n\n```json\n\"augment.advanced\": {\n    \"mcpServers\": [\n        {\n            \"name\": \"clickup\",\n            \"command\": \"docker\",\n            \"args\": [\n                \"run\",\n                \"--rm\",\n                \"-i\",\n                \"-v\", \"/path/to/local/downloads:/app/downloads\",\n                \"-e\", \"CLICKUP_API_TOKEN=your_api_token_here\",\n                \"ghcr.io/bravoure/clickup-mcp:latest\"\n            ]\n        }\n    ]\n}\n```\n\n6. Replace `/path/to/local/downloads` with the path where you want to save downloaded attachments (e.g., `/Users/yourusername/Downloads/clickup-downloads`)\n7. Replace `your_api_token_here` with your ClickUp API token\n8. Save the changes and restart VS Code\n\nNote: The Docker image is built for both Intel/AMD (amd64) and Apple Silicon (arm64) processors, so it works on all modern Macs and PCs.\n\n### Troubleshooting\n\nIf you encounter issues with the MCP server disconnecting, try one of these alternative configurations:\n\n#### Option 1: Specify the Node.js command explicitly\n\n```json\n{\n  \"mcpServers\": {\n    \"clickup\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"--rm\",\n        \"-i\",\n        \"-e\",\n        \"CLICKUP_API_TOKEN=your_api_token_here\",\n        \"ghcr.io/bravoure/clickup-mcp:latest\",\n        \"node\",\n        \"src/index.js\"\n      ]\n    }\n  }\n}\n```\n\n#### Option 2: Run without Docker (if Node.js is installed locally)\n\n```json\n{\n  \"mcpServers\": {\n    \"clickup\": {\n      \"command\": \"node\",\n      \"args\": [\n        \"/absolute/path/to/clickup-mcp/src/index.js\"\n      ],\n      \"env\": {\n        \"CLICKUP_API_TOKEN\": \"your_api_token_here\"\n      }\n    }\n  }\n}\n```\n\nReplace `/absolute/path/to/clickup-mcp/src/index.js` with the full path to your index.js file.\n\n## For Developers\n\nIf you want to contribute to the project or run it locally, follow these steps:\n\n### Prerequisites\n\n- Node.js 18 or higher\n- A ClickUp account with an API token\n- Git\n\n### Local Development Setup\n\n1. Clone this repository:\n   ```bash\n   git clone https://github.com/bravoure/clickup-mcp.git\n   cd clickup-mcp\n   ```\n\n2. Install dependencies:\n   ```bash\n   npm install\n   ```\n\n3. Create a `.env` file with your ClickUp API token:\n   ```bash\n   echo \"CLICKUP_API_TOKEN=your_api_token_here\" > .env\n   ```\n\n4. Start the server:\n   ```bash\n   npm start\n   ```\n\n### Running with Docker\n\nIf you want to test the Docker container locally:\n\n```bash\n# Build the Docker image\ndocker build -t clickup-mcp .\n\n# Run the container\ndocker run -i \\\n  -e CLICKUP_API_TOKEN=your_api_token_here \\\n  --name clickup-mcp \\\n  clickup-mcp\n```\n\n### Using Docker Compose\n\nYou can also use Docker Compose:\n\n```bash\n# Create a .env file with your ClickUp API token\necho \"CLICKUP_API_TOKEN=your_api_token_here\" > .env\n\n# Start the container\ndocker-compose up -d\n```\n\n## Getting a ClickUp API Token\n\nTo use this MCP server, you need a ClickUp API token. Follow these steps to obtain one:\n\n1. Log in to your ClickUp account\n2. Click on your avatar in the top-right corner\n3. Select \"Settings\"\n4. Click on \"Apps\" in the sidebar\n5. Under \"API Token\", click \"Generate\" or \"Regenerate\"\n6. Copy the token and store it securely\n\n## Finding Workspace and List IDs\n\nTo find the necessary IDs for using the tools, you can use the following methods:\n\n1. **Workspace ID via URL**: Open ClickUp in your browser and look at the URL. It will look something like: `https://app.clickup.com/WORKSPACE_ID/v/l/li/LIST_ID`. The number after `app.clickup.com/` is your Workspace ID.\n\n2. **Via the API**: Use the tools provided by this MCP server to retrieve the necessary IDs:\n   - `get-workspaces`: Retrieves all workspaces\n   - `get-spaces`: Retrieves all spaces in a workspace\n   - `get-lists`: Retrieves all lists in a folder\n   - `get-folderless-lists`: Retrieves all lists that are not in any folder\n\n## Available Tools\n\n| Tool | Description |\n|------|-------------|\n| get-task | Retrieve a specific task by ID (including comments and attachments) |\n| create-task | Create a new task in a list |\n| update-task | Update an existing task (including changing status) |\n| get-lists | Retrieve all lists in a folder |\n| get-folderless-lists | Retrieve all lists that are not in any folder |\n| get-list-statuses | Retrieve all statuses for a list |\n| create-task-attachment | Upload an attachment to a task |\n| download-task-attachments | Download all attachments from a task |\n| get-task-comments | Retrieve all comments from a task |\n| create-task-comment | Create a comment on a task |\n\n## Features\n\nThis MCP server provides the following tools for interacting with ClickUp:\n\n- **Tasks**: Retrieve, create, and update tasks\n- **Lists**: Retrieve lists and their statuses\n- **Attachments**: Upload and download task attachments\n- **Comments**: Retrieve task comments\n\n## License\n\nMIT\n"
}