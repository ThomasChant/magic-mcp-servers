{
  "mcp_name": "SecretiveShell/MCP-wolfram-alpha",
  "mcp_description": "üêç ‚òÅÔ∏è - An MCP server for querying wolfram alpha API.",
  "mcp_id": "SecretiveShell_MCP-wolfram-alpha",
  "fetch_timestamp": "2025-06-23T08:17:32.797258Z",
  "github_url": "https://github.com/SecretiveShell/MCP-wolfram-alpha",
  "repository": {
    "name": "MCP-wolfram-alpha",
    "full_name": "SecretiveShell/MCP-wolfram-alpha",
    "description": "Connect your chat repl to wolfram alpha computational intelligence",
    "html_url": "https://github.com/SecretiveShell/MCP-wolfram-alpha",
    "created_at": "2024-12-20T14:12:31Z",
    "updated_at": "2025-06-22T12:40:52Z",
    "pushed_at": "2025-01-11T15:38:26Z",
    "size": 52,
    "stargazers_count": 43,
    "watchers_count": 43,
    "forks_count": 11,
    "open_issues_count": 3,
    "language": "Python",
    "license": "MIT License",
    "topics": [
      "mcp",
      "mcp-server",
      "wolfram",
      "wolfram-alpha"
    ],
    "default_branch": "master",
    "owner": {
      "login": "SecretiveShell",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/84923604?v=4",
      "html_url": "https://github.com/SecretiveShell"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 11,
    "subscribers_count": 1,
    "languages": {
      "Python": 5497,
      "Dockerfile": 157
    },
    "language_percentages": {
      "Python": 97.22,
      "Dockerfile": 2.78
    },
    "pull_requests_count": 2,
    "contributors_count": 3
  },
  "readme": "# MCP-wolfram-alpha\r\n\r\nA MCP server to connect to wolfram alpha API.\r\n\r\n<a href=\"https://glama.ai/mcp/servers/q5fud9cttp\">\r\n  <img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/q5fud9cttp/badge\" />\r\n</a>\r\n\r\n## Components\r\n\r\n### Prompts\r\n\r\nThis is analogous to the `!wa` bang in duckduckgo search.\r\n\r\n```python\r\ndef wa(query: str) -> f\"Use wolfram alpha to answer the following question: {query}\"\r\n```\r\n\r\n### Tools\r\n\r\nQuery Wolfram Alpha api.\r\n\r\n```python\r\ndef query_wolfram_alpha(query: str) -> str\r\n```\r\n\r\n## Configuration\r\n\r\nYou **must** set the `WOLFRAM_API_KEY` environment variable. Get an api ket from [Wolfram Alpha](https://products.wolframalpha.com/api).\r\n\r\nThis was tested with the full results API, but it might not be required.\r\n\r\n```json\r\n{\r\n    \"mcpServers\": {\r\n        \"MCP-wolfram-alpha\": {\r\n            \"command\": \"uv\",\r\n            \"args\": [\r\n                \"--directory\",\r\n                \"C:\\\\Users\\\\root\\\\Documents\\\\MCP-wolfram-alpha\",\r\n                \"run\",\r\n                \"MCP-wolfram-alpha\"\r\n            ],\r\n            \"env\": {\r\n                \"WOLFRAM_API_KEY\": \"your-app-id\"\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n## Development\r\n\r\n### Debugging\r\n\r\nSince the official MCP inspector does not have good environment support, I reccommend using wong2's [mcp-cli-inspector](https://github.com/wong2/mcp-cli).\r\n\r\nCreate a config.json file in the same style as claude desktop.\r\n\r\n```json\r\n{\r\n    \"mcpServers\": {\r\n        \"MCP-wolfram-alpha\": {\r\n            \"command\": \"uv\",\r\n            \"args\": [\r\n                \"--directory\",\r\n                \"/full/path/to/MCP-wolfram-alpha\",\r\n                \"run\",\r\n                \"MCP-wolfram-alpha\"\r\n            ],\r\n            \"env\": {\r\n                \"WOLFRAM_API_KEY\": \"your-app-id\"\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThen run:\r\n\r\n```bash\r\nnpx @wong2/mcp-cli -c .\\config.json\r\n```\r\n"
}