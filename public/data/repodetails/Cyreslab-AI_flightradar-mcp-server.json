{
  "mcp_name": "Cyreslab-AI/flightradar-mcp-server",
  "mcp_description": "Provides real-time flight tracking and status information using the AviationStack API.",
  "mcp_id": "Cyreslab-AI_flightradar-mcp-server",
  "fetch_timestamp": "2025-06-23T02:24:48.820434Z",
  "github_url": "https://github.com/Cyreslab-AI/flightradar-mcp-server",
  "repository": {
    "name": "flightradar-mcp-server",
    "full_name": "Cyreslab-AI/flightradar-mcp-server",
    "description": null,
    "html_url": "https://github.com/Cyreslab-AI/flightradar-mcp-server",
    "created_at": "2025-03-25T13:23:52Z",
    "updated_at": "2025-05-15T15:10:07Z",
    "pushed_at": "2025-04-26T16:11:28Z",
    "size": 17,
    "stargazers_count": 4,
    "watchers_count": 4,
    "forks_count": 1,
    "open_issues_count": 1,
    "language": "JavaScript",
    "license": "MIT License",
    "topics": [
      "cyreslab",
      "mcp",
      "mcp-server",
      "security-tools"
    ],
    "default_branch": "main",
    "owner": {
      "login": "Cyreslab-AI",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/178556137?v=4",
      "html_url": "https://github.com/Cyreslab-AI"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 1,
    "subscribers_count": 2,
    "languages": {
      "JavaScript": 13756,
      "Dockerfile": 1392
    },
    "language_percentages": {
      "JavaScript": 90.81,
      "Dockerfile": 9.19
    },
    "pull_requests_count": 2,
    "contributors_count": 3,
    "package_json_version": "0.1.0"
  },
  "readme": "# FlightRadar MCP Server\n\n[![smithery badge](https://smithery.ai/badge/@Cyreslab-AI/flightradar-mcp-server)](https://smithery.ai/server/@Cyreslab-AI/flightradar-mcp-server)\n\nA Model Context Protocol (MCP) server that provides real-time flight tracking and status information using the AviationStack API.\n\n<a href=\"https://glama.ai/mcp/servers/@Cyreslab-AI/flightradar-mcp-server\">\n  <img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/@Cyreslab-AI/flightradar-mcp-server/badge\" alt=\"FlightRadar Server MCP server\" />\n</a>\n\n## Features\n\nThis MCP server provides three main tools:\n\n1. **get_flight_data**: Get detailed information about a specific flight by its IATA or ICAO code\n2. **search_flights**: Search for flights by various criteria like airline, departure/arrival airports, and status\n3. **get_flight_status**: Get a human-readable status summary for a specific flight\n\n## Installation\n\n### Installing via Smithery\n\nTo install flightradar-mcp-server for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@Cyreslab-AI/flightradar-mcp-server):\n\n```bash\nnpx -y @smithery/cli install @Cyreslab-AI/flightradar-mcp-server --client claude\n```\n\n### Prerequisites\n\n- Node.js (v14 or higher)\n- npm (v6 or higher)\n- An AviationStack API key (get one at [aviationstack.com](https://aviationstack.com/))\n\n### Setup\n\n1. Clone this repository:\n\n   ```bash\n   git clone https://github.com/Cyreslab-AI/flightradar-mcp-server.git\n   cd flightradar-mcp-server\n   ```\n\n2. Install dependencies:\n\n   ```bash\n   npm install\n   ```\n\n3. Build the server:\n\n   ```bash\n   npm run build\n   ```\n\n4. Configure the server in your MCP settings file:\n\n   For Claude VSCode extension, add to `~/Library/Application Support/Code/User/globalStorage/saoudrizwan.claude-dev/settings/cline_mcp_settings.json`:\n\n   ```json\n   {\n     \"mcpServers\": {\n       \"flightradar\": {\n         \"command\": \"node\",\n         \"args\": [\"/path/to/flightradar-mcp-server/build/index.js\"],\n         \"env\": {\n           \"AVIATIONSTACK_API_KEY\": \"YOUR_API_KEY_HERE\"\n         },\n         \"disabled\": false,\n         \"autoApprove\": []\n       }\n     }\n   }\n   ```\n\n   For Claude desktop app, add to `~/Library/Application Support/Claude/claude_desktop_config.json` (macOS) or similar path on other platforms.\n\n## Usage Examples\n\nOnce the server is configured, you can use it with Claude to get flight information:\n\n### Get Flight Status\n\n```\nUser: What's the status of flight BA855?\n\nClaude: Flight BA855 (British Airways) is currently landed.\n\nDeparture: Prague Vaclav Havel Airport (PRG), Terminal 1, Gate B5\nScheduled: 3/25/2025, 11:50:00 AM\nEstimated: 3/25/2025, 11:50:00 AM\n\nArrival: Heathrow (LHR), Terminal 3\nScheduled: 3/25/2025, 1:10:00 PM\n```\n\n### Search Flights\n\n```\nUser: Find British Airways flights\n\nClaude: I found 3212 British Airways flights. Here are the first 3:\n\n1. BA5719: Tucson (TUS) to Dallas/Fort Worth (DFW)\n   Status: scheduled\n   Departure: 3/25/2025, 5:00:00 AM\n\n2. BA6096: Prague (PRG) to Helsinki (HEL)\n   Status: scheduled\n   Departure: 3/25/2025, 11:40:00 AM\n\n3. BA855: Prague (PRG) to London Heathrow (LHR)\n   Status: landed\n   Departure: 3/25/2025, 10:50:00 AM\n```\n\n### Get Flight Details\n\n```\nUser: Get detailed information about flight BA855\n\nClaude: Here are the details for flight BA855:\n\nFlight: BA855 (BAW855)\nAirline: British Airways\nAircraft: Airbus A320 (Registration: G-EUUH)\n\nDeparture:\n- Airport: Prague Vaclav Havel Airport (PRG/LKPR)\n- Terminal: 1, Gate: B5\n- Scheduled: 3/25/2025, 10:50:00 AM\n\nArrival:\n- Airport: London Heathrow (LHR/EGLL)\n- Terminal: 3\n- Scheduled: 3/25/2025, 12:10:00 PM\n\nStatus: landed\n```\n\n## API Key Configuration\n\nThis server requires an AviationStack API key to function. You can get a free API key (100 requests/month) at [aviationstack.com](https://aviationstack.com/).\n\nThe API key should be provided as an environment variable named `AVIATIONSTACK_API_KEY` in your MCP settings configuration.\n\n## License\n\nMIT"
}