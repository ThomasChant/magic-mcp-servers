{
  "mcp_name": "r-huijts/firstcycling-mcp",
  "mcp_description": "üìá ‚òÅÔ∏è - Access cycling race data, results, and statistics through natural language. Features include retrieving start lists, race results, and rider information from firstcycling.com.",
  "mcp_id": "r-huijts_firstcycling-mcp",
  "fetch_timestamp": "2025-06-23T07:45:15.141044Z",
  "github_url": "https://github.com/r-huijts/firstcycling-mcp",
  "repository": {
    "name": "firstcycling-mcp",
    "full_name": "r-huijts/firstcycling-mcp",
    "description": "This is a Model Context Protocol (MCP) server that provides professional cycling data from FirstCycling. It allows you to retrieve information about professional cyclists, race results, and more.",
    "html_url": "https://github.com/r-huijts/firstcycling-mcp",
    "created_at": "2025-03-24T13:07:41Z",
    "updated_at": "2025-05-22T11:20:00Z",
    "pushed_at": "2025-03-25T13:29:41Z",
    "size": 502,
    "stargazers_count": 9,
    "watchers_count": 9,
    "forks_count": 5,
    "open_issues_count": 2,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "master",
    "owner": {
      "login": "r-huijts",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/22192747?v=4",
      "html_url": "https://github.com/r-huijts"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 5,
    "subscribers_count": 1,
    "languages": {
      "Python": 181577,
      "Batchfile": 764,
      "Makefile": 638
    },
    "language_percentages": {
      "Python": 99.23,
      "Batchfile": 0.42,
      "Makefile": 0.35
    },
    "pull_requests_count": 1,
    "contributors_count": 1
  },
  "readme": "# FirstCycling MCP Server\n\nThis is a Model Context Protocol (MCP) server that provides professional cycling data from FirstCycling. It allows you to retrieve comprehensive information about professional cyclists, race results, race details, and historical cycling data.\n\n## Features\n\nThis MCP server offers rich access to professional cycling data, providing tools for:\n\n- Finding information about professional cyclists\n- Retrieving race results and details\n- Exploring historical race data\n- Analyzing rider performance and career progression\n- Accessing information about cycling teams and competitions\n\n## Real-World Use Cases\n\nWith this MCP server, you can use Claude to:\n\n### Rider Analysis\n\n- **Performance Tracking**: \"How has Tadej Pogaƒçar performed in the Tour de France over the years?\"\n- **Career Progression**: \"Show me the team history and career progression of Wout van Aert.\"\n- **Specialization Analysis**: \"What are Mathieu van der Poel's results in Monument classics?\"\n- **Victory Analysis**: \"List all WorldTour victories for Jonas Vingegaard.\"\n- **Historical Comparison**: \"Compare the Grand Tour results of Primo≈æ Rogliƒç and Jonas Vingegaard.\"\n\n### Race Research\n\n- **Recent Results**: \"Show me the results of the 2023 Paris-Roubaix.\"\n- **Historical Context**: \"Who are the youngest and oldest winners of the Tour of Flanders?\"\n- **Team Analysis**: \"Get the startlist for the 2023 Tour de France with detailed team information.\"\n- **Race Statistics**: \"Show me the victory table for Li√®ge-Bastogne-Li√®ge. Who has won it the most times?\"\n- **Stage Information**: \"Can you show me the stage profiles for the 2023 Giro d'Italia?\"\n\n### Sports Journalism\n\n- \"Create a detailed profile of Remco Evenepoel for a cycling magazine article.\"\n- \"Write a preview for the upcoming Tour de France based on the recent results of top contenders like Tadej Pogaƒçar and Jonas Vingegaard.\"\n- \"Analyze the evolution of Tom Pidcock's career based on his race results and team history.\"\n\n### Cycling Education\n\n- \"Explain what makes the Monument classics special using data about their history and winners.\"\n- \"Create an educational summary about Grand Tours and their significance in professional cycling.\"\n- \"Describe the typical career progression of a professional cyclist using examples from the data.\"\n\n## Requirements\n\n- Python 3.10 or higher\n- `uv` package manager (recommended)\n- Dependencies as listed in `pyproject.toml`, including:\n  - mcp\n  - beautifulsoup4\n  - lxml\n  - pandas\n  - slumber\n  - and other packages for web scraping and data processing\n\n## Setup\n\n1. Clone this repository\n2. Create and activate a virtual environment:\n   ```\n   uv venv\n   source .venv/bin/activate  # On macOS/Linux\n   # or\n   .venv\\Scripts\\activate  # On Windows\n   ```\n3. Install dependencies:\n   ```\n   uv pip install -e .\n   ```\n\n## FirstCycling API\n\nThis server uses the [FirstCycling API](https://github.com/baronet2/FirstCyclingAPI), which has been integrated directly into the project. The API provides methods to fetch data from the FirstCycling website through web scraping.\n\n## MCP Tools\n\nThe server exposes the following tools through the Model Context Protocol:\n\n### Rider Information\n\n| Tool | Description |\n|------|-------------|\n| `get_rider_info` | Get basic biographical information about a rider including nationality, birthdate, weight, height, and current team |\n| `get_rider_best_results` | Retrieve a rider's best career results, sorted by importance |\n| `get_rider_grand_tour_results` | Get a rider's results in Grand Tours (Tour de France, Giro d'Italia, Vuelta a Espa√±a) |\n| `get_rider_monument_results` | Retrieve a rider's results in cycling's Monument classics |\n| `get_rider_team_and_ranking` | Get a rider's team history and UCI ranking evolution over time |\n| `get_rider_race_history` | Retrieve a rider's complete race participation history, optionally filtered by year |\n| `get_rider_one_day_races` | Get a rider's results in one-day races, optionally filtered by year |\n| `get_rider_stage_races` | Get a rider's results in multi-day stage races, optionally filtered by year |\n| `get_rider_teams` | Retrieve the complete team history of a rider throughout their career |\n| `get_rider_victories` | Get a list of a rider's career victories, with optional filters for WorldTour or UCI races |\n\n### Race Information\n\n| Tool | Description |\n|------|-------------|\n| `get_race_results` | Retrieve results for a specific race edition by race ID and year |\n| `get_race_overview` | Get general information about a race including history, records, and past winners |\n| `get_race_stage_profiles` | Retrieve stage profiles and details for multi-stage races |\n| `get_race_startlist` | Get the startlist for a specific race edition with detailed or basic team information |\n| `get_race_victory_table` | Retrieve the all-time victory table for a race showing riders with most wins |\n| `get_race_year_by_year` | Get year-by-year results for a race with optional classification filter |\n| `get_race_youngest_oldest_winners` | Retrieve information about the youngest and oldest winners of a race |\n| `get_race_stage_victories` | Get information about stage victories in multi-stage races |\n\n### Search Tools\n\n| Tool | Description |\n|------|-------------|\n| `search_rider` | Search for riders by name, returning their IDs and basic information |\n| `search_race` | Search for races by name, returning their IDs and basic information |\n\n## Usage\n\n### Development Mode\n\nYou can test the server with MCP Inspector by running:\n\n```\nuv run mcp dev firstcycling.py\n```\n\nThis will start the server and open the MCP Inspector in your browser, allowing you to test the available tools.\n\n### Integration with Claude for Desktop\n\nTo integrate this server with Claude for Desktop:\n\n1. Edit the Claude for Desktop config file, located at:\n   - macOS: `~/Library/Application Support/Claude/claude_desktop_config.json`\n   - Windows: `%APPDATA%\\Claude\\claude_desktop_config.json`\n\n2. Add the server to your configuration:\n   ```json\n   {\n     \"mcpServers\": {\n       \"firstcycling\": {\n         \"command\": \"uv\",\n         \"args\": [\"--directory\", \"/path/to/server/directory\", \"run\", \"firstcycling.py\"]\n       }\n     }\n   }\n   ```\n\n3. Restart Claude for Desktop\n\n## License\n\nMIT\n"
}