{
  "mcp_name": "ZeparHyfar/mcp-datetime",
  "mcp_description": "MCP server providing date and time functions in various formats",
  "mcp_id": "ZeparHyfar_mcp-datetime",
  "fetch_timestamp": "2025-06-23T09:46:15.766487Z",
  "github_url": "https://github.com/ZeparHyfar/mcp-datetime",
  "repository": {
    "name": "mcp-datetime",
    "full_name": "ZeparHyfar/mcp-datetime",
    "description": "A MCP server for datetime formatting and file name generation.",
    "html_url": "https://github.com/ZeparHyfar/mcp-datetime",
    "created_at": "2024-12-12T14:29:06Z",
    "updated_at": "2025-06-20T13:07:51Z",
    "pushed_at": "2024-12-13T06:39:14Z",
    "size": 22,
    "stargazers_count": 17,
    "watchers_count": 17,
    "forks_count": 7,
    "open_issues_count": 4,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "ZeparHyfar",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/66217441?v=4",
      "html_url": "https://github.com/ZeparHyfar"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 7,
    "subscribers_count": 2,
    "languages": {
      "Python": 4590
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 3,
    "contributors_count": 1
  },
  "readme": "# mcp-datetime\n\n[![Python Version](https://img.shields.io/badge/python-3.12-blue.svg)](https://www.python.org/downloads/)\n[![MCP Version](https://img.shields.io/badge/mcp-1.1.1-green.svg)](https://github.com/anaisbetts/mcp)\n[![License](https://img.shields.io/badge/license-MIT-blue.svg)](LICENSE)\n\nEnglish | [日本語](README_ja.md)\n\nA datetime formatting service implemented as an MCP server for the Claude Desktop Application. Supports generation of datetime strings in various formats.\n\n> **Note**: This package has been tested only on macOS. Windows compatibility has not been verified.\n\n## Prerequisites\n\nBefore using mcp-datetime, ensure you have the following tools installed:\n\n- Python 3.12 or later\n- uv (Python package installer)\n- uvx (Python package runner)\n\n## Features\n\n- ✨ Support for various datetime formats\n- 🇯🇵 Japanese language support\n- 📁 Optimized formats for filename generation\n- 🌏 Accurate timezone handling\n- 🔧 Seamless integration with Claude Desktop App\n\n## MCP Server Components\n\n### Tools\n\nThe server implements one tool:\n\n- `get_datetime`: Get current date and time in various formats\n  - Takes \"format\" as a required string argument\n  - Returns formatted datetime string based on specified format\n  - Supports multiple format types including standard, Japanese, and ISO formats\n\n## Usage with Claude Desktop App\n\nAdd the following to your config file:\n\nConfig file location (macOS):\n`~/Library/Application Support/Claude/claude_desktop_config.json`\n\n```json\n{\n  \"mcpServers\": {\n    \"mcp-datetime\": {\n      \"command\": \"uvx\",\n      \"args\": [\"mcp-datetime\"]\n    }\n  }\n}\n```\n\n## About Installation\n\nIf you need to install the package directly (e.g., for development or source code inspection), you can use one of these methods:\n\n- Install from PyPI\n\n  ```bash\n  pip install mcp-datetime\n  ```\n\n- Install from GitHub Source\n\n  ```bash\n  git clone https://github.com/ZeparHyfar/mcp-datetime.git\n  cd mcp-datetime\n  pip install -e .\n  ```\n\n- Example `claude_desktop_config.json` for manual installation\n\n  ```json\n  {\n    \"mcpServers\": {\n      \"mcp-datetime\": {\n        \"command\": \"python\",\n        \"args\": [\"-m\", \"mcp_datetime\"],\n        \"env\": {\n          \"PYTHON\": \"/path/to/your/python\"\n        }\n      }\n    }\n  }\n  ```\n\n  Replace \"/path/to/your/python\" with your actual Python interpreter path\n  > e.g., \"/usr/local/bin/python3\" or \"/Users/username/.pyenv/versions/3.12.0/bin/python3\"\n\n## Basic Examples\n\n- Command format\n\n  ```\n  # Standard datetime format\n  call datetime-service.get_datetime {\"format\": \"datetime\"}\n  # Result: 2024-12-10 00:54:01\n\n  # Japanese format\n  call datetime-service.get_datetime {\"format\": \"datetime_jp\"}\n  # Result: 2024年12月10日 00時54分01秒\n\n  # Filename format\n  call datetime-service.get_datetime {\"format\": \"filename_md\"}\n  # Result: 20241210005401.md\n  ```\n\n- Claude Desktop App prompt examples\n\n  - User\n\n    ```\n    Please tell me the current time in date_slash format\n    ```\n\n  - Claude\n\n    ```\n    I'll get the current date in date_slash format.\n\n    The current date is 2024/12/12\n    ```\n\n## Supported Formats\n\n| Format Name  | Example                     | Description                  |\n| ------------ | --------------------------- | ---------------------------- |\n| date         | 2024-12-10                  | Standard date format         |\n| date_slash   | 2024/12/10                  | Date with slashes            |\n| date_jp      | 2024年12月10日              | Japanese date format         |\n| datetime     | 2024-12-10 00:54:01         | Standard datetime            |\n| datetime_jp  | 2024年12月10日 00時54分01秒 | Japanese datetime            |\n| datetime_t   | 2024-12-10T00:54:01         | DateTime with T separator    |\n| compact      | 20241210005401              | Compact format for IDs       |\n| compact_date | 20241210                    | Compact date only            |\n| compact_time | 005401                      | Compact time only            |\n| filename_md  | 20241210005401.md           | Markdown filename            |\n| filename_txt | 20241210005401.txt          | Text filename                |\n| filename_log | 20241210005401.log          | Log filename                 |\n| iso          | 2024-12-10T00:54:01+0900    | ISO 8601 format              |\n| iso_basic    | 20241210T005401+0900        | Basic ISO format             |\n| log          | 2024-12-10 00:54:01.123456  | Log format with microseconds |\n| log_compact  | 20241210_005401             | Compact log format           |\n| time         | 00:54:01                    | Time only                    |\n| time_jp      | 00時54分01秒                | Japanese time format         |\n\n## Debugging\n\nSince MCP servers run over stdio, debugging can be challenging. We recommend using the [MCP Inspector](https://github.com/modelcontextprotocol/inspector):\n\n- Using PyPI package\n\n  ```\n  npx @modelcontextprotocol/inspector uvx mcp-datetime\n  ```\n\n- Using downloaded source code from GitHub\n\n  ```\n  git clone https://github.com/ZeparHyfar/mcp-datetime.git\n  npx @modelcontextprotocol/inspector uvx --directory ./mcp-datetime run mcp-datetime\n  ```\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\n"
}