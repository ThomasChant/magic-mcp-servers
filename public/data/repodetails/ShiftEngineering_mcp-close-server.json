{
  "mcp_name": "ShiftEngineering/mcp-close-server",
  "mcp_description": "Connects to Close.com API to manage leads, contacts, emails, tasks, opportunities, calls, and users for AI assistants.",
  "mcp_id": "ShiftEngineering_mcp-close-server",
  "fetch_timestamp": "2025-06-23T08:23:52.689926Z",
  "github_url": "https://github.com/ShiftEngineering/mcp-close-server",
  "repository": {
    "name": "mcp-close-server",
    "full_name": "ShiftEngineering/mcp-close-server",
    "description": "Close.com MCP Server",
    "html_url": "https://github.com/ShiftEngineering/mcp-close-server",
    "created_at": "2025-04-22T20:21:03Z",
    "updated_at": "2025-04-24T15:46:58Z",
    "pushed_at": "2025-04-24T15:46:54Z",
    "size": 155,
    "stargazers_count": 2,
    "watchers_count": 2,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "JavaScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "ShiftEngineering",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/158122561?v=4",
      "html_url": "https://github.com/ShiftEngineering"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 0,
    "languages": {
      "JavaScript": 30634,
      "TypeScript": 26376,
      "Shell": 1127
    },
    "language_percentages": {
      "JavaScript": 52.69,
      "TypeScript": 45.37,
      "Shell": 1.94
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "package_json_version": "1.0.1"
  },
  "readme": "# Close.com MCP Server\n\nAn MCP (Model Context Protocol) server that connects to Close.com API, allowing AI assistants to search and retrieve lead and contact information.\n\n## Features\n\n- Lead Management\n  - Search leads with query and limit\n  - Get detailed lead information\n- Contact Management\n  - Get detailed contact information\n- Email Activity Management\n  - Get email details\n  - Create, update, and delete emails\n  - Support for email templates and attachments\n- Task Management\n  - Create, update, and delete tasks\n  - Get detailed task information\n- Opportunity Management\n  - Create, update, and delete opportunities\n  - Get detailed opportunity information\n  - Track opportunity values and confidence levels\n  - Manage opportunity status and won dates\n- Call Activity Management\n  - Get call details\n  - Create, update, and delete calls\n  - Track call duration, disposition, and cost\n  - Support for call recordings\n- User Management\n  - Get detailed user information\n  - List all users\n  - Check user availability status\n- API Connection Testing\n  - Verify Close.com API connectivity\n\n## Prerequisites\n\n- Node.js 17 or higher\n- Close.com API key\n- An MCP client (like Claude Desktop)\n\n## Installation\n\n### Option 1: Install via npm/npx (Recommended)\n\n1. Install the package globally:\n   ```bash\n   npm install -g @shiftengineering/mcp-close-server\n   ```\n\n2. Configure Claude Desktop to use this server by editing your `claude_desktop_config.json`:\n\n```json\n{\n  \"mcpServers\": {\n    \"close\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"@shiftengineering/mcp-close-server\"\n      ],\n      \"env\": {\n        \"CLOSE_API_KEY\": \"your_api_key_here\"\n      }\n    }\n  }\n}\n```\n\n### Option 2: Install from source\n\n1. Clone this repository:\n   ```bash\n   git clone https://github.com/shiftengineering/mcp-close-server.git\n   cd mcp-close-server\n   ```\n\n2. Install dependencies:\n   ```bash\n   npm install\n   ```\n\n3. Build the project:\n   ```bash\n   npm run build\n   ```\n\n## Usage\n\n### Running the server directly\n\nMake sure to set your Close.com API key as an environment variable:\n\n```bash\nexport CLOSE_API_KEY=\"your_api_key_here\"\nnpm start\n```\n\n### Using with Claude Desktop\n\n1. If you installed via npm/npx, skip to step 2. If you installed from source, build the project as described above.\n\n2. Configure Claude Desktop to use this server by editing your `claude_desktop_config.json`:\n\n```json\n{\n  \"mcpServers\": {\n    \"close\": {\n      \"command\": \"node\",\n      \"args\": [\n        \"/absolute/path/to/mcp-close-server/build/index.js\"\n      ],\n      \"env\": {\n        \"CLOSE_API_KEY\": \"your_api_key_here\"\n      }\n    }\n  }\n}\n```\n\n3. Restart Claude Desktop\n\n### Example Queries\n\nAfter setting up the server with Claude Desktop, you can ask Claude questions like:\n\n- \"Can you search for leads related to Acme Corp?\"\n- \"Find any contacts named John Smith\"\n- \"Get details for lead with ID lead_abc123\"\n- \"Search for leads in the Technology sector\"\n- \"Find contacts with email addresses from google.com domain\"\n- \"Can you check if our Close.com API connection is working?\"\n\n## Available Tools\n\n### search_leads\n\nSearch for leads in Close.com.\n\nParameters:\n- `query` (string): Search query string (e.g., company name, contact, etc.)\n- `limit` (number, optional): Maximum number of results to return (default: 10)\n\n### get_lead_details\n\nGet detailed information about a specific lead.\n\nParameters:\n- `lead_id` (string): The ID of the lead to retrieve\n\n### get_contact_details\n\nGet detailed information about a specific contact.\n\nParameters:\n- `contact_id` (string): The ID of the contact to retrieve\n\n### get_email_details\n\nGet detailed information about a specific email.\n\nParameters:\n- `email_id` (string): The ID of the email to retrieve\n\n### create_email\n\nCreate a new email in Close.com.\n\nParameters:\n- `lead_id` (string): The ID of the lead to create the email for\n- `status` (string): Email status ('inbox', 'draft', 'scheduled', 'outbox', 'sent')\n- `subject` (string): Email subject\n- `body_text` (string, optional): Plain text email body\n- `body_html` (string, optional): HTML email body\n- `template_id` (string, optional): Email template ID\n- `date_scheduled` (string, optional): Scheduled date (ISO format)\n- `send_in` (number, optional): Seconds until sending\n- `followup_date` (string, optional): Follow-up date (ISO format)\n- `sender` (string, optional): Sender email address\n- `attachments` (array, optional): Array of attachment objects\n\n### update_email\n\nUpdate an existing email in Close.com.\n\nParameters:\n- `email_id` (string): The ID of the email to update\n- `status` (string, optional): Email status\n- `subject` (string, optional): Email subject\n- `body_text` (string, optional): Plain text email body\n- `body_html` (string, optional): HTML email body\n- `date_scheduled` (string, optional): Scheduled date (ISO format)\n- `followup_date` (string, optional): Follow-up date (ISO format)\n\n### delete_email\n\nDelete an email in Close.com.\n\nParameters:\n- `email_id` (string): The ID of the email to delete\n\n### create_task\n\nCreate a new task in Close.com.\n\nParameters:\n- `lead_id` (string): The ID of the lead to create the task for\n- `text` (string): The task description\n- `date` (string): The task date (ISO format)\n- `assigned_to` (string, optional): The ID of the user to assign the task to\n\n### get_task_details\n\nGet detailed information about a specific task.\n\nParameters:\n- `task_id` (string): The ID of the task to retrieve\n\n### update_task\n\nUpdate an existing task in Close.com.\n\nParameters:\n- `task_id` (string): The ID of the task to update\n- `assigned_to` (string, optional): The ID of the user to assign the task to\n- `date` (string, optional): The new task date (ISO format)\n- `is_complete` (boolean, optional): Whether the task is complete\n- `text` (string, optional): The new task description\n\n### delete_task\n\nDelete a task in Close.com.\n\nParameters:\n- `task_id` (string): The ID of the task to delete\n\n### create_opportunity\n\nCreate a new opportunity in Close.com.\n\nParameters:\n- `lead_id` (string, optional): The ID of the lead\n- `status_id` (string, optional): The status ID\n- `value` (number, optional): Opportunity value\n- `value_period` (string, optional): Value period ('one_time', 'monthly', 'annual')\n- `confidence` (number, optional): Confidence level\n- `note` (string, optional): Opportunity note\n- `custom` (object, optional): Custom fields\n\n### get_opportunity_details\n\nGet detailed information about a specific opportunity.\n\nParameters:\n- `opportunity_id` (string): The ID of the opportunity to retrieve\n\n### update_opportunity\n\nUpdate an existing opportunity in Close.com.\n\nParameters:\n- `opportunity_id` (string): The ID of the opportunity to update\n- `status_id` (string, optional): The status ID\n- `value` (number, optional): Opportunity value\n- `value_period` (string, optional): Value period ('one_time', 'monthly', 'annual')\n- `confidence` (number, optional): Confidence level\n- `note` (string, optional): Opportunity note\n- `custom` (object, optional): Custom fields\n- `date_won` (string, optional): Date won (ISO format)\n\n### delete_opportunity\n\nDelete an opportunity in Close.com.\n\nParameters:\n- `opportunity_id` (string): The ID of the opportunity to delete\n\n### get_call_details\n\nGet detailed information about a specific call.\n\nParameters:\n- `call_id` (string): The ID of the call to retrieve\n\n### create_call\n\nCreate a new call in Close.com.\n\nParameters:\n- `lead_id` (string): The ID of the lead\n- `status` (string, optional): Call status ('completed')\n- `direction` (string, optional): Call direction ('outbound', 'inbound')\n- `duration` (number, optional): Call duration in seconds\n- `recording_url` (string, optional): URL of call recording\n- `note_html` (string, optional): HTML formatted note\n- `note` (string, optional): Plain text note\n- `disposition` (string, optional): Call disposition\n- `cost` (number, optional): Call cost\n\n### update_call\n\nUpdate an existing call in Close.com.\n\nParameters:\n- `call_id` (string): The ID of the call to update\n- `note_html` (string, optional): HTML formatted note\n- `note` (string, optional): Plain text note\n- `recording_url` (string, optional): URL of call recording\n- `disposition` (string, optional): Call disposition\n- `cost` (number, optional): Call cost\n\n### delete_call\n\nDelete a call in Close.com.\n\nParameters:\n- `call_id` (string): The ID of the call to delete\n\n### get_user_details\n\nGet detailed information about a specific user.\n\nParameters:\n- `user_id` (string): The ID of the user to retrieve\n\n### list_users\n\nList all users in the organization.\n\nNo parameters required.\n\n### get_user_availability\n\nGet user availability status.\n\nParameters:\n- `organization_id` (string, optional): The ID of the organization\n\n### test_connection\n\nTest the connection to Close.com API.\n\nNo parameters required.\n\n## Security\n\nThis server performs read and write operations on your Close.com account. The API key should be kept secure and not shared.\n\n## License\n\nMIT\n"
}