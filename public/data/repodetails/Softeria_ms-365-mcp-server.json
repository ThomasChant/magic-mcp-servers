{
  "mcp_name": "Microsoft 365",
  "mcp_description": "MCP server that connects to the whole Microsoft 365 suite (Microsoft Office, Outlook, etc.) using Graph API (including mail, files, Excel, calendar)",
  "mcp_id": "Softeria_ms-365-mcp-server",
  "fetch_timestamp": "2025-06-23T06:45:07.319855Z",
  "github_url": "https://github.com/softeria/ms-365-mcp-server",
  "repository": {
    "name": "ms-365-mcp-server",
    "full_name": "Softeria/ms-365-mcp-server",
    "description": "A Model Context Protocol (MCP) server for interacting with Microsoft 365 and Office services through the Graph API",
    "html_url": "https://github.com/Softeria/ms-365-mcp-server",
    "created_at": "2025-04-02T19:55:54Z",
    "updated_at": "2025-06-22T12:21:58Z",
    "pushed_at": "2025-06-22T12:21:40Z",
    "size": 1075,
    "stargazers_count": 96,
    "watchers_count": 96,
    "forks_count": 23,
    "open_issues_count": 3,
    "language": "TypeScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "Softeria",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/33659169?v=4",
      "html_url": "https://github.com/Softeria"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 23,
    "subscribers_count": 2,
    "languages": {
      "TypeScript": 896917,
      "JavaScript": 22638
    },
    "language_percentages": {
      "TypeScript": 97.54,
      "JavaScript": 2.46
    },
    "pull_requests_count": 33,
    "contributors_count": 4,
    "latest_release": {
      "tag_name": "v0.9.3",
      "name": "v0.9.3",
      "published_at": "2025-06-22T12:21:40Z",
      "body": "Version 0.9.3",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v0.9.3",
        "commit_sha": "005ecfb237b6b762a3fa9b1bbc5fa4e674452eaa"
      },
      {
        "name": "v0.9.2",
        "commit_sha": "90d6419d1c569d814eed0cc83c8607cd003c4669"
      },
      {
        "name": "v0.9.1",
        "commit_sha": "f23a738fb36a60e4896a531b3fca7c1552a82845"
      },
      {
        "name": "v0.9.0",
        "commit_sha": "5b24216a6ca01239c9d5852cfa8470dd24f56751"
      },
      {
        "name": "v0.8.0",
        "commit_sha": "e1c247197ca7d4a3d2cbf3d692cb2b378b8b8c03"
      },
      {
        "name": "v0.7.0",
        "commit_sha": "117b4f192b7b2289854cae468184a3bc1dc2d372"
      },
      {
        "name": "v0.6.2",
        "commit_sha": "16e44c75b838e9f34cd06a65f290d06621e377a2"
      },
      {
        "name": "v0.6.1",
        "commit_sha": "44b8c0c951de19701f0e6d2be9b8bb74403393c1"
      },
      {
        "name": "v0.6.0",
        "commit_sha": "31d23c3a5e302b8526a1b1067957b5f0df42f4d2"
      },
      {
        "name": "v0.5.1",
        "commit_sha": "7bf9a660b663787388ac88f952817ee83a9a309c"
      }
    ],
    "latest_version": "v0.9.3",
    "package_json_version": "0.9.3"
  },
  "readme": "# ms-365-mcp-server\n\n[![npm version](https://img.shields.io/npm/v/@softeria/ms-365-mcp-server.svg)](https://www.npmjs.com/package/@softeria/ms-365-mcp-server) [![build status](https://github.com/softeria/ms-365-mcp-server/actions/workflows/build.yml/badge.svg)](https://github.com/softeria/ms-365-mcp-server/actions/workflows/build.yml) [![license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/softeria/ms-365-mcp-server/blob/main/LICENSE)\n\nMicrosoft 365 MCP Server\n\nA Model Context Protocol (MCP) server for interacting with Microsoft 365 and Office services through the Graph API.\n\n## Prerequisites\n\n- Node.js >= 14\n\n## Features\n\n- Authentication via Microsoft Authentication Library (MSAL)\n- Excel file operations\n- Calendar event management\n- Mail operations\n- OneDrive file management\n- OneNote notebooks and pages\n- To Do tasks and task lists\n- Planner plans and tasks\n- Outlook contacts\n\n## Quick Start Example\n\nTest login in Claude Desktop:\n\n![Login example](https://github.com/user-attachments/assets/27f57f0e-57b8-4366-a8d1-c0bdab79900c)\n\n## Examples\n\n![Image](https://github.com/user-attachments/assets/ed275100-72e8-4924-bcf2-cd8e1b4c6f3a)\n\n## Integration\n\n### Claude Desktop\n\nTo add this MCP server to Claude Desktop:\n\nEdit the config file under Settings > Developer:\n\n```json\n{\n  \"mcpServers\": {\n    \"ms365\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"@softeria/ms-365-mcp-server\"]\n    }\n  }\n}\n```\n\n### Claude Code CLI\n\n```bash\nclaude mcp add ms365 -- npx -y @softeria/ms-365-mcp-server\n```\n\nFor other interfaces that support MCPs, please refer to their respective documentation for the correct\nintegration method.\n\n### Authentication\n\n> ⚠️ You must authenticate before using tools.\n\nThe server supports two authentication methods:\n\n#### 1. Device Code Flow (Default)\n\nFor interactive authentication via device code:\n\n- **MCP client login**:\n  - Call the `login` tool (auto-checks existing token)\n  - If needed, get URL+code, visit in browser\n  - Use `verify-login` tool to confirm\n- **CLI login**:\n  ```bash\n  npx @softeria/ms-365-mcp-server --login\n  ```\n  Follow the URL and code prompt in the terminal.\n\nTokens are cached securely in your OS credential store (fallback to file).\n\n#### 2. OAuth Authorization Code Flow (HTTP mode only)\n\nWhen running with `--http`, the server **requires** OAuth authentication:\n\n```bash\nnpx @softeria/ms-365-mcp-server --http 3000\n```\n\nThis mode:\n\n- Advertises OAuth capabilities to MCP clients\n- Provides OAuth endpoints at `/auth/*` (authorize, token, metadata)\n- **Requires** `Authorization: Bearer <token>` for all MCP requests\n- Validates tokens with Microsoft Graph API\n- **Disables** login/logout tools by default (use `--enable-auth-tools` to enable them)\n\nMCP clients will automatically handle the OAuth flow when they see the advertised capabilities.\n\n> **Note**: HTTP mode requires authentication. For unauthenticated testing, use stdio mode with device code flow.\n>\n> **Authentication Tools**: In HTTP mode, login/logout tools are disabled by default since OAuth handles authentication.\n> Use `--enable-auth-tools` if you need them available.\n\n## CLI Options\n\nThe following options can be used when running ms-365-mcp-server directly from the command line:\n\n```\n--login           Login using device code flow\n--logout          Log out and clear saved credentials\n--verify-login    Verify login without starting the server\n```\n\n### Server Options\n\nWhen running as an MCP server, the following options can be used:\n\n```\n-v                Enable verbose logging\n--read-only       Start server in read-only mode, disabling write operations\n--http [port]     Use Streamable HTTP transport instead of stdio (optionally specify port, default: 3000)\n                  Starts Express.js server with MCP endpoint at /mcp\n--enable-auth-tools Enable login/logout tools when using HTTP mode (disabled by default in HTTP mode)\n--enabled-tools <pattern> Filter tools using regex pattern (e.g., \"excel|contact\" to enable Excel and Contact tools)\n```\n\nEnvironment variables:\n\n- `READ_ONLY=true|1`: Alternative to --read-only flag\n- `ENABLED_TOOLS`: Filter tools using regex pattern (alternative to --enabled-tools flag)\n- `LOG_LEVEL`: Set logging level (default: 'info')\n- `SILENT=true`: Disable console output\n- `MS365_MCP_CLIENT_ID`: Custom Azure app client ID (defaults to built-in app)\n- `MS365_MCP_TENANT_ID`: Custom tenant ID (defaults to 'common' for multi-tenant)\n\n## Support\n\nIf you're having problems or need help:\n\n- Create an [issue](https://github.com/softeria/ms-365-mcp-server/issues)\n- Start a [discussion](https://github.com/softeria/ms-365-mcp-server/discussions)\n- Email: eirikb@eirikb.no\n- Discord: https://discord.gg/WvGVNScrAZ or @eirikb\n\n## License\n\nMIT © 2025 Softeria\n"
}