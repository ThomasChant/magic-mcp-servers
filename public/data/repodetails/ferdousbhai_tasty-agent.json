{
  "mcp_name": "ferdousbhai/tasty-agent",
  "mcp_description": "üêç ‚òÅÔ∏è - Tastyworks API integration to handle trading activities on Tastytrade",
  "mcp_id": "ferdousbhai_tasty-agent",
  "fetch_timestamp": "2025-06-23T03:15:52.129144Z",
  "github_url": "https://github.com/ferdousbhai/tasty-agent",
  "repository": {
    "name": "tasty-agent",
    "full_name": "ferdousbhai/tasty-agent",
    "description": "Let Claude manage your tastytrade portfolio.",
    "html_url": "https://github.com/ferdousbhai/tasty-agent",
    "created_at": "2024-11-08T01:59:37Z",
    "updated_at": "2025-06-21T05:20:40Z",
    "pushed_at": "2025-06-21T05:21:01Z",
    "size": 278,
    "stargazers_count": 25,
    "watchers_count": 25,
    "forks_count": 5,
    "open_issues_count": 0,
    "language": "Python",
    "license": "MIT License",
    "topics": [
      "finance",
      "investing",
      "options",
      "stocks",
      "tastytrade",
      "trading"
    ],
    "default_branch": "main",
    "owner": {
      "login": "ferdousbhai",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/23114244?v=4",
      "html_url": "https://github.com/ferdousbhai"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 5,
    "subscribers_count": 1,
    "languages": {
      "Python": 15616
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 3,
    "tags": [
      {
        "name": "v1.0.0",
        "commit_sha": "cf33dd86ceaeebe20ee50ae3933840136f376bc9"
      }
    ],
    "latest_version": "v1.0.0"
  },
  "readme": "# tasty-agent: A TastyTrade MCP Server\n\nA Model Context Protocol server for TastyTrade brokerage accounts. Enables LLMs to monitor portfolios, analyze positions, and execute trades.\n\n## Installation\n\n```bash\nuvx tasty-agent\n```\n\n### Authentication\n\nSet up credentials (stored in system keyring):\n```bash\nuvx tasty-agent setup\n```\n\nOr use environment variables:\n- `TASTYTRADE_USERNAME`\n- `TASTYTRADE_PASSWORD`\n- `TASTYTRADE_ACCOUNT_ID` (optional)\n\n## MCP Tools\n\n### Account & Portfolio\n- **`get_balances`** - Account balances and buying power\n- **`get_positions`** - All open positions with current values\n- **`get_live_orders`** - Currently active orders\n- **`get_net_liquidating_value_history`** - Portfolio value history (1d, 1m, 3m, 6m, 1y, all)\n- **`get_history`** - Transaction history (default: last 90 days)\n\n### Order Management\n- **`place_order`** - Place new orders (single/multi-leg strategies)\n  - Parameters: `legs`, `order_type` (Limit/Market), `time_in_force` (Day/GTC/IOC), `price`, `dry_run`\n- **`delete_order`** - Cancel orders by ID\n- **`get_order`** - Get order details by ID\n- **`replace_order`** - Modify existing orders\n\n### Market Data\n- **`get_option_chain`** - Option chain with filtering by expiration, strikes, type\n- **`get_quote`** - Real-time quotes via DXLink streaming\n- **`get_market_metrics`** - IV rank, percentile, beta, liquidity for multiple symbols\n- **`check_market_status`** - Market hours and next open time\n\n## Order Format\n\nOrders use JSON leg format:\n```json\n[\n  {\n    \"symbol\": \"AAPL\",\n    \"quantity\": \"100\",\n    \"action\": \"Buy\",\n    \"instrument_type\": \"Equity\"\n  }\n]\n```\n\n**Actions**: Equity: Buy/Sell | Options: Buy/Sell to Open/Close\n**Option Symbols**: Auto-normalized from OCC to OSI format\n\n## Key Features\n\n- **Multi-leg strategies** with complex option spreads\n- **Real-time streaming** quotes via DXLink WebSocket\n- **Dry-run testing** for all order operations\n- **Automatic symbol normalization** for options\n- **Fresh data** always from TastyTrade API\n\n## Usage with Claude Desktop\n\nAdd to `claude_desktop_config.json`:\n```json\n{\n  \"mcpServers\": {\n    \"tastytrade\": {\n      \"command\": \"uvx\",\n      \"args\": [\"tasty-agent\"]\n    }\n  }\n}\n```\n\n## Examples\n\n```\n\"Get my account balances and current positions\"\n\"Show AAPL option chain for next Friday expiration\"\n\"Get real-time quote for SPY\"\n\"Place dry-run order: buy 100 AAPL shares at market\"\n\"Cancel order 12345\"\n```\n\n### Multi-leg Order Example\n```python\n# Iron condor strategy\nlegs = [\n  {\"symbol\": \"SPY240315P00480000\", \"quantity\": \"1\", \"action\": \"Sell to Open\", \"instrument_type\": \"Equity Option\"},\n  {\"symbol\": \"SPY240315P00475000\", \"quantity\": \"1\", \"action\": \"Buy to Open\", \"instrument_type\": \"Equity Option\"},\n  {\"symbol\": \"SPY240315C00520000\", \"quantity\": \"1\", \"action\": \"Sell to Open\", \"instrument_type\": \"Equity Option\"},\n  {\"symbol\": \"SPY240315C00525000\", \"quantity\": \"1\", \"action\": \"Buy to Open\", \"instrument_type\": \"Equity Option\"}\n]\n```\n\n## Development\n\nDebug with MCP inspector:\n```bash\nnpx @modelcontextprotocol/inspector uvx tasty-agent\n```\n\n## License\n\nMIT License\n"
}