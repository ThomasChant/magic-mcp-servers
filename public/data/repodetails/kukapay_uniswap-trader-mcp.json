{
  "mcp_name": "kukapay/uniswap-trader-mcp",
  "mcp_description": "üêç ‚òÅÔ∏è -  An MCP server for AI agents to automate token swaps on Uniswap DEX across multiple blockchains.",
  "mcp_id": "kukapay_uniswap-trader-mcp",
  "fetch_timestamp": "2025-06-23T06:01:51.945992Z",
  "github_url": "https://github.com/kukapay/uniswap-trader-mcp",
  "repository": {
    "name": "uniswap-trader-mcp",
    "full_name": "kukapay/uniswap-trader-mcp",
    "description": "An MCP server for AI agents to automate token swaps on Uniswap DEX across multiple blockchains.",
    "html_url": "https://github.com/kukapay/uniswap-trader-mcp",
    "created_at": "2025-03-21T04:35:32Z",
    "updated_at": "2025-06-22T08:33:38Z",
    "pushed_at": "2025-05-07T17:23:28Z",
    "size": 46,
    "stargazers_count": 20,
    "watchers_count": 20,
    "forks_count": 6,
    "open_issues_count": 1,
    "language": "JavaScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "kukapay",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/201164822?v=4",
      "html_url": "https://github.com/kukapay"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 6,
    "subscribers_count": 2,
    "languages": {
      "JavaScript": 16532,
      "Dockerfile": 402
    },
    "language_percentages": {
      "JavaScript": 97.63,
      "Dockerfile": 2.37
    },
    "pull_requests_count": 1,
    "contributors_count": 2,
    "package_json_version": "1.0.1"
  },
  "readme": "# Uniswap Trader MCP\n[![smithery badge](https://smithery.ai/badge/@kukapay/uniswap-trader-mcp)](https://smithery.ai/server/@kukapay/uniswap-trader-mcp)\n\nAn MCP server for AI agents to automate token swaps on Uniswap DEX across multiple blockchains.\n\n## Features\n- **Price Quotes**: Get real-time price quotes for token swaps with multi-hop route optimization.\n- **Swap Execution**: Execute swaps on Uniswap V3 with configurable slippage tolerance and deadlines.\n- **Swap Suggestions**: Generate trading suggestions based on liquidity, fees, and optimal paths.\n- **Multi-Chain Support**: Compatible with Ethereum, Optimism, Polygon, Arbitrum, Celo, BNB Chain, Avalanche, and Base.\n\n## Prerequisites\n- **Node.js**: Version 14.x or higher.\n- **npm**: For package management.\n- **Wallet**: A funded wallet with a private key for executing swaps.\n- **RPC Endpoints**: Access to blockchain RPC URLs (e.g., Infura, Alchemy) for supported chains.\n\n## Installation\n\n### Installing via Smithery\n\nTo install Uniswap Trader MCP for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@kukapay/uniswap-trader-mcp):\n\n```bash\nnpx -y @smithery/cli install @kukapay/uniswap-trader-mcp --client claude\n```\n\n### Manual Installation\n1. **Clone the Repository**:\n   ```bash\n   git clone https://github.com/kukapay/uniswap-trader-mcp.git\n   cd uniswap-trader-mcp\n   ```\n\n2. **Install Dependencies**:\n   ```bash\n   npm install\n   ```\n\n## Configuration\n\n```json\n{\n  \"mcpServers\": {\n    \"Uniswap-Trader-MCP\": {\n      \"command\": \"node\",\n      \"args\": [\"path/to/uniswap-trader-mcp/server/index.js\"],\n      \"env\": {\n        \"INFURA_KEY\": \"your infura key\",\n        \"WALLET_PRIVATE_KEY\": \"your private key\"\n      }\n    }\n  }\n}\n```\n## Usage\n\n### Supported Chains\nThe following blockchains are supported. Ensure each chain is configured in `chainConfigs.js` with a valid RPC URL, WETH address, and SwapRouter address.\n\n| Chain ID | Name         | Notes                                      |\n|----------|--------------|--------------------------------------------|\n| 1        | Ethereum     | Mainnet, widely used for Uniswap trades   |\n| 10       | Optimism     | Layer 2, requires Optimism RPC            |\n| 137      | Polygon      | Fast and low-cost, uses MATIC as native   |\n| 42161    | Arbitrum     | Layer 2, Arbitrum One network             |\n| 42220    | Celo         | Mobile-first blockchain, uses CELO        |\n| 56       | BNB Chain    | Binance Smart Chain, uses BNB             |\n| 43114    | Avalanche    | High-throughput, uses AVAX                |\n| 8453     | Base         | Coinbase‚Äôs Layer 2, built on Optimism     |\n\n\n### Tools and Prompts\n\n#### 1. `getPrice`\nFetches a price quote for a Uniswap swap.\n\n**Schema**:\n- `chainId`: Number (default: 1)\n- `tokenIn`: String (e.g., `\"NATIVE\"` or token address)\n- `tokenOut`: String (e.g., `\"NATIVE\"` or token address)\n- `amountIn`: String (optional, required for `\"exactIn\"`)\n- `amountOut`: String (optional, required for `\"exactOut\"`)\n- `tradeType`: `\"exactIn\"` or `\"exactOut\"` (default: `\"exactIn\"`)\n\nExample prompt:\n\n```\nGet me a price quote for swapping 1 ETH to DAI on Ethereum.\n```\n\nOutput:\n\n```\n{\n  \"chainId\": 1,\n  \"tradeType\": \"exactIn\",\n  \"price\": \"3000.50\",\n  \"inputAmount\": \"1.000000\",\n  \"outputAmount\": \"3000.50\",\n  \"minimumReceived\": \"2985.50\",\n  \"maximumInput\": \"1.005000\",\n  \"route\": [\n    {\n      \"tokenIn\": \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\",\n      \"tokenOut\": \"0x6B175474E89094C44Da98b954EedeAC495271d0F\",\n      \"fee\": 3000\n    }\n  ],\n  \"estimatedGas\": \"150000\"\n}\n```\n\n#### 2. `executeSwap`\nExecutes a swap on Uniswap.\n\n**Schema**:\n- `chainId`: Number (default: 1)\n- `tokenIn`: String\n- `tokenOut`: String\n- `amountIn`: String (optional, required for `\"exactIn\"`)\n- `amountOut`: String (optional, required for `\"exactOut\"`)\n- `tradeType`: `\"exactIn\"` or `\"exactOut\"` (default: `\"exactIn\"`)\n- `slippageTolerance`: Number (default: 0.5, in percentage)\n- `deadline`: Number (default: 20, in minutes)\n\nExample prompt:\n\n```\nSwap 1 ETH for DAI on Ethereum with a 0.5% slippage tolerance and a 20-minute deadline.\n```\n\nOutput:\n\n```\n{\n  \"chainId\": 1,\n  \"txHash\": \"0x1234...abcd\",\n  \"tradeType\": \"exactIn\",\n  \"amountIn\": \"1.000000\",\n  \"outputAmount\": \"2990.75\",\n  \"minimumReceived\": \"2985.50\",\n  \"maximumInput\": \"1.005000\",\n  \"fromToken\": \"NATIVE\",\n  \"toToken\": \"0x6B175474E89094C44Da98b954EedeAC495271d0F\",\n  \"route\": [\n    {\n      \"tokenIn\": \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\",\n      \"tokenOut\": \"0x6B175474E89094C44Da98b954EedeAC495271d0F\",\n      \"fee\": 3000\n    }\n  ],\n  \"gasUsed\": \"145000\"\n}\n```\n\n## License\nMIT License. See [LICENSE](LICENSE) for details.\n"
}