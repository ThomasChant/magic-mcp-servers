{
  "mcp_name": "jamesacklin/tlon-mcp-server",
  "mcp_description": "Facilitates interaction with Tlon agents through direct messaging, contact management, and natural language support.",
  "mcp_id": "jamesacklin_tlon-mcp-server",
  "fetch_timestamp": "2025-06-23T05:07:44.418640Z",
  "github_url": "https://github.com/jamesacklin/tlon-mcp-server",
  "repository": {
    "name": "tlon-mcp-server",
    "full_name": "jamesacklin/tlon-mcp-server",
    "description": "An MCP (Model Context Protocol) server that provides tools for interacting with Tlon agents.",
    "html_url": "https://github.com/jamesacklin/tlon-mcp-server",
    "created_at": "2025-04-28T12:40:57Z",
    "updated_at": "2025-04-29T13:28:43Z",
    "pushed_at": "2025-04-29T13:28:40Z",
    "size": 46,
    "stargazers_count": 3,
    "watchers_count": 3,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "JavaScript",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "jamesacklin",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/748181?v=4",
      "html_url": "https://github.com/jamesacklin"
    },
    "has_issues": false,
    "has_projects": false,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "JavaScript": 22945
    },
    "language_percentages": {
      "JavaScript": 100
    },
    "pull_requests_count": 2,
    "contributors_count": 1,
    "package_json_version": "1.0.0"
  },
  "readme": "# Tlon MCP Server\n\nAn MCP (Model Context Protocol) server that provides tools for interacting with Tlon agents.\n\n## Demo\n\nhttps://github.com/user-attachments/assets/765847b2-df40-44c0-bfd3-c23eb609bbd8\n\n## Features\n\n- **send-dm tool**: Send direct messages to other users by ship ID or nickname\n- **read-dm-history tool**: Retrieve recent messages from a direct-message channel\n- **list-contacts tool**: Get contacts with their nicknames and ship IDs\n- **Natural language support**: Reference people by their nicknames (\"Send a message to Brian\")\n\n## Prerequisites\n\n- Node.js (v16+)\n- A running Urbit ship\n\n## Installation\n\n1. Clone the repository\n2. Navigate to the project directory\n3. Install dependencies:\n\n```bash\nnpm install\n```\n\n**Important:** Always run `npm install` manually in the terminal before using with Claude Desktop or any other MCP client. This prevents installation output from interfering with the MCP protocol.\n\n## Configuration\n\nConfigure the server using environment variables:\n\n| Variable        | Description                      | Default                     |\n| --------------- | -------------------------------- | --------------------------- |\n| `URBIT_SHIP`    | Your Urbit ship name (without ~) | zod                         |\n| `URBIT_CODE`    | Your Urbit +code                 | lidlut-tabwed-pillex-ridrup |\n| `URBIT_HOST`    | Urbit host                       | localhost                   |\n| `URBIT_PORT`    | Urbit port                       | 8080                        |\n| `PORT`          | MCP server port (HTTP mode only) | 3001                        |\n| `MCP_TRANSPORT` | Transport type (http or stdio)   | stdio                       |\n\n## Usage\n\n### Starting the server\n\n```bash\n# Start with default stdio transport\nnpm start\n\n# Start with HTTP transport\nexport MCP_TRANSPORT=http && npm start\n\n# Development mode with auto-reload\nnpm run dev\n```\n\n### Setting up with Claude Desktop\n\nThe default stdio mode works seamlessly with Claude Desktop. Create or edit the Claude Desktop configuration file at:\n\n```\n~/Library/Application Support/Claude/claude_desktop_config.json\n```\n\nWith the following content:\n\n```json\n{\n  \"mcpServers\": {\n    \"tlon-mcp\": {\n      \"command\": \"/bin/sh\",\n      \"args\": [\"-c\", \"cd /path/to/server && node index.js\"]\n    }\n  }\n}\n```\n\n**Important:** Be sure to run `npm install` in the server directory first before configuring Claude Desktop.\n\n### Using the tools with natural language\n\nOnce configured, you can use natural language commands:\n\n```\nSend a message to Brian\n```\n\n```\nShow me my recent DM history with ~sampel-palnet\n```\n\n```\nWho are my contacts?\n```\n\n## Available Tools\n\n### send-dm\n\nSends a direct message to another ship.\n\nParameters:\n\n- `recipient`: The recipient's ship name (with ~) or nickname\n- `message`: The message text to send\n\nExample usage:\n\n```\nSend a message to Brian saying \"Let's meet tomorrow\"\n```\n\n### read-dm-history\n\nFetches the latest messages from a direct-message channel between your ship and another.\n\nParameters:\n\n- `correspondent`: The other ship's name (with ~) or nickname\n- `count` (optional): How many messages to return (default 100, max 500)\n- `format` (optional): Output format - \"raw\" or \"formatted\" (default \"formatted\")\n\nExample usage:\n\n```\nShow me my last 50 messages with Dad\n```\n\n### list-contacts\n\nRetrieves your contacts list with ship IDs and nicknames.\n\nParameters:\n\n- `format` (optional): Output format - \"raw\" or \"formatted\" (default \"formatted\")\n\nExample usage:\n\n```\nList all my contacts\n```\n\n## License\n\nMIT\n"
}