{
  "mcp_name": "sunqirui1987/ae-mcp",
  "mcp_description": "Enables AI assistants to control Adobe After Effects through a standardized MCP interface, offering extensive functionality for compositions, layers, and effects.",
  "mcp_id": "sunqirui1987_ae-mcp",
  "fetch_timestamp": "2025-06-23T08:43:11.827328Z",
  "github_url": "https://github.com/sunqirui1987/ae-mcp",
  "repository": {
    "name": "ae-mcp",
    "full_name": "sunqirui1987/ae-mcp",
    "description": null,
    "html_url": "https://github.com/sunqirui1987/ae-mcp",
    "created_at": "2025-04-21T11:36:04Z",
    "updated_at": "2025-05-19T01:37:42Z",
    "pushed_at": "2025-05-05T03:20:55Z",
    "size": 2435,
    "stargazers_count": 4,
    "watchers_count": 4,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "Go",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "sunqirui1987",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/1472816?v=4",
      "html_url": "https://github.com/sunqirui1987"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "Go": 120598,
      "JavaScript": 44695
    },
    "language_percentages": {
      "Go": 72.96,
      "JavaScript": 27.04
    },
    "pull_requests_count": 0,
    "contributors_count": 1
  },
  "readme": "# After Effects MCP Integration üöÄ\n\n![Version](https://img.shields.io/badge/version-1.0.0-blue)\n![License](https://img.shields.io/badge/license-MIT-green)\n\nA powerful, extensible Model Context Protocol (MCP) integration for Adobe After Effects. This project enables AI assistants to directly interact with and control After Effects through a standardized interface.\n\n## üì∏ Screenshots\n\n### After Effects Integration\n![After Effects Interface](docs/demo.png)\n\n### MCP Tool Inspector\n![MCP Tool Inspector](docs/demo3.png)\n\n### Claude Integration\n![Claude MCP Integration](docs/demo1.png)\n\n## üé¨ Demo Video\n\nCheck out the demo video below to see the integration in action:\n\n\n<!-- Method 2: Thumbnail with link to video -->\n[![After Effects MCP Demo](docs/video.png)](https://github.com/sunqirui1987/ae-mcp/raw/main/docs/Êï∞Â≠¶ÂΩ¢Áä∂ÊºîÁ§∫.mp4 \"Click to watch the demo\")\n\n\n\n## ‚ú® Features\n\n- **Extensible Architecture**: Easily add new tools through configuration files\n- **Rich After Effects Functionality**: Control compositions, layers, effects, and more\n- **MCP Compliant**: Works with any MCP-compatible AI model, including Claude\n\n\n## üõ†Ô∏è Tools\n\nThis integration provides a comprehensive set of tools for After Effects:\n\n| Category | Capabilities |\n|----------|-------------|\n| **Project** | Get project information, list compositions, manage project properties |\n| **Compositions** | Create new compositions with custom dimensions, frame rates, and durations |\n| **Text Layers** | Add and modify text layers with font controls, tracking, justification, colors, and styling |\n| **Solid Layers** | Create solid layers with custom colors, dimensions, and 3D properties |\n| **Shape Layers** | Create custom and preset shape layers (rectangles, ellipses, polygons, stars) with full control over vertices, tangents, and feathering |\n| **Layer Properties** | Set position, scale, rotation, opacity, and other transformation properties |\n| **Effects** | Browse effect categories, view available effects with details (BPC support, GPU acceleration), and apply them to layers with customizable parameters |\n| **Scripting** | Execute arbitrary ExtendScript code for advanced customization |\n| **Manim Integration** | Create mathematical animations using Manim and import them as transparent WebP layers |\n\nEach tool implements After Effects functionality via ExtendScript and exposes a clean Go API that follows the MCP specification.\n\n## üöÄ Getting Started\n\n### Prerequisites\n\n- Adobe After Effects (CC 2020 or later recommended)\n- Go/Go+ runtime (for the MCP server)\n- Python 3.7+ and pip (for Manim)\n- Basic knowledge of After Effects and MCP\n\n### Installation\n\n1. Clone this repository:\n   ```bash\n   git clone https://github.com/sunqirui1987/ae-mcp.git\n   cd ae-mcp\n   ```\n\n2. Install Python and pip:\n   - Windows:\n     ```bash\n     # 1. Download Python\n     # Visit https://www.python.org/downloads/\n     # Click \"Download Python 3.x.x\" (latest version)\n     \n     # 2. Run the installer\n     # - Check \"Add Python to PATH\"\n     # - Choose \"Customize installation\"\n     # - Select all optional features\n     # - Choose \"Install for all users\"\n     # - Set installation path (e.g., C:\\Python3x)\n     \n     # 3. Verify installation\n     # Open Command Prompt (cmd) or PowerShell and run:\n     python --version\n     pip --version\n     \n     # 4. Install required Windows dependencies\n     # Install Microsoft Visual C++ Build Tools\n     # Download from: https://visualstudio.microsoft.com/visual-cpp-build-tools/\n     # During installation, select \"Desktop development with C++\"\n     \n     # 5. Install ffmpeg\n     # Method 1: Using Chocolatey (recommended)\n     # First install Chocolatey from https://chocolatey.org/install\n     # Note: Run Command Prompt or PowerShell as Administrator\n     # Right-click on Command Prompt/PowerShell and select \"Run as Administrator\"\n     choco install ffmpeg\n     choco install miktex\n\n     \n     # Method 2: Manual installation (if you don't have admin rights)\n     # 1. Download ffmpeg from https://github.com/BtbN/FFmpeg-Builds/releases\n     #    Choose: ffmpeg-master-latest-win64-gpl.zip\n     # 2. Extract the zip file to a location like C:\\ffmpeg\n     # 3. Add the bin folder to your PATH environment variable:\n     #    - Open System Properties > Advanced > Environment Variables\n     #    - Under User variables, find PATH\n     #    - Add new entry: C:\\ffmpeg\\bin\n     # 4. Verify installation:\n     ffmpeg -version\n     \n     # 6. Install additional Python packages\n     pip install wheel\n     pip install pycairo\n     pip install manim\n     ```\n   - macOS:\n     ```bash\n     # Using Homebrew\n     brew install python\n     brew install ffmpeg\n     \n     # Verify installation\n     python3 --version\n     pip3 --version\n     ffmpeg -version\n     ```\n   - Linux:\n     ```bash\n     # Ubuntu/Debian\n     sudo apt update\n     sudo apt install python3 python3-pip ffmpeg\n     \n     # Fedora\n     sudo dnf install python3 python3-pip ffmpeg\n     \n     # Verify installation\n     python3 --version\n     pip3 --version\n     ffmpeg -version\n     ```\n\n3. Install dependencies:\n   ```bash\n   gop mod tidy\n   gop build ./cmd/ae-mcp/pip install manim\n   ```\n\n4. Install Manim:\n   ```bash\n   # Install Manim and its dependencies\n   pip install manim\n   \n   # For Windows users, you might need to install additional dependencies:\n   pip install pycairo\n   pip install manim\n   ```\n\n5. Install the After Effects ExtendScript:\n   - Open After Effects\n   - Go to File > Scripts > Run Script File...\n   - Select the `js/ae-mcp.jsx` file\n\n### Running the MCP Server\n\nTo use with Claude or other AI assistants, add the following MCP configuration:\n\n```json\n{\n  \"mcpServers\": {\n    \"aftereffects\": {\n      \"command\": \"/path/to/your/ae-mcp.exe\",\n      \"args\": []\n    }\n  }\n}\n```\n\n> **Note:** Replace `/path/to/your/ae-mcp.exe` with the actual path to the ae-mcp executable on your system. For example, if you cloned the repository to `C:/projects/ae-mcp`, the path would be `C:/projects/ae-mcp/ae-mcp.exe`.\n\nFor Claude Desktop: Go to Claude > Settings > Developer > Edit Config and add the above configuration.\n\nFor Cursor: Go to Settings > MCP > Add Server to add the configuration.\n\nThe server will start and listen for connections from AI models.\n\n## üé¨ Using with Claude\n\nOnce the MCP server is running and configured in Claude, you'll be able to interact with After Effects using natural language commands.\n\n### Example Commands\n\nHere are some examples of what you can ask Claude to do:\n\n* \"Create a new composition named 'Intro Animation' with 1920x1080 resolution\"\n* \"Add a text layer with the message 'Welcome!' and center it\"\n* \"Apply a Gaussian Blur effect to the text layer with a blur radius of 15\"\n* \"Create a simple logo animation with a bounce effect\"\n* \"Add a solid layer and apply a Glow effect to it\"\n* \"Create a star shape with 5 points and make it spin\"\n* \"Draw a custom shape path in the form of a wave\"\n* \"Show me all the blur effects available in After Effects\"\n* \"Apply a Color Balance effect to the background layer\"\n* \"Add camera movement that slowly zooms in on the text\"\n* \"Export the composition as an MP4 file\"\n* \"Create a Manim animation showing a rotating cube and add it as a layer\"\n* \"Generate a mathematical equation animation using Manim and import it\"\n\n### Capabilities\n\n* Get project and composition information\n* Create and modify compositions\n* Add and manipulate various layer types (text, solid, shape, etc.)\n* Browse and apply effects with detailed parameter control\n* Control animation and keyframes\n* Manage project assets and media\n\n## ü§ù Contributing\n\nContributions are welcome! Please feel free to submit a Pull Request.\n\n## üìÑ License\n\nThis project is licensed under the MIT License - see the LICENSE file for details.\n\n## üìû Support\n\nFor questions and support, please open an issue in the GitHub repository.\n"
}