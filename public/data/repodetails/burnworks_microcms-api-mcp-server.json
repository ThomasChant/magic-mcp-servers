{
  "mcp_name": "burnworks/microcms-api-mcp-server",
  "mcp_description": "Enables access to microCMS API through an MCP server, offering content retrieval, search, and filtering capabilities.",
  "mcp_id": "burnworks_microcms-api-mcp-server",
  "fetch_timestamp": "2025-06-23T01:50:08.924784Z",
  "github_url": "https://github.com/burnworks/microcms-api-mcp-server",
  "repository": {
    "name": "microcms-api-mcp-server",
    "full_name": "burnworks/microcms-api-mcp-server",
    "description": "MCPサーバでmicroCMS APIを利用可能にする",
    "html_url": "https://github.com/burnworks/microcms-api-mcp-server",
    "created_at": "2025-04-04T05:24:31Z",
    "updated_at": "2025-04-07T23:45:12Z",
    "pushed_at": "2025-04-07T23:45:08Z",
    "size": 22,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 2,
    "open_issues_count": 1,
    "language": "TypeScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "master",
    "owner": {
      "login": "burnworks",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/6436833?v=4",
      "html_url": "https://github.com/burnworks"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 2,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 10741
    },
    "language_percentages": {
      "TypeScript": 100
    },
    "pull_requests_count": 1,
    "contributors_count": 1,
    "package_json_version": "1.0.0"
  },
  "readme": "# microCMS MCP サーバ\n\nこのプロジェクトは、[Model Context Protocol (MCP)](https://modelcontextprotocol.io) を使用して microCMS の API にアクセスするサーバを実装したものです。\n\n## 概要\n\nmicroCMS MCP サーバは以下の機能を提供します：\n\n1. **コンテンツ一覧取得**：指定したエンドポイントからコンテンツ一覧を取得\n2. **特定コンテンツ取得**：ID を指定して特定のコンテンツを取得\n3. **コンテンツ検索**：キーワード検索によるコンテンツの取得\n4. **フィルター検索**：複雑な条件でのコンテンツのフィルタリング\n\n## インストール\n\n```bash\n# リポジトリのクローン\ngit clone https://github.com/burnworks/microcms-api-mcp-server\ncd microcms-api-mcp-server\n\n# 依存関係のインストール\nnpm install\n```\n\n## 使用方法\n\n### 必要なファイルのビルド\n\n```bash\n# TypeScriptをコンパイル\nnpm run build\n```\n\n`dist/` ディレクトリ内に必要なファイルが生成されます。\n\n### MCP クライアントからの使用\n\nこのサーバは MCP プロトコルに準拠しており、任意の MCP クライアントから接続して使用できます。\n\n#### Claude デスクトップアプリでの利用\n\n`claude_desktop_config.json` に下記のように設定してください。\n\n```json\n{\n  \"mcpServers\": {\n    \"microcms\": {\n      \"command\": \"node\",\n      \"args\": [\n        \"/[__path__]/microcms-api-mcp-server/dist/index.js\"\n      ],\n      \"env\": {\n        \"MICROCMS_API_KEY\": \"__your_api_key_here__\",\n        \"MICROCMS_BASE_URL\": \"https://your-service.microcms.io\"\n      }\n    }\n  }\n}\n```\n\nWindows 環境であれば下記のような設定になるかもしれません。\n\n```json\n{\n  \"mcpServers\": {\n    \"microcms\": {\n      \"command\": \"C:/Program Files/nodejs/node.exe\",\n      \"args\": [\n        \"C:/[__path__]/microcms-api-mcp-server/dist/index.js\"\n      ],\n      \"env\": {\n        \"MICROCMS_API_KEY\": \"__your_api_key_here__\",\n        \"MICROCMS_BASE_URL\": \"https://your-service.microcms.io\"\n      }\n    }\n  }\n}\n```\n\n## 利用可能なツール\n\n例えば下記のようなプロンプトで microCMS API にアクセスできます。\n\n```\nblog エンドポイントから、最新の記事10件分のタイトルを取得して\n```\n\n### `get_contents`\n\nコンテンツ一覧を取得します。\n\n**パラメータ**:\n- `endpoint`: 取得したい microCMS の API エンドポイント（例: 'blog'）\n- `limit`: 取得する件数（オプション、デフォルト: 10、最大: 100）\n- `offset`: 取得開始位置のオフセット（オプション）\n- `orders`: 並び替え（オプション、例: 'publishedAt' または '-publishedAt'）\n- `q`: 全文検索クエリ（オプション）\n- `filters`: フィルタ条件（オプション、例: 'title[contains]テスト'）\n- `fields`: 取得フィールド（オプション、例: 'id,title,publishedAt'）\n- `depth`: 参照の深さ（オプション、1-3）\n\n### `get_content`\n\n特定のコンテンツを取得します。\n\n**パラメータ**:\n- `endpoint`: 取得したい microCMS の API エンドポイント（例: 'blog'）\n- `contentId`: 取得したいコンテンツの ID\n- `fields`: 取得フィールド（オプション、例: 'id,title,publishedAt'）\n- `depth`: 参照の深さ（オプション、1-3）\n- `draftKey`: 下書きコンテンツを取得するためのキー（オプション）\n\n### `search_contents`\n\nキーワード検索でコンテンツを取得します。\n\n**パラメータ**:\n- `endpoint`: 検索対象の microCMS の API エンドポイント（例: 'blog'）\n- `q`: 検索キーワード\n- `limit`: 取得する件数（オプション、デフォルト: 10、最大: 100）\n- `offset`: 取得開始位置のオフセット（オプション）\n- `fields`: 取得フィールド（オプション、例: 'id,title,publishedAt'）\n- `depth`: 参照の深さ（オプション、1-3）\n\n### `filter_contents`\n\n複雑な条件でコンテンツをフィルタリングします。\n\n**パラメータ**:\n- `endpoint`: 検索対象の microCMS の API エンドポイント（例: 'blog'）\n- `filters`: フィルター条件（例: 'category[equals]news[and]createdAt[greater_than]2023-01-01'）\n- `limit`: 取得する件数（オプション、デフォルト: 10、最大: 100）\n- `offset`: 取得開始位置のオフセット（オプション）\n- `fields`: 取得フィールド（オプション、例: 'id,title,publishedAt'）\n- `depth`: 参照の深さ（オプション、1-3）\n\n## 利用可能なリソース\n\n### `microcms://{endpoint}/{contentId}`\n\n特定の ID のコンテンツを取得するためのリソース URI テンプレート。\n\n### `microcms://{endpoint}`\n\nコンテンツ一覧を取得するためのリソース URI テンプレート。\n\n## ライセンス\n\nMIT\n"
}