{
  "mcp_name": "louiscklaw/hko-mcp",
  "mcp_description": "üìá üè† - MCP server with basic demonstration of getting weather from Hong Kong Observatory",
  "mcp_id": "louiscklaw_hko-mcp",
  "fetch_timestamp": "2025-06-23T06:15:44.038763Z",
  "github_url": "https://github.com/louiscklaw/hko-mcp",
  "repository": {
    "name": "hko-mcp",
    "full_name": "louiscklaw/hko-mcp",
    "description": "Fetch data from Hong Kong Observatory with MCP",
    "html_url": "https://github.com/louiscklaw/hko-mcp",
    "created_at": "2025-04-01T20:29:40Z",
    "updated_at": "2025-05-01T23:51:17Z",
    "pushed_at": "2025-06-13T17:49:04Z",
    "size": 4516,
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks_count": 1,
    "open_issues_count": 0,
    "language": "TypeScript",
    "license": "Apache License 2.0",
    "topics": [
      "hong-kong",
      "hongkong",
      "mcp",
      "mcp-servers"
    ],
    "default_branch": "master",
    "owner": {
      "login": "louiscklaw",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/1376093?v=4",
      "html_url": "https://github.com/louiscklaw"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 1,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 24893,
      "JavaScript": 1510,
      "Shell": 639
    },
    "language_percentages": {
      "TypeScript": 92.05,
      "JavaScript": 5.58,
      "Shell": 2.36
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "package_json_version": "0.0.0"
  },
  "readme": "# hko_mcp\n\nüëã This project is in active development, PRs are welcomed üôèüôá‚Äç‚ôÄÔ∏è\n\nhko_mcp is a personal (\"pet\") project developed by louis as a learning exercise and technical playground. It focuses on integrating with the Hong Kong Observatory (HKO) and potentially other MCP (possibly a custom or third-party service) APIs. The project serves as a hands-on exploration of modern TypeScript tooling and testing practices.\n\n## Technical Stack\n\ntools included and configured:\n\n- [TypeScript][typescript] [5.7][typescript-5-7]\n- [ESM][esm]\n- [ESLint][eslint] with some initial rules recommendation\n- [Vitest][vitest] for fast unit testing and code coverage\n- Type definitions for Node.js\n- [Prettier][prettier] to enforce consistent code style\n- NPM [scripts](#available-scripts) for common operations\n- [EditorConfig][editorconfig] for consistent coding style\n- Reproducible environments thanks to [Volta][volta]\n- Example configuration for [GitHub Actions][gh-actions]\n- Simple example of TypeScript code and unit test\n\n## How to use\n\n```bash\n# 1. clone this repo\n$ git clone https://github.com/louiscklaw/hko-mcp.git\n\n# 2. configure environment\n$ nvm use 22\n$ node -v\n# v22.14.0\n\n# 3. build / test project\n$ npm i -D\n$ npm run build\n$ npm run test\n\n# 4. add below to your mcp configuration, (usually `cline_mcp_settings.json`)\n{\n  \"mcpServers\": {\n    ... # add the thins below this line ...\n    \"hko-mcp\": {\n      \"args\": [\n        \"<clone_path>/hko-mcp/project/build/src/main.js\"\n      ],\n    ... # line below are subject to your mcp client ...\n      \"disabled\": false,\n      \"timeout\": 60,\n      \"command\": \"node\",\n      \"transportType\": \"stdio\"\n    }\n  }\n}\n```\n\ntake `Cline` for example\n\n![cline-demo](documentation/REQ_0005/cline_demo.gif)\n\n## Available Scripts\n\n- `clean` - remove coverage data, cache and transpiled files,\n- `prebuild` - lint source files and tests before building,\n- `build` - transpile TypeScript to ES6,\n- `build:watch` - interactive watch mode to automatically transpile source files,\n- `lint` - lint source files and tests,\n- `prettier` - reformat files,\n- `test` - run tests,\n- `test:watch` - interactive watch mode to automatically re-run tests\n- `test:coverage` - run test and print out test coverage\n\n## Credits / Giants\n\n- [node-typescript-boilerplate]\n\n### PROGRESS/TODO\n\n[progress]\n\n## if you are human, please ignore the things below\n\n### Directory structure\n\n<!-- - `_del`: place to store delete files, no need for project -->\n- `documentation`: store requirements and specifications\n- `src`: source code\n- `scripts`: utilities script\n- `__tests__`: test script\n\n---\n\n[progress]: https://github.com/louiscklaw/hko-mcp/blob/master/documentation/progress.md\n[typescript]: https://www.typescriptlang.org/\n[typescript-5-7]: https://devblogs.microsoft.com/typescript/announcing-typescript-5-7/\n[eslint]: https://github.com/eslint/eslint\n[prettier]: https://prettier.io\n[volta]: https://volta.sh\n[gh-actions]: https://github.com/features/actions\n[esm]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules\n[editorconfig]: https://editorconfig.org\n[vitest]: https://vitest.dev\n\n[node-typescript-boilerplate]: https://github.com/jsynowiec/node-typescript-boilerplate\n"
}