{
  "mcp_name": "Xero",
  "mcp_description": "Interact with the accounting data in your business using our official MCP server",
  "mcp_id": "XeroAPI_xero-mcp-server",
  "fetch_timestamp": "2025-06-23T09:30:57.312251Z",
  "github_url": "https://github.com/XeroAPI/xero-mcp-server",
  "repository": {
    "name": "xero-mcp-server",
    "full_name": "XeroAPI/xero-mcp-server",
    "description": "An MCP server that integrates with the MCP protocol. https://modelcontextprotocol.io/introduction",
    "html_url": "https://github.com/XeroAPI/xero-mcp-server",
    "created_at": "2025-03-17T02:29:58Z",
    "updated_at": "2025-06-22T03:21:28Z",
    "pushed_at": "2025-05-18T08:55:11Z",
    "size": 244,
    "stargazers_count": 80,
    "watchers_count": 80,
    "forks_count": 40,
    "open_issues_count": 6,
    "language": "TypeScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "XeroAPI",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/242786?v=4",
      "html_url": "https://github.com/XeroAPI"
    },
    "has_issues": true,
    "has_projects": false,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 40,
    "subscribers_count": 15,
    "languages": {
      "TypeScript": 223788,
      "JavaScript": 1089,
      "Shell": 63
    },
    "language_percentages": {
      "TypeScript": 99.49,
      "JavaScript": 0.48,
      "Shell": 0.03
    },
    "pull_requests_count": 72,
    "contributors_count": 13,
    "package_json_version": "0.0.12"
  },
  "readme": "# Xero MCP Server\n\nThis is a Model Context Protocol (MCP) server implementation for Xero. It provides a bridge between the MCP protocol and Xero's API, allowing for standardized access to Xero's accounting and business features.\n\n## Features\n\n- Xero OAuth2 authentication with custom connections\n- Contact management\n- Chart of Accounts management\n- Invoice creation and management\n- MCP protocol compliance\n\n## Prerequisites\n\n- Node.js (v18 or higher)\n- npm or pnpm\n- A Xero developer account with API credentials\n\n## Docs and Links\n\n- [Xero Public API Documentation](https://developer.xero.com/documentation/api/)\n- [Xero API Explorer](https://api-explorer.xero.com/)\n- [Xero OpenAPI Specs](https://github.com/XeroAPI/Xero-OpenAPI)\n- [Xero-Node Public API SDK Docs](https://xeroapi.github.io/xero-node/accounting)\n- [Developer Documentation](https://developer.xero.com/)\n\n## Setup\n\n### Create a Xero Account\n\nIf you don't already have a Xero account and organisation already, can create one by signing up [here](https://www.xero.com/au/signup/) using the free trial.\n\nWe recommend using a Demo Company to start with because it comes with some pre-loaded sample data. Once you are logged in, switch to it by using the top left-hand dropdown and selecting \"Demo Company\". You can reset the data on a Demo Company, or change the country, at any time by using the top left-hand dropdown and navigating to [My Xero](https://my.xero.com).\n\nNOTE: To use Payroll-specific queries, the region should be either NZ or UK.\n\n### Authentication\n\nThere are 2 modes of authentication supported in the Xero MCP server:\n\n#### 1. Custom Connections\n\nThis is a better choice for testing and development which allows you to specify client id and secrets for a specific organisation.\nIt is also the recommended approach if you are integrating this into 3rd party MCP clients such as Claude Desktop.\n\n##### Configuring your Xero Developer account\n\nSet up a Custom Connection following these instructions: https://developer.xero.com/documentation/guides/oauth2/custom-connections/\n\nCurrently the following scopes are required for all sessions: [scopes](src/clients/xero-client.ts#L91-L92)\n\n##### Integrating the MCP server with Claude Desktop\n\nTo add the MCP server to Claude go to Settings > Developer > Edit config and add the following to your claude_desktop_config.json file:\n\n```json\n{\n  \"mcpServers\": {\n    \"xero\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"@xeroapi/xero-mcp-server@latest\"],\n      \"env\": {\n        \"XERO_CLIENT_ID\": \"your_client_id_here\",\n        \"XERO_CLIENT_SECRET\": \"your_client_secret_here\"\n      }\n    }\n  }\n}\n```\n\nNOTE: If you are using [Node Version Manager](https://github.com/nvm-sh/nvm) `\"command\": \"npx\"` section change it to be the full path to the executable, ie: `your_home_directory/.nvm/versions/node/v22.14.0/bin/npx` on Mac / Linux or `\"your_home_directory\\\\.nvm\\\\versions\\\\node\\\\v22.14.0\\\\bin\\\\npx\"` on Windows\n\n#### 2. Bearer Token\n\nThis is a better choice if you are to support multiple Xero accounts at runtime and allow the MCP client to execute an auth flow (such as PKCE) as required.\nIn this case, use the following configuration:\n\n```json\n{\n  \"mcpServers\": {\n    \"xero\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"@xeroapi/xero-mcp-server@latest\"],\n      \"env\": {\n        \"XERO_CLIENT_BEARER_TOKEN\": \"your_bearer_token\"\n      }\n    }\n  }\n}\n```\n\nNOTE: The `XERO_CLIENT_BEARER_TOKEN` will take precedence over the `XERO_CLIENT_ID` if defined.\n\n### Available MCP Commands\n\n- `list-accounts`: Retrieve a list of accounts\n- `list-contacts`: Retrieve a list of contacts from Xero\n- `list-credit-notes`: Retrieve a list of credit notes\n- `list-invoices`: Retrieve a list of invoices\n- `list-items`: Retrieve a list of items\n- `list-organisation-details`: Retrieve details about an organisation\n- `list-profit-and-loss`: Retrieve a profit and loss report\n- `list-quotes`: Retrieve a list of quotes\n- `list-tax-rates`: Retrieve a list of tax rates\n- `list-payments`: Retrieve a list of payments\n- `list-trial-balance`: Retrieve a trial balance report\n- `list-profit-and-loss`: Retrieve a profit and loss report\n- `list-bank-transactions`: Retrieve a list of bank account transactions\n- `list-payroll-employees`: Retrieve a list of Payroll Employees\n- `list-report-balance-sheet`: Retrieve a balance sheet report\n- `list-payroll-employee-leave`: Retrieve a Payroll Employee's leave records\n- `list-payroll-employee-leave-balances`: Retrieve a Payroll Employee's leave balances\n- `list-payroll-employee-leave-types`: Retrieve a list of Payroll leave types\n- `list-payroll-leave-periods`: Retrieve a list of a Payroll Employee's leave periods\n- `list-payroll-leave-types`: Retrieve a list of all avaliable leave types in Xero Payroll\n- `list-aged-receivables-by-contact`: Retrieves aged receivables for a contact\n- `list-aged-payables-by-contact`: Retrieves aged payables for a contact\n- `list-contact-groups`: Retrieve a list of contact groups\n- `create-contact`: Create a new contact\n- `create-credit-note`: Create a new credit note\n- `create-invoice`: Create a new invoice\n- `create-payment`: Create a new payment\n- `create-quote`: Create a new quote\n- `create-credit-note`: Create a new credit note\n- `create-payroll-timesheet`: Create a new Payroll Timesheet\n- `update-contact`: Update an existing contact\n- `update-invoice`: Update an existing draft invoice\n- `update-quote`: Update an existing draft quote\n- `update-credit-note`: Update an existing draft credit note\n- `update-payroll-timesheet-line`: Update a line on an existing Payroll Timesheet\n- `approve-payroll-timesheet`: Approve a Payroll Timesheet\n- `revert-payroll-timesheet`: Revert an approved Payroll Timesheet\n- `add-payroll-timesheet-line`: Add new line on an existing Payroll Timesheet\n- `delete-payroll-timesheet`: Delete an existing Payroll Timesheet\n- `get-payroll-timesheet`: Retrieve an existing Payroll Timesheet\n\nFor detailed API documentation, please refer to the [MCP Protocol Specification](https://modelcontextprotocol.io/).\n\n## For Developers\n\n### Installation\n\n```bash\n# Using npm\nnpm install\n\n# Using pnpm\npnpm install\n```\n\n### Run a build\n\n```bash\n# Using npm\nnpm run build\n\n# Using pnpm\npnpm build\n```\n\n### Integrating with Claude Desktop\n\nTo link your Xero MCP server in development to Claude Desktop go to Settings > Developer > Edit config and add the following to your `claude_desktop_config.json` file:\n\nNOTE: For Windows ensure the `args` path escapes the `\\` between folders ie. `\"C:\\\\projects\\xero-mcp-server\\\\dist\\\\index.js\"`\n\n```json\n{\n  \"mcpServers\": {\n    \"xero\": {\n      \"command\": \"node\",\n      \"args\": [\"insert-your-file-path-here/xero-mcp-server/dist/index.js\"],\n      \"env\": {\n        \"XERO_CLIENT_ID\": \"your_client_id_here\",\n        \"XERO_CLIENT_SECRET\": \"your_client_secret_here\"\n      }\n    }\n  }\n}\n```\n\n## License\n\nMIT\n\n## Security\n\nPlease do not commit your `.env` file or any sensitive credentials to version control (it is included in `.gitignore` as a safe default.)\n"
}