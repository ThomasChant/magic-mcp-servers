{
  "mcp_name": "hahanikan/pocket-cavalry",
  "mcp_description": "Facilitates AI-driven management of Gitee repositories, issues, and pull requests through a Model Context Protocol server.",
  "mcp_id": "hahanikan_pocket-cavalry",
  "fetch_timestamp": "2025-06-23T04:18:35.003155Z",
  "github_url": "https://github.com/hahanikan/pocket-cavalry",
  "repository": {
    "name": "pocket-cavalry",
    "full_name": "hahanikan/pocket-cavalry",
    "description": "机枪阵地游戏 - 基于Three.js和Cannon.js的HTML5动作游戏",
    "html_url": "https://github.com/hahanikan/pocket-cavalry",
    "created_at": "2025-04-10T03:14:52Z",
    "updated_at": "2025-04-10T10:17:42Z",
    "pushed_at": "2025-04-10T10:17:37Z",
    "size": 3162,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "Go",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "hahanikan",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/16220468?v=4",
      "html_url": "https://github.com/hahanikan"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "Go": 65817,
      "JavaScript": 20240,
      "Makefile": 2824,
      "HTML": 1279,
      "Dockerfile": 830,
      "CSS": 376
    },
    "language_percentages": {
      "Go": 72.04,
      "JavaScript": 22.15,
      "Makefile": 3.09,
      "HTML": 1.4,
      "Dockerfile": 0.91,
      "CSS": 0.41
    },
    "pull_requests_count": 0,
    "contributors_count": 3,
    "package_json_version": "1.0.0"
  },
  "readme": "# Gitee MCP Server\n\nGitee MCP Server is a Model Context Protocol (MCP) server implementation for Gitee. It provides a set of tools for interacting with Gitee's API, allowing AI assistants to manage repositories, issues, pull requests, and more.\n\n## Features\n\n- Interact with Gitee repositories, issues, pull requests, and notifications\n- Configurable API base URL to support different Gitee instances\n- Command-line flags for easy configuration\n- Supports both personal, organization, and enterprise operations\n\n<details>\n<summary><b>Practical scenario: Obtain Issue from the repository, implement and create a Pull Request</b></summary>\n\n1. Get repository Issues\n![get_repo_issues](./docs/images/get_repo_issues.jpg)\n2. Implement coding & create Pull Request based on Issue details\n![implement_issue](./docs/images/implement_issue.jpg)\n3. Comment & Close Issue\n![comment_and_close_issue](./docs/images/comment_and_close_issue.jpg)\n</details>\n\n## Installation\n\n### Prerequisites\n\n- Go 1.23.0 or higher\n- Gitee account with an access token, [Go to get](https://gitee.com/profile/personal_access_tokens)\n\n### Building from Source\n\n1. Clone the repository:\n   ```bash\n   git clone https://gitee.com/oschina/mcp-gitee.git\n   cd mcp-gitee\n   ```\n\n2. Build the project:\n   ```bash\n   make build\n   ```\n   Move ./bin/mcp-gitee PATH env\n\n### Use go install\n   ```bash\n   go install gitee.com/oschina/mcp-gitee@latest\n   ```\n\n## Usage\n\nCheck mcp-gitee version:\n\n```bash\nmcp-gitee --version\n```\n\n### MCP Hosts Configuration\n<div align=\"center\">\n  <a href=\"docs/install/claude.md\" title=\"Claude\"><img src=\"docs/install/logos/Claude.jpg\" width=80 height=80 width=\"200\"></a>\n  <a href=\"docs/install/cursor.md\" title=\"Cursor\"><img src=\"docs/install/logos/Cursor.jpg\" width=80 height=80 width=\"200\"></a>\n  <a href=\"docs/install/cline.md\" title=\"Cline\"><img src=\"docs/install/logos/Cline.png\" width=80 height=80 width=\"200\"></a>\n  <a href=\"docs/install/windsurf.md\" title=\"Windsurf\"><img src=\"docs/install/logos/Windsurf.jpg\" width=80 height=80 width=\"200\"></a>\n</div>\n\n**Cursor**、**Windsurf** config example:\n```json\n{\n  \"mcpServers\": {\n    \"gitee\": {\n      \"command\": \"mcp-gitee\",\n      \"env\": {\n        \"GITEE_API_BASE\": \"https://gitee.com/api/v5\",\n        \"GITEE_ACCESS_TOKEN\": \"<your personal access token>\"\n      }\n    }\n  }\n}\n```\n\n### Command-line Options\n\n- `-token`: Gitee access token\n- `-api-base`: Gitee API base URL (default: https://gitee.com/api/v5)\n- `-version`: Show version information\n- `-transport`: Transport type (stdio or sse, default: stdio)\n- `-sse-address`: The host and port to start the SSE server on (default: localhost:8000)\n\n### Environment Variables\n\nYou can also configure the server using environment variables:\n\n- `GITEE_ACCESS_TOKEN`: Gitee access token\n- `GITEE_API_BASE`: Gitee API base URL\n\n## License\n\nThis project is licensed under the MIT License. See the [LICENSE](LICENSE) file for more details.\n\n## Available Tools\n\nThe server provides various tools for interacting with Gitee:\n\n| Tool                        | Category | Description |\n|-----------------------------|----------|-------------|\n| **list_user_repos**         | Repository | List user authorized repositories |\n| **get_file_content**        | Repository | Get the content of a file in a repository |\n| **create_user_repo**        | Repository | Create a user repository |\n| **create_org_repo**         | Repository | Create an organization repository |\n| **create_enter_repo**       | Repository | Create an enterprise repository |\n| **create_release**          | Repository | Create a release for a repository |\n| **list_releases**           | Repository | List repository releases |\n| **list_repo_pulls**         | Pull Request | List pull requests in a repository |\n| **merge_pull**              | Pull Request | Merge a pull request |\n| **create_pull**             | Pull Request | Create a pull request |\n| **update_pull**             | Pull Request | Update a pull request |\n| **get_pull_detail**         | Pull Request | Get details of a pull request |\n| **comment_pull**            | Pull Request | Comment on a pull request |\n| **list_pull_comments**      | Pull Request | List all comments for a pull request |\n| **create_issue**            | Issue | Create an issue |\n| **update_issue**            | Issue | Update an issue |\n| **get_repo_issue_detail**   | Issue | Get details of a repository issue |\n| **list_repo_issues**        | Issue | List repository issues |\n| **comment_issue**           | Issue | Comment on an issue |\n| **list_issue_comments**     | Issue | List comments on an issue |\n| **get_user_info**           | User | Get current authenticated user information |\n| **list_user_notifications** | Notification | List user notifications |\n\n## Contribution\n\nWe welcome contributions from the open-source community! If you'd like to contribute to this project, please follow these guidelines:\n\n1. Fork the repository.\n2. Create a new branch for your feature or bug fix.\n3. Make your changes and ensure the code is well-documented.\n4. Submit a pull request with a clear description of your changes.\n\nFor more information, please refer to the [CONTRIBUTING](CONTRIBUTING.md) file.\n"
}