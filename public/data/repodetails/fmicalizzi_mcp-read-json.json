{
  "mcp_name": "fmicalizzi/mcp-read-json",
  "mcp_description": "Facilitates reading and querying JSON-based knowledge bases for seamless integration with LLMs like Claude.",
  "mcp_id": "fmicalizzi_mcp-read-json",
  "fetch_timestamp": "2025-06-23T03:20:47.416867Z",
  "github_url": "https://github.com/fmicalizzi/mcp-read-json",
  "repository": {
    "name": "mcp-read-json",
    "full_name": "fmicalizzi/mcp-read-json",
    "description": "MCP server for reading JSON knowledge bases without modifications",
    "html_url": "https://github.com/fmicalizzi/mcp-read-json",
    "created_at": "2025-04-24T21:42:47Z",
    "updated_at": "2025-04-24T22:30:40Z",
    "pushed_at": "2025-04-24T22:30:36Z",
    "size": 27,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "JavaScript",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "fmicalizzi",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/626004?v=4",
      "html_url": "https://github.com/fmicalizzi"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "JavaScript": 7242,
      "TypeScript": 6750,
      "Dockerfile": 394
    },
    "language_percentages": {
      "JavaScript": 50.34,
      "TypeScript": 46.92,
      "Dockerfile": 2.74
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "package_json_version": "1.0.0"
  },
  "readme": "# MCP Knowledge Base Reader\n\nUn servidor MCP (Model Context Protocol) que permite leer una base de conocimientos en formato JSON para brindar información a los usuarios a través de Claude u otros LLMs.\n\n## Características\n\n- Lectura de base de conocimientos JSON estructurada\n- Búsqueda de información por palabra clave\n- Recuperación de entradas por ID\n- Filtrado por categorías y etiquetas\n- Búsqueda de entradas relacionadas\n- Estadísticas sobre la base de conocimientos\n- **Modo de solo lectura**: No modifica el archivo JSON, solo recupera información\n\n## Estructura de la Base de Conocimientos\n\nLa base de conocimientos utiliza el siguiente formato JSON:\n\n```json\n{\n  \"metadata\": {\n    \"title\": \"Título de la Base de Conocimientos\",\n    \"description\": \"Descripción de la base\",\n    \"version\": \"1.0\",\n    \"created\": \"2025-04-23\",\n    \"updated\": \"2025-04-23\"\n  },\n  \"categories\": [\n    {\n      \"id\": \"categoria1\",\n      \"name\": \"Nombre de Categoría\",\n      \"description\": \"Descripción de la categoría\"\n    }\n  ],\n  \"entries\": [\n    {\n      \"id\": \"entrada1\",\n      \"title\": \"Título de la Entrada\",\n      \"category\": \"categoria1\",\n      \"tags\": [\"etiqueta1\", \"etiqueta2\"],\n      \"content\": \"Contenido detallado de la entrada\",\n      \"related\": [\"entrada2\", \"entrada3\"]\n    }\n  ]\n}\n```\n\n## Instalación y Configuración\n\n### Requisitos Previos\n\n- Node.js 18 o superior\n- npm o yarn\n\n### Instalación\n\n```bash\n# Clonar el repositorio\ngit clone https://github.com/tu-usuario/mcp-read-json.git\ncd mcp-read-json\n\n# Instalar dependencias\nnpm install\n\n# Compilar el código TypeScript\nnpm run build\n```\n\n### Configuración para Claude Desktop\n\nPara usar este servidor con Claude Desktop, añade la siguiente configuración a tu archivo `claude_desktop_config.json`:\n\n```json\n{\n  \"mcpServers\": {\n    \"knowledge-reader\": {\n      \"command\": \"node\",\n      \"args\": [\n        \"/ruta/completa/a/mcp-read-json/dist/index.js\"\n      ],\n      \"env\": {\n        \"KNOWLEDGE_BASE_PATH\": \"/ruta/completa/a/tu/knowledge_base.json\"\n      }\n    }\n  }\n}\n```\n\n**Notas importantes sobre la configuración:**\n\n1. Utiliza rutas absolutas tanto para el script como para el archivo JSON\n2. Asegúrate de que el archivo JSON existe en la ruta especificada\n3. El servidor debe compilarse antes de utilizarlo (`npm run build`)\n\n#### Solución a problemas comunes\n\nSi encuentras el error \"Server disconnected\", verifica:\n\n1. Que las rutas sean absolutas y correctas\n2. Que el archivo JavaScript compilado exista en la ruta especificada\n3. Que tienes permisos para ejecutar el archivo\n\n## Herramientas Disponibles\n\nEl servidor expone las siguientes herramientas MCP:\n\n### 1. read_knowledge_base\nLee toda la base de conocimientos.\n\n**Ejemplo de uso con Claude:**\n```\nClaude, usa la herramienta read_knowledge_base para mostrarme toda la información disponible en la base de conocimientos.\n```\n\n### 2. search_entries\nBusca entradas por texto en título, contenido y etiquetas.\n\n**Ejemplo de uso con Claude:**\n```\nClaude, utiliza search_entries para buscar información sobre \"seguridad\".\n```\n\n### 3. get_entry_by_id\nRecupera una entrada específica por su ID.\n\n**Ejemplo de uso con Claude:**\n```\nClaude, usa get_entry_by_id con el ID \"mcp-definition\" para mostrarme la definición de MCP.\n```\n\n### 4. get_entries_by_category\nRecupera todas las entradas de una categoría específica.\n\n**Ejemplo de uso con Claude:**\n```\nClaude, utiliza get_entries_by_category con la categoría \"intro\" para mostrarme las introducciones a MCP.\n```\n\n### 5. get_entries_by_tags\nRecupera entradas que contengan ciertas etiquetas.\n\n**Ejemplo de uso con Claude:**\n```\nClaude, usa get_entries_by_tags para encontrar entradas con las etiquetas [\"implementación\", \"código\"].\n```\n\n### 6. get_related_entries\nEncuentra entradas relacionadas con una entrada específica.\n\n**Ejemplo de uso con Claude:**\n```\nClaude, después de revisar la entrada \"mcp-components\", usa get_related_entries con el ID \"mcp-components\" para mostrarme temas relacionados.\n```\n\n### 7. get_knowledge_stats\nProporciona estadísticas sobre la base de conocimientos.\n\n**Ejemplo de uso con Claude:**\n```\nClaude, utiliza get_knowledge_stats para darme un resumen estadístico de la base de conocimientos.\n```\n\n## Ejemplo de Prompt para Claude\n\nPara aprovechar al máximo la base de conocimientos, puedes usar el siguiente prompt:\n\n```\nEres un asistente especializado que tiene acceso a una base de conocimientos sobre MCP (Model Context Protocol). Utiliza las herramientas disponibles para proporcionar información precisa y relevante.\n\nAl inicio de cada conversación, deberías:\n1. Usar get_knowledge_stats para familiarizarte con la estructura y contenido de la base de conocimientos\n2. Cuando te pregunten sobre un tema específico, usar search_entries o la herramienta más apropiada\n\nCuando respondas:\n1. Basa tu respuesta solo en la información de la base de conocimientos\n2. Si la información solicitada no está disponible, indícalo claramente\n3. Utiliza un formato claro y estructurado en tus respuestas\n4. Sugiere información relacionada cuando sea relevante\n```\n\n## Desarrollo\n\n```bash\n# Instalar dependencias de desarrollo\nnpm install\n\n# Iniciar modo desarrollo (compilación en tiempo real)\nnpm run dev\n```\n\n## Licencia\n\nMIT\n"
}