{
  "mcp_name": "AgentRPC",
  "mcp_description": "Connect to any function, any language, across network boundaries using [AgentRPC](https://www.agentrpc.com/).",
  "mcp_id": "agentrpc_agentrpc",
  "fetch_timestamp": "2025-06-23T00:17:45.394797Z",
  "github_url": "https://github.com/agentrpc/agentrpc",
  "repository": {
    "name": "agentrpc",
    "full_name": "agentrpc/agentrpc",
    "description": "A universal RPC layer for AI agents. Connect to any function, any language, any framework, in minutes.",
    "html_url": "https://github.com/agentrpc/agentrpc",
    "created_at": "2025-03-17T03:27:52Z",
    "updated_at": "2025-06-22T02:57:12Z",
    "pushed_at": "2025-06-16T11:29:08Z",
    "size": 7600,
    "stargazers_count": 93,
    "watchers_count": 93,
    "forks_count": 21,
    "open_issues_count": 13,
    "language": "TypeScript",
    "license": "Apache License 2.0",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "agentrpc",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/203365055?v=4",
      "html_url": "https://github.com/agentrpc"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 21,
    "subscribers_count": 0,
    "languages": {
      "TypeScript": 62027,
      "Go": 33027,
      "Python": 13706,
      "JavaScript": 7995,
      "Makefile": 763
    },
    "language_percentages": {
      "TypeScript": 52.78,
      "Go": 28.1,
      "Python": 11.66,
      "JavaScript": 6.8,
      "Makefile": 0.65
    },
    "pull_requests_count": 85,
    "contributors_count": 5,
    "tags": [
      {
        "name": "sdk-python/v0.0.8",
        "commit_sha": "e87781e60fa2711eb78fa6c6b2b5721069ec5cb0"
      },
      {
        "name": "sdk-python/v0.0.7",
        "commit_sha": "eb530da496ec8f05398acf1bf781316d099c3760"
      },
      {
        "name": "sdk-node/v0.0.16",
        "commit_sha": "e87781e60fa2711eb78fa6c6b2b5721069ec5cb0"
      },
      {
        "name": "sdk-node/v0.0.14",
        "commit_sha": "f4c56a0108d7e4afa3543d080727db48a70d1e57"
      },
      {
        "name": "sdk-node/v0.0.13",
        "commit_sha": "54dde72febe0b75774a1e55c4a30da7472d53553"
      },
      {
        "name": "sdk-node/v0.0.6",
        "commit_sha": "572f186933a7d7d0e8a8cc69db4c035ffc8c8265"
      },
      {
        "name": "sdk-go/v0.0.6",
        "commit_sha": "e87781e60fa2711eb78fa6c6b2b5721069ec5cb0"
      },
      {
        "name": "sdk-go/v0.0.5",
        "commit_sha": "8535643e7b6c11c1b29b093f27a57740a2ebe9c5"
      },
      {
        "name": "sdk-go/v0.0.4",
        "commit_sha": "54dde72febe0b75774a1e55c4a30da7472d53553"
      }
    ],
    "latest_version": "sdk-python/v0.0.8"
  },
  "readme": "# AgentRPC\n\n![NPM Version](https://img.shields.io/npm/v/agentrpc?color=32CD32) ![GitHub go.mod Go version](https://img.shields.io/github/go-mod/go-version/agentrpc/agentrpc?filename=sdk-go%2Fgo.mod&color=32CD32) ![PyPI - Python Version](https://img.shields.io/pypi/v/agentrpc?color=32CD32) ![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)\n\n> Universal RPC layer for AI agents across network boundaries and languages\n\n## Overview\n\nAgentRPC allows you to connect to any function, in any language, across network boundaries. It's ideal when you have services deployed in:\n- Private VPCs\n- Kubernetes clusters\n- Multiple cloud environments\n\nAgentRPC wraps your functions in a universal RPC interface, connecting them to a hosted RPC server accessible through open standards:\n\n- Model Context Protocol (MCP)\n- OpenAI-compatible tool definitions (OpenAI, Anthropic, LiteLLM, OpenRouter, etc.)\n\n<p align=\"center\">\n<img src=\"./assets/deployment.png\" alt=\"deployment\" width=\"500\">\n</p>\n\n## How It Works\n\n1. **Registration**: Use our SDK to register functions and APIs in any language\n2. **Management**: The AgentRPC platform (api.agentrpc.com) registers the function and monitors its health\n3. **Access**: Receive OpenAPI SDK compatible tool definitions and a hosted MCP server for connecting to compatible agents\n\n## Key Features\n\n| Feature | Description |\n|---------|-------------|\n| **Multi-language Support** | Connect to tools in TypeScript, Go, Python and .NET (coming soon) |\n| **Private Network Support** | Register functions in private VPCs with no open ports required |\n| **Long-running Functions** | Long polling SDKs allow function calls beyond HTTP timeout limits |\n| **Full Observability** | Comprehensive tracing, metrics, and events for complete visibility |\n| **Automatic Failover** | Intelligent health tracking with automatic failover and retries |\n| **Framework Compatibility** | Out-of-the-box support for MCP and OpenAI SDK compatible agents |\n\n## Getting Started\n\n### Quick Start\n\nFollow the [quick start](https://docs.agentrpc.com/quickstart) example on our docs site.\n\n### Examples\n\nExplore working examples in the [examples](./examples) directory.\n\n## MCP Server\n\nThe AgentRPC TypeScript SDK includes an optional MCP (Model Context Protocol) server.\n\n```sh\nANGENTRPC_API_SECRET=YOUR_API_SECRET npx agentrpc mcp\n```\n\nThis launches an MCP-compliant server for external AI models to interact with your registered tools.\n\n### Claude Desktop Integration\n\nAdd to your `claude_desktop_config.json`:\n\n```json\n{\n  \"mcpServers\": {\n    \"agentrpc\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"agentrpc\",\n        \"mcp\"\n      ],\n      \"env\": {\n        \"AGENTRPC_API_SECRET\": \"<YOUR_API_SECRET>\"\n      }\n    }\n  }\n}\n```\n\n[More Info](https://modelcontextprotocol.io/quickstart/user)\n\n### Cursor Integration\n\nAdd to your `~/.cursor/mcp.json`:\n\n```json\n{\n  \"mcpServers\": {\n    \"agentrpc\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"agentrpc\", \"mcp\"],\n      \"env\": {\n        \"AGENTRPC_API_SECRET\": \"<YOUR_API_SECRET>\"\n      }\n    }\n  }\n}\n```\n\n[More Info](https://docs.cursor.com/context/model-context-protocol#configuring-mcp-servers)\n\n## License\n\nThis project is licensed under the Apache License 2.0 - see the LICENSE file for details.\n\nThis repository contains all the open-source components and SDKs for AgentRPC.\n"
}