{
  "mcp_name": "Hostinger",
  "mcp_description": "Official [Hostinger API](https://developers.hostinger.com/) MCP server for services managment.",
  "mcp_id": "hostinger_api-mcp-server",
  "fetch_timestamp": "2025-06-23T04:49:57.104620Z",
  "github_url": "https://github.com/hostinger/api-mcp-server",
  "repository": {
    "name": "api-mcp-server",
    "full_name": "hostinger/api-mcp-server",
    "description": null,
    "html_url": "https://github.com/hostinger/api-mcp-server",
    "created_at": "2025-04-11T10:40:50Z",
    "updated_at": "2025-06-20T10:00:36Z",
    "pushed_at": "2025-06-20T10:00:43Z",
    "size": 44,
    "stargazers_count": 17,
    "watchers_count": 17,
    "forks_count": 8,
    "open_issues_count": 0,
    "language": "JavaScript",
    "license": "MIT License",
    "topics": [
      "ai",
      "api",
      "claude",
      "cursor",
      "hostinger",
      "mcp"
    ],
    "default_branch": "main",
    "owner": {
      "login": "hostinger",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/2630767?v=4",
      "html_url": "https://github.com/hostinger"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 8,
    "subscribers_count": 4,
    "languages": {
      "JavaScript": 165976
    },
    "language_percentages": {
      "JavaScript": 100
    },
    "pull_requests_count": 1,
    "contributors_count": 1,
    "latest_release": {
      "tag_name": "v0.0.25",
      "name": "v0.0.25",
      "published_at": "2025-06-20T10:00:44Z",
      "body": "**Full Changelog**: https://github.com/hostinger/api-mcp-server/compare/v0.0.24...v0.0.25",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v0.0.25",
        "commit_sha": "7781476eb8e6cee3ec61c9ab367278bee4c98272"
      },
      {
        "name": "v0.0.24",
        "commit_sha": "e7dda01e2aa1b3eb0a0b1e4139878454d6876eee"
      },
      {
        "name": "v0.0.23",
        "commit_sha": "1627dac00851904083dcc290e60175e3fb31ba14"
      },
      {
        "name": "v0.0.22",
        "commit_sha": "7580082e6440285ce17ca05343c698666fbfecb4"
      },
      {
        "name": "v0.0.21",
        "commit_sha": "79146e18f15804da58cf67edd8e7ea278b2ce234"
      },
      {
        "name": "v0.0.20",
        "commit_sha": "ca90f40e2b1e6f6b372b3b61b1f3b7eb25d335ab"
      },
      {
        "name": "v0.0.19",
        "commit_sha": "5761172b3f70151ea81873b5f04059296b799838"
      },
      {
        "name": "v0.0.18",
        "commit_sha": "7d34466a8323e7c00bf1f4e7229b9aff8a568178"
      },
      {
        "name": "v0.0.17",
        "commit_sha": "cfb232fb310c65ac1cda41952c9d8985e930a2b4"
      },
      {
        "name": "v0.0.16",
        "commit_sha": "c4623336d3a0e80a23a8ddc794d3bda240b7bcd6"
      }
    ],
    "latest_version": "v0.0.25",
    "package_json_version": "0.0.25"
  },
  "readme": "# hostinger-api-mcp\n\nModel Context Protocol (MCP) server for Hostinger API.\n\n## Prerequisites\n- Node.js version 20 or higher\n\nIf you don't have Node.js installed, you can download it from the [official website](https://nodejs.org/en/download/).\nAlternatively, you can use a package manager like [Homebrew](https://brew.sh/) (for macOS) or [Chocolatey](https://chocolatey.org/) (for Windows) to install Node.js.\n\nWe recommend using [NVM (Node Version Manager)](https://github.com/nvm-sh/nvm) to install and manage installed Node.js versions.\nAfter installing NVM, you can install Node.js with the following command:\n```bash\nnvm install v20\nnvm use v20\n```\n\n## Installation\n\nTo install the MCP server, run one of the following command, depending on your package manager:\n\n```bash\n# Install globally from npm\nnpm install -g hostinger-api-mcp\n\n# Or with yarn\nyarn global add hostinger-api-mcp\n\n# Or with pnpm\npnpm add -g hostinger-api-mcp\n```\n\n## Update\n\nTo update the MCP server to the latest version, use one of the following commands, depending on your package manager:\n\n```bash\n# Update globally from npm\nnpm update -g hostinger-api-mcp\n\n# Or with yarn\nyarn global upgrade hostinger-api-mcp\n\n# Or with pnpm\npnpm update -g hostinger-api-mcp\n```\n\n## Configuration\n\nThe following environment variables can be configured when running the server:\n- `DEBUG`: Enable debug logging (true/false) (default: false)\n\n\n- `APITOKEN`: Your API token, which will be sent in the `Authorization` header.\n\n\n\n## Usage\n\n### JSON configuration for Claude, Cursor, etc.\n\n```json\n{\n    \"mcpServers\": {\n        \"hostinger-api\": {\n            \"command\": \"hostinger-api-mcp\",\n            \"env\": {\n                \"DEBUG\": \"false\",\n                \"APITOKEN\": \"YOUR API TOKEN\"\n            }\n        }\n    }\n}\n```\n\n### Using SSE Transport\n\nTo use the MCP server with SSE transport, you must run the server with the `--sse` option. \nThis will enable the server to communicate with clients using Server-Sent Events on localhost port 8100.\nAdditionally, you can specify the `--host` and `--port` options to set the host and port for the server to listen on.\n\nExample of running the server with SSE transport:\n\n```bash\nhostinger-api-mcp --sse --host 127.0.0.1 --port 8100\n```\n\n### Using as an MCP Tool Provider\n\nThis server implements the Model Context Protocol (MCP) and can be used with any MCP-compatible consumer, like Claude.js client or other MCP consumers.\n\nExample of connecting to this server from a Claude.js client:\n\n```javascript\nimport { MCP } from \"claude-js\";\nimport { createStdio } from \"claude-js/mcp\";\n\n// Create stdin/stdout transport\nconst transport = createStdio({ command: \"hostinger-api-mcp\" });\n\n// Connect to the MCP server\nconst mcp = new MCP({ transport });\nawait mcp.connect();\n\n// List available tools\nconst { tools } = await mcp.listTools();\nconsole.log(\"Available tools:\", tools);\n\n// Call a tool\nconst result = await mcp.callTool({\n    id: \"TOOL-ID\",\n    arguments: { param1: \"value1\" }\n});\nconsole.log(\"Tool result:\", result);\n```\n\n## Available Tools\n\nThis MCP server provides the following tools:\n\n### billing_getCatalogItemListV1\n\nThis endpoint retrieves a list of catalog items available for order. \n\nPrices in catalog items is displayed as cents (without floating point), e.g: float `17.99` is displayed as integer `1799`.\n\n- **Method**: `GET`\n- **Path**: `/api/billing/v1/catalog`\n\n**Parameters**:\n\n- `category`: Filter catalog items by category \n- `name`: Filter catalog items by name. Use `*` for wildcard search, e.g. `.COM*` to find .com domain \n\n### billing_createNewServiceOrderV1\n\nThis endpoint creates a new service order. \n\n**DEPRECATED**\n\nTo purchase a domain, use [`POST /api/domains/v1/portfolio`](/#tag/domains-portfolio/POST/api/domains/v1/portfolio) instead.\n\nTo purchase a VPS, use [`POST /api/vps/v1/virtual-machines`](/#tag/vps-virtual-machine/POST/api/vps/v1/virtual-machines) instead.\n\n\nTo place order, you need to provide payment method ID and list of price items from the catalog endpoint together with quantity.\nCoupons also can be provided during order creation.\n\nOrders created using this endpoint will be set for automatic renewal.\n\nSome `credit_card` payments might need additional verification, rendering purchase unprocessed.\nWe recommend use other payment methods than `credit_card` if you encounter this issue.\n\n- **Method**: `POST`\n- **Path**: `/api/billing/v1/orders`\n\n**Parameters**:\n\n- `payment_method_id`: Payment method ID (required)\n- `items`: items parameter (required)\n- `coupons`: Discount coupon codes \n\n### billing_setDefaultPaymentMethodV1\n\nThis endpoint sets default payment method for your account.\n\n- **Method**: `POST`\n- **Path**: `/api/billing/v1/payment-methods/{paymentMethodId}`\n\n**Parameters**:\n\n- `paymentMethodId`: Payment method ID (required)\n\n### billing_deletePaymentMethodV1\n\nThis endpoint deletes a payment method from your account.\n\n- **Method**: `DELETE`\n- **Path**: `/api/billing/v1/payment-methods/{paymentMethodId}`\n\n**Parameters**:\n\n- `paymentMethodId`: Payment method ID (required)\n\n### billing_getPaymentMethodListV1\n\nThis endpoint retrieves a list of available payment methods that can be used for placing new orders.\n\nIf you want to add new payment method, please use [hPanel](https://hpanel.hostinger.com/billing/payment-methods).\n\n- **Method**: `GET`\n- **Path**: `/api/billing/v1/payment-methods`\n\n\n\n### billing_cancelSubscriptionV1\n\nThis endpoint cancels a subscription and stops any further billing.\n\n- **Method**: `DELETE`\n- **Path**: `/api/billing/v1/subscriptions/{subscriptionId}`\n\n**Parameters**:\n\n- `subscriptionId`: Subscription ID (required)\n\n### billing_getSubscriptionListV1\n\nThis endpoint retrieves a list of all subscriptions associated with your account.\n\n- **Method**: `GET`\n- **Path**: `/api/billing/v1/subscriptions`\n\n\n\n### DNS_getSnapshotV1\n\nThis endpoint retrieves particular DNS snapshot with the contents of DNS zone records.\n\n- **Method**: `GET`\n- **Path**: `/api/dns/v1/snapshots/{domain}/{snapshotId}`\n\n**Parameters**:\n\n- `domain`: Domain name (required)\n- `snapshotId`: Snapshot ID (required)\n\n### DNS_getSnapshotListV1\n\nThis endpoint retrieves list of DNS snapshots.\n\n- **Method**: `GET`\n- **Path**: `/api/dns/v1/snapshots/{domain}`\n\n**Parameters**:\n\n- `domain`: Domain name (required)\n\n### DNS_restoreSnapshotV1\n\nThis endpoint restores DNS zone to the selected snapshot.\n\n- **Method**: `POST`\n- **Path**: `/api/dns/v1/snapshots/{domain}/{snapshotId}/restore`\n\n**Parameters**:\n\n- `domain`: Domain name (required)\n- `snapshotId`: Snapshot ID (required)\n\n### DNS_getRecordsV1\n\nThis endpoint retrieves DNS zone records for a specific domain.\n\n- **Method**: `GET`\n- **Path**: `/api/dns/v1/zones/{domain}`\n\n**Parameters**:\n\n- `domain`: Domain name (required)\n\n### DNS_updateZoneRecordsV1\n\nThis endpoint updates DNS records for the selected domain. \n\nUsing `overwrite = true` will replace existing records with the provided ones. \nOtherwise existing records will be updated and new records will be added.\n\n- **Method**: `PUT`\n- **Path**: `/api/dns/v1/zones/{domain}`\n\n**Parameters**:\n\n- `domain`: Domain name (required)\n- `overwrite`: If `true`, resource records (RRs) matching name and type will be deleted and new RRs will be created, otherwise resource records' ttl's are updated and new records are appended. If no matching RRs are found, they are created. \n- `zone`: zone parameter (required)\n\n### DNS_deleteZoneRecordsV1\n\nThis endpoint deletes DNS records for the selected domain. \nTo filter which records to delete, add the `name` of the record and `type` to the filter. \nMultiple filters can be provided with single request.\n\nIf you have multiple records with the same name and type, and you want to delete only part of them,\nrefer to the `Update zone records` endpoint.\n\n- **Method**: `DELETE`\n- **Path**: `/api/dns/v1/zones/{domain}`\n\n**Parameters**:\n\n- `domain`: Domain name (required)\n\n### DNS_resetZoneRecordsV1\n\nThis endpoint resets DNS zone to the default records.\n\n- **Method**: `POST`\n- **Path**: `/api/dns/v1/zones/{domain}/reset`\n\n**Parameters**:\n\n- `domain`: Domain name (required)\n- `sync`: Determines if operation should be run synchronously \n- `reset_email_records`: Determines if email records should be reset \n- `whitelisted_record_types`: Specifies which record types to not reset \n\n### DNS_validateZoneRecordsV1\n\nThis endpoint used to validate DNS records prior update for the selected domain. \n\nIf the validation is successful, the response will contain `200 Success` code.\nIf there is validation error, the response will fail with `422 Validation error` code.\n\n- **Method**: `POST`\n- **Path**: `/api/dns/v1/zones/{domain}/validate`\n\n**Parameters**:\n\n- `domain`: Domain name (required)\n- `overwrite`: If `true`, resource records (RRs) matching name and type will be deleted and new RRs will be created, otherwise resource records' ttl's are updated and new records are appended. If no matching RRs are found, they are created. \n- `zone`: zone parameter (required)\n\n### domains_checkDomainAvailabilityV1\n\nThis endpoint checks the availability of a domain name. Multiple TLDs can be checked at once.\nIf you want to get alternative domains with response, provide only one TLD in the request and set `with_alternatives` to `true`.\nTLDs should be provided without the leading dot (e.g. `com`, `net`, `org`).\n\nEndpoint has rate limit of 10 requests per minute.\n\n- **Method**: `POST`\n- **Path**: `/api/domains/v1/availability`\n\n**Parameters**:\n\n- `domain`: Domain name (without TLD) (required)\n- `tlds`: TLDs list (required)\n- `with_alternatives`: Should response include alternatives \n\n### domains_getForwardingDataV1\n\nThis endpoint retrieves domain forwarding data.\n\n- **Method**: `GET`\n- **Path**: `/api/domains/v1/forwarding/{domain}`\n\n**Parameters**:\n\n- `domain`: Domain name (required)\n\n### domains_deleteForwardingDataV1\n\nThis endpoint deletes domain forwarding data.\n\n- **Method**: `DELETE`\n- **Path**: `/api/domains/v1/forwarding/{domain}`\n\n**Parameters**:\n\n- `domain`: Domain name (required)\n\n### domains_createForwardingDataV1\n\nThis endpoint creates domain forwarding data.\n\n- **Method**: `POST`\n- **Path**: `/api/domains/v1/forwarding`\n\n**Parameters**:\n\n- `domain`: Domain name (required)\n- `redirect_type`: Redirect type (required)\n- `redirect_url`: URL to forward domain to (required)\n\n### domains_enableDomainLockV1\n\nThis endpoint enables domain lock for the domain. When domain lock is enabled, \nthe domain cannot be transferred to another registrar without first disabling the lock.\n\n- **Method**: `PUT`\n- **Path**: `/api/domains/v1/portfolio/{domain}/domain-lock`\n\n**Parameters**:\n\n- `domain`: Domain name (required)\n\n### domains_disableDomainLockV1\n\nThis endpoint disables domain lock for the domain. Domain lock needs to be disabled \nbefore transferring the domain to another registrar.\n\n- **Method**: `DELETE`\n- **Path**: `/api/domains/v1/portfolio/{domain}/domain-lock`\n\n**Parameters**:\n\n- `domain`: Domain name (required)\n\n### domains_getDomainV1\n\nThis endpoint retrieves details for specified domain.\n\n- **Method**: `GET`\n- **Path**: `/api/domains/v1/portfolio/{domain}`\n\n**Parameters**:\n\n- `domain`: Domain name (required)\n\n### domains_getDomainListV1\n\nThis endpoint retrieves a list of all domains associated with your account.\n\n- **Method**: `GET`\n- **Path**: `/api/domains/v1/portfolio`\n\n\n\n### domains_purchaseNewDomainV1\n\nThis endpoint allows you to buy (purchase) and register a new domain name. \n\nIf registration fails, login to [hPanel](https://hpanel.hostinger.com/) and check the domain registration status.\n\nIf no payment method is provided, your default payment method will be used automatically.\n\nIf no WHOIS information is provided, the default contact information for that TLD (Top-Level Domain) will be used. \nBefore making a request, ensure that WHOIS information for the desired TLD exists in your account.\n\nSome TLDs require `additional_details` to be provided and these will be validated before completing the purchase. The required additional details vary by TLD.\n\n- **Method**: `POST`\n- **Path**: `/api/domains/v1/portfolio`\n\n**Parameters**:\n\n- `domain`: Domain name (required)\n- `item_id`: Catalog price item ID (required)\n- `payment_method_id`: Payment method ID, default will be used if not provided \n- `domain_contacts`: Domain contact information \n- `additional_details`: Additional registration data, possible values depends on TLD \n- `coupons`: Discount coupon codes \n\n### domains_enablePrivacyProtectionV1\n\nThis endpoint enables privacy protection for the domain.\nWhen privacy protection is enabled, the domain owner's personal information is hidden from the public WHOIS database.\n\n- **Method**: `PUT`\n- **Path**: `/api/domains/v1/portfolio/{domain}/privacy-protection`\n\n**Parameters**:\n\n- `domain`: Domain name (required)\n\n### domains_disablePrivacyProtectionV1\n\nThis endpoint disables privacy protection for the domain.\nWhen privacy protection is disabled, the domain owner's personal information is visible in the public WHOIS database.\n\n- **Method**: `DELETE`\n- **Path**: `/api/domains/v1/portfolio/{domain}/privacy-protection`\n\n**Parameters**:\n\n- `domain`: Domain name (required)\n\n### domains_updateNameserversV1\n\nThis endpoint sets the nameservers for a specified domain.\n\nBe aware, that improper nameserver configuration can lead to the domain being unresolvable or unavailable. \n\n- **Method**: `PUT`\n- **Path**: `/api/domains/v1/portfolio/{domain}/nameservers`\n\n**Parameters**:\n\n- `domain`: Domain name (required)\n- `ns1`: First name server (required)\n- `ns2`: Second name server (required)\n- `ns3`: Third name server \n- `ns4`: Fourth name server \n\n### domains_getWHOISProfileV1\n\nThis endpoint retrieves a WHOIS contact profile.\n\n- **Method**: `GET`\n- **Path**: `/api/domains/v1/whois/{whoisId}`\n\n**Parameters**:\n\n- `whoisId`: WHOIS ID (required)\n\n### domains_deleteWHOISProfileV1\n\nThis endpoint deletes WHOIS contact profile.\n\n- **Method**: `DELETE`\n- **Path**: `/api/domains/v1/whois/{whoisId}`\n\n**Parameters**:\n\n- `whoisId`: WHOIS ID (required)\n\n### domains_getWHOISProfileListV1\n\nThis endpoint retrieves a list of WHOIS contact profiles.\n\n- **Method**: `GET`\n- **Path**: `/api/domains/v1/whois`\n\n**Parameters**:\n\n- `tld`: Filter by TLD (without leading dot) \n\n### domains_createWHOISProfileV1\n\nThis endpoint creates WHOIS contact profile.\n\n- **Method**: `POST`\n- **Path**: `/api/domains/v1/whois`\n\n**Parameters**:\n\n- `tld`: TLD of the domain (without leading dot) (required)\n- `country`: ISO 3166 2-letter country code (required)\n- `entity_type`: Legal entity type (required)\n- `tld_details`: TLD details \n- `whois_details`: WHOIS details (required)\n\n### domains_getWHOISProfileUsageV1\n\nThis endpoint retrieves a domain list where provided WHOIS contact profile is used.\n\n- **Method**: `GET`\n- **Path**: `/api/domains/v1/whois/{whoisId}/usage`\n\n**Parameters**:\n\n- `whoisId`: WHOIS ID (required)\n\n### VPS_getDataCentersListV1\n\nThis endpoint retrieves a list of all data centers available.\n\n- **Method**: `GET`\n- **Path**: `/api/vps/v1/data-centers`\n\n\n\n### VPS_activateFirewallV1\n\nThis endpoint activates a firewall for a specified virtual machine. \n\nOnly one firewall can be active for a virtual machine at a time.\n\n- **Method**: `POST`\n- **Path**: `/api/vps/v1/firewall/{firewallId}/activate/{virtualMachineId}`\n\n**Parameters**:\n\n- `firewallId`: Firewall ID (required)\n- `virtualMachineId`: Virtual Machine ID (required)\n\n### VPS_deactivateFirewallV1\n\nThis endpoint deactivates a firewall for a specified virtual machine.\n\n- **Method**: `POST`\n- **Path**: `/api/vps/v1/firewall/{firewallId}/deactivate/{virtualMachineId}`\n\n**Parameters**:\n\n- `firewallId`: Firewall ID (required)\n- `virtualMachineId`: Virtual Machine ID (required)\n\n### VPS_getFirewallV1\n\nThis endpoint retrieves firewall by its ID and rules associated with it.\n\n- **Method**: `GET`\n- **Path**: `/api/vps/v1/firewall/{firewallId}`\n\n**Parameters**:\n\n- `firewallId`: Firewall ID (required)\n\n### VPS_deleteFirewallV1\n\nThis endpoint deletes a specified firewall. \n\nAny virtual machine that has this firewall activated will automatically have it deactivated.\n\n- **Method**: `DELETE`\n- **Path**: `/api/vps/v1/firewall/{firewallId}`\n\n**Parameters**:\n\n- `firewallId`: Firewall ID (required)\n\n### VPS_getFirewallListV1\n\nThis endpoint retrieves a list of all firewalls available.\n\n- **Method**: `GET`\n- **Path**: `/api/vps/v1/firewall`\n\n**Parameters**:\n\n- `page`: Page number \n\n### VPS_createNewFirewallV1\n\nThis endpoint creates a new firewall.\n\n- **Method**: `POST`\n- **Path**: `/api/vps/v1/firewall`\n\n**Parameters**:\n\n- `name`: name parameter (required)\n\n### VPS_updateFirewallRuleV1\n\nThis endpoint updates a specific firewall rule from a specified firewall.\n\nAny virtual machine that has this firewall activated will loose sync with the firewall and will have to be synced again manually.\n\n- **Method**: `PUT`\n- **Path**: `/api/vps/v1/firewall/{firewallId}/rules/{ruleId}`\n\n**Parameters**:\n\n- `firewallId`: Firewall ID (required)\n- `ruleId`: Firewall Rule ID (required)\n- `protocol`: protocol parameter (required)\n- `port`: Port or port range, ex: 1024:2048 (required)\n- `source`: source parameter (required)\n- `source_detail`: IP range, CIDR, single IP or `any` (required)\n\n### VPS_deleteFirewallRuleV1\n\nThis endpoint deletes a specific firewall rule from a specified firewall.\n\nAny virtual machine that has this firewall activated will loose sync with the firewall and will have to be synced again manually.\n\n- **Method**: `DELETE`\n- **Path**: `/api/vps/v1/firewall/{firewallId}/rules/{ruleId}`\n\n**Parameters**:\n\n- `firewallId`: Firewall ID (required)\n- `ruleId`: Firewall Rule ID (required)\n\n### VPS_createFirewallRuleV1\n\nThis endpoint creates new firewall rule from a specified firewall. \nBy default, the firewall drops all incoming traffic, which means you must add accept rules for all ports you want to use.\n\nAny virtual machine that has this firewall activated will loose sync with the firewall and will have to be synced again manually.\n\n- **Method**: `POST`\n- **Path**: `/api/vps/v1/firewall/{firewallId}/rules`\n\n**Parameters**:\n\n- `firewallId`: Firewall ID (required)\n- `protocol`: protocol parameter (required)\n- `port`: Port or port range, ex: 1024:2048 (required)\n- `source`: source parameter (required)\n- `source_detail`: IP range, CIDR, single IP or `any` (required)\n\n### VPS_syncFirewallV1\n\nThis endpoint syncs a firewall for a specified virtual machine.\n\nFirewall can loose sync with virtual machine if the firewall has new rules added, removed or updated.\n\n- **Method**: `POST`\n- **Path**: `/api/vps/v1/firewall/{firewallId}/sync/{virtualMachineId}`\n\n**Parameters**:\n\n- `firewallId`: Firewall ID (required)\n- `virtualMachineId`: Virtual Machine ID (required)\n\n### VPS_getPostInstallScriptV1\n\nThis endpoint retrieves post-install script by its ID.\n\n- **Method**: `GET`\n- **Path**: `/api/vps/v1/post-install-scripts/{postInstallScriptId}`\n\n**Parameters**:\n\n- `postInstallScriptId`: Post-install script ID (required)\n\n### VPS_updatePostInstallScriptV1\n\nThis endpoint updates a specific post-install script.\n\n- **Method**: `PUT`\n- **Path**: `/api/vps/v1/post-install-scripts/{postInstallScriptId}`\n\n**Parameters**:\n\n- `postInstallScriptId`: Post-install script ID (required)\n- `name`: Name of the script (required)\n- `content`: Content of the script (required)\n\n### VPS_deleteAPostInstallScriptV1\n\nThis endpoint deletes a post-install script from your account. \n\n- **Method**: `DELETE`\n- **Path**: `/api/vps/v1/post-install-scripts/{postInstallScriptId}`\n\n**Parameters**:\n\n- `postInstallScriptId`: Post-install script ID (required)\n\n### VPS_getPostInstallScriptListV1\n\nThis endpoint retrieves a list of post-install scripts associated with your account.\n\n- **Method**: `GET`\n- **Path**: `/api/vps/v1/post-install-scripts`\n\n**Parameters**:\n\n- `page`: Page number \n\n### VPS_createPostInstallScriptV1\n\nThis endpoint allows you to add a new post-install script to your account, \nwhich can then be used run after the installation of a virtual machine instance.\n\nThe script contents will be saved to the file `/post_install` with executable attribute set and will be executed once virtual machine is installed.\nThe output of the script will be redirected to `/post_install.log`. Maximum script size is 48KB. \n\n- **Method**: `POST`\n- **Path**: `/api/vps/v1/post-install-scripts`\n\n**Parameters**:\n\n- `name`: Name of the script (required)\n- `content`: Content of the script (required)\n\n### VPS_attachPublicKeyV1\n\nThis endpoint attaches an existing public keys from your account to a specified virtual machine.\n\nMultiple keys can be attached to a single virtual machine.\n\n- **Method**: `POST`\n- **Path**: `/api/vps/v1/public-keys/attach/{virtualMachineId}`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n- `ids`: Public Key IDs to attach (required)\n\n### VPS_deleteAPublicKeyV1\n\nThis endpoint deletes a public key from your account. \n\n**Deleting public key from account does not remove it from virtual machine** \n\n- **Method**: `DELETE`\n- **Path**: `/api/vps/v1/public-keys/{publicKeyId}`\n\n**Parameters**:\n\n- `publicKeyId`: Public Key ID (required)\n\n### VPS_getPublicKeyListV1\n\nThis endpoint retrieves a list of public keys associated with your account.\n\n- **Method**: `GET`\n- **Path**: `/api/vps/v1/public-keys`\n\n**Parameters**:\n\n- `page`: Page number \n\n### VPS_createNewPublicKeyV1\n\nThis endpoint allows you to add a new public key to your account, \nwhich can then be attached to virtual machine instances for secure access.\n\n- **Method**: `POST`\n- **Path**: `/api/vps/v1/public-keys`\n\n**Parameters**:\n\n- `name`: name parameter (required)\n- `key`: key parameter (required)\n\n### VPS_getTemplateV1\n\nThis endpoint retrieves details of a specific OS template for virtual machines.\n\n- **Method**: `GET`\n- **Path**: `/api/vps/v1/templates/{templateId}`\n\n**Parameters**:\n\n- `templateId`: Template ID (required)\n\n### VPS_getTemplateListV1\n\nThis endpoint retrieves a list of available OS templates for virtual machines.\n\n- **Method**: `GET`\n- **Path**: `/api/vps/v1/templates`\n\n\n\n### VPS_getActionV1\n\nThis endpoint retrieves details of a specific action performed on a specified virtual machine. \n\nThis endpoint allows you to view detailed information about a particular action, including the action name, timestamp, and status.\n\n- **Method**: `GET`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}/actions/{actionId}`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n- `actionId`: Action ID (required)\n\n### VPS_getActionListV1\n\nThis endpoint retrieves a list of actions performed on a specified virtual machine.\n\nActions are operations or events that have been executed on the virtual machine, such as starting, stopping, or modifying \nthe machine. This endpoint allows you to view the history of these actions, providing details about each action, \nsuch as the action name, timestamp, and status.\n\n- **Method**: `GET`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}/actions`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n- `page`: Page number \n\n### VPS_getAttachedPublicKeysV1\n\nThis endpoint retrieves a list of public keys attached to a specified virtual machine.\n\n- **Method**: `GET`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}/public-keys`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n- `page`: Page number \n\n### VPS_deleteBackupV1\n\nThis endpoint deletes a specified backup for a virtual machine.\n\n- **Method**: `DELETE`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}/backups/{backupId}`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n- `backupId`: Backup ID (required)\n\n### VPS_getBackupListV1\n\nThis endpoint retrieves a list of backups for a specified virtual machine.\n\n- **Method**: `GET`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}/backups`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n- `page`: Page number \n\n### VPS_restoreBackupV1\n\nThis endpoint restores a backup for a specified virtual machine.\n\nThe system will then initiate the restore process, which may take some time depending on the size of the backup.\n\n**All data on the virtual machine will be overwritten with the data from the backup.**\n\n- **Method**: `POST`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}/backups/{backupId}/restore`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n- `backupId`: Backup ID (required)\n\n### VPS_setHostnameV1\n\nThis endpoint sets the hostname for a specified virtual machine. \nChanging hostname does not update PTR record automatically.\nIf you want your virtual machine to be reachable by a hostname, \nyou need to point your domain A/AAAA records to virtual machine IP as well.\n\n- **Method**: `PUT`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}/hostname`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n- `hostname`: hostname parameter (required)\n\n### VPS_resetHostnameV1\n\nThis endpoint resets the hostname and PTR record of a specified virtual machine to the default value.\n\n- **Method**: `DELETE`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}/hostname`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n\n### VPS_getVirtualMachineV1\n\nThis endpoint retrieves detailed information about a specified virtual machine.\n\n- **Method**: `GET`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n\n### VPS_getVirtualMachineListV1\n\nThis endpoint retrieves a list of all available virtual machines.\n\n- **Method**: `GET`\n- **Path**: `/api/vps/v1/virtual-machines`\n\n\n\n### VPS_purchaseNewVirtualMachineV1\n\nThis endpoint allows you to buy (purchase) and setup a new virtual machine.\n\nIf virtual machine setup fails for any reason, login to [hPanel](https://hpanel.hostinger.com/) and complete the setup manually.\n\nIf no payment method is provided, your default payment method will be used automatically.                        \n\n- **Method**: `POST`\n- **Path**: `/api/vps/v1/virtual-machines`\n\n**Parameters**:\n\n- `item_id`: Catalog price item ID (required)\n- `payment_method_id`: Payment method ID, default will be used if not provided \n- `setup`: setup parameter (required)\n- `coupons`: Discount coupon codes \n\n### VPS_getScanMetricsV1\n\nThis endpoint retrieves the scan metrics for the [Monarx](https://www.monarx.com/) malware scanner installed on a specified virtual machine.\nThe scan metrics provide detailed information about the malware scans performed by Monarx, including the number of scans, \ndetected threats, and other relevant statistics. This information is useful for monitoring the security status of the \nvirtual machine and assessing the effectiveness of the malware scanner.\n\n- **Method**: `GET`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}/monarx`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n\n### VPS_installMonarxV1\n\nThis endpoint installs the Monarx malware scanner on a specified virtual machine. \n\n[Monarx](https://www.monarx.com/) is a security tool designed to detect and prevent malware infections on virtual machines. \nBy installing Monarx, users can enhance the security of their virtual machines, ensuring that they are protected against malicious software.\n\n- **Method**: `POST`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}/monarx`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n\n### VPS_uninstallMonarxV1\n\nThis endpoint uninstalls the Monarx malware scanner on a specified virtual machine.\nIf Monarx is not installed, the request will still be processed without any effect.\n\n- **Method**: `DELETE`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}/monarx`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n\n### VPS_getMetricsV1\n\nThis endpoint retrieves the historical metrics for a specified virtual machine.\nIt includes the following metrics: \n- CPU usage\n- Memory usage\n- Disk usage\n- Network usage\n- Uptime\n\n- **Method**: `GET`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}/metrics`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n- `date_from`: date_from parameter (required)\n- `date_to`: date_to parameter (required)\n\n### VPS_setNameserversV1\n\nThis endpoint sets the nameservers for a specified virtual machine.\nBe aware, that improper nameserver configuration can lead to the virtual machine being unable to resolve domain names.\n\n- **Method**: `PUT`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}/nameservers`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n- `ns1`: ns1 parameter (required)\n- `ns2`: ns2 parameter \n\n### VPS_createPTRRecordV1\n\nThis endpoint creates or updates a PTR (Pointer) record for a specified virtual machine.\n\n- **Method**: `POST`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}/ptr`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n\n### VPS_deletePTRRecordV1\n\nThis endpoint deletes a PTR (Pointer) record for a specified virtual machine. \n\nOnce deleted, reverse DNS lookups to the virtual machine's IP address will no longer return the previously configured hostname.\n\n- **Method**: `DELETE`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}/ptr`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n\n### VPS_setPanelPasswordV1\n\nThis endpoint sets the panel password for a specified virtual machine. \nIf virtual machine does not use panel OS, the request will still be processed without any effect.\nRequirements for the password is the same as in the [recreate virtual machine endpoint](/#tag/vps-virtual-machine/POST/api/vps/v1/virtual-machines/{virtualMachineId}/recreate).\n\n- **Method**: `PUT`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}/panel-password`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n- `password`: Panel password for the virtual machine (required)\n\n### VPS_startRecoveryModeV1\n\nThis endpoint initiates the recovery mode for a specified virtual machine. \nRecovery mode is a special state that allows users to perform system rescue operations, \nsuch as repairing file systems, recovering data, or troubleshooting issues that prevent the virtual machine \nfrom booting normally. \n\nVirtual machine will boot recovery disk image and original disk image will be mounted in `/mnt` directory.\n\n- **Method**: `POST`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}/recovery`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n- `root_password`: Temporary root password for recovery mode (required)\n\n### VPS_stopRecoveryModeV1\n\nThis endpoint stops the recovery mode for a specified virtual machine. \nIf virtual machine is not in recovery mode, this operation will fail.\n\n- **Method**: `DELETE`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}/recovery`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n\n### VPS_recreateVirtualMachineV1\n\nThis endpoint will recreate a virtual machine from scratch. \nThe recreation process involves reinstalling the operating system and resetting the virtual machine to its initial state.\nSnapshots, if there are any, will be deleted.\n\n## Password Requirements\nPassword will be checked against leaked password databases. \nRequirements for the password are:\n- At least 8 characters long\n- At least one uppercase letter\n- At least one lowercase letter\n- At least one number\n- Is not leaked publicly\n\n**This operation is irreversible and will result in the loss of all data stored on the virtual machine!**\n\n- **Method**: `POST`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}/recreate`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n- `template_id`: Template ID (required)\n- `password`: Password for the virtual machine. If not provided, random password will be generated. Password will not be shown in the response. \n- `post_install_script_id`: Post-install script ID \n\n### VPS_restartVirtualMachineV1\n\nThis endpoint restarts a specified virtual machine. This is equivalent to fully stopping and starting the virtual machine.\nIf the virtual machine was stopped, it will be started.\n\n- **Method**: `POST`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}/restart`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n\n### VPS_setRootPasswordV1\n\nThis endpoint sets the root password for a specified virtual machine. \nRequirements for the password is the same as in the [recreate virtual machine endpoint](/#tag/vps-virtual-machine/POST/api/vps/v1/virtual-machines/{virtualMachineId}/recreate).\n\n- **Method**: `PUT`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}/root-password`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n- `password`: Root password for the virtual machine (required)\n\n### VPS_setupNewVirtualMachineV1\n\nThis endpoint will setup newly purchased virtual machine with `initial` state. \n\n- **Method**: `POST`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}/setup`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n- `template_id`: Template ID (required)\n- `data_center_id`: Data center ID (required)\n- `post_install_script_id`: Post-install script ID \n- `password`: Password for the virtual machine. If not provided, random password will be generated. Password will not be shown in the response. \n- `hostname`: Override default hostname of the virtual machine \n- `install_monarx`: Install Monarx malware scanner (if supported) \n- `enable_backups`: Enable weekly backup schedule \n- `ns1`: Name server 1 \n- `ns2`: Name server 2 \n- `public_key`: Use SSH key \n\n### VPS_getSnapshotV1\n\nThis endpoint retrieves a snapshot for a specified virtual machine.\n\n- **Method**: `GET`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}/snapshot`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n\n### VPS_createSnapshotV1\n\nThis endpoint creates a snapshot of a specified virtual machine. \nA snapshot captures the state and data of the virtual machine at a specific point in time, \nallowing users to restore the virtual machine to that state if needed. \nThis operation is useful for backup purposes, system recovery, \nand testing changes without affecting the current state of the virtual machine.\n\n**Creating new snapshot will overwrite the existing snapshot!**\n\n- **Method**: `POST`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}/snapshot`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n\n### VPS_deleteSnapshotV1\n\nThis endpoint deletes a snapshot of a specified virtual machine.\n\n- **Method**: `DELETE`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}/snapshot`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n\n### VPS_restoreSnapshotV1\n\nThis endpoint restores a specified virtual machine to a previous state using a snapshot. \nRestoring from a snapshot allows users to revert the virtual machine to that state, which is useful for system recovery, undoing changes, or testing.\n\n- **Method**: `POST`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}/snapshot/restore`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n\n### VPS_startVirtualMachineV1\n\nThis endpoint starts a specified virtual machine. \nIf the virtual machine is already running, the request will still be processed without any effect.\n\n- **Method**: `POST`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}/start`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n\n### VPS_stopVirtualMachineV1\n\nThis endpoint stops a specified virtual machine. \nIf the virtual machine is already stopped, the request will still be processed without any effect.\n\n- **Method**: `POST`\n- **Path**: `/api/vps/v1/virtual-machines/{virtualMachineId}/stop`\n\n**Parameters**:\n\n- `virtualMachineId`: Virtual Machine ID (required)\n"
}