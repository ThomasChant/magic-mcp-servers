{
  "mcp_name": "GooTec/NCBI-MCP",
  "mcp_description": "Facilitates access to NCBI Datasets through a modular MCP server with OpenAPI-driven endpoints for genome, gene, and taxonomy data.",
  "mcp_id": "GooTec_NCBI-MCP",
  "fetch_timestamp": "2025-06-23T04:11:36.738906Z",
  "github_url": "https://github.com/GooTec/NCBI-MCP",
  "repository": {
    "name": "NCBI-MCP",
    "full_name": "GooTec/NCBI-MCP",
    "description": null,
    "html_url": "https://github.com/GooTec/NCBI-MCP",
    "created_at": "2025-04-26T13:09:57Z",
    "updated_at": "2025-05-25T19:04:13Z",
    "pushed_at": "2025-04-26T13:56:37Z",
    "size": 5,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": null,
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "GooTec",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/32031832?v=4",
      "html_url": "https://github.com/GooTec"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "pull_requests_count": 0,
    "contributors_count": 1
  },
  "readme": "# NCBI Datasets MCP Server Protocol\n\nModel Context Protocol for the NCBI Datasets MCP server, following the MCP specification format.\n\n## Features\n\n- **OpenAPI-driven**: Loads the official NCBI Datasets v2 OpenAPI 3.0 spec for stub generation and documentation.\n- **Modular endpoints**: Genome, Gene, BioSample, Prokaryote, Virus, Organelle, Taxonomy, Version.\n- **Containerized**: Docker Compose & Kubernetes manifests included.\n- **Interactive docs**: Built-in Swagger UI (`/docs`).\n- **SDK generation**: Generate language-specific clients via `openapi-generator-cli`.\n\n## Use with Goose\n\n**Option 1: Oneâ€‘click install**  \nCopy into browser address bar to add extension:\n```\ngoose://extension?cmd=npx&arg=-y&arg=@your-org/mcp-ncbi-datasets&id=ncbi-datasets-mcp&name=NCBI%20Datasets%20MCP&description=wraps%20NCBI%20Datasets%20OpenAPI%20in%20MCP%20server\n```\n\n**Option 2: Manual (desktop or CLI)**\n```json\n{\n  \"mcpServers\": {\n    \"ncbiDatasets\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"@your-org/mcp-ncbi-datasets\"]\n    }\n  }\n}\n```\n\n## Use with Other MCP Clients\n```json\n{\n  \"mcpServers\": {\n    \"ncbiDatasets\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"@your-org/mcp-ncbi-datasets\"]\n    }\n  }\n}\n```\n\n## Development\n\n1. Clone repo:\n   ```bash\n   git clone https://github.com/your-org/mcp-ncbi-datasets.git\n   cd mcp-ncbi-datasets\n   ```\n2. Install dependencies:\n   ```bash\n   npm install\n   ```\n3. Run server:\n   ```bash\n   npm start\n   ```\n\n## Installation\n\n### Smithery (Claude Desktop)\n```bash\nnpx -y @smithery/cli install @your-org/mcp-ncbi-datasets --client claude\n```\n\n### Manual\n```bash\nnpm install -g @your-org/mcp-ncbi-datasets\n```\n\n## Usage\n\nStart the MCP server:\n```bash\nmcp-ncbi-datasets\n```\n\nOr via NPX in your MCP config:\n```json\n{\n  \"mcpServers\": {\n    \"ncbiDatasets\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"@your-org/mcp-ncbi-datasets\"]\n    }\n  }\n}\n```\n\n## Tools\n\n### start_server\nLaunches the MCP server.\n```json\n{\n  \"tool\": \"start_server\",\n  \"parameters\": {}\n}\n```\n\n### get_version\nRetrieve current service versions.\n- **Parameters:** `none`\n```json\n{\n  \"tool\": \"get_version\",\n  \"parameters\": {}\n}\n```\n\n### get_genome_annotation_report\nFetch genome annotation report by accession.\n- **Parameters:**\n  - `accession` (string, required)\n```json\n{\n  \"tool\": \"get_genome_annotation_report\",\n  \"parameters\": {\n    \"accession\": \"GCF_000001405.39\"\n  }\n}\n```\n\n### download_genome_package\nDownload genome data package.\n- **Parameters:**\n  - `accessions` (array of strings, required)\n  - `format` (string, optional: `fasta`, `jsonl`, `tsv`)\n```json\n{\n  \"tool\": \"download_genome_package\",\n  \"parameters\": {\n    \"accessions\": [\"GCF_000001405.39\"],\n    \"format\": \"fasta\"\n  }\n}\n```\n\n### get_gene_dataset_report\nRetrieve gene dataset report.\n- **Parameters:**\n  - `gene_ids` (array of ints, required)\n```json\n{\n  \"tool\": \"get_gene_dataset_report\",\n  \"parameters\": {\n    \"gene_ids\": [672, 7157]\n  }\n}\n```\n\n### download_gene_package\nDownload gene sequences and metadata.\n- **Parameters:**\n  - `gene_ids` (array of ints, required)\n  - `include` (array of strings, optional: `transcript`, `protein`)\n```json\n{\n  \"tool\": \"download_gene_package\",\n  \"parameters\": {\n    \"gene_ids\": [672],\n    \"include\": [\"transcript\",\"protein\"]\n  }\n}\n```\n\n### get_biosample_report\nFetch BioSample report by accession.\n- **Parameters:**\n  - `accession` (string, required)\n```json\n{\n  \"tool\": \"get_biosample_report\",\n  \"parameters\": {\n    \"accession\": \"SAMN00000000\"\n  }\n}\n```\n\n### get_taxonomy_subtree\nRetrieve filtered taxonomy subtree.\n- **Parameters:**\n  - `taxon` (int, required)\n  - `level` (string, optional)\n```json\n{\n  \"tool\": \"get_taxonomy_subtree\",\n  \"parameters\": {\n    \"taxon\": 9606,\n    \"level\": \"family\"\n  }\n}\n```\n\n## License\nMIT\n\n"
}