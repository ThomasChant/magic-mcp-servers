{
  "mcp_name": "slouchd/cyberchef-api-mcp-server",
  "mcp_description": "üêç ‚òÅÔ∏è - MCP server for interacting with the CyberChef server API which will allow an MCP client to utilise the CyberChef operations.",
  "mcp_id": "slouchd_cyberchef-api-mcp-server",
  "fetch_timestamp": "2025-06-23T08:30:13.508010Z",
  "github_url": "https://github.com/slouchd/cyberchef-api-mcp-server",
  "repository": {
    "name": "cyberchef-api-mcp-server",
    "full_name": "slouchd/cyberchef-api-mcp-server",
    "description": "CyberChef API MCP Server ‚ú®üßë‚Äçüç≥",
    "html_url": "https://github.com/slouchd/cyberchef-api-mcp-server",
    "created_at": "2025-04-16T10:57:17Z",
    "updated_at": "2025-06-05T05:11:24Z",
    "pushed_at": "2025-04-17T13:59:38Z",
    "size": 27,
    "stargazers_count": 9,
    "watchers_count": 9,
    "forks_count": 1,
    "open_issues_count": 0,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "slouchd",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/32179423?v=4",
      "html_url": "https://github.com/slouchd"
    },
    "has_issues": true,
    "has_projects": false,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 1,
    "subscribers_count": 1,
    "languages": {
      "Python": 10626,
      "Dockerfile": 1110
    },
    "language_percentages": {
      "Python": 90.54,
      "Dockerfile": 9.46
    },
    "pull_requests_count": 0,
    "contributors_count": 1
  },
  "readme": "# CyberChef API MCP Server\n\nThis model context protocol (MCP) server interfaces with the [CyberChef Server](https://github.com/gchq/CyberChef-server) API. Allowing you to use any LLM/MCP client of your choosing to utilise the tools and resources within CyberChef.\n\nüß∞ Available Tools and Resources\n---\n- `get_cyberchef_operations_categories`: __resource__ - gets updated Cyber Chef categories for additional context / selection of the correct operations\n- `get_cyberchef_operation_by_category`: __resource__ - gets list of Cyber Chef operations for a selected category\n- `bake_recipe`: __tool__ - bake (execute) a recipe (a list of operations) in order to derive an outcome from the input data\n- `batch_bake_recipe`: __tool__ - bake (execute) a recipe (a list of operations) in order to derive an outcome from a batch of input data\n- `perform_magic_operation`: __tool__ - perform CyberChef's magic operation which is designed to automatically detect how your data is encoded and which operations can be used to decode it\n\nüìù Usage\n---\nStart the server using the default stdio transport and specifying an environment variable pointing to a CyberChef API\n\n```bash\nCYBERCHEF_API_URL=\"your-cyberchef-api-url\" uv run cyberchef_api_mcp_server\n```\n\nüßë‚ÄçüíªUsage (Development)\n---\nStart the server and test it with the MCP inspector\n\n```bash\nuv add \"mcp[cli]\"\nmcp dev server.py\n```\n\nüìö Client Configuration\n---\nThe following commands will generate a client configuration file, the location will depend on your operating system\n\n```bash\nuv add \"mcp[cli]\"\nmcp install server.py --name \"CyberChef API MCP Server\"\n```\n\n> [!TIP]\n> After running the above command you can then tweak the client configuration to include the environment variable for the CyberChef API URL\n\n```json\n{\n \"mcpServers\": {\n   \"CyberChef API MCP Server\": {\n     \"command\": \"uv\",\n     \"args\": [\n       \"run\",\n       \"--with\",\n       \"mcp[cli]\",\n       \"--directory\",\n       \"cyberchef-api-mcp-server/cyberchef_api_mcp_server/\",\n       \"mcp\",\n       \"run\",\n       \"server.py\"\n     ],\n     \"env\": {\n       \"CYBERCHEF_API_URL\": \"your-cyberchef-api-url\"\n     }\n   }\n }\n}\n```\n\nüîç Demo\n---\nUsing the MCP server in this example use case, the following prerequisites apply: \n- You must have Claude desktop installed\n- Have a running CyberChef API instance or one you are able to use\n\nHere is a basic prompt being solved using the MCP server tools:\n<img width=\"1511\" src=\"https://github.com/user-attachments/assets/657f52b3-43eb-4c3b-94f1-289fc12817b2\" />\n\nüôá References\n---\n- [CyberChef](https://github.com/gchq/CyberChef)\n- [CyberChef Server](https://github.com/gchq/CyberChef-server)\n- [Model Context Protocol](https://github.com/modelcontextprotocol)\n- [FastMCP](https://github.com/jlowin/fastmcp)\n\nü™™ License\n---\nMIT License\n"
}