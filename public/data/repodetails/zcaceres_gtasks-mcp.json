{
  "mcp_name": "zcaceres/gtasks-mcp",
  "mcp_description": "üìá ‚òÅÔ∏è - An MCP server to Manage Google Tasks",
  "mcp_id": "zcaceres_gtasks-mcp",
  "fetch_timestamp": "2025-06-23T09:44:39.996999Z",
  "github_url": "https://github.com/zcaceres/gtasks-mcp",
  "repository": {
    "name": "gtasks-mcp",
    "full_name": "zcaceres/gtasks-mcp",
    "description": "A Google Tasks Model Context Protocol Server for Claude",
    "html_url": "https://github.com/zcaceres/gtasks-mcp",
    "created_at": "2024-12-17T21:44:26Z",
    "updated_at": "2025-06-21T05:22:13Z",
    "pushed_at": "2025-02-02T19:25:00Z",
    "size": 1125,
    "stargazers_count": 63,
    "watchers_count": 63,
    "forks_count": 19,
    "open_issues_count": 11,
    "language": "TypeScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "zcaceres",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/10032979?v=4",
      "html_url": "https://github.com/zcaceres"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 19,
    "subscribers_count": 2,
    "languages": {
      "TypeScript": 7580,
      "JavaScript": 7488,
      "Dockerfile": 821
    },
    "language_percentages": {
      "TypeScript": 47.71,
      "JavaScript": 47.13,
      "Dockerfile": 5.17
    },
    "pull_requests_count": 4,
    "contributors_count": 2,
    "package_json_version": "0.0.1"
  },
  "readme": "# Google Tasks MCP Server\n\n![gtasks mcp logo](./logo.jpg)\n[![smithery badge](https://smithery.ai/badge/@zcaceres/gtasks)](https://smithery.ai/server/@zcaceres/gtasks)\n\nThis MCP server integrates with Google Tasks to allow listing, reading, searching, creating, updating, and deleting tasks.\n\n## Components\n\n### Tools\n\n- **search**\n  - Search for tasks in Google Tasks\n  - Input: `query` (string): Search query\n  - Returns matching tasks with details\n\n- **list**\n  - List all tasks in Google Tasks\n  - Optional input: `cursor` (string): Cursor for pagination\n  - Returns a list of all tasks\n\n- **create**\n  - Create a new task in Google Tasks\n  - Input:\n    - `taskListId` (string, optional): Task list ID\n    - `title` (string, required): Task title\n    - `notes` (string, optional): Task notes\n    - `due` (string, optional): Due date\n  - Returns confirmation of task creation\n\n- **update**\n  - Update an existing task in Google Tasks\n  - Input:\n    - `taskListId` (string, optional): Task list ID\n    - `id` (string, required): Task ID\n    - `uri` (string, required): Task URI\n    - `title` (string, optional): New task title\n    - `notes` (string, optional): New task notes\n    - `status` (string, optional): New task status (\"needsAction\" or \"completed\")\n    - `due` (string, optional): New due date\n  - Returns confirmation of task update\n\n- **delete**\n  - Delete a task in Google Tasks\n  - Input:\n    - `taskListId` (string, required): Task list ID\n    - `id` (string, required): Task ID\n  - Returns confirmation of task deletion\n\n- **clear**\n  - Clear completed tasks from a Google Tasks task list\n  - Input: `taskListId` (string, required): Task list ID\n  - Returns confirmation of cleared tasks\n\n### Resources\n\nThe server provides access to Google Tasks resources:\n\n- **Tasks** (`gtasks:///<task_id>`)\n  - Represents individual tasks in Google Tasks\n  - Supports reading task details including title, status, due date, notes, and other metadata\n  - Can be listed, read, created, updated, and deleted using the provided tools\n\n## Getting started\n\n1. [Create a new Google Cloud project](https://console.cloud.google.com/projectcreate)\n2. [Enable the Google Tasks API](https://console.cloud.google.com/workspace-api/products)\n3. [Configure an OAuth consent screen](https://console.cloud.google.com/apis/credentials/consent) (\"internal\" is fine for testing)\n4. Add scopes `https://www.googleapis.com/auth/tasks`\n5. [Create an OAuth Client ID](https://console.cloud.google.com/apis/credentials/oauthclient) for application type \"Desktop App\"\n6. Download the JSON file of your client's OAuth keys\n7. Rename the key file to `gcp-oauth.keys.json` and place into the root of this repo (i.e. `gcp-oauth.keys.json`)\n\nMake sure to build the server with either `npm run build` or `npm run watch`.\n\n### Installing via Smithery\n\nTo install Google Tasks Server for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@zcaceres/gtasks):\n\n```bash\nnpx -y @smithery/cli install @zcaceres/gtasks --client claude\n```\n\n### Authentication\n\nTo authenticate and save credentials:\n\n1. Run the server with the `auth` argument: `npm run start auth`\n2. This will open an authentication flow in your system browser\n3. Complete the authentication process\n4. Credentials will be saved in the root of this repo (i.e. `.gdrive-server-credentials.json`)\n\n### Usage with Desktop App\n\nTo integrate this server with the desktop app, add the following to your app's server configuration:\n\n```json\n{\n  \"mcpServers\": {\n    \"gtasks\": {\n      \"command\": \"/opt/homebrew/bin/node\",\n      \"args\": [\n        \"{ABSOLUTE PATH TO FILE HERE}/dist/index.js\"\n      ]\n    }\n  }\n}\n```\n"
}