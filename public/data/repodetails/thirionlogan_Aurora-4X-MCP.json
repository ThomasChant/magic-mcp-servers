{
  "mcp_name": "thirionlogan/Aurora-4X-MCP",
  "mcp_description": "Facilitates integration with the Aurora 4X game by providing a Model Context Protocol server for managing game data and interactions.",
  "mcp_id": "thirionlogan_Aurora-4X-MCP",
  "fetch_timestamp": "2025-06-23T08:54:04.516381Z",
  "github_url": "https://github.com/thirionlogan/Aurora-4X-MCP",
  "repository": {
    "name": "Aurora-4X-MCP",
    "full_name": "thirionlogan/Aurora-4X-MCP",
    "description": null,
    "html_url": "https://github.com/thirionlogan/Aurora-4X-MCP",
    "created_at": "2025-04-18T04:25:56Z",
    "updated_at": "2025-06-21T00:27:22Z",
    "pushed_at": "2025-04-22T00:16:33Z",
    "size": 103,
    "stargazers_count": 3,
    "watchers_count": 3,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "TypeScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "master",
    "owner": {
      "login": "thirionlogan",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/73679754?v=4",
      "html_url": "https://github.com/thirionlogan"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 91873,
      "JavaScript": 383
    },
    "language_percentages": {
      "TypeScript": 99.58,
      "JavaScript": 0.42
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "package_json_version": "1.0.0"
  },
  "readme": "# Aurora-4X-MCP\n\nMCP (Model Context Protocol) server for Aurora 4X, providing integration capabilities with the Aurora 4X game.\n\n## Overview\n\nAurora-4X-MCP is a Model Context Protocol server implementation that enables integration with Aurora 4X, a complex 4X space strategy game. This server provides tools and resources for interacting with Aurora 4X game data and functionality.\n\n## Features\n\n- SQLite database integration for game data management\n- MCP protocol implementation using the official SDK\n- Environment variable configuration support\n- TypeScript-based implementation for type safety\n\n## Prerequisites\n\n- Node.js (LTS version recommended)\n- npm or yarn package manager\n- Aurora 4X game installation\n- TypeScript knowledge for development\n\n## Installation\n\n1. Clone the repository:\n\n```bash\ngit clone https://github.com/yourusername/Aurora-4X-MCP.git\ncd Aurora-4X-MCP\n```\n\n2. Install dependencies:\n\n```bash\nnpm install\n```\n\n3. Create a `.env` file in the root directory with your configuration:\n\n```env\n# Add your environment variables here\n```\n\n## MCP Client Configuration\n\nTo connect your MCP client to this server, you'll need to configure it properly. Create or modify your MCP client configuration file (typically located at `~/.cursor/mcp.json` or equivalent based on your system):\n\n```json\n{\n  \"mcpServers\": {\n    \"aurora-4x-mcp\": {\n      \"command\": \"npm\",\n      \"args\": [\"--prefix\", \"/path/to/Aurora-4X-MCP\", \"start\"],\n      \"cwd\": \"/path/to/Aurora-4X-MCP\"\n    }\n  }\n}\n```\n\nReplace `/path/to/Aurora-4X-MCP` with the actual path where you installed the server.\n\n## Usage\n\n### Development\n\nTo run the server in development mode with watch mode:\n\n```bash\nnpm run dev\n```\n\n### Production\n\nTo build and run the server in production:\n\n```bash\nnpm run build\nnpm start\n```\n\n### Available Scripts\n\n- `npm start` - Build and start the server\n- `npm run dev` - Run in development mode with watch\n- `npm run build` - Build the TypeScript code\n- `npm run lint` - Run ESLint for code quality\n\n## Project Structure\n\n```\nAurora-4X-MCP/\n├── src/\n│   ├── app.ts           # Main application entry point\n│   ├── db/              # Database related code\n│   ├── tools/           # MCP tools implementation\n│   └── resources/       # MCP resources implementation\n├── dist/                # Compiled JavaScript output\n├── data/                # Data storage\n└── node_modules/        # Dependencies\n```\n\n## Dependencies\n\n### Main Dependencies\n\n- `@modelcontextprotocol/sdk` - MCP protocol implementation\n- `better-sqlite3` - SQLite database interface\n- `dotenv` - Environment configuration\n\n### Development Dependencies\n\n- `typescript` - TypeScript compiler\n- `eslint` - Code linting\n- Various TypeScript and ESLint plugins\n\n## Contributing\n\n1. Fork the repository\n2. Create your feature branch (`git checkout -b feature/amazing-feature`)\n3. Commit your changes (`git commit -m 'Add some amazing feature'`)\n4. Push to the branch (`git push origin feature/amazing-feature`)\n5. Open a Pull Request\n\n## License\n\nThis project is licensed under the ISC License - see the [LICENSE](LICENSE) file for details.\n\n## Acknowledgments\n\n- Aurora 4X game developers\n- Model Context Protocol team\n- Contributors to the project\n\n## Support\n\nFor support, please open an issue in the GitHub repository or contact the maintainers.\n"
}