{
  "mcp_name": "falahgs/Brave-Gemini-Research-MCP-Server",
  "mcp_description": "Empowers AI assistants with web search and research paper analysis using Brave Search API and Google's Gemini model.",
  "mcp_id": "falahgs_Brave-Gemini-Research-MCP-Server",
  "fetch_timestamp": "2025-06-23T02:58:51.832833Z",
  "github_url": "https://github.com/falahgs/Brave-Gemini-Research-MCP-Server",
  "repository": {
    "name": "Brave-Gemini-Research-MCP-Server",
    "full_name": "falahgs/Brave-Gemini-Research-MCP-Server",
    "description": null,
    "html_url": "https://github.com/falahgs/Brave-Gemini-Research-MCP-Server",
    "created_at": "2025-04-13T12:49:55Z",
    "updated_at": "2025-06-14T01:13:39Z",
    "pushed_at": "2025-04-13T12:53:45Z",
    "size": 36,
    "stargazers_count": 2,
    "watchers_count": 2,
    "forks_count": 2,
    "open_issues_count": 1,
    "language": "TypeScript",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "falahgs",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/5242012?v=4",
      "html_url": "https://github.com/falahgs"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 2,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 20222,
      "JavaScript": 1060
    },
    "language_percentages": {
      "TypeScript": 95.02,
      "JavaScript": 4.98
    },
    "pull_requests_count": 1,
    "contributors_count": 2
  },
  "readme": "# Brave-Gemini Research MCP Server\r\n\r\nA modern MCP (Model Context Protocol) server implementation that provides AI assistants with web search capabilities via the Brave Search API and advanced research paper analysis with Google's Gemini model.\r\n\r\n## Overview\r\n\r\nThis project enables AI assistants like Claude to perform web searches and analyze research papers directly through a standardized API interface. The MCP server exposes three main tools:\r\n\r\n1. **Web Search** - For general internet searches and information retrieval\r\n2. **Local Search** - For finding businesses, locations, and places of interest\r\n3. **Research Paper Analysis** - For in-depth analysis of academic papers using Google's Gemini model\r\n\r\n## Features\r\n\r\n- üîç **Web Search API** - Find information across the web\r\n- üè¢ **Local Search API** - Discover businesses and places\r\n- üìë **Research Paper Analysis** - Analyze academic papers with Gemini AI\r\n- ü§ñ **Claude Integration** - Seamless connection with Claude Desktop\r\n- üõ†Ô∏è **Extensible Design** - Easy to add new tools and capabilities\r\n\r\n## Setup and Installation\r\n\r\n### Prerequisites\r\n\r\n- Node.js v18+ recommended\r\n- Brave Search API key ([Get one here](https://brave.com/search/api/))\r\n- Google API key for Gemini integration (required for research paper analysis)\r\n- Claude Desktop for AI assistant integration (optional)\r\n\r\n### Installation\r\n\r\n1. Clone the repository:\r\n   ```bash\r\n   git clone https://github.com/falahgs/brave-gemini-research-mcp.git\r\n   cd brave-gemini-research-mcp\r\n   ```\r\n\r\n2. Install dependencies:\r\n   ```bash\r\n   npm install\r\n   ```\r\n\r\n3. Create a `.env` file with your API keys:\r\n   ```\r\n   BRAVE_API_KEY=your_brave_api_key\r\n   GOOGLE_API_KEY=your_google_api_key\r\n   ```\r\n\r\n### Building\r\n\r\nCompile the TypeScript code to JavaScript:\r\n\r\n```bash\r\nnpm run build\r\n# or manually\r\nnpx tsc\r\n```\r\n\r\n### Running the Server\r\n\r\nSet environment variables and start the server:\r\n\r\n**PowerShell:**\r\n```powershell\r\n$env:BRAVE_API_KEY=\"your_brave_api_key\"\r\n$env:GOOGLE_API_KEY=\"your_google_api_key\"\r\nnode dist/index.js\r\n```\r\n\r\n**Command Prompt:**\r\n```\r\nSET BRAVE_API_KEY=your_brave_api_key\r\nSET GOOGLE_API_KEY=your_google_api_key\r\nnode dist/index.js\r\n```\r\n\r\n**Bash/Linux/macOS:**\r\n```bash\r\nBRAVE_API_KEY=your_brave_api_key GOOGLE_API_KEY=your_google_api_key node dist/index.js\r\n```\r\n\r\n## Claude Desktop Integration\r\n\r\nFollow these steps to integrate the MCP server with Claude Desktop:\r\n\r\n1. Ensure you have Claude Desktop installed ([Download here](https://claude.ai/desktop))\r\n\r\n2. Locate your Claude Desktop configuration file:\r\n   - Windows: `C:\\Users\\<username>\\AppData\\Roaming\\Claude\\claude_desktop_config.json`\r\n   - macOS: `~/Library/Application Support/Claude/claude_desktop_config.json`\r\n\r\n3. Add the Brave-Gemini Research MCP configuration:\r\n\r\n```json\r\n{\r\n  \"mcpServers\": {\r\n    \"Brave-Gemini Research\": {\r\n      \"command\": \"node\",\r\n      \"args\": [\"G:\\\\path\\\\to\\\\your\\\\brave-gemini-research-mcp\\\\dist\\\\index.js\"],\r\n      \"cwd\": \"G:\\\\path\\\\to\\\\your\\\\brave-gemini-research-mcp\",\r\n      \"timeoutMs\": 120000,\r\n      \"env\": {\r\n        \"BRAVE_API_KEY\": \"your_brave_api_key\",\r\n        \"GOOGLE_API_KEY\": \"your_google_api_key\",\r\n        \"NODE_ENV\": \"production\",\r\n        \"DEBUG\": \"mcp:*\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n4. Important notes:\r\n   - Use **absolute paths** with double backslashes (Windows) in the `args` and `cwd` fields\r\n   - Replace `G:\\\\path\\\\to\\\\your\\\\brave-gemini-research-mcp` with the actual path to your project\r\n   - Replace `your_brave_api_key` and `your_google_api_key` with your actual API keys\r\n   - The `timeoutMs` setting helps prevent timeout issues during initialization\r\n\r\n5. Save the file and restart Claude Desktop\r\n\r\n### Using with Claude\r\n\r\nAfter configuration, you can ask Claude to search the web or analyze research papers with prompts like:\r\n\r\n- \"Search the web for the latest AI research papers\"\r\n- \"Find coffee shops in San Francisco\"\r\n- \"Analyze this research paper on quantum computing: [paper content]\"\r\n\r\nClaude will use the MCP server to perform these searches and analyses, returning the results directly in your conversation.\r\n\r\n## Tool Capabilities\r\n\r\n### Web Search Tool\r\n\r\nThe web search tool enables general internet searches:\r\n\r\n- **Function**: `brave_web_search`\r\n- **Parameters**:\r\n  - `query` (required): Search query (max 400 chars)\r\n  - `count` (optional): Number of results (1-20, default 10)\r\n  - `offset` (optional): Pagination offset (max 9, default 0)\r\n\r\n### Local Search Tool\r\n\r\nThe local search tool finds businesses and locations:\r\n\r\n- **Function**: `brave_local_search`\r\n- **Parameters**:\r\n  - `query` (required): Local search query (e.g., \"pizza near Central Park\")\r\n  - `count` (optional): Number of results (1-20, default 5)\r\n\r\n### Research Paper Analysis Tool\r\n\r\nThe research paper analysis tool provides in-depth analysis of academic papers using Google's Gemini model:\r\n\r\n- **Function**: `gemini_research_paper_analysis`\r\n- **Parameters**:\r\n  - `paperContent` (required): The full text of the research paper to analyze\r\n  - `analysisType` (optional): Type of analysis to perform\r\n    - Options: \"summary\", \"critique\", \"literature review\", \"key findings\", \"comprehensive\" (default)\r\n  - `additionalContext` (optional): Specific questions or context to guide the analysis\r\n\r\n**Analysis Types:**\r\n- **Summary**: Comprehensive overview including research question, methodology, key findings, and conclusions\r\n- **Critique**: Critical evaluation of methodology, validity, limitations, and suggestions for improvement\r\n- **Literature Review**: Analysis of how the paper fits within the broader research landscape\r\n- **Key Findings**: Extraction and explanation of the most significant findings and implications\r\n- **Comprehensive**: Complete analysis covering all aspects (default)\r\n\r\n### Example Analysis Result\r\n\r\nWhen using the Research Paper Analysis tool with Gemini, you'll receive a structured, comprehensive analysis depending on the analysis type selected. For example, with a \"comprehensive\" analysis, you might get:\r\n\r\n```\r\n## Research Paper Analysis: Comprehensive\r\n\r\n### Overview\r\n[Summary of paper's main topic and research objectives]\r\n\r\n### Methodology Assessment\r\n[Evaluation of the research methods and design]\r\n\r\n### Key Findings\r\n[Breakdown of the most significant discoveries and results]\r\n\r\n### Limitations\r\n[Analysis of constraints and weaknesses in the research]\r\n\r\n### Significance & Implications\r\n[Discussion of the paper's importance to the field]\r\n\r\n### Recommendations\r\n[Suggestions for future research or applications]\r\n```\r\n\r\nThe Gemini model provides expert-level analysis that helps researchers, students, and professionals quickly understand and evaluate complex academic content.\r\n\r\n## Troubleshooting\r\n\r\n### Common Issues\r\n\r\n1. **Module Not Found Errors**:\r\n   - Ensure all imports include `.js` extensions in TypeScript files\r\n   - Run `npx tsc` to recompile after fixing imports\r\n   - Check the generated `dist` directory structure\r\n\r\n2. **Timeout Errors**:\r\n   - Increase the `timeoutMs` in Claude Desktop configuration (120000 ms recommended)\r\n   - Check that environment variables are properly set\r\n\r\n3. **API Key Issues**:\r\n   - Verify your API keys are correctly set in the environment\r\n   - Check for rate limiting or usage restrictions\r\n\r\n4. **Gemini Model Issues**:\r\n   - Ensure your Google API key has access to Gemini models\r\n   - Check if the paper content exceeds token limits (try shorter excerpts)\r\n   - Verify the analysis type is one of the supported options\r\n\r\n5. **Windows-Specific Issues**:\r\n   - Use PowerShell for more reliable environment variable handling\r\n   - For Windows paths in JSON config, use double backslashes (e.g., `G:\\\\path\\\\to\\\\file`)\r\n   - Consider using absolute paths if relative paths aren't working\r\n\r\n### Debugging\r\n\r\nFor detailed debugging output:\r\n\r\n```bash\r\n# Set environment variables\r\nDEBUG=mcp:* NODE_ENV=development node dist/index.js\r\n```\r\n\r\n## Testing Your Setup\r\n\r\nTo verify your MCP server is working correctly:\r\n\r\n1. **Manual Test**:\r\n   - Run the server using the command line instructions above\r\n   - Check the console output for \"Brave-Gemini Research MCP Server running on stdio\"\r\n   - No error messages should appear\r\n\r\n2. **Claude Desktop Test**:\r\n   - After configuring Claude Desktop, open a new conversation\r\n   - Ask Claude to \"Search for latest developments in AI\"\r\n   - Claude should respond with search results from Brave Search\r\n   - Ask Claude to analyze a research paper\r\n   - Claude should respond with a detailed analysis from Gemini\r\n\r\n## Technical Details\r\n\r\n### MCP Protocol\r\n\r\nThe Model Context Protocol allows AI models to access external tools through a standardized interface. Key components include:\r\n\r\n- **Tools**: Functions with defined schemas\r\n- **Transports**: Communication channels between clients and servers\r\n- **Handlers**: Logic to process requests and return responses\r\n\r\n### Project Structure\r\n\r\n```\r\n‚îú‚îÄ‚îÄ dist/               # Compiled JavaScript files\r\n‚îú‚îÄ‚îÄ src/\r\n‚îÇ   ‚îú‚îÄ‚îÄ config.ts       # Server configuration\r\n‚îÇ   ‚îú‚îÄ‚îÄ server.ts       # MCP server implementation\r\n‚îÇ   ‚îú‚îÄ‚îÄ tools/          # Tool definitions and handlers\r\n‚îÇ   ‚îî‚îÄ‚îÄ utils/          # Utility functions and API clients\r\n‚îú‚îÄ‚îÄ index.ts            # Server entry point\r\n‚îú‚îÄ‚îÄ tsconfig.json       # TypeScript configuration\r\n‚îî‚îÄ‚îÄ package.json        # Project dependencies\r\n```\r\n\r\n## Citation\r\n\r\nIf you use this tool in your research or project, please cite it as:\r\n\r\n```\r\nSalieh, F. G. (2025). Brave-Gemini Research MCP Server: A tool for AI assistants to search the web and analyze research papers. \r\nhttps://github.com/yourusername/brave-gemini-research-mcp\r\n```\r\n\r\n## License\r\n\r\nMIT\r\n\r\n## Copyright\r\n\r\n¬© 2025 Falah G. Salieh, Baghdad, Iraq. All rights reserved.\r\n\r\n---\r\n\r\nMade with ‚ù§Ô∏è for enhancing AI capabilities\r\n"
}