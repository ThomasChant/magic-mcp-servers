{
  "mcp_name": "srcgrp/sentry-mcp-server",
  "mcp_description": "Integrate Sentry error tracking into your development workflow by accessing release health data and issue details directly within your MCP-enabled environment.",
  "mcp_id": "srcgrp_sentry-mcp-server",
  "fetch_timestamp": "2025-06-23T08:35:49.161083Z",
  "github_url": "https://github.com/srcgrp/sentry-mcp-server",
  "repository": {
    "name": "sentry-mcp-server",
    "full_name": "srcgrp/sentry-mcp-server",
    "description": null,
    "html_url": "https://github.com/srcgrp/sentry-mcp-server",
    "created_at": "2025-04-12T13:47:36Z",
    "updated_at": "2025-06-09T16:24:18Z",
    "pushed_at": "2025-04-12T14:14:43Z",
    "size": 33,
    "stargazers_count": 2,
    "watchers_count": 2,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "JavaScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "srcgrp",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/16266551?v=4",
      "html_url": "https://github.com/srcgrp"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "JavaScript": 16446
    },
    "language_percentages": {
      "JavaScript": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "package_json_version": "1.0.0"
  },
  "readme": "# Sentry MCP Server\n\n**Integrate Sentry error tracking directly into your development workflow with this Model Context Protocol (MCP) server.**\n\nGain insights into your application's stability by accessing Sentry release health data and issue details without leaving your MCP-enabled environment (like VS Code with the Cline extension).\n\n## Key Features\n- **Release Monitoring:** List recent releases and view their associated new issue counts.\n- **Release Health:** Get detailed statistics for specific releases, including crash-free rates and session counts.\n- **Issue Investigation:** Fetch detailed information about specific Sentry issues by their ID.\n- **Targeted Issue Listing:** Retrieve all issues associated with a particular release version.\n- **Flexible Connection:** Works with both Sentry.io (cloud) and self-hosted Sentry instances.\n- **Server Inspection:** Includes a tool to verify configuration and server status.\n\n## Setup\n\n1.  **Clone the Repository:**\n    Clone this repository to your local machine:\n    ```bash\n    git clone https://github.com/srcgrp/sentry-mcp-server.git\n    cd sentry-mcp-server\n    ```\n\n2.  **Install Dependencies & Build:**\n    Install the necessary dependencies and build the server:\n    ```bash\n    npm install\n    npm run build \n    ```\n    This will create the executable server script in the `build/` directory.\n\n3.  **Configure MCP Client:**\n    Add the server to your MCP client's configuration file (e.g., `cline_mcp_settings.json` for Cline). **Make sure to use the absolute path** to the built `index.js` file:\n\n    ```json\n    {\n      \"mcpServers\": {\n        \"sentry-local\": { // You can choose any name here\n          \"command\": \"node\", \n          \"args\": [\n            \"/path/to/your/cloned/sentry-mcp-server/build/index.js\" // <-- IMPORTANT: Use absolute path here\n          ],\n          \"env\": {\n            // Environment variables can be set here OR loaded from a .env file (see next step)\n          },\n          \"disabled\": false, // Ensure it's enabled\n          \"autoApprove\": [] \n        }\n        // ... other servers\n      }\n    }\n    ```\n    *Restart your MCP client (e.g., reload VS Code) after modifying the settings.*\n\n4.  **Create `.env` File:**\n    In the **root directory of the cloned `sentry-mcp-server` project**, create a `.env` file with the following required variables:\n\n    ```dotenv\n    # Required Sentry Credentials & Configuration\n    SENTRY_AUTH_TOKEN=\"YOUR_SENTRY_AUTH_TOKEN\"  # Generate from Sentry > User Settings > API Keys\n    SENTRY_BASE_URL=\"YOUR_SENTRY_API_ENDPOINT\" # e.g., https://sentry.io/api/0/ or https://your-sentry-instance.com/api/0/\n    SENTRY_ORG_SLUG=\"your-organization-slug\"   # Your Sentry organization slug\n    ```\n    *Replace the placeholder values with your actual Sentry details.*\n\n## Configuration Details\nThe server relies on these environment variables (typically set in the `.env` file):\n\n-   **`SENTRY_AUTH_TOKEN` (Required):** Your Sentry API authentication token. Grants the server permission to access your Sentry data.\n-   **`SENTRY_BASE_URL` (Required):** The base URL for the Sentry API. For Sentry.io cloud users, this is usually `https://sentry.io/api/0/`. For self-hosted instances, use your instance's API endpoint.\n-   **`SENTRY_ORG_SLUG` (Required):** The unique identifier (slug) for your organization within Sentry. This is used as the default organization for API calls unless overridden in specific tool arguments.\n\n## Available Tools\n\nHere's a breakdown of the tools provided by this server, along with usage examples:\n\n### 1. `inspect_sentry`\n\n*   **Description:** Inspects the server's current configuration, verifies the connection to Sentry (using the provided token and URL), lists available capabilities, and shows basic environment details. Useful for debugging setup issues.\n*   **Input Schema:** None (no arguments required).\n*   **Example Usage (MCP Client):**\n    ```json\n    {\n      \"tool_name\": \"inspect_sentry\",\n      \"arguments\": {}\n    }\n    ```\n*   **Example Output:**\n    ```json\n    {\n      \"configuration\": {\n        \"baseUrl\": \"https://sentry.io/api/0/\",\n        \"authTokenConfigured\": true,\n        \"defaultOrg\": \"your-organization-slug\"\n      },\n      \"capabilities\": [\n        \"list_recent_releases\",\n        \"get_releases\",\n        \"get_release_health\",\n        \"get_issue\",\n        \"get_release_issues\"\n        // inspect_sentry is excluded from this list\n      ],\n      \"environment\": {\n        \"nodeVersion\": \"v18.12.0\",\n        \"platform\": \"linux\",\n        \"memoryUsage\": { /* ... */ }\n      }\n    }\n    ```\n\n### 2. `list_recent_releases`\n\n*   **Description:** Retrieves a list of the most recent releases for a specified project, sorted by date (newest first). Includes the number of new issues introduced in each release.\n*   **Input Schema:**\n    *   `project_slug` (string, required): The slug of the Sentry project.\n    *   `org_slug` (string, optional): The organization slug. Defaults to `SENTRY_ORG_SLUG` from your `.env`.\n    *   `count` (number, optional): The maximum number of releases to return. Defaults to 5.\n*   **Example Usage (MCP Client):**\n    ```json\n    {\n      \"tool_name\": \"list_recent_releases\",\n      \"arguments\": {\n        \"project_slug\": \"your-frontend-project\",\n        \"count\": 3 \n      }\n    }\n    ```\n*   **Example Output:**\n    ```json\n    [\n      {\n        \"version\": \"frontend@2.5.1\",\n        \"date\": \"2023-10-27T10:30:00Z\",\n        \"new_issues\": 2,\n        \"type\": \"desktop\" \n      },\n      {\n        \"version\": \"frontend@2.5.0\",\n        \"date\": \"2023-10-26T15:00:00Z\",\n        \"new_issues\": 0,\n        \"type\": \"desktop\"\n      },\n      {\n        \"version\": \"mobile-app@1.2.0-beta\",\n        \"date\": \"2023-10-25T09:00:00Z\",\n        \"new_issues\": 5,\n        \"type\": \"mobile\" \n      }\n    ]\n    ```\n\n### 3. `get_releases`\n\n*   **Description:** Fetches all releases for a project, sorted by date (newest first).\n*   **Input Schema:**\n    *   `project_slug` (string, required): The slug of the Sentry project.\n    *   `org_slug` (string, optional): The organization slug. Defaults to `SENTRY_ORG_SLUG`.\n*   **Example Usage (MCP Client):**\n    ```json\n    {\n      \"tool_name\": \"get_releases\",\n      \"arguments\": {\n        \"project_slug\": \"your-backend-service\"\n      }\n    }\n    ```\n*   **Example Output:** (Similar structure to `list_recent_releases`, but potentially many more entries)\n\n### 4. `get_release_health`\n\n*   **Description:** Provides health statistics for a specific release version (or the latest release if no version is specified). Includes crash-free rates, session counts, and new issue counts.\n*   **Input Schema:**\n    *   `project_slug` (string, required): The slug of the Sentry project.\n    *   `org_slug` (string, optional): The organization slug. Defaults to `SENTRY_ORG_SLUG`.\n    *   `release_version` (string, optional): The specific release version string. If omitted, fetches data for the latest release.\n*   **Example Usage (MCP Client):**\n    ```json\n    {\n      \"tool_name\": \"get_release_health\",\n      \"arguments\": {\n        \"project_slug\": \"your-frontend-project\",\n        \"release_version\": \"frontend@2.5.1\"\n      }\n    }\n    ```\n*   **Example Output:**\n    ```json\n    {\n      \"version\": \"frontend@2.5.1\",\n      \"new_issues\": 2,\n      \"crash_free_rate\": 99.5, // Example value\n      \"sessions\": 15000,      // Example value\n      \"stats\": { /* Detailed Sentry stats object */ } \n    }\n    ```\n\n### 5. `get_issue`\n\n*   **Description:** Retrieves basic details (ID, title, permalink) for a specific Sentry issue using its ID.\n*   **Input Schema:**\n    *   `issue_id` (string, required): The numerical ID of the Sentry issue.\n    *   `org_slug` (string, required): The organization slug where the issue resides.\n    *   `project_slug` (string, required): The project slug where the issue resides.\n*   **Example Usage (MCP Client):**\n    ```json\n    {\n      \"tool_name\": \"get_issue\",\n      \"arguments\": {\n        \"issue_id\": \"123456789\",\n        \"org_slug\": \"your-organization-slug\",\n        \"project_slug\": \"your-frontend-project\"\n      }\n    }\n    ```\n*   **Example Output:**\n    ```json\n    {\n      \"id\": \"123456789\",\n      \"title\": \"TypeError: Cannot read properties of undefined (reading 'map')\",\n      \"permalink\": \"https://your-organization-slug.sentry.io/issues/123456789/\"\n    }\n    ```\n\n### 6. `get_release_issues`\n\n*   **Description:** Fetches a list of all issues associated with a specific release version (or the latest release if no version is specified).\n*   **Input Schema:**\n    *   `project_slug` (string, required): The slug of the Sentry project.\n    *   `org_slug` (string, optional): The organization slug. Defaults to `SENTRY_ORG_SLUG`.\n    *   `release_version` (string, optional): The specific release version string. If omitted, fetches issues for the latest release.\n*   **Example Usage (MCP Client):**\n    ```json\n    {\n      \"tool_name\": \"get_release_issues\",\n      \"arguments\": {\n        \"project_slug\": \"your-backend-service\",\n        \"release_version\": \"backend@v1.1.0\"\n      }\n    }\n    ```\n*   **Example Output:** (List of issue objects, similar structure to the output of `get_issue`)\n    ```json\n    [\n      { \"id\": \"987654321\", \"title\": \"Database connection timeout\", \"permalink\": \"...\" },\n      { \"id\": \"987654322\", \"title\": \"NullPointerException in UserServic\", \"permalink\": \"...\" }\n      // ... more issues\n    ]\n    ```\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details (assuming you will add an MIT license file).\n\n## Support & Contributing\n\nFor issues, questions, or feature requests, please open an issue on the [GitHub repository](https://github.com/srcgrp/sentry-mcp-server).\n\nContributions are welcome! Please follow standard fork-and-pull-request workflows.\n"
}