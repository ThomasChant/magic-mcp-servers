{
  "mcp_name": "atalhens/ntnx-mcp",
  "mcp_description": "Facilitates Nutanix Virtual Machine Management through a command-line chatbot interface, integrating with Nutanix AI LLM endpoints and supporting dynamic tool integration.",
  "mcp_id": "atalhens_ntnx-mcp",
  "fetch_timestamp": "2025-06-23T01:19:43.006592Z",
  "github_url": "https://github.com/atalhens/ntnx-mcp",
  "repository": {
    "name": "ntnx-mcp",
    "full_name": "atalhens/ntnx-mcp",
    "description": null,
    "html_url": "https://github.com/atalhens/ntnx-mcp",
    "created_at": "2025-04-15T12:03:42Z",
    "updated_at": "2025-04-16T13:10:56Z",
    "pushed_at": "2025-04-16T13:10:53Z",
    "size": 15540,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "Python",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "atalhens",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/194085770?v=4",
      "html_url": "https://github.com/atalhens"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "Python": 32948
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 1
  },
  "readme": "# Nutanix MCP Server\n\nA Model Context Protocol (MCP) server for Nutanix Virtual Machine Management APIs with a command-line chatbot interface.\n\n## Features\n\n- Nutanix v4 API client integration - Add a v4 APi client and create tools for your MCP server\n- LLM Provider Flexibility: Works with any Nutanix AI (NAI) LLM endpoint that follows OpenAI API standards (tested with llama-3-1-8b)\n- Dynamic Tool Integration: Tools are declared in the system prompt, ensuring maximum compatibility across different LLMs.\n- Server Configuration: Supports multiple MCP servers through a simple JSON configuration file like the Claude Desktop App.\n\n## Prerequisites\n\n- Python 3.8 or higher\n- Nutanix Prism Central credentials or API key\n- cluster UUID of PE cluster\n\n## Setup\n\n1. Clone this repository:\n```bash\ngit clone https://github.com/savrab/nutanix-mcp.git\ncd nutanix-mcp\n```\n\n2. Create and activate a virtual environment:\n```bash\npython -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\n```\n\n3. Install dependencies:\n```bash\npip install -r requirements.txt\n```\n\n4. Configure environment variables:\n   - Copy `.env.example` to `.env`\n   - Fill in your Nutanix credentials in `.env`\n   - Add your NAI API key: `NAI_API_KEY=your_api_key_here`\n\n5. Configure MCP servers:\n   - Update `servers_config.json` with your server configuration\n   - Example configuration:\n   ```json\n   {\n       \"mcpServers\": {\n           \"nutanix mcp server\": {\n               \"command\": \"/path/to/python\",\n               \"args\": [\"/path/to/nutanix_mcp_server.py\"]\n           }\n       }\n   }\n   ```\n\n## Running the Application\n\n### Option 1: Run MCP Server Inspector to test your tools. Learn more about MCP inspector in this tutorial - https://modelcontextprotocol.io/docs/tools/inspector\n\n1. Start the MCP server:\n```bash\nmcp dev nutanix_mcp_server.py\n```\n\n### Option 2: After confirming your tools are running fine, you can start the chatbot or directly start the chatbot to use existing tools:\n```bash\npython mcp_chatbot.py\n```\n\n## Using the Chatbot\n\n1. **Initialization**:\n   - The chatbot will automatically initialize the MCP server\n   - Available tools will be listed\n   - System messages will be displayed\n\n2. **Chatting**:\n   - Type your message and press Enter\n   - The chatbot will process your request\n   - Tool execution progress will be shown\n   - Results will be displayed in the terminal\n\n3. **Tool Usage**:\n   - Tools are automatically selected based on your request\n   - Progress tracking is available for long-running operations\n   - Error handling and retries are built-in\n\n4. **Exiting**:\n   - Type 'quit' or 'exit' to end the session\n   - The chatbot will clean up resources properly\n\n## Currently Available MCP Tools\n\n### List Images\nLists all images available in the Nutanix cluster.\n\n\n### Create Image\nCreates a new image in the Nutanix cluster.\n\n### Create VM\nCreates an new VM based on the provided specs\n\n### Collect logs\nCollects log for given time period and uploads it diamond server\n\n### Get Alerts\nList the top 10 alerts on the PC \n\n## Environment Variables\n\nRequired environment variables:\n- `NUTANIX_USERNAME`: Your Nutanix username\n- `NUTANIX_PASSWORD`: Your Nutanix password\n- `NUTANIX_PRISM_CENTRAL_URL`: URL of your Prism Central instance\n- `NAI_API_KEY`: Your Nutanix AI API key\n- `CLUSTER_UUID`: Your PE cluster UUID\n\n## Troubleshooting\n\n1. **Server Connection Issues**:\n   - Verify server configuration in `servers_config.json`\n   - Check environment variables\n\n2. **Tool Execution Errors**:\n   - Verify that the tools are working fine using MCP inspector\n   - Review execution logs\n\n3. **API Errors**:\n   - Verify API keys\n   - Check the LLM endpoint on ai.nutanix.com\n   \n\n"
}