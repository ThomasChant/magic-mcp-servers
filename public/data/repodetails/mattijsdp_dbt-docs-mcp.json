{
  "mcp_name": "dbt-docs",
  "mcp_description": "üêç üè† - MCP server for dbt-core (OSS) users as the official dbt MCP only supports dbt Cloud. Supports project metadata, model and column-level lineage and dbt documentation.",
  "mcp_id": "mattijsdp_dbt-docs-mcp",
  "fetch_timestamp": "2025-06-23T02:31:47.894596Z",
  "github_url": "https://github.com/mattijsdp/dbt-docs-mcp",
  "repository": {
    "name": "dbt-docs-mcp",
    "full_name": "mattijsdp/dbt-docs-mcp",
    "description": "MCP (model context protocol) server for interacting with dbt Docs",
    "html_url": "https://github.com/mattijsdp/dbt-docs-mcp",
    "created_at": "2025-03-30T09:36:12Z",
    "updated_at": "2025-06-18T05:38:01Z",
    "pushed_at": "2025-06-05T15:05:14Z",
    "size": 138,
    "stargazers_count": 10,
    "watchers_count": 10,
    "forks_count": 3,
    "open_issues_count": 1,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "mattijsdp",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/33912270?v=4",
      "html_url": "https://github.com/mattijsdp"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 3,
    "subscribers_count": 2,
    "languages": {
      "Python": 29576
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 2,
    "contributors_count": 2,
    "latest_release": {
      "tag_name": "v0.0.1",
      "name": "v0.0.1",
      "published_at": "2025-04-08T13:51:02Z",
      "body": "**Full Changelog**: https://github.com/mattijsdp/dbt-docs-mcp/commits/v0.0.1",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v0.0.1",
        "commit_sha": "f34364e932313ce1b5a0e41908ede647bb8b6b16"
      }
    ],
    "latest_version": "v0.0.1"
  },
  "readme": "# dbt-docs-mcp\n\nModel Context Protocol (MCP) server for interacting with dbt project metadata, including dbt Docs artifacts (`manifest.json`, `catalog.json`). This server exposes dbt graph information and allows querying node details, model/column lineage, and related metadata.\n\n## Key Functionality\n\nThis server provides tools to:\n\n*   **Search dbt Nodes:**\n    *   Find nodes (models, sources, tests, etc.) by name (`search_dbt_node_names`).\n    *   Locate nodes based on column names (`search_dbt_column_names`).\n    *   Search within the compiled SQL code of nodes (`search_dbt_sql_code`).\n*   **Inspect Nodes:**\n    *   Retrieve detailed attributes for any given node unique ID (`get_dbt_node_attributes`).\n*   **Explore Lineage:**\n    *   Find direct upstream dependencies (predecessors) of a node (`get_dbt_predecessors`).\n    *   Find direct downstream dependents (successors) of a node (`get_dbt_successors`).\n*   **Column-Level Lineage:**\n    *   Trace all upstream sources for a specific column in a model (`get_column_ancestors`).\n    *   Trace all downstream dependents of a specific column in a model (`get_column_descendants`).\n*   **Suggested extensions:**\n    *   Tool that allows executing SQL queries.\n    *   Tool that retrieves table/view/column metadata directly from the database.\n    *   Tool to search knowledge-base.\n\n## Getting Started\n\n1.  **Prerequisites:** Ensure you have Python installed and [uv](https://docs.astral.sh/uv/)\n2.  **Clone the repo:**\n    ```bash\n    git clone <repository-url>\n    cd dbt-docs-mcp\n    ```\n3.  **Optional: parse dbt manifest for column-level lineage:**\n    - Setup the required Python environment, e.g.:\n    ```bash\n    uv sync\n    ```\n    - Use the provided script `scripts/create_manifest_cl.py` and simply provide the path to your dbt manifest, dbt catalog and the desired output paths for your schema and column lineage file:\n    ```bash\n    python scripts/create_manifest_cl.py --manifest-path PATH_TO_YOUR_MANIFEST_FILE --catalog-path PATH_TO_YOUR_CATALOG_FILE --schema-mapping-path DESIRED_OUTPUT_PATH_FOR_SCHEMA_MAPPING --manifest-cl-path DESIRED_OUTPUT_PATH_FOR_MANIFEST_CL\n    ```\n    - Depending on your dbt project size, creating column-lineage can take a while (hours)\n4.  **Run the Server:**\n    - If your desired MCP client (Claude desktop, Cursor, etc.) supports mcp.json it would like as below:\n    ```json\n    {\n        \"mcpServers\": {\n            \"DBT Docs MCP\": {\n            \"command\": \"uv\",\n            \"args\": [\n                \"run\",\n                \"--with\",\n                \"networkx,mcp[cli],rapidfuzz,dbt-core,python-decouple,sqlglot,tqdm\",\n                \"mcp\",\n                \"run\",\n                \"/Users/mattijs/repos/dbt-docs-mcp/src/mcp_server.py\"\n            ],\n            \"env\": {\n                \"MANIFEST_PATH\": \"/Users/mattijs/repos/dbt-docs-mcp/inputs/manifest.json\",\n                \"SCHEMA_MAPPING_PATH\": \"/Users/mattijs/repos/dbt-docs-mcp/outputs/schema_mapping.json\",\n                \"MANIFEST_CL_PATH\": \"/Users/mattijs/repos/dbt-docs-mcp/outputs/manifest_column_lineage.json\"\n            }\n            }\n        }\n    }\n    ```\n"
}