{
  "mcp_name": "qianO33/mcp-excel-server",
  "mcp_description": "Facilitates Excel file operations through a Node.js server using the Model Context Protocol.",
  "mcp_id": "qianO33_mcp-excel-server",
  "fetch_timestamp": "2025-06-23T07:43:05.041152Z",
  "github_url": "https://github.com/qianO33/mcp-excel-server",
  "repository": {
    "name": "mcp-excel-server",
    "full_name": "qianO33/mcp-excel-server",
    "description": "mcp excel server",
    "html_url": "https://github.com/qianO33/mcp-excel-server",
    "created_at": "2025-04-25T19:38:51Z",
    "updated_at": "2025-05-01T19:41:52Z",
    "pushed_at": "2025-06-17T04:21:55Z",
    "size": 5304,
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "JavaScript",
    "license": "MIT License",
    "topics": [
      "excel",
      "exceljs",
      "mcp",
      "mcp-server",
      "node",
      "typescript"
    ],
    "default_branch": "main",
    "owner": {
      "login": "qianO33",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/29177203?v=4",
      "html_url": "https://github.com/qianO33"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "JavaScript": 6993,
      "TypeScript": 4934,
      "Dockerfile": 579
    },
    "language_percentages": {
      "JavaScript": 55.92,
      "TypeScript": 39.45,
      "Dockerfile": 4.63
    },
    "pull_requests_count": 0,
    "contributors_count": 2,
    "package_json_version": "1.0.6"
  },
  "readme": "# mcp-excel-server\n\nNode.js server implementing Model Context Protocol (MCP) for excel file operations.\n\n## Features\n\n- Read files\n- list directories\n- Search files\n- Read Excel\n\n**Note**: The server will only allow operations within directories specified via `args`.\n\n## üîß Install\n\n### NPM Installation\n\n```shell\nnpm install @qian33/mcp-excel-server\n```\n\n## üìö API Reference\n\n### Resources\n- The primary mcp-excel-server operations interface `file://system`\n\n### Tool Functions\n\n#### üìñ Reading Operations\n\n- **read_file_content**\n  - Reads the complete contents of a file\n  - Input: `path` (string)\n  - Uses UTF-8 encoding for text files\n\n#### üéíWriting Operations\n\n- **write_file_content**\n  - Creates a new file or overwrites an existing one with the specified content\n  - Inputs:\n    - `path` (string): File location to write to\n    - `content` (string): Content to write to the file\n  - Uses UTF-8 encoding for text files\n  - Returns confirmation message upon successful write\n\n#### üìÅ Directory Operations\n\n- **list_directory**\n  - Lists directory contents with type indicators\n  - Input: `path` (string)\n  - Returns entries with [FILE] or [DIR] prefixes\n\n#### üîç Reading Excel and Information\n\n- **get_excel_content**\n  - Reads the Excel contents of a file\n  - Input: `path` (string)\n  - Uses UTF-8 encoding for excel file\n\n- **get_online_excel_content**\n  - Fetches and reads Excel content from a URL\n  - Input: `path` (string): ONLINE URL to the Excel file\n  - Returns the Excel data as a JSON array\n  - Useful for reading Excel files hosted on remote servers\n\n#### üìí Writing Excel\n\n- **write_excel_content**\n  - Creates a new Excel file or overwrites an existing one with the specified data\n  - Inputs:\n    - `path` (string): File location for the Excel file\n    - `content` (string or array): JSON data to write to the Excel file\n      - Accepts either a JSON string or a direct array of objects\n      - Each object represents a row in the Excel sheet\n  - Automatically creates a workbook with a 'Sheet1' worksheet\n  - Returns confirmation message upon successful write\n\n## üîß Usage Guide\n\n### Integration with Claude Desktop\nAdd the following configuration to your : `claude_desktop_config.json`\n\n> Note: You can sandbox directories by mounting them to . Adding the `ro` flag makes directories read-only. `/projects`\n\n#### NPX Method\n\n```json\n{\n  \"mcpServers\": {\n    \"mcp-excel-server\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@qian33/mcp-excel-server\",\n        \"/Users/username/Desktop\",\n        \"/path/to/other/allowed/dir\"\n      ]\n    }\n  }\n}\n```\n\n#### Bunx Method\n\n```json\n{\n  \"mcpServers\": {\n    \"mcp-excel-server\": {\n      \"command\": \"bunx\",\n      \"args\": [\n        \"@qian33/mcp-excel-server\",\n        \"/Users/username/Desktop\",\n        \"/path/to/other/allowed/dir\"\n      ]\n    }\n  }\n}\n```\n\n## Usage with VS Code\n\nFor quick installation, click the installation buttons below...\n\n[![Install with NPX in VS Code](https://img.shields.io/badge/VS_Code-NPM-0098FF?style=flat-square&logo=visualstudiocode&logoColor=white)](https://insiders.vscode.dev/redirect/mcp/install?name=mcp-excel-server&config=%7B%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40qian33%2Fmcp-excel-server%22%2C%22%24%7BworkspaceFolder%7D%22%5D%7D) [![Install with NPX in VS Code Insiders](https://img.shields.io/badge/VS_Code_Insiders-NPM-24bfa5?style=flat-square&logo=visualstudiocode&logoColor=white)](https://insiders.vscode.dev/redirect/mcp/install?name=mcp-excel-server&config=%7B%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40qian33%2Fmcp-excel-server%22%2C%22%24%7BworkspaceFolder%7D%22%5D%7D&quality=insiders)\n\n[//]: # ([![Install with Docker in VS Code]&#40;https://img.shields.io/badge/VS_Code-Docker-0098FF?style=flat-square&logo=visualstudiocode&logoColor=white&#41;]&#40;https://insiders.vscode.dev/redirect/mcp/install?name=mcp-excel-server&config=%7B%22command%22%3A%22docker%22%2C%22args%22%3A%5B%22run%22%2C%22-i%22%2C%22--rm%22%2C%22--mount%22%2C%22type%3Dbind%2Csrc%3D%24%7BworkspaceFolder%7D%2Cdst%3D%2Fprojects%2Fworkspace%22%2C%22mcp%2Ffilesystem%22%2C%22%2Fprojects%22%5D%7D&#41; [![Install with Docker in VS Code Insiders]&#40;https://img.shields.io/badge/VS_Code_Insiders-Docker-24bfa5?style=flat-square&logo=visualstudiocode&logoColor=white&#41;]&#40;https://insiders.vscode.dev/redirect/mcp/install?name=filesystem&config=%7B%22command%22%3A%22docker%22%2C%22args%22%3A%5B%22run%22%2C%22-i%22%2C%22--rm%22%2C%22--mount%22%2C%22type%3Dbind%2Csrc%3D%24%7BworkspaceFolder%7D%2Cdst%3D%2Fprojects%2Fworkspace%22%2C%22mcp%2Ffilesystem%22%2C%22%2Fprojects%22%5D%7D&quality=insiders&#41;)\n\nFor manual installation, add the following JSON block to your User Settings (JSON) file in VS Code. You can do this by pressing `Ctrl + Shift + P` and typing `Preferences: Open Settings (JSON)`.\n\nOptionally, you can add it to a file called `.vscode/mcp.json` in your workspace. This will allow you to share the configuration with others.\n\n> Note that the `mcp` key is not needed in the `.vscode/mcp.json` file.\n\nYou can provide sandboxed directories to the server by mounting them to `/projects`. Adding the `ro` flag will make the directory readonly by the server.\n\n### NPX\n\n```json\n{\n  \"mcp\": {\n    \"servers\": {\n      \"mcp-excel-server\": {\n        \"command\": \"npx\",\n        \"args\": [\n          \"-y\",\n          \"@qian33/mcp-excel-server\",\n          \"${workspaceFolder}\"\n        ]\n      }\n    }\n  }\n}\n```\n\n## ü§ù Contributing\nContributions are welcome! To contribute:\n1. Fork the repository\n2. Create a feature branch\n3. Implement your changes with tests\n4. Submit a pull request\n\nPlease ensure your code adheres to the project's coding standards and includes appropriate tests.\n\n## üìú License\nThis MCP server is licensed under the MIT License. You are free to use, modify, and distribute the software, subject to the MIT License terms and conditions. See the LICENSE file in the repository for details.\n\n\n\n\n\n\n"
}