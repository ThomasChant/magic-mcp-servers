{
  "mcp_name": "lieyanqzu/ygocdb-mcp",
  "mcp_description": "Facilitates interaction with the YGO Chinese card database API, offering tools for card information retrieval and image access.",
  "mcp_id": "lieyanqzu_ygocdb-mcp",
  "fetch_timestamp": "2025-06-23T06:09:47.772486Z",
  "github_url": "https://github.com/lieyanqzu/ygocdb-mcp",
  "repository": {
    "name": "ygocdb-mcp",
    "full_name": "lieyanqzu/ygocdb-mcp",
    "description": "用于与游戏王中文卡查百鸽(ygocdb.com)API交互的MCP服务端",
    "html_url": "https://github.com/lieyanqzu/ygocdb-mcp",
    "created_at": "2025-04-20T19:20:21Z",
    "updated_at": "2025-04-22T06:42:05Z",
    "pushed_at": "2025-04-20T19:54:23Z",
    "size": 65,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 2,
    "open_issues_count": 1,
    "language": "JavaScript",
    "license": "MIT License",
    "topics": [
      "mcp-server",
      "tcg",
      "ygo",
      "yugioh"
    ],
    "default_branch": "master",
    "owner": {
      "login": "lieyanqzu",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/3754125?v=4",
      "html_url": "https://github.com/lieyanqzu"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 2,
    "subscribers_count": 1,
    "languages": {
      "JavaScript": 10448,
      "Dockerfile": 520
    },
    "language_percentages": {
      "JavaScript": 95.26,
      "Dockerfile": 4.74
    },
    "pull_requests_count": 1,
    "contributors_count": 1,
    "latest_release": {
      "tag_name": "1.0.0",
      "name": "1.0.0",
      "published_at": "2025-04-20T19:24:46Z",
      "body": "**Full Changelog**: https://github.com/lieyanqzu/ygocdb-mcp/commits/1.0.0",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "1.0.0",
        "commit_sha": "09ddffb8e30de1349ced52d87ad67926231f49fd"
      }
    ],
    "latest_version": "1.0.0",
    "package_json_version": "1.0.0"
  },
  "readme": "# 百鸽(ygocdb.com) MCP Server\n\n[English](README/README.en.md) | 中文\n\n一个基于 [Model Context Protocol (MCP)](https://modelcontextprotocol.io/) 的服务端，用于与 [百鸽(ygocdb.com)](https://ygocdb.com/)等 API 交互。提供了一系列工具来查询游戏王中文卡牌信息。\n\n[![smithery badge](https://smithery.ai/badge/@lieyanqzu/ygocdb-mcp)](https://smithery.ai/server/@lieyanqzu/ygocdb-mcp)\n\n<a href=\"https://glama.ai/mcp/servers/@lieyanqzu/ygocdb-mcp\">\n  <img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/@lieyanqzu/ygocdb-mcp/badge\" />\n</a>\n\n## API 文档\n\n本服务端基于游戏王卡牌数据库的公开 API。\n\n- 卡牌搜索: `https://ygocdb.com/api/v0/?search=关键字`\n- 卡牌图片: `https://cdn.233.momobako.com/ygopro/pics/<id>.jpg`\n\n## 使用示例\n\n![使用示例](README/use_case.png)\n\n## 功能特性\n\n- **search_cards**  \n  通过关键字搜索游戏王卡牌，可以搜索卡牌名称、效果文本等。\n  \n- **get_card_by_id**  \n  通过卡牌ID获取单张游戏王卡牌的详细信息。\n  \n- **get_card_image**  \n  通过卡牌ID获取游戏王卡牌的图片。\n\n## 使用方法\n\n服务端支持两种运行模式：\n\n1. 标准 stdio 模式（默认）\n2. 无状态 Streamable HTTP 模式，提供 HTTP 端点\n\n### 使用 NPX\n\n如果你本地安装了 Node.js：\n\n```bash\n# Stdio 模式\nnpx ygocdb-mcp-server\n\n# Streamable HTTP 模式\nnpx ygocdb-mcp-server --http\n```\n\n### 连接到服务端\n\n#### Stdio 模式\n\n你的应用程序或环境（如 Claude Desktop）可以通过 stdio 直接与服务端通信。\n\n#### Streamable HTTP 模式\n\n当使用 Streamable HTTP 模式运行时（使用 `--http` 参数）：\n\n服务端将在以下端点可用：\n\n- Streamable HTTP 端点：`http://localhost:3000/mcp`\n\n该模式为无状态模式，不维护会话信息，提供更简化和高效的通信方式。\n\n### 在 claude_desktop_config.json 中集成\n\nstdio 模式的示例配置：\n\n```json\n{\n  \"mcpServers\": {\n    \"ygocdb\": {\n      \"command\": \"docker\",\n      \"args\": [\"run\", \"-i\", \"--rm\", \"mcp/ygocdb\"]\n    }\n  }\n}\n```\n\n或使用 npx：\n\n```json\n{\n  \"mcpServers\": {\n    \"ygocdb\": {\n      \"command\": \"npx\",\n      \"args\": [\"ygocdb-mcp-server\"]\n    }\n  }\n}\n```\n\n### 使用 Docker 构建\n\n```bash\ndocker build -t mcp/ygocdb .\n```\n\n然后你可以在 stdio 模式下运行：\n\n```bash\ndocker run -i --rm mcp/ygocdb\n```\n\n或在 Streamable HTTP 模式下运行：\n\n```bash\ndocker run -i --rm -p 3000:3000 mcp/ygocdb --http\n```\n"
}