{
  "mcp_name": "Bamo-alt/kam-mcp-server",
  "mcp_description": "A Model Context Protocol server utilizing the mcp-framework, designed for creating and managing point, line, and surface-based elements.",
  "mcp_id": "Bamo-alt_kam-mcp-server",
  "fetch_timestamp": "2025-06-23T01:33:57.725737Z",
  "github_url": "https://github.com/Bamo-alt/kam-mcp-server",
  "repository": {
    "name": "kam-mcp-server",
    "full_name": "Bamo-alt/kam-mcp-server",
    "description": "KAM MCP Server",
    "html_url": "https://github.com/Bamo-alt/kam-mcp-server",
    "created_at": "2025-04-24T14:53:46Z",
    "updated_at": "2025-04-27T03:50:54Z",
    "pushed_at": "2025-04-27T03:50:52Z",
    "size": 87,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "TypeScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "master",
    "owner": {
      "login": "Bamo-alt",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/208989089?v=4",
      "html_url": "https://github.com/Bamo-alt"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 25748,
      "JavaScript": 2065
    },
    "language_percentages": {
      "TypeScript": 92.58,
      "JavaScript": 7.42
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "package_json_version": "0.0.12"
  },
  "readme": "# kam-mcp-server\n\n> [Kam-MCP-Server](https://github.com/Bamo-alt/kam-mcp-server)\n\nA Model Context Protocol (MCP) server built with mcp-framework.\n\n## Quick Start\n\n```bash\n# Install dependencies\nnpm install\n\n# Build the project\nnpm run build\n\n```\n\n## Project Structure\n\n```\nkam-mcp-server/\n├── build/\n├── src/\n│   ├── tools/        # MCP Tools\n│   │   └── CreatePointBasedElementTool.ts\n│   │   └── CreateLineBasedElementTool.ts\n│   │   └── CreateSurfaceBasedElementTool.ts\n│   │   └── GetCurrentViewElementsTool.ts\n│   │   └── GetAvailableFamilyTypesTool.ts\n│   │   └── DeleteElementTool.ts\n│   │   └── GetElementByIdTool.ts\n│   ├── resources/    # MCP Resources\n│   │   └── KamDocResourceResource.ts\n│   └── index.ts      # Server entry point\n├── package.json\n└── tsconfig.json\n```\n\n## Publishing to npm\n\n1. Update your package.json:\n\n   - Ensure `name` is unique and follows npm naming conventions\n   - Set appropriate `version`\n   - Add `description`, `author`, `license`, etc.\n   - Check `bin` points to the correct entry file\n\n2. Build and test locally:\n\n   ```bash\n   yarn build\n   npm link\n   kam-mcp-server  # Test your CLI locally\n   ```\n\n3. Login to npm (create account if necessary):\n\n   ```bash\n   npm login\n   ```\n\n4. Publish your package:\n   ```bash\n   npm publish\n   ```\n\nAfter publishing, users can add it to their claude desktop client (read below) or run it with npx\n\n## Using with Claude Desktop\n\n### After Publishing\n\nAdd this configuration to your Claude Desktop config file:\n\n**MacOS**: `~/Library/Application Support/Claude/claude_desktop_config.json`\n**Windows**: `%APPDATA%/Claude/claude_desktop_config.json`\n\n```json\n{\n  \"mcpServers\": {\n    \"kam-mcp-server\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"kam-mcp-server\", \"--port=9099\"]\n    }\n  }\n}\n```\n\n## Building and Testing\n\n1. Make changes to your tools\n2. Run `yarn build` to compile\n3. The server will automatically load your tools on startup\n"
}