{
  "mcp_name": "natifridman/stocks-mcp",
  "mcp_description": "Fetches real-time stock information from Google Finance using a Pythonic MCP server framework.",
  "mcp_id": "natifridman_stocks-mcp",
  "fetch_timestamp": "2025-06-23T07:00:24.076715Z",
  "github_url": "https://github.com/natifridman/stocks-mcp",
  "repository": {
    "name": "stocks-mcp",
    "full_name": "natifridman/stocks-mcp",
    "description": null,
    "html_url": "https://github.com/natifridman/stocks-mcp",
    "created_at": "2025-04-28T12:33:26Z",
    "updated_at": "2025-05-07T08:36:07Z",
    "pushed_at": "2025-05-07T08:36:04Z",
    "size": 62,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "Python",
    "license": "GNU General Public License v3.0",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "natifridman",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/24797026?v=4",
      "html_url": "https://github.com/natifridman"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "Python": 2906
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 1,
    "contributors_count": 1
  },
  "readme": "# Stock Information MCP Server\n\nThis project provides a simple MCP (Modular Command Protocol) server and client for fetching stock information from Google Finance.\n\nThis project is built using [FastMCP](https://gofastmcp.com/getting-started/welcome), a Pythonic framework that simplifies the creation of MCP servers and clients. FastMCP handles all the complex protocol details and server management, allowing for clean and intuitive implementation of MCP tools.\n\n## Features\n\n- Fetch real-time stock prices from Google Finance\n- Get company descriptions \n- Simple command-line interface\n- Easy to integrate with other applications\n\n## Installation\n\n1. Clone this repository:\n   ```\n   git clone https://github.com/natifridman/stocks-mcp.git\n   cd stocks-mcp\n   ```\n\n2. Install the required dependencies:\n\n   **Using uv (recommended):**\n   ```\n   uv sync\n   source .venv/bin/activate\n   ```\n   This will create a virtual environment, install all dependencies from the lock file, and activate the environment.\n\n   **Or using pip:**\n   ```\n   pip install fastmcp aiohttp beautifulsoup4\n   ```\n\n## Usage\n\n### Starting the Server\n\n1. Run the server in a terminal:\n   ```\n   uv run my_server.py\n   ```\n   The server will start and display a message like: \"Starting server 'Stock Information MCP Server'...\"\n\n2. Keep this terminal open while using the client.\n\n### Using the Client\n\nThe client can be used in several ways:\n\n1. **With Command Line Arguments**:\n   ```\n   uv run my_client.py IBM:NYSE\n   ```\n   Replace `IBM:NYSE` with your desired stock ticker.\n\n2. **Interactive Mode**:\n   ```\n   uv run my_client.py\n   ```\n   Then enter the ticker when prompted.\n\n### Stock Ticker Format\n\nUse the format `TICKER:EXCHANGE` for best results:\n\n- `AAPL:NASDAQ` - Apple\n- `MSFT:NASDAQ` - Microsoft\n- `TSLA:NASDAQ` - Tesla\n- `AMZN:NASDAQ` - Amazon\n- `GOOGL:NASDAQ` - Google/Alphabet\n- `IBM:NYSE` - IBM\n- `DIS:NYSE` - Disney\n\n## Adding MCP Config in VS Code or Cursor\n\nTo use this MCP tool in your editor:\n\n1. **Cursor Configuration**:\n   - Open or create the MCP configuration file at `~/.cursor/mcp.json`\n   - Add the following configuration:\n   ```json\n   {\n     \"mcpServers\": {\n       \"stock-info\": {\n         \"command\": \"/path/to/your/stocks-mcp/.venv/bin/python\",\n         \"args\": [\"/path/to/your/stocks-mcp/my_server.py\"]\n       }\n     }\n   }\n   ```\n   - Replace `/path/to/your/` with your actual project path\n\n2. **VS Code Configuration**:\n   - For VS Code, the configuration format might vary depending on the extension you're using\n\n\n## API Reference\n\n### Server Tools\n\nThe server provides the following tool:\n\n- `get_stock_info(ticker: str)`: Returns stock information including price and description\n\n### Client Functions\n\n- `get_stock_info(ticker: str)`: Fetches and displays stock information\n\n## Troubleshooting\n\n- Make sure the server is running before using the client\n- Check your internet connection if stock data isn't loading\n- Verify the ticker symbol format is correct\n\n## License\n\nThis project is licensed under the GNU General Public License v3.0 (GPL-3.0) - see the [LICENSE](LICENSE) file for details.\n"
}