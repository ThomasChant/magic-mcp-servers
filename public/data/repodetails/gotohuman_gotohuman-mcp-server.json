{
  "mcp_name": "gotoHuman",
  "mcp_description": "Human-in-the-loop platform - Allow AI agents and automations to send requests for approval to your [gotoHuman](https://www.gotohuman.com) inbox.",
  "mcp_id": "gotohuman_gotohuman-mcp-server",
  "fetch_timestamp": "2025-06-23T04:12:23.077403Z",
  "github_url": "https://github.com/gotohuman/gotohuman-mcp-server",
  "repository": {
    "name": "gotohuman-mcp-server",
    "full_name": "gotohuman/gotohuman-mcp-server",
    "description": null,
    "html_url": "https://github.com/gotohuman/gotohuman-mcp-server",
    "created_at": "2025-03-21T15:15:37Z",
    "updated_at": "2025-06-15T04:34:03Z",
    "pushed_at": "2025-06-05T19:17:23Z",
    "size": 8,
    "stargazers_count": 32,
    "watchers_count": 32,
    "forks_count": 8,
    "open_issues_count": 2,
    "language": "JavaScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "gotohuman",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/167913280?v=4",
      "html_url": "https://github.com/gotohuman"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 8,
    "subscribers_count": 3,
    "languages": {
      "JavaScript": 4647
    },
    "language_percentages": {
      "JavaScript": 100
    },
    "pull_requests_count": 2,
    "contributors_count": 2,
    "package_json_version": "0.1.2"
  },
  "readme": "# gotoHuman MCP Server\n\ngotoHuman makes it easy to add **human approvals** to AI agents and agentic workflows.  \nA fully-managed async human-in-the-loop workflow with a customizable approval UI.  \nEnjoy built-in auth, webhooks, notifications, team features, and an evolving training dataset.\n\nUse our MCP server to request human approvals from your AI workflows via MCP or add it to your IDE to help with integration.\n\n## Installation\n\n```bash\nnpx @gotohuman/mcp-server\n```\n\n### Use with Cursor / Claude / Windsurf\n\n```json\n{\n  \"mcpServers\": {\n    \"gotoHuman\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"@gotohuman/mcp-server\"],\n      \"env\": {\n        \"GOTOHUMAN_API_KEY\": \"your-api-key\"\n      }\n    }\n  }\n}\n```\n\n[![Install MCP Server](https://cursor.com/deeplink/mcp-install-dark.svg)](cursor://anysphere.cursor-deeplink/mcp/install?name=gotoHuman&config=eyJjb21tYW5kIjoibnB4IC15IEBnb3RvaHVtYW4vbWNwLXNlcnZlciIsImVudiI6eyJHT1RPSFVNQU5fQVBJX0tFWSI6InlvdXItYXBpLWtleSJ9fQ==)\n\nGet your API key and set up an approval step at [app.gotohuman.com](https://app.gotohuman.com)\n\n## Demo\n\nThis is Cursor on the left, but this could be a background agent that also reacts to the approval webhook.\n\nhttps://github.com/user-attachments/assets/380a4223-ea77-4e24-90a5-52669b77f56f\n\n## Tools\n\n### `list-forms`\nList all available review forms.\n  - __Returns__ a list of all available forms in your account incl. high-level info about the added fields\n### `get-form-schema`  \nGet the schema to use when requesting a human review for a given form.\n  - __Params__\n    - `formId`: The form ID to fetch the schema for\n  - __Returns__ the schema, considering the incl. fields and their configuration\n### `request-human-review-with-form`  \nRequest a human review. Will appear in your gotoHuman inbox.\n  - __Params__\n    - `formId`: The form ID for the review\n    - `fieldData`: Content (AI-output to review, context,...) and configuration for the form's fields.  \n    The schema for this needs to be fetched with `get-form-schema`\n    - `metadata`: Optional additional data that will be incl. in the webhook response after form submission\n    - `assignToUsers`: Optional list of user emails to assign the review to\n  - __Returns__ a link to the review in gotoHuman\n\n\n## Development\n\n```bash\n# Install dependencies\nnpm install\n\n# Build the server\nnpm run build\n\n# For testing: Run the MCP inspector\nnpm run inspector\n```\n\n  #### Run locally in MCP Client (e.g. Cursor / Claude / Windsurf)\n\n  ```json\n  {\n  \"mcpServers\": {\n    \"gotoHuman\": {\n      \"command\": \"node\",\n      \"args\": [\"/<absolute-path>/build/index.js\"],\n      \"env\": {\n        \"GOTOHUMAN_API_KEY\": \"your-api-key\"\n      }\n    }\n  }\n}\n```\n> [!NOTE]\n> For Windows, the `args` path needs to be `C:\\\\<absolute-path>\\\\build\\\\index.js`\n"
}