{
  "mcp_name": "idoru/influxdb-mcp-server",
  "mcp_description": "üìá ‚òÅÔ∏è üè† - Run queries against InfluxDB OSS API v2.",
  "mcp_id": "idoru_influxdb-mcp-server",
  "fetch_timestamp": "2025-06-23T04:56:06.933564Z",
  "github_url": "https://github.com/idoru/influxdb-mcp-server",
  "repository": {
    "name": "influxdb-mcp-server",
    "full_name": "idoru/influxdb-mcp-server",
    "description": "An MCP Server for querying InfluxDB",
    "html_url": "https://github.com/idoru/influxdb-mcp-server",
    "created_at": "2025-03-11T05:24:06Z",
    "updated_at": "2025-06-12T13:54:13Z",
    "pushed_at": "2025-05-23T13:22:02Z",
    "size": 129,
    "stargazers_count": 13,
    "watchers_count": 13,
    "forks_count": 7,
    "open_issues_count": 5,
    "language": "JavaScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "idoru",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/237596?v=4",
      "html_url": "https://github.com/idoru"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 7,
    "subscribers_count": 1,
    "languages": {
      "JavaScript": 133030,
      "Dockerfile": 470
    },
    "language_percentages": {
      "JavaScript": 99.65,
      "Dockerfile": 0.35
    },
    "pull_requests_count": 3,
    "contributors_count": 3,
    "latest_release": {
      "tag_name": "v0.1.1",
      "name": "",
      "published_at": "2025-03-11T19:12:12Z",
      "body": "Built by @idoru with Claude Code.\r\n\r\nFor Installation instructions visit:\r\nhttps://github.com/idoru/influxdb-mcp-server?tab=readme-ov-file#installation",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v0.1.1",
        "commit_sha": "d1a3b802ed4ec97ce7e9f48ca6806d5964a2bae1"
      }
    ],
    "latest_version": "v0.1.1",
    "package_json_version": "0.1.1"
  },
  "readme": "[![MseeP Badge](https://mseep.net/pr/idoru-influxdb-mcp-server-badge.jpg)](https://mseep.ai/app/idoru-influxdb-mcp-server)\n\n# InfluxDB MCP Server\n\n[![smithery badge](https://smithery.ai/badge/@idoru/influxdb-mcp-server)](https://smithery.ai/server/@idoru/influxdb-mcp-server)\n\nA Model Context Protocol (MCP) server that exposes access to an InfluxDB instance using the InfluxDB OSS API v2. Mostly built with Claude Code.\n\n## Features\n\nThis MCP server provides:\n\n- **Resources**: Access to organization, bucket, and measurement data\n- **Tools**: Write data, execute queries, and manage database objects\n- **Prompts**: Templates for common Flux queries and Line Protocol format\n\n## Resources\n\nThe server exposes the following resources:\n\n1. **Organizations List**: `influxdb://orgs`\n   - Displays all organizations in the InfluxDB instance\n\n2. **Buckets List**: `influxdb://buckets`\n   - Shows all buckets with their metadata\n\n3. **Bucket Measurements**: `influxdb://bucket/{bucketName}/measurements`\n   - Lists all measurements within a specified bucket\n\n4. **Query Data**: `influxdb://query/{orgName}/{fluxQuery}`\n   - Executes a Flux query and returns results as a resource\n\n## Tools\n\nThe server provides these tools:\n\n1. `write-data`: Write time-series data in line protocol format\n   - Parameters: org, bucket, data, precision (optional)\n\n2. `query-data`: Execute Flux queries\n   - Parameters: org, query\n\n3. `create-bucket`: Create a new bucket\n   - Parameters: name, orgID, retentionPeriodSeconds (optional)\n\n4. `create-org`: Create a new organization\n   - Parameters: name, description (optional)\n\n## Prompts\n\nThe server offers these prompt templates:\n\n1. `flux-query-examples`: Common Flux query examples\n2. `line-protocol-guide`: Guide to InfluxDB line protocol format\n\n## Configuration\n\nThe server requires these environment variables:\n\n- `INFLUXDB_TOKEN` (required): Authentication token for the InfluxDB API\n- `INFLUXDB_URL` (optional): URL of the InfluxDB instance (defaults to `http://localhost:8086`)\n- `INFLUXDB_ORG` (optional): Default organization name for certain operations\n\n## Installation\n\n### Installing via Smithery\n\nTo install InfluxDB MCP Server for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@idoru/influxdb-mcp-server):\n\n```bash\nnpx -y @smithery/cli install @idoru/influxdb-mcp-server --client claude\n```\n\n### Option 1: Run with npx (recommended)\n\n```bash\n# Run directly with npx\nINFLUXDB_TOKEN=your_token npx influxdb-mcp-server\n```\n\n### Option 2: Install globally\n\n```bash\n# Install globally\nnpm install -g influxdb-mcp-server\n\n# Run the server\nINFLUXDB_TOKEN=your_token influxdb-mcp-server\n```\n\n### Option 3: From source\n\n```bash\n# Clone the repository\ngit clone https://github.com/idoru/influxdb-mcp-server.git\ncd influxdb-mcp-server\n\n# Install dependencies\nnpm install\n\n# Run the server\nINFLUXDB_TOKEN=your_token npm start\n```\n\n## Integration with Claude for Desktop\n\nAdd the server to your `claude_desktop_config.json`:\n\n### Using npx (recommended)\n\n```json\n{\n  \"mcpServers\": {\n    \"influxdb\": {\n      \"command\": \"npx\",\n      \"args\": [\"influxdb-mcp-server\"],\n      \"env\": {\n        \"INFLUXDB_TOKEN\": \"your_token\",\n        \"INFLUXDB_URL\": \"http://localhost:8086\",\n        \"INFLUXDB_ORG\": \"your_org\"\n      }\n    }\n  }\n}\n```\n\n### If installed locally\n\n```json\n{\n  \"mcpServers\": {\n    \"influxdb\": {\n      \"command\": \"node\",\n      \"args\": [\"/path/to/influxdb-mcp-server/src/index.js\"],\n      \"env\": {\n        \"INFLUXDB_TOKEN\": \"your_token\",\n        \"INFLUXDB_URL\": \"http://localhost:8086\",\n        \"INFLUXDB_ORG\": \"your_org\"\n      }\n    }\n  }\n}\n```\n\n## Code Structure\n\nThe server code is organized into a modular structure:\n\n- `src/`\n  - `index.js` - Main server entry point\n  - `config/` - Configuration related files\n    - `env.js` - Environment variable handling\n  - `utils/` - Utility functions\n    - `influxClient.js` - InfluxDB API client\n    - `loggerConfig.js` - Console logger configuration\n  - `handlers/` - Resource and tool handlers\n    - `organizationsHandler.js` - Organizations listing\n    - `bucketsHandler.js` - Buckets listing\n    - `measurementsHandler.js` - Measurements listing\n    - `queryHandler.js` - Query execution\n    - `writeDataTool.js` - Data write tool\n    - `queryDataTool.js` - Query tool\n    - `createBucketTool.js` - Bucket creation tool\n    - `createOrgTool.js` - Organization creation tool\n  - `prompts/` - Prompt templates\n    - `fluxQueryExamplesPrompt.js` - Flux query examples\n    - `lineProtocolGuidePrompt.js` - Line protocol guide\n\nThis structure allows for better maintainability, easier testing, and clearer separation of concerns.\n\n## Testing\n\nThe repository includes comprehensive integration tests that:\n\n- Spin up a Docker container with InfluxDB\n- Populate it with sample data\n- Test all MCP server functionality\n\nTo run the tests:\n\n```bash\nnpm test\n```\n\n## License\n\nMIT\n"
}