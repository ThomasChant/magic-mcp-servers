{
  "mcp_name": "trilogy-group/oneroster-ts",
  "mcp_description": "A TypeScript SDK offering a type-safe interface for interacting with the 1EdTech OneRoster API, also deployable as an MCP server for AI applications.",
  "mcp_id": "trilogy-group_oneroster-ts",
  "fetch_timestamp": "2025-06-23T09:05:00.980721Z",
  "github_url": "https://github.com/trilogy-group/oneroster-ts",
  "repository": {
    "name": "oneroster-ts",
    "full_name": "trilogy-group/oneroster-ts",
    "description": "TypeScript SDK for the 1EdTech OneRoster API",
    "html_url": "https://github.com/trilogy-group/oneroster-ts",
    "created_at": "2025-04-28T19:16:28Z",
    "updated_at": "2025-06-09T15:34:52Z",
    "pushed_at": "2025-06-23T00:14:10Z",
    "size": 1874,
    "stargazers_count": 5,
    "watchers_count": 5,
    "forks_count": 2,
    "open_issues_count": 1,
    "language": "TypeScript",
    "license": "BSD Zero Clause License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "trilogy-group",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/22237814?v=4",
      "html_url": "https://github.com/trilogy-group"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 2,
    "subscribers_count": 7,
    "languages": {
      "TypeScript": 3327443,
      "JavaScript": 682,
      "Shell": 675
    },
    "language_percentages": {
      "TypeScript": 99.96,
      "JavaScript": 0.02,
      "Shell": 0.02
    },
    "pull_requests_count": 8,
    "contributors_count": 3,
    "latest_release": {
      "tag_name": "v0.6.3",
      "name": "typescript - v0.6.3 - 2025-05-01 14:30:23",
      "published_at": "2025-05-01T14:30:24Z",
      "body": "# Generated by Speakeasy CLI\n\n## 2025-05-01 14:30:23\n### Changes\nBased on:\n- OpenAPI Doc 1.0.0 \n- Speakeasy CLI 1.541.2 (2.595.4) https://github.com/speakeasy-api/speakeasy\n### Generated\n- [typescript v0.6.3] .\n### Releases\n- [NPM v0.6.3] https://www.npmjs.com/package/@superbuilders/oneroster/v/0.6.3 - .\n\nPublishing Completed",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v0.6.3",
        "commit_sha": "0ed8bfd9d0c8ea1cd3e48b7c115227631a136177"
      },
      {
        "name": "v0.6.2",
        "commit_sha": "8eccec4eee78bd29becd74ac1002e6d58d2aebfa"
      },
      {
        "name": "v0.6.1",
        "commit_sha": "ef3617356fbc79adeb1b392f6718e9c27ab6ce56"
      },
      {
        "name": "v0.5.0",
        "commit_sha": "4a8e60e1a4d6847d342851fe7c9bad1802de57be"
      },
      {
        "name": "v0.4.1",
        "commit_sha": "93903c8c7e735da04154b3f2c224ee029a1a74c8"
      },
      {
        "name": "v0.3.2",
        "commit_sha": "bcf205de6bf57870db3b19db4c68c94501274ffd"
      },
      {
        "name": "v0.3.1",
        "commit_sha": "988ee90c0cb6fb706490c380720a3211a1ca6d59"
      },
      {
        "name": "v0.3.0",
        "commit_sha": "53a4bf0c472e092548d6a967fa01a77e6fb983c2"
      },
      {
        "name": "v0.2.5",
        "commit_sha": "e4bae657895d98ee8e4aa0d3f0a91bde58c83561"
      },
      {
        "name": "v0.2.4",
        "commit_sha": "2ffeee3d43e3ac8653a33ea519c3d4874f98d1b1"
      }
    ],
    "latest_version": "v0.6.3",
    "package_json_version": "0.6.3"
  },
  "readme": "# oneroster\n\nDeveloper-friendly & type-safe Typescript SDK specifically catered to leverage *oneroster* API.\n\n<div align=\"left\">\n    <a href=\"https://www.speakeasy.com/?utm_source=oneroster&utm_campaign=typescript\"><img src=\"https://custom-icon-badges.demolab.com/badge/-Built%20By%20Speakeasy-212015?style=for-the-badge&logoColor=FBE331&logo=speakeasy&labelColor=545454\" /></a>\n    <a href=\"https://opensource.org/licenses/MIT\">\n        <img src=\"https://img.shields.io/badge/License-MIT-blue.svg\" style=\"width: 100px; height: 28px;\" />\n    </a>\n</div>\n\n<!-- Start Summary [summary] -->\n## Summary\n\nOneRoster API: # Authentication\n\nAll endpoints require authentication using the `Authorization: Bearer <token>` header.\n\nThe token can be obtained with:\n\n```\ncurl -X POST https://alpha-auth-development-idp.auth.us-west-2.amazoncognito.com/oauth2/token \\\n-H \"Content-Type: application/x-www-form-urlencoded\" \\\n-d \"grant_type=client_credentials&client_id=<your-client-id>&client_secret=<your-client-secret>\"\n```\n\nUse the correct IDP server depending on the environment you're using:\n\n- Production Server:\n\n  https://alpha-auth-production-idp.auth.us-west-2.amazoncognito.com\n- Staging Server:\n\n  https://alpha-auth-development-idp.auth.us-west-2.amazoncognito.com\n\nReach out to the platform team to get a client/secret pair for your application.\n\n# Pagination\n\nOur API uses offset pagination for list endpoints. Paginated responses include the following fields:\n\n- `offset`: Offset for the next page of results\n- `limit`: Number of items per page (default: 100)\n\nExample request:\n\n```\nGET /ims/oneroster/rostering/v1p2/users?offset=20&limit=20\n```\n\nAll listing endpoints support offset pagination.\n\n# Filtering\n\nAll listing endpoints support filtering using the `filter` query parameter, following 1EdTech's filtering specification.\n\nThe filter should be a string with the following format:\n\n```\n?filter=[field][operator][value]\n```\n\nExample request:\n\n```\nGET /ims/oneroster/rostering/v1p2/users?filter=status='active'\n```\n\nExample request with multiple filters:\n\n```\nGET /ims/oneroster/rostering/v1p2/users?filter=status='active' AND name='John'\n```\n\n**Filtering by nested relations is not supported**.\n\n# Sorting\n\nAll listing endpoints support sorting using the `sort` and `orderBy` query parameters, following 1EdTech's sorting specification\n\nExample request:\n\n```\nGET /ims/oneroster/rostering/v1p2/users?sort=lastName&orderBy=asc\n```\n<!-- End Summary [summary] -->\n\n<!-- Start Table of Contents [toc] -->\n## Table of Contents\n<!-- $toc-max-depth=2 -->\n* [oneroster](#oneroster)\n* [Pagination](#pagination)\n* [Filtering](#filtering)\n* [Sorting](#sorting)\n  * [SDK Installation](#sdk-installation)\n  * [Requirements](#requirements)\n  * [SDK Example Usage](#sdk-example-usage)\n  * [Authentication](#authentication)\n  * [Available Resources and Operations](#available-resources-and-operations)\n  * [Standalone functions](#standalone-functions)\n  * [Pagination](#pagination-1)\n  * [Retries](#retries)\n  * [Error Handling](#error-handling)\n  * [Server Selection](#server-selection)\n  * [Custom HTTP Client](#custom-http-client)\n  * [Debugging](#debugging)\n* [Development](#development)\n  * [Maturity](#maturity)\n  * [Contributions](#contributions)\n\n<!-- End Table of Contents [toc] -->\n\n<!-- Start SDK Installation [installation] -->\n## SDK Installation\n\nThe SDK can be installed with either [npm](https://www.npmjs.com/), [pnpm](https://pnpm.io/), [bun](https://bun.sh/) or [yarn](https://classic.yarnpkg.com/en/) package managers.\n\n### NPM\n\n```bash\nnpm add @superbuilders/oneroster\n```\n\n### PNPM\n\n```bash\npnpm add @superbuilders/oneroster\n```\n\n### Bun\n\n```bash\nbun add @superbuilders/oneroster\n```\n\n### Yarn\n\n```bash\nyarn add @superbuilders/oneroster zod\n\n# Note that Yarn does not install peer dependencies automatically. You will need\n# to install zod as shown above.\n```\n\n> [!NOTE]\n> This package is published with CommonJS and ES Modules (ESM) support.\n\n\n### Model Context Protocol (MCP) Server\n\nThis SDK is also an installable MCP server where the various SDK methods are\nexposed as tools that can be invoked by AI applications.\n\n> Node.js v20 or greater is required to run the MCP server from npm.\n\n<details>\n<summary>Claude installation steps</summary>\n\nAdd the following server definition to your `claude_desktop_config.json` file:\n\n```json\n{\n  \"mcpServers\": {\n    \"OneRoster\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\", \"--package\", \"@superbuilders/oneroster\",\n        \"--\",\n        \"mcp\", \"start\",\n        \"--client-id\", \"...\",\n        \"--client-secret\", \"...\",\n        \"--token-url\", \"...\"\n      ]\n    }\n  }\n}\n```\n\n</details>\n\n<details>\n<summary>Cursor installation steps</summary>\n\nCreate a `.cursor/mcp.json` file in your project root with the following content:\n\n```json\n{\n  \"mcpServers\": {\n    \"OneRoster\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\", \"--package\", \"@superbuilders/oneroster\",\n        \"--\",\n        \"mcp\", \"start\",\n        \"--client-id\", \"...\",\n        \"--client-secret\", \"...\",\n        \"--token-url\", \"...\"\n      ]\n    }\n  }\n}\n```\n\n</details>\n\nYou can also run MCP servers as a standalone binary with no additional dependencies. You must pull these binaries from available Github releases:\n\n```bash\ncurl -L -o mcp-server \\\n    https://github.com/{org}/{repo}/releases/download/{tag}/mcp-server-bun-darwin-arm64 && \\\nchmod +x mcp-server\n```\n\nIf the repo is a private repo you must add your Github PAT to download a release `-H \"Authorization: Bearer {GITHUB_PAT}\"`.\n\n\n```json\n{\n  \"mcpServers\": {\n    \"Todos\": {\n      \"command\": \"./DOWNLOAD/PATH/mcp-server\",\n      \"args\": [\n        \"start\"\n      ]\n    }\n  }\n}\n```\n\nFor a full list of server arguments, run:\n\n```sh\nnpx -y --package @superbuilders/oneroster -- mcp start --help\n```\n<!-- End SDK Installation [installation] -->\n\n<!-- Start Requirements [requirements] -->\n## Requirements\n\nFor supported JavaScript runtimes, please consult [RUNTIMES.md](RUNTIMES.md).\n<!-- End Requirements [requirements] -->\n\n<!-- Start SDK Example Usage [usage] -->\n## SDK Example Usage\n\n### Example\n\n```typescript\nimport { OneRoster } from \"@superbuilders/oneroster\";\n\nconst oneRoster = new OneRoster({\n  security: {\n    clientID: process.env[\"ONEROSTER_CLIENT_ID\"] ?? \"\",\n    clientSecret: process.env[\"ONEROSTER_CLIENT_SECRET\"] ?? \"\",\n  },\n});\n\nasync function run() {\n  const result = await oneRoster.scoreScalesManagement.getAllScoreScales({\n    fields: \"sourcedId,name\",\n    filter: \"status='active'\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();\n\n```\n<!-- End SDK Example Usage [usage] -->\n\n<!-- Start Authentication [security] -->\n## Authentication\n\n### Per-Client Security Schemes\n\nThis SDK supports the following security scheme globally:\n\n| Name                          | Type   | Scheme                         | Environment Variable                                                          |\n| ----------------------------- | ------ | ------------------------------ | ----------------------------------------------------------------------------- |\n| `clientID`<br/>`clientSecret` | oauth2 | OAuth2 Client Credentials Flow | `ONEROSTER_CLIENT_ID`<br/>`ONEROSTER_CLIENT_SECRET`<br/>`ONEROSTER_TOKEN_URL` |\n\nYou can set the security parameters through the `security` optional parameter when initializing the SDK client instance. For example:\n```typescript\nimport { OneRoster } from \"@superbuilders/oneroster\";\n\nconst oneRoster = new OneRoster({\n  security: {\n    clientID: process.env[\"ONEROSTER_CLIENT_ID\"] ?? \"\",\n    clientSecret: process.env[\"ONEROSTER_CLIENT_SECRET\"] ?? \"\",\n  },\n});\n\nasync function run() {\n  const result = await oneRoster.scoreScalesManagement.getAllScoreScales({\n    fields: \"sourcedId,name\",\n    filter: \"status='active'\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();\n\n```\n<!-- End Authentication [security] -->\n\n<!-- Start Available Resources and Operations [operations] -->\n## Available Resources and Operations\n\n<details open>\n<summary>Available methods</summary>\n\n### [academicSessionsManagement](docs/sdks/academicsessionsmanagement/README.md)\n\n* [getAllAcademicSessions](docs/sdks/academicsessionsmanagement/README.md#getallacademicsessions) - Get all Academic Sessions\n* [postAcademicSession](docs/sdks/academicsessionsmanagement/README.md#postacademicsession) - Create an Academic Session\n* [getAcademicSession](docs/sdks/academicsessionsmanagement/README.md#getacademicsession) - Get a specific Academic Session\n* [putAcademicSession](docs/sdks/academicsessionsmanagement/README.md#putacademicsession) - Update an Academic Session\n* [deleteAcademicSession](docs/sdks/academicsessionsmanagement/README.md#deleteacademicsession) - Delete an Academic Session\n\n### [assessmentLineItemsManagement](docs/sdks/assessmentlineitemsmanagement/README.md)\n\n* [getAllAssessmentLineItems](docs/sdks/assessmentlineitemsmanagement/README.md#getallassessmentlineitems) - Get all Assessment Line Items\n* [createAssessmentLineItem](docs/sdks/assessmentlineitemsmanagement/README.md#createassessmentlineitem) - Create an Assessment Line Item\n* [getAssessmentLineItem](docs/sdks/assessmentlineitemsmanagement/README.md#getassessmentlineitem) - Get an Assessment Line Item\n* [updateAssessmentLineItem](docs/sdks/assessmentlineitemsmanagement/README.md#updateassessmentlineitem) - Update an Assessment Line Item\n* [deleteAssessmentLineItem](docs/sdks/assessmentlineitemsmanagement/README.md#deleteassessmentlineitem) - Delete an Assessment Line Item\n\n### [assessmentResultsManagement](docs/sdks/assessmentresultsmanagement/README.md)\n\n* [getAllAssessmentResults](docs/sdks/assessmentresultsmanagement/README.md#getallassessmentresults) - Get all Assessment Results\n* [createAssessmentResult](docs/sdks/assessmentresultsmanagement/README.md#createassessmentresult) - Create an Assessment Result\n* [getAssessmentResult](docs/sdks/assessmentresultsmanagement/README.md#getassessmentresult) - Get an Assessment Result\n* [updateAssessmentResult](docs/sdks/assessmentresultsmanagement/README.md#updateassessmentresult) - Update an Assessment Result\n* [deleteAssessmentResult](docs/sdks/assessmentresultsmanagement/README.md#deleteassessmentresult) - Delete an Assessment Result\n\n### [categoriesManagement](docs/sdks/categoriesmanagement/README.md)\n\n* [getAllCategories](docs/sdks/categoriesmanagement/README.md#getallcategories) - Get all Categories\n* [createCategory](docs/sdks/categoriesmanagement/README.md#createcategory) - Create a Category\n* [getCategory](docs/sdks/categoriesmanagement/README.md#getcategory) - Get a Category\n* [updateCategory](docs/sdks/categoriesmanagement/README.md#updatecategory) - Update a Category\n* [deleteCategory](docs/sdks/categoriesmanagement/README.md#deletecategory) - Delete a Category\n\n### [classesManagement](docs/sdks/classesmanagement/README.md)\n\n* [postResultsForAcademicSessionForClass](docs/sdks/classesmanagement/README.md#postresultsforacademicsessionforclass) - Create Results for an Academic Session for a Class\n* [getResultsForLineItemForClass](docs/sdks/classesmanagement/README.md#getresultsforlineitemforclass) - Get Results for a Line Item for a Class\n* [getResultsForStudentForClass](docs/sdks/classesmanagement/README.md#getresultsforstudentforclass) - Get Results for a Student for a Class\n* [getCategoriesForClass](docs/sdks/classesmanagement/README.md#getcategoriesforclass) - Get Categories for a Class\n* [getLineItemsForClass](docs/sdks/classesmanagement/README.md#getlineitemsforclass) - Get Line Items for a Class\n* [getResultsForClass](docs/sdks/classesmanagement/README.md#getresultsforclass) - Get Results for a Class\n* [getScoreScalesForClass](docs/sdks/classesmanagement/README.md#getscorescalesforclass) - Get Score Scales for a Class\n* [getAllClasses](docs/sdks/classesmanagement/README.md#getallclasses) - Get all Classes\n* [createClass](docs/sdks/classesmanagement/README.md#createclass) - Create a new Class\n* [getClass](docs/sdks/classesmanagement/README.md#getclass) - Get a specific class\n* [updateClass](docs/sdks/classesmanagement/README.md#updateclass) - Update a Class\n* [deleteClass](docs/sdks/classesmanagement/README.md#deleteclass) - Delete a Class\n* [getClassesForSchool](docs/sdks/classesmanagement/README.md#getclassesforschool) - Get all Classes for a School\n* [getClassesForUser](docs/sdks/classesmanagement/README.md#getclassesforuser) - Get Classes for a User\n* [getClassesForTerm](docs/sdks/classesmanagement/README.md#getclassesforterm) - Get Classes for a Term\n* [getTeachersForClass](docs/sdks/classesmanagement/README.md#getteachersforclass) - Get teachers for a Class\n* [addTeacherToClass](docs/sdks/classesmanagement/README.md#addteachertoclass) - Add a teacher to a Class\n* [getClassesForTeacher](docs/sdks/classesmanagement/README.md#getclassesforteacher) - Get Classes for a Teacher\n* [getStudentsForClass](docs/sdks/classesmanagement/README.md#getstudentsforclass) - Get students for a Class\n* [addStudentToClass](docs/sdks/classesmanagement/README.md#addstudenttoclass) - Add a student to a Class\n* [getClassesForStudent](docs/sdks/classesmanagement/README.md#getclassesforstudent) - Get Classes for a Student\n\n### [courseComponentResourcesManagement](docs/sdks/coursecomponentresourcesmanagement/README.md)\n\n* [createComponentResource](docs/sdks/coursecomponentresourcesmanagement/README.md#createcomponentresource) - Create Component Resource\n* [getAllComponentResources](docs/sdks/coursecomponentresourcesmanagement/README.md#getallcomponentresources) - Get all Component Resources\n* [getComponentResource](docs/sdks/coursecomponentresourcesmanagement/README.md#getcomponentresource) - Get a specific Component Resource\n* [putComponentResource](docs/sdks/coursecomponentresourcesmanagement/README.md#putcomponentresource) - Update a Component Resource\n* [deleteComponentResource](docs/sdks/coursecomponentresourcesmanagement/README.md#deletecomponentresource) - Delete a Component Resource\n\n### [courseComponentsManagement](docs/sdks/coursecomponentsmanagement/README.md)\n\n* [createCourseComponent](docs/sdks/coursecomponentsmanagement/README.md#createcoursecomponent) - Create Course Component\n* [getAllCourseComponents](docs/sdks/coursecomponentsmanagement/README.md#getallcoursecomponents) - Get all Course Components\n* [getCourseComponent](docs/sdks/coursecomponentsmanagement/README.md#getcoursecomponent) - Get a specific Course Component\n* [putCourseComponent](docs/sdks/coursecomponentsmanagement/README.md#putcoursecomponent) - Update a Course Component\n* [deleteCourseComponent](docs/sdks/coursecomponentsmanagement/README.md#deletecoursecomponent) - Delete a Course Component\n\n### [coursesManagement](docs/sdks/coursesmanagement/README.md)\n\n* [getAllCourses](docs/sdks/coursesmanagement/README.md#getallcourses) - Get All Courses\n* [createCourse](docs/sdks/coursesmanagement/README.md#createcourse) - Create a Course\n* [getClassesForCourse](docs/sdks/coursesmanagement/README.md#getclassesforcourse) - Get Classes for a Course\n* [getCourse](docs/sdks/coursesmanagement/README.md#getcourse) - Get a specific Course\n* [putCourse](docs/sdks/coursesmanagement/README.md#putcourse) - Update a Course\n* [deleteCourse](docs/sdks/coursesmanagement/README.md#deletecourse) - Delete a Course\n* [createComponentResource](docs/sdks/coursesmanagement/README.md#createcomponentresource) - Create Component Resource\n* [getAllComponentResources](docs/sdks/coursesmanagement/README.md#getallcomponentresources) - Get all Component Resources\n* [getComponentResource](docs/sdks/coursesmanagement/README.md#getcomponentresource) - Get a specific Component Resource\n* [putComponentResource](docs/sdks/coursesmanagement/README.md#putcomponentresource) - Update a Component Resource\n* [deleteComponentResource](docs/sdks/coursesmanagement/README.md#deletecomponentresource) - Delete a Component Resource\n* [createCourseComponent](docs/sdks/coursesmanagement/README.md#createcoursecomponent) - Create Course Component\n* [getAllCourseComponents](docs/sdks/coursesmanagement/README.md#getallcoursecomponents) - Get all Course Components\n* [getCourseComponent](docs/sdks/coursesmanagement/README.md#getcoursecomponent) - Get a specific Course Component\n* [putCourseComponent](docs/sdks/coursesmanagement/README.md#putcoursecomponent) - Update a Course Component\n* [deleteCourseComponent](docs/sdks/coursesmanagement/README.md#deletecoursecomponent) - Delete a Course Component\n* [getCoursesForSchool](docs/sdks/coursesmanagement/README.md#getcoursesforschool) - Get all Courses for a School\n\n### [demographicsManagement](docs/sdks/demographicsmanagement/README.md)\n\n* [getAllDemographics](docs/sdks/demographicsmanagement/README.md#getalldemographics) - Get all Demographic records\n* [postDemographics](docs/sdks/demographicsmanagement/README.md#postdemographics) - Create a new Demographic record\n* [getDemographics](docs/sdks/demographicsmanagement/README.md#getdemographics) - Get a specific Demographic record\n* [putDemographics](docs/sdks/demographicsmanagement/README.md#putdemographics) - Update a Demographic record\n* [deleteDemographics](docs/sdks/demographicsmanagement/README.md#deletedemographics) - Delete a Demographic record\n\n### [enrollmentsManagement](docs/sdks/enrollmentsmanagement/README.md)\n\n* [getAllEnrollments](docs/sdks/enrollmentsmanagement/README.md#getallenrollments) - Get all Enrollments\n* [createEnrollment](docs/sdks/enrollmentsmanagement/README.md#createenrollment) - Create a new Enrollment\n* [getEnrollment](docs/sdks/enrollmentsmanagement/README.md#getenrollment) - Get a specific Enrollment\n* [updateEnrollment](docs/sdks/enrollmentsmanagement/README.md#updateenrollment) - Update an Enrollment\n* [deleteEnrollment](docs/sdks/enrollmentsmanagement/README.md#deleteenrollment) - Delete an Enrollment\n* [getEnrollmentsForClassInSchool](docs/sdks/enrollmentsmanagement/README.md#getenrollmentsforclassinschool) - Get Enrollments for a specific Class in a School\n* [getEnrollmentsForSchool](docs/sdks/enrollmentsmanagement/README.md#getenrollmentsforschool) - Get all Enrollments for a School\n\n### [gradingPeriodsManagement](docs/sdks/gradingperiodsmanagement/README.md)\n\n* [getAllGradingPeriods](docs/sdks/gradingperiodsmanagement/README.md#getallgradingperiods) - Get all Grading Periods\n* [createGradingPeriod](docs/sdks/gradingperiodsmanagement/README.md#creategradingperiod) - Create a new Grading Period\n* [getGradingPeriod](docs/sdks/gradingperiodsmanagement/README.md#getgradingperiod) - Get a specific Grading Period\n* [updateGradingPeriod](docs/sdks/gradingperiodsmanagement/README.md#updategradingperiod) - Update a Grading Period\n* [deleteGradingPeriod](docs/sdks/gradingperiodsmanagement/README.md#deletegradingperiod) - Delete a Grading Period\n* [getGradingPeriodsForTerm](docs/sdks/gradingperiodsmanagement/README.md#getgradingperiodsforterm) - Get Grading Periods for a Term\n* [createGradingPeriodForTerm](docs/sdks/gradingperiodsmanagement/README.md#creategradingperiodforterm) - Create a new Grading Period for a Term\n\n### [lineItemsManagement](docs/sdks/lineitemsmanagement/README.md)\n\n* [getAllLineItems](docs/sdks/lineitemsmanagement/README.md#getalllineitems) - Get all Line Items\n* [createLineItem](docs/sdks/lineitemsmanagement/README.md#createlineitem) - Create a Line Item\n* [getLineItem](docs/sdks/lineitemsmanagement/README.md#getlineitem) - Get a Line Item\n* [updateLineItem](docs/sdks/lineitemsmanagement/README.md#updatelineitem) - Update a Line Item\n* [deleteLineItem](docs/sdks/lineitemsmanagement/README.md#deletelineitem) - Delete a Line Item\n* [createResultForLineItem](docs/sdks/lineitemsmanagement/README.md#createresultforlineitem) - Create a Result for a Line Item\n* [getLineItemsForSchool](docs/sdks/lineitemsmanagement/README.md#getlineitemsforschool) - Get Line Items for a School\n* [createLineItemsForSchool](docs/sdks/lineitemsmanagement/README.md#createlineitemsforschool) - Create Line Items for a School\n\n\n### [organizationsManagement](docs/sdks/organizationsmanagement/README.md)\n\n* [getAllOrgs](docs/sdks/organizationsmanagement/README.md#getallorgs) - Get all Organizations\n* [createOrg](docs/sdks/organizationsmanagement/README.md#createorg) - Create an Organization\n* [getOrg](docs/sdks/organizationsmanagement/README.md#getorg) - Get a specific Organization\n* [updateOrg](docs/sdks/organizationsmanagement/README.md#updateorg) - Update an Organization\n* [deleteOrg](docs/sdks/organizationsmanagement/README.md#deleteorg) - Delete an Organization\n\n### [resourcesClassesManagement](docs/sdks/resourcesclassesmanagement/README.md)\n\n* [getResourcesForClass](docs/sdks/resourcesclassesmanagement/README.md#getresourcesforclass) - Get resources for a class\n* [assignResourceToClass](docs/sdks/resourcesclassesmanagement/README.md#assignresourcetoclass) - Assign a resource to a class\n* [removeResourceFromClass](docs/sdks/resourcesclassesmanagement/README.md#removeresourcefromclass) - Remove a resource from a class\n\n### [resourcesCoursesManagement](docs/sdks/resourcescoursesmanagement/README.md)\n\n* [getResourcesForCourse](docs/sdks/resourcescoursesmanagement/README.md#getresourcesforcourse) - Get resources for a course\n* [assignResourceToCourse](docs/sdks/resourcescoursesmanagement/README.md#assignresourcetocourse) - Assign a resource to a course\n* [removeResourceFromCourse](docs/sdks/resourcescoursesmanagement/README.md#removeresourcefromcourse) - Remove a resource from a course\n\n### [resourcesManagement](docs/sdks/resourcesmanagement/README.md)\n\n* [getAllResources](docs/sdks/resourcesmanagement/README.md#getallresources) - Get all Resources\n* [createResource](docs/sdks/resourcesmanagement/README.md#createresource) - Create a new Resource\n* [getResource](docs/sdks/resourcesmanagement/README.md#getresource) - Get a specific Resource\n* [updateResource](docs/sdks/resourcesmanagement/README.md#updateresource) - Update an existing Resource\n* [deleteResource](docs/sdks/resourcesmanagement/README.md#deleteresource) - Delete a resource\n\n### [resourcesUsersManagement](docs/sdks/resourcesusersmanagement/README.md)\n\n* [getResourcesForUser](docs/sdks/resourcesusersmanagement/README.md#getresourcesforuser) - Get resources for a user\n* [assignResourceToUser](docs/sdks/resourcesusersmanagement/README.md#assignresourcetouser) - Assign a resource to a user\n* [removeResourceFromUser](docs/sdks/resourcesusersmanagement/README.md#removeresourcefromuser) - Remove a resource from a user\n\n### [resultsManagement](docs/sdks/resultsmanagement/README.md)\n\n* [getAllResults](docs/sdks/resultsmanagement/README.md#getallresults) - Get all Results\n* [createResult](docs/sdks/resultsmanagement/README.md#createresult) - Create a Result\n* [getResult](docs/sdks/resultsmanagement/README.md#getresult) - Get a Result\n* [updateResult](docs/sdks/resultsmanagement/README.md#updateresult) - Update a Result\n* [deleteResult](docs/sdks/resultsmanagement/README.md#deleteresult) - Delete a Result\n\n### [schoolsManagement](docs/sdks/schoolsmanagement/README.md)\n\n* [getScoreScalesForSchool](docs/sdks/schoolsmanagement/README.md#getscorescalesforschool) - Get Score Scales for a School\n* [getAllSchools](docs/sdks/schoolsmanagement/README.md#getallschools) - Get all Schools\n* [createSchool](docs/sdks/schoolsmanagement/README.md#createschool) - Create a new School\n* [getSchool](docs/sdks/schoolsmanagement/README.md#getschool) - Get a specific School\n* [updateSchool](docs/sdks/schoolsmanagement/README.md#updateschool) - Update a School\n* [deleteSchool](docs/sdks/schoolsmanagement/README.md#deleteschool) - Delete a School\n* [getLineItemsForSchool](docs/sdks/schoolsmanagement/README.md#getlineitemsforschool) - Get Line Items for a School\n* [createLineItemsForSchool](docs/sdks/schoolsmanagement/README.md#createlineitemsforschool) - Create Line Items for a School\n* [getClassesForSchool](docs/sdks/schoolsmanagement/README.md#getclassesforschool) - Get all Classes for a School\n* [getTermsForSchool](docs/sdks/schoolsmanagement/README.md#gettermsforschool) - Get all Terms for a School\n* [getTeachersForClassInSchool](docs/sdks/schoolsmanagement/README.md#getteachersforclassinschool) - Get Teachers for a specific Class in a School\n* [getTeachersForSchool](docs/sdks/schoolsmanagement/README.md#getteachersforschool) - Get all teachers for a school\n* [getStudentsForClassInSchool](docs/sdks/schoolsmanagement/README.md#getstudentsforclassinschool) - Get Students for a specific Class in a School\n* [getStudentsForSchool](docs/sdks/schoolsmanagement/README.md#getstudentsforschool) - Get all Students for a School\n* [getEnrollmentsForClassInSchool](docs/sdks/schoolsmanagement/README.md#getenrollmentsforclassinschool) - Get Enrollments for a specific Class in a School\n* [getEnrollmentsForSchool](docs/sdks/schoolsmanagement/README.md#getenrollmentsforschool) - Get all Enrollments for a School\n* [getCoursesForSchool](docs/sdks/schoolsmanagement/README.md#getcoursesforschool) - Get all Courses for a School\n\n### [scoreScalesManagement](docs/sdks/scorescalesmanagement/README.md)\n\n* [getAllScoreScales](docs/sdks/scorescalesmanagement/README.md#getallscorescales) - Get all Score Scales\n* [createScoreScale](docs/sdks/scorescalesmanagement/README.md#createscorescale) - Create a Score Scale\n* [getScoreScale](docs/sdks/scorescalesmanagement/README.md#getscorescale) - Get a Score Scale\n* [updateScoreScale](docs/sdks/scorescalesmanagement/README.md#updatescorescale) - Update a Score Scale\n* [deleteScoreScale](docs/sdks/scorescalesmanagement/README.md#deletescorescale) - Delete a Score Scale\n* [getScoreScalesForSchool](docs/sdks/scorescalesmanagement/README.md#getscorescalesforschool) - Get Score Scales for a School\n\n### [studentsManagement](docs/sdks/studentsmanagement/README.md)\n\n* [getStudentsForClass](docs/sdks/studentsmanagement/README.md#getstudentsforclass) - Get students for a Class\n* [addStudentToClass](docs/sdks/studentsmanagement/README.md#addstudenttoclass) - Add a student to a Class\n* [getStudentsForClassInSchool](docs/sdks/studentsmanagement/README.md#getstudentsforclassinschool) - Get Students for a specific Class in a School\n* [getStudentsForSchool](docs/sdks/studentsmanagement/README.md#getstudentsforschool) - Get all Students for a School\n* [getAllStudents](docs/sdks/studentsmanagement/README.md#getallstudents) - Get all Students\n* [getStudent](docs/sdks/studentsmanagement/README.md#getstudent) - Get a specific Student\n* [getClassesForStudent](docs/sdks/studentsmanagement/README.md#getclassesforstudent) - Get Classes for a Student\n\n### [teachersManagement](docs/sdks/teachersmanagement/README.md)\n\n* [getTeachersForClass](docs/sdks/teachersmanagement/README.md#getteachersforclass) - Get teachers for a Class\n* [addTeacherToClass](docs/sdks/teachersmanagement/README.md#addteachertoclass) - Add a teacher to a Class\n* [getTeachersForClassInSchool](docs/sdks/teachersmanagement/README.md#getteachersforclassinschool) - Get Teachers for a specific Class in a School\n* [getTeachersForSchool](docs/sdks/teachersmanagement/README.md#getteachersforschool) - Get all teachers for a school\n* [getAllTeachers](docs/sdks/teachersmanagement/README.md#getallteachers) - Get all Teachers\n* [getTeacher](docs/sdks/teachersmanagement/README.md#getteacher) - Get a specific Teacher\n* [getClassesForTeacher](docs/sdks/teachersmanagement/README.md#getclassesforteacher) - Get Classes for a Teacher\n\n### [termsManagement](docs/sdks/termsmanagement/README.md)\n\n* [getTermsForSchool](docs/sdks/termsmanagement/README.md#gettermsforschool) - Get all Terms for a School\n* [getAllTerms](docs/sdks/termsmanagement/README.md#getallterms) - Get all Terms\n* [getTerm](docs/sdks/termsmanagement/README.md#getterm) - Get a specific Term\n* [getClassesForTerm](docs/sdks/termsmanagement/README.md#getclassesforterm) - Get Classes for a Term\n* [getGradingPeriodsForTerm](docs/sdks/termsmanagement/README.md#getgradingperiodsforterm) - Get Grading Periods for a Term\n* [createGradingPeriodForTerm](docs/sdks/termsmanagement/README.md#creategradingperiodforterm) - Create a new Grading Period for a Term\n\n### [usersManagement](docs/sdks/usersmanagement/README.md)\n\n* [getAllUsers](docs/sdks/usersmanagement/README.md#getallusers) - Get all Users\n* [createUser](docs/sdks/usersmanagement/README.md#createuser) - Create a new User\n* [getUser](docs/sdks/usersmanagement/README.md#getuser) - Get a specific User\n* [updateUser](docs/sdks/usersmanagement/README.md#updateuser) - Update an existing User\n* [deleteUser](docs/sdks/usersmanagement/README.md#deleteuser) - Delete a User\n* [getClassesForUser](docs/sdks/usersmanagement/README.md#getclassesforuser) - Get Classes for a User\n\n</details>\n<!-- End Available Resources and Operations [operations] -->\n\n<!-- Start Standalone functions [standalone-funcs] -->\n## Standalone functions\n\nAll the methods listed above are available as standalone functions. These\nfunctions are ideal for use in applications running in the browser, serverless\nruntimes or other environments where application bundle size is a primary\nconcern. When using a bundler to build your application, all unused\nfunctionality will be either excluded from the final bundle or tree-shaken away.\n\nTo read more about standalone functions, check [FUNCTIONS.md](./FUNCTIONS.md).\n\n<details>\n\n<summary>Available standalone functions</summary>\n\n- [`academicSessionsManagementDeleteAcademicSession`](docs/sdks/academicsessionsmanagement/README.md#deleteacademicsession) - Delete an Academic Session\n- [`academicSessionsManagementGetAcademicSession`](docs/sdks/academicsessionsmanagement/README.md#getacademicsession) - Get a specific Academic Session\n- [`academicSessionsManagementGetAllAcademicSessions`](docs/sdks/academicsessionsmanagement/README.md#getallacademicsessions) - Get all Academic Sessions\n- [`academicSessionsManagementPostAcademicSession`](docs/sdks/academicsessionsmanagement/README.md#postacademicsession) - Create an Academic Session\n- [`academicSessionsManagementPutAcademicSession`](docs/sdks/academicsessionsmanagement/README.md#putacademicsession) - Update an Academic Session\n- [`assessmentLineItemsManagementCreateAssessmentLineItem`](docs/sdks/assessmentlineitemsmanagement/README.md#createassessmentlineitem) - Create an Assessment Line Item\n- [`assessmentLineItemsManagementDeleteAssessmentLineItem`](docs/sdks/assessmentlineitemsmanagement/README.md#deleteassessmentlineitem) - Delete an Assessment Line Item\n- [`assessmentLineItemsManagementGetAllAssessmentLineItems`](docs/sdks/assessmentlineitemsmanagement/README.md#getallassessmentlineitems) - Get all Assessment Line Items\n- [`assessmentLineItemsManagementGetAssessmentLineItem`](docs/sdks/assessmentlineitemsmanagement/README.md#getassessmentlineitem) - Get an Assessment Line Item\n- [`assessmentLineItemsManagementUpdateAssessmentLineItem`](docs/sdks/assessmentlineitemsmanagement/README.md#updateassessmentlineitem) - Update an Assessment Line Item\n- [`assessmentResultsManagementCreateAssessmentResult`](docs/sdks/assessmentresultsmanagement/README.md#createassessmentresult) - Create an Assessment Result\n- [`assessmentResultsManagementDeleteAssessmentResult`](docs/sdks/assessmentresultsmanagement/README.md#deleteassessmentresult) - Delete an Assessment Result\n- [`assessmentResultsManagementGetAllAssessmentResults`](docs/sdks/assessmentresultsmanagement/README.md#getallassessmentresults) - Get all Assessment Results\n- [`assessmentResultsManagementGetAssessmentResult`](docs/sdks/assessmentresultsmanagement/README.md#getassessmentresult) - Get an Assessment Result\n- [`assessmentResultsManagementUpdateAssessmentResult`](docs/sdks/assessmentresultsmanagement/README.md#updateassessmentresult) - Update an Assessment Result\n- [`categoriesManagementCreateCategory`](docs/sdks/categoriesmanagement/README.md#createcategory) - Create a Category\n- [`categoriesManagementDeleteCategory`](docs/sdks/categoriesmanagement/README.md#deletecategory) - Delete a Category\n- [`categoriesManagementGetAllCategories`](docs/sdks/categoriesmanagement/README.md#getallcategories) - Get all Categories\n- [`categoriesManagementGetCategory`](docs/sdks/categoriesmanagement/README.md#getcategory) - Get a Category\n- [`categoriesManagementUpdateCategory`](docs/sdks/categoriesmanagement/README.md#updatecategory) - Update a Category\n- [`classesManagementAddStudentToClass`](docs/sdks/classesmanagement/README.md#addstudenttoclass) - Add a student to a Class\n- [`classesManagementAddTeacherToClass`](docs/sdks/classesmanagement/README.md#addteachertoclass) - Add a teacher to a Class\n- [`classesManagementCreateClass`](docs/sdks/classesmanagement/README.md#createclass) - Create a new Class\n- [`classesManagementDeleteClass`](docs/sdks/classesmanagement/README.md#deleteclass) - Delete a Class\n- [`classesManagementGetAllClasses`](docs/sdks/classesmanagement/README.md#getallclasses) - Get all Classes\n- [`classesManagementGetCategoriesForClass`](docs/sdks/classesmanagement/README.md#getcategoriesforclass) - Get Categories for a Class\n- [`classesManagementGetClass`](docs/sdks/classesmanagement/README.md#getclass) - Get a specific class\n- [`classesManagementGetClassesForSchool`](docs/sdks/classesmanagement/README.md#getclassesforschool) - Get all Classes for a School\n- [`classesManagementGetClassesForStudent`](docs/sdks/classesmanagement/README.md#getclassesforstudent) - Get Classes for a Student\n- [`classesManagementGetClassesForTeacher`](docs/sdks/classesmanagement/README.md#getclassesforteacher) - Get Classes for a Teacher\n- [`classesManagementGetClassesForTerm`](docs/sdks/classesmanagement/README.md#getclassesforterm) - Get Classes for a Term\n- [`classesManagementGetClassesForUser`](docs/sdks/classesmanagement/README.md#getclassesforuser) - Get Classes for a User\n- [`classesManagementGetLineItemsForClass`](docs/sdks/classesmanagement/README.md#getlineitemsforclass) - Get Line Items for a Class\n- [`classesManagementGetResultsForClass`](docs/sdks/classesmanagement/README.md#getresultsforclass) - Get Results for a Class\n- [`classesManagementGetResultsForLineItemForClass`](docs/sdks/classesmanagement/README.md#getresultsforlineitemforclass) - Get Results for a Line Item for a Class\n- [`classesManagementGetResultsForStudentForClass`](docs/sdks/classesmanagement/README.md#getresultsforstudentforclass) - Get Results for a Student for a Class\n- [`classesManagementGetScoreScalesForClass`](docs/sdks/classesmanagement/README.md#getscorescalesforclass) - Get Score Scales for a Class\n- [`classesManagementGetStudentsForClass`](docs/sdks/classesmanagement/README.md#getstudentsforclass) - Get students for a Class\n- [`classesManagementGetTeachersForClass`](docs/sdks/classesmanagement/README.md#getteachersforclass) - Get teachers for a Class\n- [`classesManagementPostResultsForAcademicSessionForClass`](docs/sdks/classesmanagement/README.md#postresultsforacademicsessionforclass) - Create Results for an Academic Session for a Class\n- [`classesManagementUpdateClass`](docs/sdks/classesmanagement/README.md#updateclass) - Update a Class\n- [`courseComponentResourcesManagementCreateComponentResource`](docs/sdks/coursecomponentresourcesmanagement/README.md#createcomponentresource) - Create Component Resource\n- [`courseComponentResourcesManagementDeleteComponentResource`](docs/sdks/coursecomponentresourcesmanagement/README.md#deletecomponentresource) - Delete a Component Resource\n- [`courseComponentResourcesManagementGetAllComponentResources`](docs/sdks/coursecomponentresourcesmanagement/README.md#getallcomponentresources) - Get all Component Resources\n- [`courseComponentResourcesManagementGetComponentResource`](docs/sdks/coursecomponentresourcesmanagement/README.md#getcomponentresource) - Get a specific Component Resource\n- [`courseComponentResourcesManagementPutComponentResource`](docs/sdks/coursecomponentresourcesmanagement/README.md#putcomponentresource) - Update a Component Resource\n- [`courseComponentsManagementCreateCourseComponent`](docs/sdks/coursecomponentsmanagement/README.md#createcoursecomponent) - Create Course Component\n- [`courseComponentsManagementDeleteCourseComponent`](docs/sdks/coursecomponentsmanagement/README.md#deletecoursecomponent) - Delete a Course Component\n- [`courseComponentsManagementGetAllCourseComponents`](docs/sdks/coursecomponentsmanagement/README.md#getallcoursecomponents) - Get all Course Components\n- [`courseComponentsManagementGetCourseComponent`](docs/sdks/coursecomponentsmanagement/README.md#getcoursecomponent) - Get a specific Course Component\n- [`courseComponentsManagementPutCourseComponent`](docs/sdks/coursecomponentsmanagement/README.md#putcoursecomponent) - Update a Course Component\n- [`coursesManagementCreateComponentResource`](docs/sdks/coursesmanagement/README.md#createcomponentresource) - Create Component Resource\n- [`coursesManagementCreateCourse`](docs/sdks/coursesmanagement/README.md#createcourse) - Create a Course\n- [`coursesManagementCreateCourseComponent`](docs/sdks/coursesmanagement/README.md#createcoursecomponent) - Create Course Component\n- [`coursesManagementDeleteComponentResource`](docs/sdks/coursesmanagement/README.md#deletecomponentresource) - Delete a Component Resource\n- [`coursesManagementDeleteCourse`](docs/sdks/coursesmanagement/README.md#deletecourse) - Delete a Course\n- [`coursesManagementDeleteCourseComponent`](docs/sdks/coursesmanagement/README.md#deletecoursecomponent) - Delete a Course Component\n- [`coursesManagementGetAllComponentResources`](docs/sdks/coursesmanagement/README.md#getallcomponentresources) - Get all Component Resources\n- [`coursesManagementGetAllCourseComponents`](docs/sdks/coursesmanagement/README.md#getallcoursecomponents) - Get all Course Components\n- [`coursesManagementGetAllCourses`](docs/sdks/coursesmanagement/README.md#getallcourses) - Get All Courses\n- [`coursesManagementGetClassesForCourse`](docs/sdks/coursesmanagement/README.md#getclassesforcourse) - Get Classes for a Course\n- [`coursesManagementGetComponentResource`](docs/sdks/coursesmanagement/README.md#getcomponentresource) - Get a specific Component Resource\n- [`coursesManagementGetCourse`](docs/sdks/coursesmanagement/README.md#getcourse) - Get a specific Course\n- [`coursesManagementGetCourseComponent`](docs/sdks/coursesmanagement/README.md#getcoursecomponent) - Get a specific Course Component\n- [`coursesManagementGetCoursesForSchool`](docs/sdks/coursesmanagement/README.md#getcoursesforschool) - Get all Courses for a School\n- [`coursesManagementPutComponentResource`](docs/sdks/coursesmanagement/README.md#putcomponentresource) - Update a Component Resource\n- [`coursesManagementPutCourse`](docs/sdks/coursesmanagement/README.md#putcourse) - Update a Course\n- [`coursesManagementPutCourseComponent`](docs/sdks/coursesmanagement/README.md#putcoursecomponent) - Update a Course Component\n- [`demographicsManagementDeleteDemographics`](docs/sdks/demographicsmanagement/README.md#deletedemographics) - Delete a Demographic record\n- [`demographicsManagementGetAllDemographics`](docs/sdks/demographicsmanagement/README.md#getalldemographics) - Get all Demographic records\n- [`demographicsManagementGetDemographics`](docs/sdks/demographicsmanagement/README.md#getdemographics) - Get a specific Demographic record\n- [`demographicsManagementPostDemographics`](docs/sdks/demographicsmanagement/README.md#postdemographics) - Create a new Demographic record\n- [`demographicsManagementPutDemographics`](docs/sdks/demographicsmanagement/README.md#putdemographics) - Update a Demographic record\n- [`enrollmentsManagementCreateEnrollment`](docs/sdks/enrollmentsmanagement/README.md#createenrollment) - Create a new Enrollment\n- [`enrollmentsManagementDeleteEnrollment`](docs/sdks/enrollmentsmanagement/README.md#deleteenrollment) - Delete an Enrollment\n- [`enrollmentsManagementGetAllEnrollments`](docs/sdks/enrollmentsmanagement/README.md#getallenrollments) - Get all Enrollments\n- [`enrollmentsManagementGetEnrollment`](docs/sdks/enrollmentsmanagement/README.md#getenrollment) - Get a specific Enrollment\n- [`enrollmentsManagementGetEnrollmentsForClassInSchool`](docs/sdks/enrollmentsmanagement/README.md#getenrollmentsforclassinschool) - Get Enrollments for a specific Class in a School\n- [`enrollmentsManagementGetEnrollmentsForSchool`](docs/sdks/enrollmentsmanagement/README.md#getenrollmentsforschool) - Get all Enrollments for a School\n- [`enrollmentsManagementUpdateEnrollment`](docs/sdks/enrollmentsmanagement/README.md#updateenrollment) - Update an Enrollment\n- [`gradingPeriodsManagementCreateGradingPeriod`](docs/sdks/gradingperiodsmanagement/README.md#creategradingperiod) - Create a new Grading Period\n- [`gradingPeriodsManagementCreateGradingPeriodForTerm`](docs/sdks/gradingperiodsmanagement/README.md#creategradingperiodforterm) - Create a new Grading Period for a Term\n- [`gradingPeriodsManagementDeleteGradingPeriod`](docs/sdks/gradingperiodsmanagement/README.md#deletegradingperiod) - Delete a Grading Period\n- [`gradingPeriodsManagementGetAllGradingPeriods`](docs/sdks/gradingperiodsmanagement/README.md#getallgradingperiods) - Get all Grading Periods\n- [`gradingPeriodsManagementGetGradingPeriod`](docs/sdks/gradingperiodsmanagement/README.md#getgradingperiod) - Get a specific Grading Period\n- [`gradingPeriodsManagementGetGradingPeriodsForTerm`](docs/sdks/gradingperiodsmanagement/README.md#getgradingperiodsforterm) - Get Grading Periods for a Term\n- [`gradingPeriodsManagementUpdateGradingPeriod`](docs/sdks/gradingperiodsmanagement/README.md#updategradingperiod) - Update a Grading Period\n- [`lineItemsManagementCreateLineItem`](docs/sdks/lineitemsmanagement/README.md#createlineitem) - Create a Line Item\n- [`lineItemsManagementCreateLineItemsForSchool`](docs/sdks/lineitemsmanagement/README.md#createlineitemsforschool) - Create Line Items for a School\n- [`lineItemsManagementCreateResultForLineItem`](docs/sdks/lineitemsmanagement/README.md#createresultforlineitem) - Create a Result for a Line Item\n- [`lineItemsManagementDeleteLineItem`](docs/sdks/lineitemsmanagement/README.md#deletelineitem) - Delete a Line Item\n- [`lineItemsManagementGetAllLineItems`](docs/sdks/lineitemsmanagement/README.md#getalllineitems) - Get all Line Items\n- [`lineItemsManagementGetLineItem`](docs/sdks/lineitemsmanagement/README.md#getlineitem) - Get a Line Item\n- [`lineItemsManagementGetLineItemsForSchool`](docs/sdks/lineitemsmanagement/README.md#getlineitemsforschool) - Get Line Items for a School\n- [`lineItemsManagementUpdateLineItem`](docs/sdks/lineitemsmanagement/README.md#updatelineitem) - Update a Line Item\n- [`organizationsManagementCreateOrg`](docs/sdks/organizationsmanagement/README.md#createorg) - Create an Organization\n- [`organizationsManagementDeleteOrg`](docs/sdks/organizationsmanagement/README.md#deleteorg) - Delete an Organization\n- [`organizationsManagementGetAllOrgs`](docs/sdks/organizationsmanagement/README.md#getallorgs) - Get all Organizations\n- [`organizationsManagementGetOrg`](docs/sdks/organizationsmanagement/README.md#getorg) - Get a specific Organization\n- [`organizationsManagementUpdateOrg`](docs/sdks/organizationsmanagement/README.md#updateorg) - Update an Organization\n- [`resourcesClassesManagementAssignResourceToClass`](docs/sdks/resourcesclassesmanagement/README.md#assignresourcetoclass) - Assign a resource to a class\n- [`resourcesClassesManagementGetResourcesForClass`](docs/sdks/resourcesclassesmanagement/README.md#getresourcesforclass) - Get resources for a class\n- [`resourcesClassesManagementRemoveResourceFromClass`](docs/sdks/resourcesclassesmanagement/README.md#removeresourcefromclass) - Remove a resource from a class\n- [`resourcesCoursesManagementAssignResourceToCourse`](docs/sdks/resourcescoursesmanagement/README.md#assignresourcetocourse) - Assign a resource to a course\n- [`resourcesCoursesManagementGetResourcesForCourse`](docs/sdks/resourcescoursesmanagement/README.md#getresourcesforcourse) - Get resources for a course\n- [`resourcesCoursesManagementRemoveResourceFromCourse`](docs/sdks/resourcescoursesmanagement/README.md#removeresourcefromcourse) - Remove a resource from a course\n- [`resourcesManagementCreateResource`](docs/sdks/resourcesmanagement/README.md#createresource) - Create a new Resource\n- [`resourcesManagementDeleteResource`](docs/sdks/resourcesmanagement/README.md#deleteresource) - Delete a resource\n- [`resourcesManagementGetAllResources`](docs/sdks/resourcesmanagement/README.md#getallresources) - Get all Resources\n- [`resourcesManagementGetResource`](docs/sdks/resourcesmanagement/README.md#getresource) - Get a specific Resource\n- [`resourcesManagementUpdateResource`](docs/sdks/resourcesmanagement/README.md#updateresource) - Update an existing Resource\n- [`resourcesUsersManagementAssignResourceToUser`](docs/sdks/resourcesusersmanagement/README.md#assignresourcetouser) - Assign a resource to a user\n- [`resourcesUsersManagementGetResourcesForUser`](docs/sdks/resourcesusersmanagement/README.md#getresourcesforuser) - Get resources for a user\n- [`resourcesUsersManagementRemoveResourceFromUser`](docs/sdks/resourcesusersmanagement/README.md#removeresourcefromuser) - Remove a resource from a user\n- [`resultsManagementCreateResult`](docs/sdks/resultsmanagement/README.md#createresult) - Create a Result\n- [`resultsManagementDeleteResult`](docs/sdks/resultsmanagement/README.md#deleteresult) - Delete a Result\n- [`resultsManagementGetAllResults`](docs/sdks/resultsmanagement/README.md#getallresults) - Get all Results\n- [`resultsManagementGetResult`](docs/sdks/resultsmanagement/README.md#getresult) - Get a Result\n- [`resultsManagementUpdateResult`](docs/sdks/resultsmanagement/README.md#updateresult) - Update a Result\n- [`schoolsManagementCreateLineItemsForSchool`](docs/sdks/schoolsmanagement/README.md#createlineitemsforschool) - Create Line Items for a School\n- [`schoolsManagementCreateSchool`](docs/sdks/schoolsmanagement/README.md#createschool) - Create a new School\n- [`schoolsManagementDeleteSchool`](docs/sdks/schoolsmanagement/README.md#deleteschool) - Delete a School\n- [`schoolsManagementGetAllSchools`](docs/sdks/schoolsmanagement/README.md#getallschools) - Get all Schools\n- [`schoolsManagementGetClassesForSchool`](docs/sdks/schoolsmanagement/README.md#getclassesforschool) - Get all Classes for a School\n- [`schoolsManagementGetCoursesForSchool`](docs/sdks/schoolsmanagement/README.md#getcoursesforschool) - Get all Courses for a School\n- [`schoolsManagementGetEnrollmentsForClassInSchool`](docs/sdks/schoolsmanagement/README.md#getenrollmentsforclassinschool) - Get Enrollments for a specific Class in a School\n- [`schoolsManagementGetEnrollmentsForSchool`](docs/sdks/schoolsmanagement/README.md#getenrollmentsforschool) - Get all Enrollments for a School\n- [`schoolsManagementGetLineItemsForSchool`](docs/sdks/schoolsmanagement/README.md#getlineitemsforschool) - Get Line Items for a School\n- [`schoolsManagementGetSchool`](docs/sdks/schoolsmanagement/README.md#getschool) - Get a specific School\n- [`schoolsManagementGetScoreScalesForSchool`](docs/sdks/schoolsmanagement/README.md#getscorescalesforschool) - Get Score Scales for a School\n- [`schoolsManagementGetStudentsForClassInSchool`](docs/sdks/schoolsmanagement/README.md#getstudentsforclassinschool) - Get Students for a specific Class in a School\n- [`schoolsManagementGetStudentsForSchool`](docs/sdks/schoolsmanagement/README.md#getstudentsforschool) - Get all Students for a School\n- [`schoolsManagementGetTeachersForClassInSchool`](docs/sdks/schoolsmanagement/README.md#getteachersforclassinschool) - Get Teachers for a specific Class in a School\n- [`schoolsManagementGetTeachersForSchool`](docs/sdks/schoolsmanagement/README.md#getteachersforschool) - Get all teachers for a school\n- [`schoolsManagementGetTermsForSchool`](docs/sdks/schoolsmanagement/README.md#gettermsforschool) - Get all Terms for a School\n- [`schoolsManagementUpdateSchool`](docs/sdks/schoolsmanagement/README.md#updateschool) - Update a School\n- [`scoreScalesManagementCreateScoreScale`](docs/sdks/scorescalesmanagement/README.md#createscorescale) - Create a Score Scale\n- [`scoreScalesManagementDeleteScoreScale`](docs/sdks/scorescalesmanagement/README.md#deletescorescale) - Delete a Score Scale\n- [`scoreScalesManagementGetAllScoreScales`](docs/sdks/scorescalesmanagement/README.md#getallscorescales) - Get all Score Scales\n- [`scoreScalesManagementGetScoreScale`](docs/sdks/scorescalesmanagement/README.md#getscorescale) - Get a Score Scale\n- [`scoreScalesManagementGetScoreScalesForSchool`](docs/sdks/scorescalesmanagement/README.md#getscorescalesforschool) - Get Score Scales for a School\n- [`scoreScalesManagementUpdateScoreScale`](docs/sdks/scorescalesmanagement/README.md#updatescorescale) - Update a Score Scale\n- [`studentsManagementAddStudentToClass`](docs/sdks/studentsmanagement/README.md#addstudenttoclass) - Add a student to a Class\n- [`studentsManagementGetAllStudents`](docs/sdks/studentsmanagement/README.md#getallstudents) - Get all Students\n- [`studentsManagementGetClassesForStudent`](docs/sdks/studentsmanagement/README.md#getclassesforstudent) - Get Classes for a Student\n- [`studentsManagementGetStudent`](docs/sdks/studentsmanagement/README.md#getstudent) - Get a specific Student\n- [`studentsManagementGetStudentsForClass`](docs/sdks/studentsmanagement/README.md#getstudentsforclass) - Get students for a Class\n- [`studentsManagementGetStudentsForClassInSchool`](docs/sdks/studentsmanagement/README.md#getstudentsforclassinschool) - Get Students for a specific Class in a School\n- [`studentsManagementGetStudentsForSchool`](docs/sdks/studentsmanagement/README.md#getstudentsforschool) - Get all Students for a School\n- [`teachersManagementAddTeacherToClass`](docs/sdks/teachersmanagement/README.md#addteachertoclass) - Add a teacher to a Class\n- [`teachersManagementGetAllTeachers`](docs/sdks/teachersmanagement/README.md#getallteachers) - Get all Teachers\n- [`teachersManagementGetClassesForTeacher`](docs/sdks/teachersmanagement/README.md#getclassesforteacher) - Get Classes for a Teacher\n- [`teachersManagementGetTeacher`](docs/sdks/teachersmanagement/README.md#getteacher) - Get a specific Teacher\n- [`teachersManagementGetTeachersForClass`](docs/sdks/teachersmanagement/README.md#getteachersforclass) - Get teachers for a Class\n- [`teachersManagementGetTeachersForClassInSchool`](docs/sdks/teachersmanagement/README.md#getteachersforclassinschool) - Get Teachers for a specific Class in a School\n- [`teachersManagementGetTeachersForSchool`](docs/sdks/teachersmanagement/README.md#getteachersforschool) - Get all teachers for a school\n- [`termsManagementCreateGradingPeriodForTerm`](docs/sdks/termsmanagement/README.md#creategradingperiodforterm) - Create a new Grading Period for a Term\n- [`termsManagementGetAllTerms`](docs/sdks/termsmanagement/README.md#getallterms) - Get all Terms\n- [`termsManagementGetClassesForTerm`](docs/sdks/termsmanagement/README.md#getclassesforterm) - Get Classes for a Term\n- [`termsManagementGetGradingPeriodsForTerm`](docs/sdks/termsmanagement/README.md#getgradingperiodsforterm) - Get Grading Periods for a Term\n- [`termsManagementGetTerm`](docs/sdks/termsmanagement/README.md#getterm) - Get a specific Term\n- [`termsManagementGetTermsForSchool`](docs/sdks/termsmanagement/README.md#gettermsforschool) - Get all Terms for a School\n- [`usersManagementCreateUser`](docs/sdks/usersmanagement/README.md#createuser) - Create a new User\n- [`usersManagementDeleteUser`](docs/sdks/usersmanagement/README.md#deleteuser) - Delete a User\n- [`usersManagementGetAllUsers`](docs/sdks/usersmanagement/README.md#getallusers) - Get all Users\n- [`usersManagementGetClassesForUser`](docs/sdks/usersmanagement/README.md#getclassesforuser) - Get Classes for a User\n- [`usersManagementGetUser`](docs/sdks/usersmanagement/README.md#getuser) - Get a specific User\n- [`usersManagementUpdateUser`](docs/sdks/usersmanagement/README.md#updateuser) - Update an existing User\n\n</details>\n<!-- End Standalone functions [standalone-funcs] -->\n\n<!-- Start Pagination [pagination] -->\n## Pagination\n\nSome of the endpoints in this SDK support pagination. To use pagination, you\nmake your SDK calls as usual, but the returned response object will also be an\nasync iterable that can be consumed using the [`for await...of`][for-await-of]\nsyntax.\n\n[for-await-of]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of\n\nHere's an example of one such pagination call:\n\n```typescript\nimport { OneRoster } from \"@superbuilders/oneroster\";\n\nconst oneRoster = new OneRoster({\n  security: {\n    clientID: process.env[\"ONEROSTER_CLIENT_ID\"] ?? \"\",\n    clientSecret: process.env[\"ONEROSTER_CLIENT_SECRET\"] ?? \"\",\n  },\n});\n\nasync function run() {\n  const result = await oneRoster.scoreScalesManagement.getAllScoreScales({\n    fields: \"sourcedId,name\",\n    filter: \"status='active'\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();\n\n```\n<!-- End Pagination [pagination] -->\n\n<!-- Start Retries [retries] -->\n## Retries\n\nSome of the endpoints in this SDK support retries.  If you use the SDK without any configuration, it will fall back to the default retry strategy provided by the API.  However, the default retry strategy can be overridden on a per-operation basis, or across the entire SDK.\n\nTo change the default retry strategy for a single API call, simply provide a retryConfig object to the call:\n```typescript\nimport { OneRoster } from \"@superbuilders/oneroster\";\n\nconst oneRoster = new OneRoster({\n  security: {\n    clientID: process.env[\"ONEROSTER_CLIENT_ID\"] ?? \"\",\n    clientSecret: process.env[\"ONEROSTER_CLIENT_SECRET\"] ?? \"\",\n  },\n});\n\nasync function run() {\n  const result = await oneRoster.scoreScalesManagement.getAllScoreScales({\n    fields: \"sourcedId,name\",\n    filter: \"status='active'\",\n  }, {\n    retries: {\n      strategy: \"backoff\",\n      backoff: {\n        initialInterval: 1,\n        maxInterval: 50,\n        exponent: 1.1,\n        maxElapsedTime: 100,\n      },\n      retryConnectionErrors: false,\n    },\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();\n\n```\n\nIf you'd like to override the default retry strategy for all operations that support retries, you can provide a retryConfig at SDK initialization:\n```typescript\nimport { OneRoster } from \"@superbuilders/oneroster\";\n\nconst oneRoster = new OneRoster({\n  retryConfig: {\n    strategy: \"backoff\",\n    backoff: {\n      initialInterval: 1,\n      maxInterval: 50,\n      exponent: 1.1,\n      maxElapsedTime: 100,\n    },\n    retryConnectionErrors: false,\n  },\n  security: {\n    clientID: process.env[\"ONEROSTER_CLIENT_ID\"] ?? \"\",\n    clientSecret: process.env[\"ONEROSTER_CLIENT_SECRET\"] ?? \"\",\n  },\n});\n\nasync function run() {\n  const result = await oneRoster.scoreScalesManagement.getAllScoreScales({\n    fields: \"sourcedId,name\",\n    filter: \"status='active'\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();\n\n```\n<!-- End Retries [retries] -->\n\n<!-- Start Error Handling [errors] -->\n## Error Handling\n\nSome methods specify known errors which can be thrown. All the known errors are enumerated in the `models/errors/errors.ts` module. The known errors for a method are documented under the *Errors* tables in SDK docs. For example, the `getAllScoreScales` method may throw the following errors:\n\n| Error Type                               | Status Code | Content Type     |\n| ---------------------------------------- | ----------- | ---------------- |\n| errors.BadRequestResponseError1          | 400         | application/json |\n| errors.UnauthorizedRequestResponseError1 | 401         | application/json |\n| errors.ForbiddenResponseError1           | 403         | application/json |\n| errors.NotFoundResponseError1            | 404         | application/json |\n| errors.UnprocessableEntityResponseError1 | 422         | application/json |\n| errors.TooManyRequestsResponseError1     | 429         | application/json |\n| errors.InternalServerErrorResponse1      | 500         | application/json |\n| errors.APIError                          | 4XX, 5XX    | \\*/\\*            |\n\nIf the method throws an error and it is not captured by the known errors, it will default to throwing a `APIError`.\n\n```typescript\nimport { OneRoster } from \"@superbuilders/oneroster\";\nimport {\n  BadRequestResponseError1,\n  ForbiddenResponseError1,\n  InternalServerErrorResponse1,\n  NotFoundResponseError1,\n  SDKValidationError,\n  TooManyRequestsResponseError1,\n  UnauthorizedRequestResponseError1,\n  UnprocessableEntityResponseError1,\n} from \"@superbuilders/oneroster/models/errors\";\n\nconst oneRoster = new OneRoster({\n  security: {\n    clientID: process.env[\"ONEROSTER_CLIENT_ID\"] ?? \"\",\n    clientSecret: process.env[\"ONEROSTER_CLIENT_SECRET\"] ?? \"\",\n  },\n});\n\nasync function run() {\n  let result;\n  try {\n    result = await oneRoster.scoreScalesManagement.getAllScoreScales({\n      fields: \"sourcedId,name\",\n      filter: \"status='active'\",\n    });\n\n    for await (const page of result) {\n      // Handle the page\n      console.log(page);\n    }\n  } catch (err) {\n    switch (true) {\n      // The server response does not match the expected SDK schema\n      case (err instanceof SDKValidationError): {\n        // Pretty-print will provide a human-readable multi-line error message\n        console.error(err.pretty());\n        // Raw value may also be inspected\n        console.error(err.rawValue);\n        return;\n      }\n      case (err instanceof BadRequestResponseError1): {\n        // Handle err.data$: BadRequestResponseError1Data\n        console.error(err);\n        return;\n      }\n      case (err instanceof UnauthorizedRequestResponseError1): {\n        // Handle err.data$: UnauthorizedRequestResponseError1Data\n        console.error(err);\n        return;\n      }\n      case (err instanceof ForbiddenResponseError1): {\n        // Handle err.data$: ForbiddenResponseError1Data\n        console.error(err);\n        return;\n      }\n      case (err instanceof NotFoundResponseError1): {\n        // Handle err.data$: NotFoundResponseError1Data\n        console.error(err);\n        return;\n      }\n      case (err instanceof UnprocessableEntityResponseError1): {\n        // Handle err.data$: UnprocessableEntityResponseError1Data\n        console.error(err);\n        return;\n      }\n      case (err instanceof TooManyRequestsResponseError1): {\n        // Handle err.data$: TooManyRequestsResponseError1Data\n        console.error(err);\n        return;\n      }\n      case (err instanceof InternalServerErrorResponse1): {\n        // Handle err.data$: InternalServerErrorResponse1Data\n        console.error(err);\n        return;\n      }\n      default: {\n        // Other errors such as network errors, see HTTPClientErrors for more details\n        throw err;\n      }\n    }\n  }\n}\n\nrun();\n\n```\n\nValidation errors can also occur when either method arguments or data returned from the server do not match the expected format. The `SDKValidationError` that is thrown as a result will capture the raw value that failed validation in an attribute called `rawValue`. Additionally, a `pretty()` method is available on this error that can be used to log a nicely formatted multi-line string since validation errors can list many issues and the plain error string may be difficult read when debugging.\n\nIn some rare cases, the SDK can fail to get a response from the server or even make the request due to unexpected circumstances such as network conditions. These types of errors are captured in the `models/errors/httpclienterrors.ts` module:\n\n| HTTP Client Error                                    | Description                                          |\n| ---------------------------------------------------- | ---------------------------------------------------- |\n| RequestAbortedError                                  | HTTP request was aborted by the client               |\n| RequestTimeoutError                                  | HTTP request timed out due to an AbortSignal signal  |\n| ConnectionError                                      | HTTP client was unable to make a request to a server |\n| InvalidRequestError                                  | Any input used to create a request is invalid        |\n| UnexpectedClientError                                | Unrecognised or unexpected error                     |\n<!-- End Error Handling [errors] -->\n\n<!-- Start Server Selection [server] -->\n## Server Selection\n\n### Override Server URL Per-Client\n\nThe default server can be overridden globally by passing a URL to the `serverURL: string` optional parameter when initializing the SDK client instance. For example:\n```typescript\nimport { OneRoster } from \"@superbuilders/oneroster\";\n\nconst oneRoster = new OneRoster({\n  serverURL: \"https://api.staging.alpha-1edtech.com\",\n  security: {\n    clientID: process.env[\"ONEROSTER_CLIENT_ID\"] ?? \"\",\n    clientSecret: process.env[\"ONEROSTER_CLIENT_SECRET\"] ?? \"\",\n  },\n});\n\nasync function run() {\n  const result = await oneRoster.scoreScalesManagement.getAllScoreScales({\n    fields: \"sourcedId,name\",\n    filter: \"status='active'\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();\n\n```\n<!-- End Server Selection [server] -->\n\n<!-- Start Custom HTTP Client [http-client] -->\n## Custom HTTP Client\n\nThe TypeScript SDK makes API calls using an `HTTPClient` that wraps the native\n[Fetch API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API). This\nclient is a thin wrapper around `fetch` and provides the ability to attach hooks\naround the request lifecycle that can be used to modify the request or handle\nerrors and response.\n\nThe `HTTPClient` constructor takes an optional `fetcher` argument that can be\nused to integrate a third-party HTTP client or when writing tests to mock out\nthe HTTP client and feed in fixtures.\n\nThe following example shows how to use the `\"beforeRequest\"` hook to to add a\ncustom header and a timeout to requests and how to use the `\"requestError\"` hook\nto log errors:\n\n```typescript\nimport { OneRoster } from \"@superbuilders/oneroster\";\nimport { HTTPClient } from \"@superbuilders/oneroster/lib/http\";\n\nconst httpClient = new HTTPClient({\n  // fetcher takes a function that has the same signature as native `fetch`.\n  fetcher: (request) => {\n    return fetch(request);\n  }\n});\n\nhttpClient.addHook(\"beforeRequest\", (request) => {\n  const nextRequest = new Request(request, {\n    signal: request.signal || AbortSignal.timeout(5000)\n  });\n\n  nextRequest.headers.set(\"x-custom-header\", \"custom value\");\n\n  return nextRequest;\n});\n\nhttpClient.addHook(\"requestError\", (error, request) => {\n  console.group(\"Request Error\");\n  console.log(\"Reason:\", `${error}`);\n  console.log(\"Endpoint:\", `${request.method} ${request.url}`);\n  console.groupEnd();\n});\n\nconst sdk = new OneRoster({ httpClient });\n```\n<!-- End Custom HTTP Client [http-client] -->\n\n<!-- Start Debugging [debug] -->\n## Debugging\n\nYou can setup your SDK to emit debug logs for SDK requests and responses.\n\nYou can pass a logger that matches `console`'s interface as an SDK option.\n\n> [!WARNING]\n> Beware that debug logging will reveal secrets, like API tokens in headers, in log messages printed to a console or files. It's recommended to use this feature only during local development and not in production.\n\n```typescript\nimport { OneRoster } from \"@superbuilders/oneroster\";\n\nconst sdk = new OneRoster({ debugLogger: console });\n```\n\nYou can also enable a default debug logger by setting an environment variable `ONEROSTER_DEBUG` to true.\n<!-- End Debugging [debug] -->\n\n<!-- Placeholder for Future Speakeasy SDK Sections -->\n\n# Development\n\n## Maturity\n\nThis SDK is in beta, and there may be breaking changes between versions without a major version update. Therefore, we recommend pinning usage\nto a specific package version. This way, you can install the same version each time without breaking changes unless you are intentionally\nlooking for the latest version.\n\n## Contributions\n\nWhile we value open-source contributions to this SDK, this library is generated programmatically. Any manual changes added to internal files will be overwritten on the next generation.\nWe look forward to hearing your feedback. Feel free to open a PR or an issue with a proof of concept and we'll do our best to include it in a future release.\n\n### SDK Created by [Speakeasy](https://www.speakeasy.com/?utm_source=oneroster&utm_campaign=typescript)\n"
}