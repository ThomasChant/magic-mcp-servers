{
  "mcp_name": "0kenx/filesystem-mcp",
  "mcp_description": "A Python-based MCP server for secure and efficient filesystem operations, featuring advanced file manipulation, directory management, and search capabilities.",
  "mcp_id": "0kenx_filesystem-mcp",
  "fetch_timestamp": "2025-06-23T00:05:23.058280Z",
  "github_url": "https://github.com/0kenx/filesystem-mcp",
  "repository": {
    "name": "filesystem-mcp",
    "full_name": "0kenx/filesystem-mcp",
    "description": null,
    "html_url": "https://github.com/0kenx/filesystem-mcp",
    "created_at": "2025-03-27T21:25:49Z",
    "updated_at": "2025-03-28T14:44:37Z",
    "pushed_at": "2025-03-28T14:44:33Z",
    "size": 28,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "Python",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "0kenx",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/123998984?v=4",
      "html_url": "https://github.com/0kenx"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "Python": 63434,
      "Dockerfile": 1942
    },
    "language_percentages": {
      "Python": 97.03,
      "Dockerfile": 2.97
    },
    "pull_requests_count": 0,
    "contributors_count": 1
  },
  "readme": "A Python server implementing Model Context Protocol (MCP) for secure filesystem operations.\n\nBuild the Docker image locally:\n\nAdd this to your `claude_desktop_config.json`:\n\n\n\nNote: All directories are mounted to `/projects` by default. Adding the `,ro` flag will make the directory read-only.\n\n### read_file\n- Read complete contents of a file\n- Input: `path` (string)\n\n### read_multiple_files\n- Read multiple files simultaneously\n- Input: `paths` (string[])\n- Failed reads won't stop the entire operation\n\n### read_file_by_line\n- Read specific lines or line ranges from a file\n- Inputs:\n  - `path` (string)\n  - `ranges` (string[]): Line numbers or ranges (e.g., [\"5\", \"10-20\"])\n\n### read_file_by_keyword\n- Find lines containing a keyword with optional context\n- Inputs:\n  - `path` (string)\n  - `keyword` (string): Text to search for\n  - `before` (int): Lines to include before match (default: 0)\n  - `after` (int): Lines to include after match (default: 0)\n  - `use_regex` (bool): Use regex pattern (default: false)\n  - `ignore_case` (bool): Case-insensitive search (default: false)\n- Returns matching lines with \">\" prefix and line numbers\n\n### read_function_by_keyword\n- Extract function definitions by keyword\n- Inputs:\n  - `path` (string)\n  - `keyword` (string): Typically function name\n  - `before` (int): Lines to include before match (default: 0)\n  - `use_regex` (bool): Use regex pattern (default: false)\n\n### write_file\n- Create or overwrite a file\n- Inputs:\n  - `path` (string)\n  - `content` (string)\n\n### edit_file_diff\n- Make surgical edits to a file without specifying line numbers\n- Inputs:\n  - `path` (string)\n  - `replacements` (object): Dictionary with keys as content to find and values as replacement content\n  - `inserts` (object): Dictionary for inserting content after specified anchor text\n  - `replace_all` (boolean): Replace all occurrences or just first match (default: true)\n  - `dry_run` (boolean): Preview changes without applying (default: false)\n- Returns a summary of changes made\n\n### edit_file_diff_line\n- Edit a file with precise line number specifications\n- Inputs:\n  - `path` (string)\n  - `edits` (object): Dictionary of edits with keys as line specifiers and values as content\n    - \"N\": Replace line N with provided content\n    - \"N-M\": Replace lines N through M with provided content\n    - \"Ni\": Insert content after line N (use \"0i\" for beginning)\n    - \"a\": Append content to end of file\n  - `dry_run` (boolean): Preview changes without applying (default: false)\n- Returns a summary of applied changes\n\n### create_directory\n- Create directory or ensure it exists\n- Input: `path` (string)\n- Creates parent directories if needed\n\n### list_directory\n- List directory contents with [FILE] or [DIR] prefixes\n- Input: `path` (string)\n\n### directory_tree\n- Get a recursive tree view of files and directories with metadata\n- Inputs:\n  - `path` (string)\n  - `count_lines` (boolean): Include line counts (default: false)\n  - `show_permissions` (boolean): Show file permissions (default: false)\n  - `show_owner` (boolean): Show file ownership information (default: false)\n  - `show_size` (boolean): Show file sizes (default: false)\n\n### git_directory_tree\n- Get a directory tree for a git repository respecting .gitignore\n- Inputs:\n  - `path` (string)\n  - `count_lines` (boolean): Include line counts (default: false)\n  - `show_permissions` (boolean): Show file permissions (default: false)\n  - `show_owner` (boolean): Show file ownership information (default: false)\n  - `show_size` (boolean): Show file sizes (default: false)\n\n### move_file\n- Move or rename files and directories\n- Inputs:\n  - `source` (string)\n  - `destination` (string)\n\n### search_files\n- Recursively search for files/directories matching a pattern\n- Inputs:\n  - `path` (string): Starting directory\n  - `pattern` (string): Search pattern (case-insensitive)\n  - `excludePatterns` (string[]): Glob patterns to exclude\n- Returns full paths to all matching files and directories\n\n### get_file_info\n- Get detailed file metadata\n- Input: `path` (string)\n- Returns size, creation time, modified time, permissions, etc.\n\n### list_allowed_directories\n- List all directories the server is allowed to access"
}