{
  "mcp_name": "orellazri/coda-mcp",
  "mcp_description": "Facilitates interaction with Coda documents by enabling actions like listing, creating, and modifying pages through an MCP server interface.",
  "mcp_id": "orellazri_coda-mcp",
  "fetch_timestamp": "2025-06-23T07:22:43.290051Z",
  "github_url": "https://github.com/orellazri/coda-mcp",
  "repository": {
    "name": "coda-mcp",
    "full_name": "orellazri/coda-mcp",
    "description": "MCP Server for Coda",
    "html_url": "https://github.com/orellazri/coda-mcp",
    "created_at": "2025-04-24T11:45:24Z",
    "updated_at": "2025-06-17T10:59:15Z",
    "pushed_at": "2025-06-17T10:59:13Z",
    "size": 242,
    "stargazers_count": 11,
    "watchers_count": 11,
    "forks_count": 8,
    "open_issues_count": 0,
    "language": "TypeScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "orellazri",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/32670283?v=4",
      "html_url": "https://github.com/orellazri"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 8,
    "subscribers_count": 2,
    "languages": {
      "TypeScript": 470900,
      "JavaScript": 1349,
      "Shell": 734,
      "Dockerfile": 315
    },
    "language_percentages": {
      "TypeScript": 99.49,
      "JavaScript": 0.29,
      "Shell": 0.16,
      "Dockerfile": 0.07
    },
    "pull_requests_count": 4,
    "contributors_count": 3,
    "latest_release": {
      "tag_name": "v1.4.2",
      "name": "v1.4.2",
      "published_at": "2025-06-17T11:01:16Z",
      "body": "",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v1.4.2",
        "commit_sha": "223d6ff09f9c03b7fa844666d9afdc8bf07c762d"
      },
      {
        "name": "v1.4.1",
        "commit_sha": "5bf2849d67d94654d3790ab57cc4082caffd626b"
      },
      {
        "name": "v1.4.0",
        "commit_sha": "87dc65925721b218f2965ac3c9a97a4bcd71045a"
      },
      {
        "name": "v1.3.1",
        "commit_sha": "7a161d80ec8159bc047058c81dd97ff1483995dc"
      },
      {
        "name": "v1.3.0",
        "commit_sha": "10ceb9e56152a20e1c4e78dcc43b67f110831dbe"
      },
      {
        "name": "v1.2.3",
        "commit_sha": "8d48ed2846bea3b757f557cbb30bbad35b4daeb2"
      },
      {
        "name": "v1.2.2",
        "commit_sha": "05e1eb8054405bb21b5994b8dbabd9042d721fbd"
      },
      {
        "name": "v1.2.1",
        "commit_sha": "93b03c95b18ad3ce53b3359566539f24d1fb0ca6"
      },
      {
        "name": "v1.2.0",
        "commit_sha": "a1710fa9dc99afee9ccdfb70727ffc7d67b78405"
      },
      {
        "name": "v1.1.3",
        "commit_sha": "ae551f2d2600f2f8437acd161238da78a5268e77"
      }
    ],
    "latest_version": "v1.4.2",
    "package_json_version": "1.4.2"
  },
  "readme": "# Coda MCP Server\n\nThis project implements a Model Context Protocol (MCP) server that acts as a bridge to interact with the [Coda](https://coda.io/) API. It allows an MCP client (like an AI assistant) to perform actions on Coda pages, such as listing, creating, reading, updating, duplicating, and renaming.\n\n## Features\n\nThe server exposes the following tools to the MCP client:\n\n- **`coda_list_documents`**: Lists all documents available to the user.\n- **`coda_list_pages`**: Lists all pages within the configured Coda document with pagination support.\n- **`coda_create_page`**: Creates a new page in the document, optionally under a specified parent page (creating a subpage) and populating it with initial markdown content.\n- **`coda_get_page_content`**: Retrieves the content of a specified page (by ID or name) as markdown.\n- **`coda_replace_page_content`**: Replaces the content of a specified page with new markdown content.\n- **`coda_append_page_content`**: Appends new markdown content to the end of a specified page.\n- **`coda_duplicate_page`**: Creates a copy of an existing page with a new name.\n- **`coda_rename_page`**: Renames an existing page.\n- **`coda_peek_page`**: Peek into the beginning of a page and return a limited number of lines.\n\n## Usage\n\nAdd the MCP server to Cursor/Claude Desktop/etc. like so:\n\n```json\n{\n  \"mcpServers\": {\n    \"coda\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"coda-mcp@latest\"],\n      \"env\": {\n        \"API_KEY\": \"...\"\n      }\n    }\n  }\n}\n```\n\nRequired environment variables:\n\n- `API_KEY`: Your Coda API key. You can generate one from your Coda account settings.\n\nThis MCP server is also available with Docker, like so:\n\n```json\n{\n  \"mcpServers\": {\n    \"coda\": {\n      \"command\": \"docker\",\n      \"args\": [\"run\", \"-i\", \"--rm\", \"-e\", \"API_KEY\", \"reaperberri/coda-mcp:latest\"],\n      \"env\": {\n        \"API_KEY\": \"...\"\n      }\n    }\n  }\n}\n```\n\n## Local Setup\n\n1.  **Prerequisites:**\n\n    - Node.js\n    - pnpm\n\n2.  **Clone the repository:**\n\n    ```bash\n    git clone <repository-url>\n    cd coda-mcp\n    ```\n\n3.  **Install dependencies:**\n\n    ```bash\n    pnpm install\n    ```\n\n4.  **Build the project:**\n    ```bash\n    pnpm build\n    ```\n    This compiles the TypeScript code to JavaScript in the `dist/` directory.\n\n## Running the Server\n\nThe MCP server communicates over standard input/output (stdio). To run it, set the environment variables and run the compiled JavaScript file - `dist/index.js`.\n"
}