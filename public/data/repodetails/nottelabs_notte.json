{
  "mcp_name": "Notte",
  "mcp_description": "Leverage Notte Web AI agents & cloud browser sessions for scalable browser automation & scraping workflows",
  "mcp_id": "nottelabs_notte",
  "fetch_timestamp": "2025-06-23T07:10:31.857722Z",
  "github_url": "https://github.com/nottelabs/notte/tree/main/packages/notte-mcp",
  "repository": {
    "name": "notte",
    "full_name": "nottelabs/notte",
    "description": "🔥 Reliable browser using agents",
    "html_url": "https://github.com/nottelabs/notte",
    "created_at": "2024-12-08T02:06:30Z",
    "updated_at": "2025-06-23T04:30:44Z",
    "pushed_at": "2025-06-23T06:25:23Z",
    "size": 47027,
    "stargazers_count": 995,
    "watchers_count": 995,
    "forks_count": 93,
    "open_issues_count": 24,
    "language": "Python",
    "license": "Other",
    "topics": [
      "agent",
      "ai",
      "anthropic",
      "automation",
      "browser",
      "llm",
      "openai",
      "web"
    ],
    "default_branch": "main",
    "owner": {
      "login": "nottelabs",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/183074172?v=4",
      "html_url": "https://github.com/nottelabs"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 93,
    "subscribers_count": 9,
    "languages": {
      "Python": 966164,
      "JavaScript": 16329,
      "Shell": 2642,
      "Makefile": 2562
    },
    "language_percentages": {
      "Python": 97.82,
      "JavaScript": 1.65,
      "Shell": 0.27,
      "Makefile": 0.26
    },
    "pull_requests_count": 277,
    "contributors_count": 9,
    "latest_release": {
      "tag_name": "v1.5.5",
      "name": "v1.5.5",
      "published_at": "2025-06-19T08:38:11Z",
      "body": "<!-- Release notes generated using configuration in .github/release.yml at main -->\r\n\r\n## What's Changed\r\n### What's Changed\r\n* fix start agent bug by @giordano-lucas in https://github.com/nottelabs/notte/pull/374\r\n\r\n\r\n**Full Changelog**: https://github.com/nottelabs/notte/compare/v1.5.4...v1.5.5",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v1.5.5",
        "commit_sha": "69f8dd8604506794b54dfeb4519ab9d07059222c"
      },
      {
        "name": "v1.5.4",
        "commit_sha": "cde9147c066187abbe688e6b8508242dfb67a907"
      },
      {
        "name": "v1.5.3",
        "commit_sha": "a300cb447eef481ca116f074b38bd69b957e1c90"
      },
      {
        "name": "v1.5.2",
        "commit_sha": "7c29e5fdf6b9ec5914e8de5ebc47ae73e4f67064"
      },
      {
        "name": "v1.5.1",
        "commit_sha": "478ecc912d2ea5e37ea21af4b92b3fb3a2eb2263"
      },
      {
        "name": "v1.5.0",
        "commit_sha": "230fd1493da822ad79481bd5119a8f7fc5d003f5"
      },
      {
        "name": "v1.4.4",
        "commit_sha": "062bec42586720bc265b89a42468bef6b470965e"
      },
      {
        "name": "v1.4.3",
        "commit_sha": "81e049100348a44d670cfeaa49a037d5031beb68"
      },
      {
        "name": "v1.4.2",
        "commit_sha": "c65bbffab293e3acd623811c347e91141338569c"
      },
      {
        "name": "v1.4.1",
        "commit_sha": "c65bbffab293e3acd623811c347e91141338569c"
      }
    ],
    "latest_version": "v1.5.5"
  },
  "readme": "# Rapidly build reliable and fast web agents\n\n<div align=\"center\">\n  <p>\n    We outperform all other web agents in <strong>speed</strong>, <strong>costs</strong>, and <strong>reliability</strong> <br/>\n    → 🔥 <a href=\"https://github.com/nottelabs/open-operator-evals\" target=\"_blank\" rel=\"noopener noreferrer\">Read more on open-operator-evals</a> • <a href=\"https://x.com/nottecore?ref=github\" target=\"_blank\" rel=\"noopener noreferrer\">X</a> • <a href=\"https://www.linkedin.com/company/nottelabsinc/?ref=github\" target=\"_blank\" rel=\"noopener noreferrer\">LinkedIn</a> • <a href=\"https://notte.cc?ref=github\" target=\"_blank\" rel=\"noopener noreferrer\">Landing</a> • <a href=\"https://console.notte.cc/?ref=github\" target=\"_blank\" rel=\"noopener noreferrer\">Console</a>\n  </p>\n</div>\n\n<p align=\"center\">\n  <img src=\"docs/logo/bgd.png\" alt=\"Notte Logo\" width=\"100%\">\n</p>\n\n[![GitHub stars](https://img.shields.io/github/stars/nottelabs/notte?style=social)](https://github.com/nottelabs/notte/stargazers)\n[![License: SSPL-1.0](https://img.shields.io/badge/License-SSPL%201.0-blue.svg)](https://spdx.org/licenses/SSPL-1.0.html)\n[![Python 3.11+](https://img.shields.io/badge/python-3.11+-blue.svg)](https://www.python.org/downloads/)\n[![PyPI version](https://img.shields.io/pypi/v/notte?color=blue)](https://pypi.org/project/notte/)\n[![PyPI Downloads](https://static.pepy.tech/badge/notte?color=blue)](https://pepy.tech/projects/notte)\n[![commits main](https://img.shields.io/github/commit-activity/m/nottelabs/notte?color=blue)](https://github.com/nottelabs/notte/commits/main)\n![CodeRabbit Pull Request Reviews](https://img.shields.io/coderabbit/prs/github/nottelabs/notte)\n[![Open Replit Template](https://replit.com/badge/github/@steel-dev/steel-playwright-starter)](https://replit.com/@andreakiro/notte-python-agent-starter)\n<a href=\"https://www.producthunt.com/products/notte\" target=\"_blank\"><img src=\"https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=671911&theme=light&t=1748531689502\" alt=\"Notte - Product Hunt\" style=\"width: 150px; height: 32px;\" width=\"150\" height=\"32\" /></a>\n\n---\n\n## What is Notte?\n\nNotte provides the full-stack web AI agents framework that allows you to develop, deploy, and scale your own agents, all with a single API. Transform the internet into an agent-friendly environment and websites into structured, navigable maps described in natural language. Read more on our documentation [here](https://docs.notte.cc) 🔥\n\n### Key Features\n\n- **[Browser Sessions](https://docs.notte.cc/side/fullstack/sessions)** → on-demand headless browser instances, built in & custom proxy config, CDP, cookie integration, session replay\n- **[Run automated LLM-powered agents](https://docs.notte.cc/side/fullstack/agents)** → solve complex tasks on the web\n- **[Page interactions](https://docs.notte.cc/side/fullstack/page_interactions)** → observe website states and execute actions using intuitive natural language commands — granular control while maintaining the simplicity of natural language interaction\n- **[Secrets Vault](https://docs.notte.cc/side/fullstack/vault)** → enterprise-grade credential management for your Sessions & Agents\n\n### 🚀 Zero Friction Agentic Browsing\n\n```\nnotte.Agent().run(task=\"go to twitter and post: new era this is @nottecore taking over my acc\")\n```\n\n<p align=\"center\">\n  <img src=\"docs/gifs/v1.gif\" alt=\"Demo\" width=\"100%\" href=\"https://video.twimg.com/ext_tw_video/1892967963344461824/pu/vid/avc1/1282x720/15sCfmmUUcAtBZaR.mp4\">\n</p>\n\nFast, reliable, agentic browsing (speed x2):\n\n- secure password vault\n- bypass bot detection\n\n---\n\n## Benchmarks\n\n| Rank | Provider                                                    | Agent Self-Report | LLM Evaluation | Time per Task | Task Reliability |\n| ---- | ----------------------------------------------------------- | ----------------- | -------------- | ------------- | ---------------- |\n| 🏆   | [Notte](https://github.com/nottelabs/notte)                 | **86.2%**         | **79.0%**      | **47s**       | **96.6%**        |\n| 2️⃣   | [Browser-Use](https://github.com/browser-use/browser-use)   | 77.3%             | 60.2%          | 113s          | 83.3%            |\n| 3️⃣   | [Convergence](https://github.com/convergence-ai/proxy-lite) | 38.4%             | 31.4%          | 83s           | 50%              |\n\nRead the full story here: [https://github.com/nottelabs/open-operator-evals](https://github.com/nottelabs/open-operator-evals)\n\n---\n\n## ⚡️ Quickstart me\n\nWe provide an easy to use API with our hosted version.\n\nTo run the above you'll need to sign up on the [notte console](https://console.notte.cc) and create a free notte API key 🔑\n\n```bash\nuv venv --python 3.11\nsource .venv/bin/activate\nuv pip install notte-sdk\n```\n\n...and spin up your crazy cool and dead simple agent on our remote machine:\n\n```python\nimport os\nfrom notte_sdk import NotteClient\n\nnotte = NotteClient(api_key=os.getenv(\"NOTTE_API_KEY\"))\nagi = notte.Agent(headless=False,reasoning_model=\"gemini/gemini-2.0-flash\", max_steps=5)\nagi.run(task=\"doom scroll cat memes on google images\")\n```\n\nThis is by far the closest attempt to AGI we've ever witnessed ;)\n\n\n> To run locally, refer to guide [here](#how-to-run-notte-locally).\n\n---\n\n## 🔥 Build Powerful Web Agents\n\nNotte is composed of 3 main components that can be combined to build your own agentic system: `notte.Session`, `notte.Vault` and `notte.Agent`.\n\nYou can use the `notte.Session` to create a browser session with different stealth configurations (i.e browser types, proxies, captcha, etc), the `notte.Vault` to store your credentials and the `notte.Agent` to run your agent.\n\nHere is an example of how to use these components together along with structured output:\n\n```python\nfrom notte_sdk import NotteClient\nfrom pydantic import BaseModel\n\nclass TwitterPost(BaseModel):\n    url: str\n\nnotte = NotteClient()\nwith notte.Vault() as vault, notte.Session(headless=False, proxies=False, browser_type=\"chrome\") as session:\n    vault.add_credentials(\n        url=\"https://x.com\",\n        username=\"your-email\",\n        password=\"your-password\",\n    )\n    agent = notte.Agent(session=session, vault=vault, max_steps=10)\n    response = agent.run(\n      task=\"go to twitter and post: new era this is @nottecore taking over my acc. Return the post url.\",\n      response_format=TwitterPost,\n    )\nprint(response.answer)\n```\n\n\n---\n\n## ✨ Highlights\n\nOur main tech highlight is that we introduce a perception layer that turns the internet into an agent-friendly environment, by turning websites into structured maps described in natural language, ready to be digested by an LLM with less effort.\n\n```python\nfrom notte_sdk import NotteClient\n\nnotte = NotteClient()\nwith notte.Session(headless=False) as page:\n    obs = page.observe(url=\"https://www.google.com/travel/flights\")\n    print(obs.space.markdown)\n```\n\n```\n# Flight Search\n* I1: Enters departure location (departureLocation: str = \"San Francisco\")\n* I3: Selects departure date (departureDate: date)\n* I6: Selects trip type (tripType: str = \"round-trip\", allowed=[\"round-trip\", \"one-way\", \"multi-city\"])\n* B3: Search flights options with current filters\n\n# Website Navigation\n* B5: Opens Google apps menu\n* L28: Navigates to Google homepage\n\n# User Preferences\n* B26: Open menu to change language settings\n...\n```\n\nThe above gives you the gist of how we push to better parse webpages and reduce the cognitive load of LLM reasoners. The aim is to enable you to build and deploy more accurate web browsing agents, while downgrading to smaller models, which in turn increase inference speed and reduce production costs.\n\n### ☄️ Speed contest vs. Browser-Use\n\nThe perception layer enables smaller models (e.g. the llama suite) to be connected for the agent's reasoning, because all the DOM noise is abstracted and the LLM can focus on a set of actions described in plain language. This allows the agent to be served on ultra-high inference such as Cerebras without losing precision:\n\n```python\nfrom notte_sdk import NotteClient\n\nnotte = NotteClient()\nagent = notte.Agent(headless=False,reasoning_model=\"gemini/gemini-2.0-flash\", max_steps=5)\nagent.run(task=\"search cheapest flight from paris to nyc on gflight\")\n```\n\n> left:browser-use, right:notte-agent (cerebras)\n\n<p align=\"center\">\n  <img src=\"docs/gifs/v2.gif\" alt=\"Demo\" width=\"100%\" href=\"https://video.twimg.com/amplify_video/1882896602324418560/vid/avc1/1278x720/Conf_R7LL8htoooT.mp4?tag=16\">\n</p>\n\n## 🌐 The Full Stack Framework\n\nNotte's full stack agentic internet framework combines core browser infrastructure (sessions, live replay, cdp) with intelligent browsing agents, bridged and enhanced with our perception layer. Our entire codebase is made to be highly customizable, ready to integrate other devtools from the ecosystem and packaged to be push to prod. We also provide web scripting capabilities and sota scraping endpoints out of the box, because why not.\n\n<table>\n  <tr>\n    <th><strong>service</strong></th>\n    <th><code>agent.run()</code></th>\n    <th><code>agent.cloud()</code></th>\n    <th><code>page.scrape()</code></th>\n    <th><code>page.step()</code></th>\n    <th><code>page.perceive()</code></th>\n  </tr>\n  <tr>\n    <td><strong>browser-use</strong></td>\n    <td align=\"center\">🌕</td>\n    <td align=\"center\">🌕</td>\n    <td></td>\n    <td></td>\n    <td></td>\n  </tr>\n  <tr>\n    <td><strong>stagehand</strong></td>\n    <td></td>\n    <td></td>\n    <td align=\"center\">🌕</td>\n    <td align=\"center\">🌕</td>\n    <td></td>\n  </tr>\n  <tr>\n    <td><strong>notte</strong></td>\n    <td align=\"center\">🌕</td>\n    <td align=\"center\">🌕</td>\n    <td align=\"center\">🌕</td>\n    <td align=\"center\">🌕</td>\n    <td align=\"center\">🌕</td>\n  </tr>\n</table>\n\nPS: The title of services are figurative eg. `agent.cloud()` refers to hosting an agent in cloud for you.\n\n### Unstable and upcoming features\n\n⏭️ We have either already partially shipped or are working on the following features: captcha resolution, residential proxies, web security, vpn-style browsing, authentication and payments with secure safe, improved speed and memory, human-in-the-loop integration, channeled notifications, and cookies management.\n\n\n## Notte Console\n\nYou use our [console]((https://console.notte.cc) to manage your agents and sessions, create API keys and monitor your usage.\n\nMost of our open-source features are also available on the cloud-hosted version with a large free-tier!\n\nExample for webpage scraping & structured schema llm extraction\n\n```python\nfrom notte_sdk import NotteClient\n\nnotte = NotteClient()\ndata = notte.scrape(url=\"https://pump.fun\", instructions=\"get top 5 latest trendy coins on pf, return ticker, name, mcap\")\n```\n\n<p align=\"center\">\n  <img src=\"docs/gifs/v3.gif\" alt=\"Demo\" width=\"100%\" href=\"https://video.twimg.com/ext_tw_video/1891808695886991360/pu/vid/avc1/1014x720/uc56Q0q3RGK2h8YM.mp4?tag=12\">\n</p>\n\n\n## How to run notte locally ?\n\nYou will need to provide your own LLM provider API key, and install the dependencies:\n\n```bash\nuv venv --python 3.11\nsource .venv/bin/activate\nuv pip install notte\nuv run patchright install --with-deps chromium\nexport GEMINI_API_KEY=\"your-api-key\"\n```\n\n...and spin up your crazy cool and dead simple agent on your local machine:\n\n```python\nimport notte\n\nagi = notte.Agent(headless=False,reasoning_model=\"gemini/gemini-2.0-flash\", max_steps=5)\nagi.run(task=\"doom scroll cat memes on google images\")\n```\n\n\n## Contribute\n\nSetup your local working environment;\n\n```bash\nuv sync --all-extras --dev\nuv run patchright install --with-deps chromium\nuv run pre-commit install\n```\n\nFind an issue, fork, open a PR, and merge :)\n\n## License\n\nThis project is licensed under the Server Side Public License v1.\nSee the [LICENSE](LICENSE) file for details.\n\n## Citation\n\nIf you use notte in your research or project, please cite:\n\n```bibtex\n@software{notte2025,\n  author = {Pinto, Andrea and Giordano, Lucas and {nottelabs-team}},\n  title = {Notte: Software suite for internet-native agentic systems},\n  url = {https://github.com/nottelabs/notte},\n  year = {2025},\n  publisher = {GitHub},\n  license = {SSPL-1.0}\n  version = {1.4.4},\n}\n```\n\nBuilt with luv from Earth 🌏\n\n---\n\nCopyright © 2025 Notte Labs, Inc.\n"
}