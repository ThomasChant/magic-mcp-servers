{
  "mcp_name": "ryoureddy/medadapt-content-server",
  "mcp_description": "Enhances AI-assisted medical learning by integrating Claude Desktop with medical knowledge sources for comprehensive content retrieval and analysis.",
  "mcp_id": "ryoureddy_medadapt-content-server",
  "fetch_timestamp": "2025-06-23T08:06:27.757445Z",
  "github_url": "https://github.com/ryoureddy/medadapt-content-server",
  "repository": {
    "name": "medadapt-content-server",
    "full_name": "ryoureddy/medadapt-content-server",
    "description": "A specialized MCP server for Claude Desktop that enhances AI-assisted medical learning",
    "html_url": "https://github.com/ryoureddy/medadapt-content-server",
    "created_at": "2025-03-22T06:25:19Z",
    "updated_at": "2025-05-27T11:25:22Z",
    "pushed_at": "2025-03-28T06:24:18Z",
    "size": 20833,
    "stargazers_count": 4,
    "watchers_count": 4,
    "forks_count": 1,
    "open_issues_count": 1,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "ryoureddy",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/49420105?v=4",
      "html_url": "https://github.com/ryoureddy"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 1,
    "subscribers_count": 1,
    "languages": {
      "Python": 134285,
      "Dockerfile": 531
    },
    "language_percentages": {
      "Python": 99.61,
      "Dockerfile": 0.39
    },
    "pull_requests_count": 0,
    "contributors_count": 2
  },
  "readme": "# MedAdapt Content Server\n\nA specialized Model Context Protocol (MCP) server for Claude Desktop that enhances AI-assisted medical learning by fetching and processing educational resources from PubMed, NCBI Bookshelf, and user-provided documents.\n\n## Overview\n\nThe MedAdapt Content Server integrates with Claude Desktop to provide tools for searching, retrieving, and analyzing medical education content. It serves as a bridge between Claude and medical knowledge sources, allowing for enhanced AI-assisted learning experiences.\n\n## Quick Start\n\n```bash\n# Clone the repository\ngit clone https://github.com/ryoureddy/medadapt-content-server.git\ncd medadapt-content-server\n\n# Install dependencies\npip install -r requirements.txt\n\n# Run the server\npython content_server.py\n```\n\n## Features\n\n- **Content Search**: Search for medical educational content across multiple sources\n- **Resource Retrieval**: Fetch complete articles, book chapters, and user documents\n- **Topic Overviews**: Generate comprehensive overviews of medical topics\n- **Learning Resources**: Suggest appropriate learning resources based on topic and student level\n- **Learning Plans**: Create structured learning plans with objectives and resources\n- **Content Analysis**: Extract key points, methodologies, and findings from medical resources\n- **User Content**: Import and analyze user-provided documents\n\n## Installation\n\n### Standard Installation\n\n1. Clone the repository:\n```bash\ngit clone https://github.com/ryoureddy/medadapt-content-server.git\ncd medadapt-content-server\n```\n\n2. Create a virtual environment (optional but recommended):\n```bash\npython -m venv .venv\nsource .venv/bin/activate  # On Windows, use: .venv\\Scripts\\activate\n```\n\n3. Install dependencies:\n```bash\npip install -r requirements.txt\n```\n\n4. Configure (optional):\n   - Get an NCBI API key for improved rate limits: https://ncbiinsights.ncbi.nlm.nih.gov/2017/11/02/new-api-keys-for-the-e-utilities/\n   - Create a `.env` file based on `.env.example`\n\n## Usage\n\n### Running the Server\n\n```bash\npython content_server.py\n```\n\n### Integration with Claude Desktop\n\n1. Open Claude Desktop\n2. Go to Settings → Model Context Protocol → Add Server\n3. Configure with the following JSON in your `claude_desktop_config.json` file located in:\n   - macOS: `~/Library/Application Support/Claude/claude_desktop_config.json`\n   - Windows: `%APPDATA%\\Claude\\claude_desktop_config.json`\n\n```json\n{\n  \"mcpServers\": {\n    \"medadapt\": {\n      \"command\": \"/path/to/python\",\n      \"args\": [\n        \"/path/to/medadapt-content-server/content_server.py\"\n      ],\n      \"env\": {\n        \"DB_PATH\": \"/path/to/medadapt-content-server/medadapt_content.db\"\n      }\n    }\n  }\n}\n```\n\nReplace `/path/to/python` with your actual Python path (e.g., `/opt/anaconda3/bin/python` or `C:\\Python311\\python.exe`).\nReplace `/path/to/medadapt-content-server/` with the absolute path to your cloned repository.\n\n> **Important**: The `DB_PATH` environment variable ensures the database file is created and accessed with an absolute path, preventing common file access errors.\n\n### Populating Initial Topic Mappings\n\n```bash\npython populate_topics.py\n```\n\n### Testing\n\nRun tests to verify everything is working:\n```bash\npython test_server.py\n```\n\n## Example Usage with Claude\n\n### Scenario 1: Learning About a Medical Topic\n\nUser prompt to Claude:\n```\nI'd like to learn about the cardiac cycle. Can you provide a big picture overview and help me understand the key concepts?\n```\n\n### Scenario 2: Finding Specific Resources\n\nUser prompt to Claude:\n```\nI need to find recent research articles about COVID-19 treatment options. Can you help me find relevant resources?\n```\n\n### Scenario 3: Creating a Learning Plan\n\nUser prompt to Claude:\n```\nI'm a second-year medical student studying neurology. Can you create a learning plan for understanding stroke pathophysiology?\n```\n\n## Available Tools\n\nThe server provides the following tools to Claude:\n\n- `search_medical_content`: Search for medical content with filters\n- `get_resource_content`: Retrieve complete content for a specific resource\n- `get_topic_overview`: Generate comprehensive overview of a medical topic\n- `suggest_learning_resources`: Get personalized resource recommendations\n- `import_user_document`: Upload user-provided learning materials\n- `generate_learning_plan`: Create structured learning plan with objectives\n- `extract_article_key_points`: Extract key findings from medical articles\n\n## Troubleshooting\n\n### Common Issues and Solutions\n\n1. **Database Connection Error**\n   - **Symptom**: `sqlite3.OperationalError: unable to open database file`\n   - **Solution**: Make sure the `DB_PATH` environment variable is set correctly in your Claude Desktop configuration, pointing to an absolute path where the application has write permissions.\n\n2. **File Path Error**\n   - **Symptom**: `No such file or directory` errors\n   - **Solution**: Ensure all paths in the Claude Desktop configuration are absolute paths without extra quotes or escape characters.\n\n3. **API Rate Limiting**\n   - **Symptom**: Slow or failed responses from PubMed or NCBI Bookshelf\n   - **Solution**: Get an NCBI API key and add it to your `.env` file\n\n4. **Claude Desktop Connection**\n   - **Symptom**: Claude cannot connect to the MCP server\n   - **Solution**: Verify the server is running in a terminal window and properly configured in Claude Desktop\n\n## Project Structure\n\n```\nmedadapt-content-server/\n│\n├── content_server.py     # Main MCP server implementation\n├── database.py          # SQLite database interface\n├── pubmed_utils.py      # PubMed API utilities\n├── bookshelf_utils.py   # NCBI Bookshelf utilities\n├── populate_topics.py   # Script to populate initial topic data\n├── test_server.py       # Test script\n├── requirements.txt     # Python dependencies\n├── .env.example         # Example environment variables\n└── README.md            # Documentation\n```\n\n## License\n\nThis project is licensed under the MIT License - see the LICENSE file for details.\n\n## Acknowledgments\n\n- NCBI for providing access to PubMed and Bookshelf APIs\n- Anthropic for Claude and the MCP integration capability "
}