{
  "mcp_name": "Aryan1718/mcp-sever-google-sheets",
  "mcp_description": "Facilitates seamless interaction with Google Sheets for data manipulation through an MCP server.",
  "mcp_id": "Aryan1718_mcp-sever-google-sheets",
  "fetch_timestamp": "2025-06-23T01:18:54.180524Z",
  "github_url": "https://github.com/Aryan1718/mcp-sever-google-sheets",
  "repository": {
    "name": "mcp-sever-google-sheets",
    "full_name": "Aryan1718/mcp-sever-google-sheets",
    "description": null,
    "html_url": "https://github.com/Aryan1718/mcp-sever-google-sheets",
    "created_at": "2025-04-23T04:01:40Z",
    "updated_at": "2025-04-24T02:24:19Z",
    "pushed_at": "2025-04-24T02:24:11Z",
    "size": 40,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "Python",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "Aryan1718",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/57013028?v=4",
      "html_url": "https://github.com/Aryan1718"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "Python": 19421
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 1
  },
  "readme": "# Google Sheets MCP Server\n\nThis MCP server provides tools to interact with Google Sheets, allowing you to read, write, and update data in your spreadsheets.\n\n## Prerequisites\n\n- Python 3.8 or higher\n- Google Cloud Platform account\n- A Google Sheet that you want to interact with\n\n## Installation\n\n1. Clone this repository:\n```bash\ngit clone <your-repository-url>\ncd mcp-server-demo\n```\n\n2. Install the required packages:\n```bash\npip install google-auth-oauthlib google-auth-httplib2 google-api-python-client\n```\n\n3. Download and place credentials.json:\n   - Download the `credentials.json` file from your Google Cloud Console\n   - Place the `credentials.json` file in the same directory as `main.py`\n   - Make sure the file is named exactly `credentials.json`\n\n## Setting up Google Cloud Platform Credentials\n\n1. Go to the [Google Cloud Console](https://console.cloud.google.com/)\n2. Create a new project or select an existing one\n3. Enable the Google Sheets API:\n   - Go to \"APIs & Services\" > \"Library\"\n   - Search for \"Google Sheets API\"\n   - Click \"Enable\"\n\n4. Create credentials:\n   - Go to \"APIs & Services\" > \"Credentials\"\n   - Click \"Create Credentials\" > \"Service Account\"\n   - Fill in the service account details:\n     - Name: Choose a descriptive name\n     - ID: Will be auto-generated\n     - Description: Optional description\n   - Click \"Create and Continue\"\n   - For Role, select \"Editor\" (or appropriate role for your needs)\n   - Click \"Continue\" and then \"Done\"\n\n5. Create and download the key:\n   - In the service account list, click on your newly created account\n   - Go to the \"Keys\" tab\n   - Click \"Add Key\" > \"Create new key\"\n   - Choose \"JSON\" format\n   - Click \"Create\"\n   - The JSON file will be downloaded automatically\n\n6. Save the credentials:\n   - Rename the downloaded JSON file to `credentials.json`\n   - Place it in the `mcp-server-demo` directory\n\n7. Share your Google Sheet:\n   - Open your Google Sheet\n   - Click the \"Share\" button\n   - Add the service account email (found in the `client_email` field of your `credentials.json`)\n   - Give it \"Editor\" access\n\n## Running the Server\n\n1. Install the MCP server:\n```bash\nuv run mcp install main.py\n```\n\n2. The server will start and be ready to accept commands.\n\n## Adding to Cursor\n\nTo add this MCP server to Cursor, follow these steps:\n\n1. Open Cursor\n2. Go to Cursor -> Preferences -> Cursor Settings -> MCP -> Add new global MCP Server\n3. Add the following configuration to your Cursor config file:\n\n```json\n{\n  \"mcpServers\": {\n    \"GoogleSheets\": {\n      \"command\": \"python\",\n      \"args\": [\n        \"main.py\"\n      ]\n    }\n  }\n}\n```\n\n4. Restart Cursor for the changes to take effect\n\n\n## Screenshots\n![image](https://github.com/user-attachments/assets/233c32f1-c981-45fe-8f37-3c8e2654e6a2)\n\n![image](https://github.com/user-attachments/assets/d6be305b-d633-4c6c-a300-d5d1032f373f)\n\n![image](https://github.com/user-attachments/assets/9bd9eea1-221b-4ab6-a285-4bceb65e4ea7)\n\n![image](https://github.com/user-attachments/assets/b1e8a66d-b4d4-4226-87a2-37938fc9478e)\n\n![image](https://github.com/user-attachments/assets/d698345e-0268-4d23-b74a-47bd5c1f4f34)\n\n## Available Tools\n\n### List Spreadsheets\n```bash\n/tool list_spreadsheets\n```\nLists all spreadsheets shared with the service account.\n\n### Get Spreadsheet Info\n```bash\n/tool get_spreadsheet_info \"spreadsheet_id\"\n```\nGets information about a specific spreadsheet.\n\n### Get Sheet Content\n```bash\n/tool get_sheet_content \"spreadsheet_id\"\n```\nRetrieves the content of a specific sheet.\n\n### Generate Sheet Data\n```bash\n/tool generate_sheet_data \"spreadsheet_id\"  number_of_records\n```\nGenerates realistic data based on the sheet's attributes.\n\n### Add Data to Sheet\n```bash\n/tool add_data_to_sheet \"spreadsheet_id\"  \"data_string\"\n```\nAdds pre-generated data to a sheet.\n\n### Update Sheet Record\n```bash\n/tool update_sheet_record \"spreadsheet_id\"  \"identifier\" \"updates\"\n```\nUpdates a record in the sheet based on id or name matching.\n\n## Data Formats\n\n### For Adding Data\nThe data string can be in one of these formats:\n1. List of lists format: `[[\"value1\", \"value2\"], [\"value3\", \"value4\"]]`\n2. CSV format:\n```\nvalue1,value2\nvalue3,value4\n```\n\n### For Updates\nProvide the changes in format: `column1=value1 column2=value2`\nExample: `age=25 email=xyz@example.com phone=1234567890`\n\n## Security Notes\n\n1. Never commit `credentials.json` to version control\n2. Keep your credentials secure\n3. Only share your Google Sheet with necessary service accounts\n4. Regularly rotate your credentials\n\n## Troubleshooting\n\n### Common Issues\n\n1. **Authentication Errors**\n   - Ensure the service account email has been added as an editor to the spreadsheet\n   - Verify that the `credentials.json` file is valid and not corrupted\n   - Check if the Google Sheets API is enabled in your Google Cloud project\n\n2. **Permission Errors**\n   - Make sure the service account has the correct permissions\n   - Verify the spreadsheet is shared with the service account email\n   - Check if the spreadsheet ID is correct\n\n3. **Data Format Errors**\n   - Ensure the data format matches the expected structure\n   - Check if the sheet has the required columns (id or name)\n   - Verify the number of columns in the data matches the sheet\n\n## Support\n\nIf you encounter any issues or have questions, please:\n1. Check the error messages in the logs\n2. Verify your setup following the instructions above\n3. Ensure all prerequisites are met\n4. Contact aryanpandit17032002@gmail.com\n\n\n"
}