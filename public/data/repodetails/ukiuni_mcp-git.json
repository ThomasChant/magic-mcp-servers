{
  "mcp_name": "ukiuni/mcp-git",
  "mcp_description": "Facilitates the execution of Git commands via an MCP server, enabling seamless integration with various MCP clients.",
  "mcp_id": "ukiuni_mcp-git",
  "fetch_timestamp": "2025-06-23T09:10:17.339799Z",
  "github_url": "https://github.com/ukiuni/mcp-git",
  "repository": {
    "name": "mcp-git",
    "full_name": "ukiuni/mcp-git",
    "description": "mcp server for git command wrapper",
    "html_url": "https://github.com/ukiuni/mcp-git",
    "created_at": "2025-04-22T09:54:29Z",
    "updated_at": "2025-04-22T10:18:43Z",
    "pushed_at": "2025-04-22T10:18:39Z",
    "size": 25,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "TypeScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "ukiuni",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/4121348?v=4",
      "html_url": "https://github.com/ukiuni"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 14118
    },
    "language_percentages": {
      "TypeScript": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "package_json_version": "0.9.0"
  },
  "readme": "# Git Command MCP Server\n\nThis is a Model Context Protocol (MCP) server that provides tools for executing various Git commands.\n\nIt requires that the git (git.exe) command is installed locally.\n\nSince a large part of this was created using generative AI, please contact http://github.com/ukiuni/mcp-git if you notice anything.\n\n## Setup\n\n### Clone from GitHub\n1.  **(If you haven't already) Clone the repository:**\n    ```bash\n    git clone http://github.com/ukiuni/mcp-git.git\n    cd mcp-git\n    ```\n2.  **Install dependencies:**\n    Make sure you have Node.js and npm installed. Then run:\n    ```bash\n    npm install\n    ```\n### Install with npm\n1. **Install with npm.**\n   ```bash\n   npm i mcp-git\n   ```\n   It will be installed in node_modules, so please set the path to the relevant location in the next section.\n\n## Connecting from an MCP Client\n\nWhen connecting from an MCP client (such as Roo Code, GitHub Copilot, Claude Desktop, Cursor, etc.), please use the following settings.\n\n```\n{\n  \"mcpServers\": {\n    \"mpc-git\": {\n      \"command\": \"node\",\n      \"args\": [\n        \"/path_to_mcp-git/mcp-git/dist/index.js\"\n      ]\n    }\n  }\n}\n```\n\nPlease set path_to_mcp to the absolute path to the directory where you cloned git.\n\n## Available Tools\nEach tool name follows the format `git-` prefix followed by the command name (e.g., `git-add`, `git-commit`, `git-status`).\n\n### Tool Output\nThe execution result of the tool is returned as text content, usually including:\n\n*   `STDOUT`: Standard output from the Git command.\n*   `STDERR`: Standard error output from the Git command (Note: In Git, stderr does not necessarily indicate an error).\n*   `ERROR`: Execution errors that occurred within the server itself.\n\nIf the command succeeds without output, a message indicating success will be provided.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\n\n## Trademarks\nTrademarks mentioned in this project are trademarks of their respective companies."
}