{
  "mcp_name": "Exa",
  "mcp_description": "üéñÔ∏è üìá ‚òÅÔ∏è ‚Äì A Model Context Protocol (MCP) server lets AI assistants like Claude use the Exa AI Search API for web searches. This setup allows AI models to get real-time web information in a safe and controlled way.",
  "mcp_id": "exa-labs_exa-mcp-server",
  "fetch_timestamp": "2025-06-23T02:56:13.191620Z",
  "github_url": "https://github.com/exa-labs/exa-mcp-server",
  "repository": {
    "name": "exa-mcp-server",
    "full_name": "exa-labs/exa-mcp-server",
    "description": "Exa is Web Search API | This is Exa MCP (Model Context Protocol)",
    "html_url": "https://github.com/exa-labs/exa-mcp-server",
    "created_at": "2024-11-27T23:38:35Z",
    "updated_at": "2025-06-22T23:35:45Z",
    "pushed_at": "2025-06-10T20:33:00Z",
    "size": 4743,
    "stargazers_count": 1734,
    "watchers_count": 1734,
    "forks_count": 152,
    "open_issues_count": 17,
    "language": "TypeScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "exa-labs",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/77906174?v=4",
      "html_url": "https://github.com/exa-labs"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 152,
    "subscribers_count": 14,
    "languages": {
      "TypeScript": 33392,
      "JavaScript": 5342,
      "Dockerfile": 962
    },
    "language_percentages": {
      "TypeScript": 84.12,
      "JavaScript": 13.46,
      "Dockerfile": 2.42
    },
    "pull_requests_count": 22,
    "contributors_count": 7,
    "package_json_version": "2.0.0"
  },
  "readme": "# Exa MCP Server üîç\n[![npm version](https://badge.fury.io/js/exa-mcp-server.svg)](https://www.npmjs.com/package/exa-mcp-server)\n[![smithery badge](https://smithery.ai/badge/exa)](https://smithery.ai/server/exa)\n\nA Model Context Protocol (MCP) server lets AI assistants like Claude use the Exa AI Search API for web searches. This setup allows AI models to get real-time web information in a safe and controlled way.\n\n## Remote Exa MCP üåê\n\nConnect directly to Exa's hosted MCP server (instead of running it locally).\n\n### Remote Exa MCP URL\n\n```\nhttps://mcp.exa.ai/mcp?exaApiKey=your-exa-api-key\n```\n\nReplace `your-api-key-here` with your actual Exa API key from [dashboard.exa.ai/api-keys](https://dashboard.exa.ai/api-keys).\n\n### Claude Desktop Configuration for Remote MCP\n\nAdd this to your Claude Desktop configuration file:\n\n```json\n{\n  \"mcpServers\": {\n    \"exa\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"mcp-remote\",\n        \"https://mcp.exa.ai/mcp?exaApiKey=your-exa-api-key\"\n      ]\n    }\n  }\n}\n```\n\n### NPM Installation\n\n```bash\nnpm install -g exa-mcp-server\n```\n\n### Using Smithery\n\nTo install the Exa MCP server for Claude Desktop automatically via [Smithery](https://smithery.ai/server/exa):\n\n```bash\nnpx -y @smithery/cli install exa --client claude\n```\n\n## Configuration ‚öôÔ∏è\n\n### 1. Configure Claude Desktop to recognize the Exa MCP server\n\nYou can find claude_desktop_config.json inside the settings of Claude Desktop app:\n\nOpen the Claude Desktop app and enable Developer Mode from the top-left menu bar. \n\nOnce enabled, open Settings (also from the top-left menu bar) and navigate to the Developer Option, where you'll find the Edit Config button. Clicking it will open the claude_desktop_config.json file, allowing you to make the necessary edits. \n\nOR (if you want to open claude_desktop_config.json from terminal)\n\n#### For macOS:\n\n1. Open your Claude Desktop configuration:\n\n```bash\ncode ~/Library/Application\\ Support/Claude/claude_desktop_config.json\n```\n\n#### For Windows:\n\n1. Open your Claude Desktop configuration:\n\n```powershell\ncode %APPDATA%\\Claude\\claude_desktop_config.json\n```\n\n### 2. Add the Exa server configuration:\n\n```json\n{\n  \"mcpServers\": {\n    \"exa\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"exa-mcp-server\"],\n      \"env\": {\n        \"EXA_API_KEY\": \"your-api-key-here\"\n      }\n    }\n  }\n}\n```\n\nReplace `your-api-key-here` with your actual Exa API key from [dashboard.exa.ai/api-keys](https://dashboard.exa.ai/api-keys).\n\n### 3. Available Tools & Tool Selection\n\nThe Exa MCP server includes the following tools, which can be enabled by adding the `--tools`:\n\n- **web_search_exa**: Performs real-time web searches with optimized results and content extraction.\n- **research_paper_search**: Specialized search focused on academic papers and research content.\n- **company_research**: Comprehensive company research tool that crawls company websites to gather detailed information about businesses.\n- **crawling**: Extracts content from specific URLs, useful for reading articles, PDFs, or any web page when you have the exact URL.\n- **competitor_finder**: Identifies competitors of a company by searching for businesses offering similar products or services.\n- **linkedin_search**: Search LinkedIn for companies and people using Exa AI. Simply include company names, person names, or specific LinkedIn URLs in your query.\n- **wikipedia_search_exa**: Search and retrieve information from Wikipedia articles on specific topics, giving you accurate, structured knowledge from the world's largest encyclopedia.\n- **github_search**: Search GitHub repositories using Exa AI - performs real-time searches on GitHub.com to find relevant repositories, issues, and GitHub accounts.\n\nYou can choose which tools to enable by adding the `--tools` parameter to your Claude Desktop configuration:\n\n#### Specify which tools to enable:\n\n```json\n{\n  \"mcpServers\": {\n    \"exa\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"exa-mcp-server\",\n        \"--tools=web_search_exa,research_paper_search,company_research,crawling,competitor_finder,linkedin_search,wikipedia_search_exa,github_search\"\n      ],\n      \"env\": {\n        \"EXA_API_KEY\": \"your-api-key-here\"\n      }\n    }\n  }\n}\n```\n\nFor enabling multiple tools, use a comma-separated list:\n\n```json\n{\n  \"mcpServers\": {\n    \"exa\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"exa-mcp-server\",\n        \"--tools=web_search_exa,research_paper_search,company_research,crawling,competitor_finder,linkedin_search,wikipedia_search_exa,github_search\"\n      ],\n      \"env\": {\n        \"EXA_API_KEY\": \"your-api-key-here\"\n      }\n    }\n  }\n}\n```\n\nIf you don't specify any tools, all tools enabled by default will be used.\n\n### 4. Restart Claude Desktop\n\nFor the changes to take effect:\n\n1. Completely quit Claude Desktop (not just close the window)\n2. Start Claude Desktop again\n3. Look for the icon to verify the Exa server is connected\n\n## Using via NPX\n\nIf you prefer to run the server directly, you can use npx:\n\n```bash\n# Run with all tools enabled by default\nnpx exa-mcp-server\n\n# Enable specific tools only\nnpx exa-mcp-server --tools=web_search_exa\n\n# Enable multiple tools\nnpx exa-mcp-server --tools=web_search_exa,research_paper_search\n\n# List all available tools\nnpx exa-mcp-server --list-tools\n```\n\n## Troubleshooting üîß\n\n### Common Issues\n\n1. **Server Not Found**\n   * Verify the npm link is correctly set up\n   * Check Claude Desktop configuration syntax (json file)\n\n2. **API Key Issues**\n   * Confirm your EXA_API_KEY is valid\n   * Check the EXA_API_KEY is correctly set in the Claude Desktop config\n   * Verify no spaces or quotes around the API key\n\n3. **Connection Issues**\n   * Restart Claude Desktop completely\n   * Check Claude Desktop logs:\n\n<br>\n\n---\n\nBuilt with ‚ù§Ô∏è by team Exa"
}