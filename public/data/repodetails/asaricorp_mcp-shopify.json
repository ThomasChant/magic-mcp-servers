{
  "mcp_name": "sarayd/mcp-shopify",
  "mcp_description": "Facilitates seamless interaction with Shopify store data via GraphQL API, offering comprehensive tools for managing products, customers, orders, and collections.",
  "mcp_id": "asaricorp_mcp-shopify",
  "fetch_timestamp": "2025-06-23T08:10:42.631140Z",
  "github_url": "https://github.com/sarayd/mcp-shopify",
  "repository": {
    "name": "mcp-shopify",
    "full_name": "asaricorp/mcp-shopify",
    "description": null,
    "html_url": "https://github.com/asaricorp/mcp-shopify",
    "created_at": "2025-04-14T20:42:00Z",
    "updated_at": "2025-06-19T10:36:23Z",
    "pushed_at": "2025-05-07T09:30:29Z",
    "size": 13456,
    "stargazers_count": 6,
    "watchers_count": 6,
    "forks_count": 1,
    "open_issues_count": 2,
    "language": "TypeScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "asaricorp",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/201889974?v=4",
      "html_url": "https://github.com/asaricorp"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 1,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 102189,
      "JavaScript": 22637,
      "Dockerfile": 270
    },
    "language_percentages": {
      "TypeScript": 81.69,
      "JavaScript": 18.1,
      "Dockerfile": 0.22
    },
    "pull_requests_count": 2,
    "contributors_count": 1,
    "package_json_version": "1.0.5"
  },
  "readme": "# Shopify MCP Server\n\n\nMCP Server for Shopify API, enabling interaction with store data through GraphQL API. This server provides tools for managing products, customers, orders, and more.\n\n## Features\n\n- **Product Management**: Search and retrieve product information\n- **Customer Management**: Load customer data and manage customer tags\n- **Order Management**: Advanced order querying and filtering\n- **Collection Management**: Create and manage collections\n\n## Setup\n\n### Shopify Access Token\n\nTo use this MCP server, you'll need to create a custom app in your Shopify store:\n\n1. From your Shopify admin, go to **Settings** > **Apps and sales channels**\n2. Click **Develop apps** (you may need to enable developer preview first)\n3. Click **Create an app**\n4. Set a name for your app (e.g., \"Shopify MCP Server\")\n5. Click **Configure Admin API scopes**\n6. Select the following scopes:\n   - `read_products`, `write_products`\n   - `read_customers`, `write_customers`\n   - `read_orders`, `write_orders`\n   - `read_collections`, `write_collections`\n7. Click **Save**\n8. Click **Install app**\n9. Click **Install** to give the app access to your store data\n10. After installation, you'll see your **Admin API access token**\n11. Copy this token - you'll need it for configuration\n\n### Usage with Claude Desktop\n\nAdd this to your `claude_desktop_config.json`:\n\n```json\n{\n  \"mcpServers\": {\n    \"shopify\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"shopify-mcp\",\n        \"--accessToken\",\n        \"<YOUR_ACCESS_TOKEN>\",\n        \"--domain\",\n        \"<YOUR_SHOP>.myshopify.com\"\n      ]\n    }\n  }\n}\n```\n\nLocations for the Claude Desktop config file:\n\n- MacOS: `~/Library/Application Support/Claude/claude_desktop_config.json`\n- Windows: `%APPDATA%/Claude/claude_desktop_config.json`\n\n### Alternative: Run Locally with Environment Variables\n\nIf you prefer to use environment variables instead of command-line arguments:\n\n1. Create a `.env` file with your Shopify credentials:\n\n   ```\n   SHOPIFY_ACCESS_TOKEN=your_access_token\n   MYSHOPIFY_DOMAIN=your-store.myshopify.com\n   ```\n\n2. Run the server with npx:\n   ```\n   npx shopify-mcp\n   ```\n\n### Direct Installation (Optional)\n\nIf you want to install the package globally:\n\n```\nnpm install -g shopify-mcp\n```\n\nThen run it:\n\n```\nshopify-mcp --accessToken=<YOUR_ACCESS_TOKEN> --domain=<YOUR_SHOP>.myshopify.com\n```\n\n## Available Tools\n\n### Product Management\n\n1. `get-products`\n\n   - Get all products or search by title\n   - Inputs:\n     - `searchTitle` (optional string): Filter products by title\n     - `limit` (number): Maximum number of products to return\n\n2. `get-product-by-id`\n   - Get a specific product by ID\n   - Inputs:\n     - `productId` (string): ID of the product to retrieve\n\n### Customer Management\n\n1. `get-customers`\n\n   - Get customers or search by name/email\n   - Inputs:\n     - `searchQuery` (optional string): Filter customers by name or email\n     - `limit` (optional number, default: 10): Maximum number of customers to return\n\n2. `update-customer`\n\n   - Update a customer's information\n   - Inputs:\n     - `id` (string, required): Shopify customer ID (numeric ID only, like \"6276879810626\")\n     - `firstName` (string, optional): Customer's first name\n     - `lastName` (string, optional): Customer's last name\n     - `email` (string, optional): Customer's email address\n     - `phone` (string, optional): Customer's phone number\n     - `tags` (array of strings, optional): Tags to apply to the customer\n     - `note` (string, optional): Note about the customer\n     - `taxExempt` (boolean, optional): Whether the customer is exempt from taxes\n     - `metafields` (array of objects, optional): Customer metafields for storing additional data\n\n3. `get-customer-orders`\n\n   - Get orders for a specific customer\n   - Inputs:\n     - `customerId` (string, required): Shopify customer ID (numeric ID only, like \"6276879810626\")\n     - `limit` (optional number, default: 10): Maximum number of orders to return\n\n4. `create-customer`\n   - Create a new customer in Shopify\n   - Inputs:\n     - `email` (string, required): Customer's email address\n     - `firstName` (string, optional): Customer's first name\n     - `lastName` (string, optional): Customer's last name\n     - `phone` (string, optional): Customer's phone number\n     - `tags` (array of strings, optional): Tags to apply to the customer\n     - `note` (string, optional): Note about the customer\n     - `taxExempt` (boolean, optional): Whether the customer is exempt from taxes\n     - `password` (string, optional): Password for the customer account\n     - `passwordConfirmation` (string, optional): Confirmation of the password\n     - `addresses` (array of objects, optional): Customer's addresses\n     - `metafields` (array of objects, optional): Customer metafields for storing additional data\n\n### Order Management\n\n1. `get-orders`\n\n   - Get orders with optional filtering\n   - Inputs:\n     - `status` (optional string): Filter by order status\n     - `limit` (optional number, default: 10): Maximum number of orders to return\n\n2. `get-order-by-id`\n\n   - Get a specific order by ID\n   - Inputs:\n     - `orderId` (string, required): Full Shopify order ID (e.g., \"gid://shopify/Order/6090960994370\")\n\n3. `update-order`\n\n   - Update an existing order with new information\n   - Inputs:\n     - `id` (string, required): Shopify order ID\n     - `tags` (array of strings, optional): New tags for the order\n     - `email` (string, optional): Update customer email\n     - `note` (string, optional): Order notes\n     - `customAttributes` (array of objects, optional): Custom attributes for the order\n     - `metafields` (array of objects, optional): Order metafields\n     - `shippingAddress` (object, optional): Shipping address information\n\n4. `create-order`\n\n   - Create a new draft order in Shopify\n   - Inputs:\n     - `lineItems` (array of objects, required): Products to include in the order\n       - `variantId` (string, required): ID of the product variant\n       - `quantity` (number, required): Quantity of the product\n       - `customAttributes` (array of objects, optional): Custom attributes for the line item\n     - `email` (string, optional): Customer email\n     - `phone` (string, optional): Customer phone number\n     - `note` (string, optional): Order notes\n     - `tags` (array of strings, optional): Tags for the order\n     - `customAttributes` (array of objects, optional): Custom attributes for the order\n     - `metafields` (array of objects, optional): Order metafields\n     - `billingAddress` (object, optional): Billing address information\n     - `shippingAddress` (object, optional): Shipping address information\n     - `customerId` (string, optional): ID of an existing customer\n     - `shippingLine` (object, optional): Shipping method and price\n     - `taxExempt` (boolean, optional): Whether the order is exempt from taxes\n     - `presentmentCurrencyCode` (string, optional): Currency code for the order\n\n5. `create-fulfillment`\n   - Create a new fulfillment for an order in Shopify\n   - Inputs:\n     - `orderId` (string, required): ID of the order to fulfill\n     - `notifyCustomer` (boolean, default: true): Whether to notify the customer about the fulfillment\n     - `trackingInfo` (object, optional): Tracking information\n       - `number` (string, optional): Tracking number\n       - `url` (string, optional): Tracking URL\n       - `company` (string, optional): Shipping company\n     - `lineItems` (array of objects, optional): Specific line items to fulfill\n       - `id` (string, required): ID of the line item\n       - `quantity` (number, required): Quantity to fulfill\n     - `locationId` (string, optional): ID of the location fulfilling the order\n     - `trackingNumbers` (array of strings, optional): Multiple tracking numbers\n     - `trackingUrls` (array of strings, optional): Multiple tracking URLs\n     - `metadata` (object, optional): Additional metadata for the fulfillment\n\n### Collection Management\n\n1. `create-collection`\n   - Create a new manual or automated collection in Shopify\n   - Inputs:\n     - `title` (string, required): Collection title\n     - `description` (string, optional): Collection description\n     - `descriptionHtml` (string, optional): HTML version of the description\n     - `handle` (string, optional): URL handle for the collection\n     - `isPublished` (boolean, optional): Whether the collection is published\n     - `seo` (object, optional): SEO settings\n       - `title` (string, optional): SEO title\n       - `description` (string, optional): SEO description\n     - `image` (object, optional): Collection image\n       - `src` (string, required): Image URL\n       - `altText` (string, optional): Alt text for the image\n     - `productsToAdd` (array of strings, optional): Product IDs to add to the collection\n     - `sortOrder` (string, optional): How products are sorted in the collection\n       - Options: \"MANUAL\", \"BEST_SELLING\", \"ALPHA_ASC\", \"ALPHA_DESC\", \"PRICE_DESC\", \"PRICE_ASC\", \"CREATED\", \"CREATED_DESC\", \"ID_DESC\", \"RELEVANCE\"\n     - `templateSuffix` (string, optional): Template suffix for custom templates\n     - `privateMetafields` (array of objects, optional): Private metafields for the collection\n       - `owner` (string, required): Metafield owner\n       - `namespace` (string, required): Metafield namespace\n       - `key` (string, required): Metafield key\n       - `value` (string, required): Metafield value\n       - `valueType` (string, required): Type of the value (e.g., \"STRING\", \"INTEGER\", etc.)\n     - `ruleSet` (object, optional): Rules for automated collections\n       - `rules` (array of objects, required): Collection rules\n         - `column` (string, required): Rule column (e.g., \"TAG\", \"TITLE\", etc.)\n         - `relation` (string, required): Rule relation (e.g., \"EQUALS\", \"CONTAINS\", etc.)\n         - `condition` (string, required): Rule condition value\n       - `appliedDisjunctively` (boolean, optional, default: true): Whether rules are combined with OR (true) or AND (false)\n     - `metafields` (array of objects, optional): Public metafields for the collection\n       - `namespace` (string, required): Metafield namespace\n       - `key` (string, required): Metafield key\n       - `value` (string, required): Metafield value\n       - `type` (string, required): Metafield type\n     - `publications` (array of objects, optional): Publication settings\n       - `publicationId` (string, required): ID of the publication\n       - `publishDate` (string, optional): Date to publish the collection\n\n## License\n\nMIT\n"
}