{
  "mcp_name": "xiangmy21/iotdb-mcp-server-TreeModel",
  "mcp_description": "Facilitates database interaction and business intelligence through IoTDB with SQL query execution capabilities.",
  "mcp_id": "xiangmy21_iotdb-mcp-server-TreeModel",
  "fetch_timestamp": "2025-06-23T09:31:44.800006Z",
  "github_url": "https://github.com/xiangmy21/iotdb-mcp-server-TreeModel",
  "repository": {
    "name": "iotdb-mcp-server-TreeModel",
    "full_name": "xiangmy21/iotdb-mcp-server-TreeModel",
    "description": "iotdb-mcp-server for tree model",
    "html_url": "https://github.com/xiangmy21/iotdb-mcp-server-TreeModel",
    "created_at": "2025-04-14T03:37:51Z",
    "updated_at": "2025-04-14T04:09:32Z",
    "pushed_at": "2025-04-14T04:09:29Z",
    "size": 15,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "Python",
    "license": "Apache License 2.0",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "xiangmy21",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/90919434?v=4",
      "html_url": "https://github.com/xiangmy21"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "Python": 10854,
      "Dockerfile": 454
    },
    "language_percentages": {
      "Python": 95.99,
      "Dockerfile": 4.01
    },
    "pull_requests_count": 0,
    "contributors_count": 4
  },
  "readme": "# IoTDB MCP Server for Tree Model\n\n[![smithery badge](https://smithery.ai/badge/@apache/iotdb-mcp-server)](https://smithery.ai/server/@apache/iotdb-mcp-server)\n\n## Overview\nA Model Context Protocol (MCP) server implementation that provides database interaction and business intelligence capabilities through IoTDB. This server enables running SQL queries.\n\n## Components\n\n### Resources\nThe server doesn't expose any resources.\n\n### Prompts\nThe server doesn't provide any prompts.\n\n### Tools\nThe server offers three core tools:\n\n#### Query Tools\n- `metadata_query`\n   - Execute SHOW/COUNT queries to read metadata from the database\n   - Input:\n    - `query_sql` (string): The SHOW/COUNT SQL query to execute \n   - Returns: Query results as array of objects\n- `select_query`\n   - Execute SELECT queries to read data from the database\n   - Input:\n     - `query_sql` (string): The SELECT SQL query to execute\n   - Returns: Query results as array of objects\n\n\n\n## Claude Desktop Integration\n\n## Prerequisites\n- Python with `uv` package manager\n- IoTDB installation\n- MCP server dependencies\n\n## Development\n\n```\n# Clone the repository\ngit clone https://github.com/apache/iotdb-mcp-server.git\ncd iotdb_mcp_server\n\n# Create virtual environment\nuv venv\nsource venv/bin/activate  # or `venv\\Scripts\\activate` on Windows\n\n# Install development dependencies\nuv sync\n```\n\n\n\nConfigure the MCP server in Claude Desktop's configuration file:\n\n#### MacOS\n\nLocation: `~/Library/Application Support/Claude/claude_desktop_config.json`\n\n#### Windows\n\nLocation: `%APPDATA%/Claude/claude_desktop_config.json`\n\n**You may need to put the full path to the uv executable in the command field. You can get this by running `which uv` on MacOS/Linux or `where uv` on Windows.**\n\n```json\n{\n  \"mcpServers\": {\n    \"iotdb\": {\n      \"command\": \"uv\",\n      \"args\": [\n        \"--directory\",\n        \"YOUR_REPO_PATH/src/iotdb_mcp_server\",\n        \"run\",\n        \"server.py\"\n      ],\n      \"env\": {\n        \"IOTDB_HOST\": \"127.0.0.1\",\n        \"IOTDB_PORT\": \"6667\",\n        \"IOTDB_USER\": \"root\",\n        \"IOTDB_PASSWORD\": \"root\",\n        \"IOTDB_DATABASE\": \"test\"\n      }\n    }\n  }\n}\n```\n"
}