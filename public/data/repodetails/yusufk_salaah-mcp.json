{
  "mcp_name": "Salaah MCP",
  "mcp_description": "FastAPI and MCP service providing Islamic prayer times and other useful calculations.",
  "mcp_id": "yusufk_salaah-mcp",
  "fetch_timestamp": "2025-06-23T08:08:05.031198Z",
  "github_url": "https://github.com/yusufk/salaah-mcp",
  "repository": {
    "name": "salaah-mcp",
    "full_name": "yusufk/salaah-mcp",
    "description": "A FastAPI and MCP service providing Islamic prayer times calculations ",
    "html_url": "https://github.com/yusufk/salaah-mcp",
    "created_at": "2025-06-01T07:29:36Z",
    "updated_at": "2025-06-04T16:42:15Z",
    "pushed_at": "2025-06-04T16:42:16Z",
    "size": 323,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "Python",
    "license": null,
    "topics": [
      "mcp-server",
      "prayer-times"
    ],
    "default_branch": "main",
    "owner": {
      "login": "yusufk",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/404139?v=4",
      "html_url": "https://github.com/yusufk"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 0,
    "languages": {
      "Python": 13764,
      "Dockerfile": 450
    },
    "language_percentages": {
      "Python": 96.83,
      "Dockerfile": 3.17
    },
    "pull_requests_count": 2,
    "contributors_count": 2
  },
  "readme": "# Salaah MCP (Muslim Community Prayer Times)\n\nA FastAPI and MCP service providing Islamic prayer times calculations using the [islamic_times](https://github.com/hassantahan/islamic_times) library.\n\n![Screenshot](screenshot.png)\n\n## Dependencies\n\nThis project relies on the following main dependencies:\n- [FastAPI](https://fastapi.tiangolo.com/): Web framework for building APIs\n- [FastAPI MCP](https://github.com/tadata-org/fastapi_mcp): Model Control Protocol\n- [islamic_times](https://github.com/hassantahan/islamic_times): Core calculation engine for prayer times\n- Pydantic: Data validation\n\n## Installation\n\n1. Clone the repository:\n```bash\ngit clone https://github.com/yourusername/salaah-mcp.git\ncd salaah-mcp\n```\n\n2. Install uvv and dependencies:\n```bash\npip install uv\nuv install\n```\n\n## Usage\n\n```bash\nuv run run.py\n```\n\nThe API will be available at:\n- Development: http://localhost:8000\n- Production: http://localhost:8000 (configurable via UVV_PORT environment variable)\n\n## API Endpoints\n\n### Calculate Prayer Times\n\n`POST /prayer_times`\n\nCalculate prayer times for a given location and date.\n\nExample request:\n```json\n{\n  \"latitude\": -26.1528113,\n  \"longitude\": 28.0049996,\n  \"method\": \"EGYPTIAN\"\n}\n```\n\nExample response:\n```json\n{\n  \"method\": \"Egyptian General Authority of Survey (Egypt)\",\n  \"fajr\": \"2025-06-01T05:19:11.373053+02:00\",\n  \"sunrise\": \"2025-06-01T06:47:44.369263+02:00\",\n  \"zuhr\": \"2025-06-01T12:05:43.358460+02:00\",\n  \"asr\": \"2025-06-01T15:23:52.560113+02:00\",\n  \"sunset\": \"2025-06-01T17:23:52.560113+02:00\",\n  \"maghrib\": \"2025-06-01T17:23:52.560113+02:00\",\n  \"isha\": \"2025-06-01T18:43:09.341111+02:00\",\n  \"midnight\": \"2025-06-02T00:06:02.228763+02:00\"\n}\n```\n\n### Get Qiblah Direction\n\n`POST /qiblah`\n\nGet Qiblah direction and distance from any location.\n\n```json\n{\n  \"latitude\": -26.1528113,\n  \"longitude\": 28.0049996,\n  \"date\": \"2025-06-01T00:00:00Z\"\n}\n```\n\nExample response:\n```json\n{\n  \"distance_km\": 5452,\n  \"distance_mi\": 3388,\n  \"direction\": \"NNE\",\n  \"angle_decimal\": 14.647,\n  \"angle_dms\": \"014° 38′ 49.84″\"\n}\n```\n\n### Get Sun Information\n\n`POST /sun`\n\nGet detailed sun position and timing information.\n\nExample response:\n```json\n{\n  \"sunrise\": \"2025-06-01T06:47:40\",\n  \"transit\": \"2025-06-01T12:05:33\",\n  \"sunset\": \"2025-06-01T17:23:36\",\n  \"apparent_altitude\": -42.659,\n  \"apparent_azimuth\": 276.796,\n  \"distance_au\": 1.014106,\n  \"apparent_declination\": 22.166,\n  \"apparent_right_ascension\": \"04h 39m 56.17s\",\n  \"greenwich_hour_angle\": 99.904,\n  \"local_hour_angle\": 127.951\n}\n```\n\n### Get Moon Information\n\n`POST /moon`\n\nGet detailed moon position and phase information.\n\nExample response:\n```json\n{\n  \"moonrise\": \"2025-06-01T11:39:22\",\n  \"transit\": \"2025-06-01T16:25:15\",\n  \"moonset\": \"2025-06-01T22:54:19\",\n  \"illumination\": 36.38,\n  \"apparent_altitude\": 25.803,\n  \"azimuth\": 305.203,\n  \"distance_km\": 388391,\n  \"parallax\": 0.941,\n  \"topocentric_declination\": 15.892,\n  \"topocentric_right_ascension\": \"09h 52m 04.77s\",\n  \"greenwich_hour_angle\": 21.198,\n  \"local_hour_angle\": 49.245\n}\n```\n\n### Calculate Moon Visibility\n\n`POST /moon/visibility`\n\nCalculate new moon visibility using Yallop's criterion.\n\n```json\n{\n  \"latitude\": -26.1528113,\n  \"longitude\": 28.0049996,\n  \"date\": \"2025-05-27T00:00:00Z\",\n  \"days\": 3,\n  \"criterion\": 1\n}\n```\n\nExample response:\n```json\n[\n  {\n    \"criterion\": \"Yallop\",\n    \"date\": \"2025-05-27T15:28:52\",\n    \"value\": -0.788,\n    \"description\": \"F: Not visible; below the Danjon limit.\"\n  },\n  {\n    \"criterion\": \"Yallop\",\n    \"date\": \"2025-05-28T15:56:44\",\n    \"value\": 0.958,\n    \"description\": \"A: Easily visible.\"\n  }\n]\n```\n\n## Available Calculation Methods\n\n- ISNA: Islamic Society of North America\n- MWL: Muslim World League\n- UMM_AL_QURA: Umm al-Qura University, Makkah\n- EGYPTIAN: Egyptian General Authority of Survey\n- KARACHI: University of Islamic Sciences, Karachi\n- TEHRAN: Institute of Geophysics, University of Tehran\n- JAFARI: Shia Ithna Ashari, Leva Research Institute, Qom\n\n## Claude Desktop Integration\n\nTo use the prayer times service with Claude Desktop:\n\n1. Create a configuration file:\n```json\n{\n  \"mcpServers\": {\n    \"Salaah Times\": {\n      \"command\": \"/Users/yusuf/.local/bin/mcp-proxy\",\n      \"env\": {\n        \"SSE_URL\": \"http://localhost:8000/mcp\"\n      }\n    }\n  }\n}\n```\n\n2. Save this as `claude_desktop_config.json` in your Claude Desktop configuration directory.\n\n3. Make sure the MCP service is running:\n```bash\nuv run run.py\n```\n\n4. Start Claude Desktop and you can now ask questions about prayer times like:\n- \"What time is Asr prayer today?\"\n- \"When is Fajr tomorrow in Johannesburg?\"\n- \"Show me all prayer times for London\"\n\nThe AI will use the MCP service to calculate accurate prayer times based on your queries.\n"
}