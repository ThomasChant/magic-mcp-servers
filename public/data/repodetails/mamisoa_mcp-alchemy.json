{
  "mcp_name": "mamisoa/mcp-alchemy",
  "mcp_description": "MCP Alchemy seamlessly integrates Claude Desktop with various databases, enabling advanced SQL query assistance and data analysis.",
  "mcp_id": "mamisoa_mcp-alchemy",
  "fetch_timestamp": "2025-06-23T06:23:39.018469Z",
  "github_url": "https://github.com/mamisoa/mcp-alchemy",
  "repository": {
    "name": "mcp-alchemy",
    "full_name": "mamisoa/mcp-alchemy",
    "description": null,
    "html_url": "https://github.com/mamisoa/mcp-alchemy",
    "created_at": "2025-04-16T19:21:17Z",
    "updated_at": "2025-04-16T19:25:13Z",
    "pushed_at": "2025-04-16T19:25:10Z",
    "size": 1490,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "Python",
    "license": "Mozilla Public License 2.0",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "mamisoa",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/8473545?v=4",
      "html_url": "https://github.com/mamisoa"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "Python": 8033
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 4
  },
  "readme": "# MCP Alchemy\n\n**Status: Works great and is in daily use without any known bugs.**\n\nLet Claude be your database expert! MCP Alchemy connects Claude Desktop directly to your databases, allowing it to:\n\n- Help you explore and understand your database structure\n- Assist in writing and validating SQL queries\n- Displays relationships between tables\n- Analyze large datasets and create reports\n- Claude Desktop Can analyse and create artifacts for very large datasets using [claude-local-files](https://github.com/runekaagaard/claude-local-files).\n\nWorks with PostgreSQL, MySQL, MariaDB, SQLite, Oracle, MS SQL Server and a host of other [SQLAlchemy-compatible](https://docs.sqlalchemy.org/en/20/dialects/) databases.\n\n![MCP Alchemy in action](screenshot.png)\n\n## API\n\n### Tools\n\n- **all_table_names**\n  - Return all table names in the database\n  - No input required\n  - Returns comma-separated list of tables\n  ```\n  users, orders, products, categories\n  ```\n\n- **filter_table_names**\n  - Find tables matching a substring\n  - Input: `q` (string)\n  - Returns matching table names\n  ```\n  Input: \"user\"\n  Returns: \"users, user_roles, user_permissions\"\n  ```\n\n- **schema_definitions**\n  - Get detailed schema for specified tables\n  - Input: `table_names` (string[])\n  - Returns table definitions including:\n    - Column names and types\n    - Primary keys\n    - Foreign key relationships\n    - Nullable flags\n  ```\n  users:\n      id: INTEGER, primary key, autoincrement\n      email: VARCHAR(255), nullable\n      created_at: DATETIME\n\n      Relationships:\n        id -> orders.user_id\n  ```\n\n- **execute_query**\n  - Execute SQL query with vertical output format\n  - Inputs:\n    - `query` (string): SQL query\n    - `params` (object, optional): Query parameters\n  - Returns results in clean vertical format:\n  ```\n  1. row\n  id: 123\n  name: John Doe\n  created_at: 2024-03-15T14:30:00\n  email: NULL\n\n  Result: 1 rows\n  ```\n  - Features:\n    - Smart truncation of large results\n    - Full result set access via [claude-local-files](https://github.com/runekaagaard/claude-local-files) integration\n    - Clean NULL value display\n    - ISO formatted dates\n    - Clear row separation\n\n## Usage with Claude Desktop\n\nAdd to your `claude_desktop_config.json`:\n\n```json\n{\n  \"mcpServers\": {\n    \"my_database\": {\n      \"command\": \"uvx\",\n      \"args\": [\"--from\", \"git+https://github.com/runekaagaard/mcp-alchemy\", \"mcp-alchemy\"],\n      \"env\": {\n        \"DB_URL\": \"mysql+pymysql://root:secret@localhost/databasename\",\n      }\n    }\n  }\n}\n```\n\nEnvironment Variables:\n\n- `DB_URL`: SQLAlchemy [database URL](https://docs.sqlalchemy.org/en/20/core/engines.html#database-urls) (required)\n  Examples:\n  - PostgreSQL: `postgresql://user:password@localhost/dbname`\n  - MySQL: `mysql+pymysql://user:password@localhost/dbname`\n  - MariaDB: `mariadb+pymysql://user:password@localhost/dbname`\n  - SQLite: `sqlite:///path/to/database.db`\n- `CLAUDE_LOCAL_FILES_PATH`: Directory for full result sets (optional)\n- `EXECUTE_QUERY_MAX_CHARS`: Maximum output length (optional, default 4000)\n\n## Installation\n\n1. Clone repository:\n```bash\ngit clone https://github.com/runekaagaard/mcp-alchemy.git\n```\n\n2. Ensure you have uv\n```bash\n# Install uv if you haven't already\ncurl -LsSf https://astral.sh/uv/install.sh | sh\n```\n\n3. Add database to claude_desktop_config.json (see above)\n\n## Database Drivers\n\nThe following database drivers are included by default:\n- SQLite: Built into Python, no additional installation needed\n- MySQL/MariaDB: Via `pymysql`\n- PostgreSQL: Via `psycopg2-binary`\n\nTo use other databases supported by SQLAlchemy, install the appropriate driver:\n```bash\n# Microsoft SQL Server\nuv pip install pymssql\n\n# Oracle\nuv pip install cx_oracle\n\n# Other databases\n# See: https://docs.sqlalchemy.org/en/20/dialects/\n```\n\n## Claude Local Files\n\nWhen [claude-local-files](https://github.com/runekaagaard/claude-local-files) is configured:\n\n- Access complete result sets beyond Claude's context window\n- Generate detailed reports and visualizations\n- Perform deep analysis on large datasets\n- Export results for further processing\n\nThe integration automatically activates when `CLAUDE_LOCAL_FILES_PATH` is set.\n\n## Contributing\n\nContributions are warmly welcomed! Whether it's bug reports, feature requests, documentation improvements, or code contributions - all input is valuable. Feel free to:\n\n- Open an issue to report bugs or suggest features\n- Submit pull requests with improvements\n- Enhance documentation or share your usage examples\n- Ask questions and share your experiences\n\nThe goal is to make database interaction with Claude even better, and your insights and contributions help achieve that.\n\n## License\n\nMozilla Public License Version 2.0\n"
}