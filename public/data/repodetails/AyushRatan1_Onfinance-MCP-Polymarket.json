{
  "mcp_name": "AyushRatan1/Onfinance-MCP-Polymarket",
  "mcp_description": "Facilitates real-time interaction with prediction markets using Claude Desktop and custom data analysis tools.",
  "mcp_id": "AyushRatan1_Onfinance-MCP-Polymarket",
  "fetch_timestamp": "2025-06-23T01:30:53.147464Z",
  "github_url": "https://github.com/AyushRatan1/Onfinance-MCP-Polymarket",
  "repository": {
    "name": "Onfinance-MCP-Polymarket",
    "full_name": "AyushRatan1/Onfinance-MCP-Polymarket",
    "description": null,
    "html_url": "https://github.com/AyushRatan1/Onfinance-MCP-Polymarket",
    "created_at": "2025-04-25T18:06:06Z",
    "updated_at": "2025-04-25T18:08:32Z",
    "pushed_at": "2025-04-25T18:08:28Z",
    "size": 47,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "AyushRatan1",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/135870585?v=4",
      "html_url": "https://github.com/AyushRatan1"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "Python": 154964,
      "Shell": 4922,
      "Dockerfile": 633
    },
    "language_percentages": {
      "Python": 96.54,
      "Shell": 3.07,
      "Dockerfile": 0.39
    },
    "pull_requests_count": 0,
    "contributors_count": 2
  },
  "readme": "# Polymarket MCP - Prediction Market Tools\n\nA collection of Model Context Protocol (MCP) servers for interacting with prediction markets, specifically designed to work with Claude Desktop and other AI assistants.\n\n## 🌟 Features\n\n- **Real-time market data** from Polymarket API\n- **Multiple server implementations** with varying complexity\n- **Seamless integration** with Claude Desktop\n- **Custom data analysis tools** for prediction markets\n- **Synthetic data generation** for testing and demonstration\n\n## 📋 Project Overview\n\nThis project provides MCP server implementations for prediction market data:\n\n1. **Enhanced Server (v3)** - The main implementation with real-time Polymarket API integration, data analysis, and market insights.\n2. **Core API Library** - Reusable components for building custom prediction market tools.\n\n## 🚀 Quick Start\n\n### Prerequisites\n\n- Python 3.9+\n- [Claude Desktop](https://anthropic.com/claude) (for using the tools with Claude)\n\n### Installation\n\n1. Clone the repository:\n   ```bash\n   git clone https://github.com/yourusername/Mcp-polymarket.git\n   cd Mcp-polymarket\n   ```\n\n2. Run the setup script:\n   ```bash\n   ./scripts/setup.sh\n   ```\n   \n   This will:\n   - Create a virtual environment\n   - Install dependencies\n   - Set up configuration files\n   - Provide Claude Desktop configuration instructions\n\n### Running the Server\n\nUse the provided script to start the server:\n```bash\n./scripts/start_server.sh\n```\n\nOr run it manually:\n```bash\nsource venv/bin/activate\npython3 enhanced_server_v3.py\n```\n\n## 🛠️ Available Tools\n\n### Enhanced Server (v3)\n\n1. **getMarkets** - Retrieve current prediction markets with filtering options\n2. **refreshMarkets** - Force refresh the market data from the API\n3. **analyzeMarket** - Get detailed analysis for a specific market\n\n## 📊 Data Sources\n\nThe server can use multiple data sources:\n\n1. **Polymarket API** - Real-time data from the Polymarket platform\n2. **Synthetic Data** - Generated market data for testing and demonstration\n3. **Local Cache** - Stored data for faster response times\n\n## 🔧 Configuration\n\n### Claude Desktop Configuration\n\nAdd the following to your Claude Desktop configuration:\n\n```json\n{\n  \"mcpServers\": {\n    \"polymarket-mcp\": {\n      \"command\": \"sh\",\n      \"args\": [\n        \"-c\",\n        \"cd /Onfinance-MCP-Polymarket && source .venv/bin/activate && PYTHONUNBUFFERED=1 python src/polymarket_mcp/server.py 2>/tmp/polymarket_server.log\"\n      ],\n      \"restartOnExit\": true,\n      \"maxRestarts\": 5\n    }\n  }\n} \n```\n\nThe configuration file can be found at:\n- macOS: `~/Library/Application Support/Claude/claude_desktop_config.json`\n- Windows: `%APPDATA%\\Claude\\claude_desktop_config.json`\n\n## 📑 Documentation\n\nDetailed documentation is available in the `docs` directory:\n\n- [Enhanced Server (v3) Documentation](docs/enhanced_server_v3.md) - Comprehensive guide to the main server implementation\n\n## 📁 Project Structure\n\n```\nMcp-polymarket/\n├── enhanced_server_v3.py        # Main server implementation\n├── src/\n│   └── polymarket_mcp/          # Core library components\n│       ├── __init__.py\n│       ├── server.py            # Base MCP server functionality\n│       ├── models/              # Data models\n│       ├── utils/               # Utility functions\n│       └── api/                 # API integrations\n├── docs/\n│   └── enhanced_server_v3.md    # Detailed documentation\n├── scripts/\n│   ├── setup.sh                 # Setup script\n│   └── start_server.sh          # Server startup script\n├── archive/                     # Archive of older versions\n├── venv/                        # Virtual environment (generated)\n├── requirements.txt             # Python dependencies\n├── .env.example                 # Example environment variables\n└── README.md                    # This file\n```\n\n## 📜 Available Scripts\n\nThe project includes several utility scripts in the `scripts` directory:\n\n- `setup.sh` - Sets up the project environment (virtual env, dependencies, etc.)\n- `start_server.sh` - Starts the server and shows live logs\n- Other utility scripts for specific purposes\n\nTo run any script:\n```bash\n./scripts/script_name.sh\n```\n\n## 💡 Usage Examples\n\n### Querying Markets with Claude\n\nOnce the server is running and configured in Claude Desktop, you can use the tools with queries like:\n\n```\nCan you show me the latest prediction markets related to US elections?\n```\n\nClaude will use the `getMarkets` tool with appropriate filters.\n\n### Market Analysis\n\n```\nAnalyze the market with ID \"pm-123456\" and give me your insights.\n```\n\nClaude will use the `analyzeMarket` tool to provide detailed market analysis.\n\n## 🤝 Contributing\n\nContributions are welcome! Please feel free to submit a Pull Request.\n\n## 📜 License\n\nThis project is licensed under the MIT License - see the LICENSE file for details.\n\n## 🙏 Acknowledgements\n\n- [Anthropic](https://www.anthropic.com/) for Claude and the MCP protocol\n- [Polymarket](https://polymarket.com/) for the prediction market platform\n- All contributors to this project\n\n\n# Onfinance-MCP-Polymarket\n"
}