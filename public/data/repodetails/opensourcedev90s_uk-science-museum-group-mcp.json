{
  "mcp_name": "opensourcedev90s/uk-science-museum-group-mcp",
  "mcp_description": "Facilitates data retrieval from the UK Science Museum Group API for LLMs via a Python-based MCP server.",
  "mcp_id": "opensourcedev90s_uk-science-museum-group-mcp",
  "fetch_timestamp": "2025-06-23T07:21:21.735851Z",
  "github_url": "https://github.com/opensourcedev90s/uk-science-museum-group-mcp",
  "repository": {
    "name": "uk-science-museum-group-mcp",
    "full_name": "opensourcedev90s/uk-science-museum-group-mcp",
    "description": "MCP Server for the UK Science Museum Group",
    "html_url": "https://github.com/opensourcedev90s/uk-science-museum-group-mcp",
    "created_at": "2025-04-12T15:33:50Z",
    "updated_at": "2025-04-15T18:43:55Z",
    "pushed_at": "2025-04-15T18:43:52Z",
    "size": 25,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "opensourcedev90s",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/98433083?v=4",
      "html_url": "https://github.com/opensourcedev90s"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "Python": 10235,
      "Shell": 95
    },
    "language_percentages": {
      "Python": 99.08,
      "Shell": 0.92
    },
    "pull_requests_count": 1,
    "contributors_count": 1
  },
  "readme": "# A Model Context Protocol Server for the UK Science Museum Group API\n\nThis project is a Python MCP (https://modelcontextprotocol.io/introduction) server that allows your LLM to fetch data\nfrom the UK Science Museum Group. Info is available at https://github.com/TheScienceMuseum/collectionsonline/wiki/Collections-Online-API#get-search.\n\nIt is currently supported by Claude Desktop for MacOS and Windows.\n\n# Integrate with Claude Desktop\n\nAll you need is to install UV, a Python package/ project manager, then change your Claude Desktop settings to add this MCP.\n\nFor MacOS:\n\n```shell\nbrew install uv\n```\n\nFor Windows:\n\n```shell\npowershell -ExecutionPolicy ByPass -c \"irm https://astral.sh/uv/install.ps1 | iex\"\n```\nOR with winget:\n\n```shell\nwinget install --id=astral-sh.uv  -e\n```\n\nOther installation options are available at https://docs.astral.sh/uv/getting-started/installation.\n\nTo configure Claude Desktop, go to Claude Desktop's settings -> Developer, edit config.\n\nThis will create a configuration file at:\n\n    macOS: ~/Library/Application Support/Claude/claude_desktop_config.json\n    Windows: %APPDATA%\\Claude\\claude_desktop_config.json\n\nOpen this file and change it to:\n\n```json\n{\n  \"mcpServers\": {\n    \"scienceMuseum\": {\n      \"command\": \"uvx\",\n      \"args\": [\n        \"science-museum-mcp\"\n      ]\n    }\n  }\n}\n```\nOpening Claude Desktop should now start the MCP server, and Claude can be queried. As an example:\n\n<img width=\"748\" alt=\"Screenshot 2025-04-15 at 19 43 05\" src=\"https://github.com/user-attachments/assets/6690b802-24c3-40f0-85b2-d4a2b6cc5460\" />\n\n\nAnthropic's own instructions for this step are here - https://modelcontextprotocol.info/docs/quickstart/user/.\n\n# Developing\n\nThis section is for anyone who wants to contribute to the codebase.\n\n## Setup and Install Dependencies\n\nClone the repository.\n\nThe project is configured to use uv (Install link: https://docs.astral.sh/uv/#installation) for dependency management \nand building.\nIt uses npx (Install link: https://www.npmjs.com/package/npx) to run the MCP inspector.  \n\nCreate a virtual env with\n\n```shell\nuv venv\n```\n\nAnd install dependencies with\n\n```shell\nuv pip install -r pyproject.toml\n```\n\nRun the inspector with\n```shell\n./inspector.sh\n```\nThe inspector should output the localhost URL for accessing its UI.\n## Running Unit Tests\n\n```shell\nsource .venv/bin/activate\npytest\n```\n\n## Publishing\n\nThis is currently a manual process I can do. This will be changed to a Github action if the project gets any development from now on.\n"
}