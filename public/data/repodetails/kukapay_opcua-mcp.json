{
  "mcp_name": "kukapay/opcua-mcp",
  "mcp_description": "Connects AI agents to OPC UA-enabled industrial systems for real-time data monitoring and control.",
  "mcp_id": "kukapay_opcua-mcp",
  "fetch_timestamp": "2025-06-23T05:59:47.719447Z",
  "github_url": "https://github.com/kukapay/opcua-mcp",
  "repository": {
    "name": "opcua-mcp",
    "full_name": "kukapay/opcua-mcp",
    "description": "An MCP server that connects to OPC UA-enabled industrial systems.",
    "html_url": "https://github.com/kukapay/opcua-mcp",
    "created_at": "2025-03-24T15:14:18Z",
    "updated_at": "2025-06-19T20:13:26Z",
    "pushed_at": "2025-05-22T10:19:11Z",
    "size": 34,
    "stargazers_count": 11,
    "watchers_count": 11,
    "forks_count": 2,
    "open_issues_count": 2,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "kukapay",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/201164822?v=4",
      "html_url": "https://github.com/kukapay"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 2,
    "subscribers_count": 1,
    "languages": {
      "Python": 8355
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 1,
    "contributors_count": 2
  },
  "readme": "# OPC UA MCP Server\n\nAn MCP server that connects to OPC UA-enabled industrial systems, allowing AI agents to monitor, analyze, and control operational data in real time.\n\nThis project is ideal for developers and engineers looking to bridge AI-driven workflows with industrial automation systems.\n\n![GitHub License](https://img.shields.io/github/license/kukapay/opcua-mcp)\n![Python Version](https://img.shields.io/badge/python-3.13+-blue)\n![Status](https://img.shields.io/badge/status-active-brightgreen.svg)\n\n## Features\n\n- **Read OPC UA Nodes**: Retrieve real-time values from industrial devices.\n- **Write to OPC UA Nodes**: Control devices by writing values to specified nodes.\n- **Browse nodes**: Request to list allopcua  nodes\n- **Read multiple OPC UA Nodes**: Retrieve multiple real-time values from devices.\n- **Write to multiple OPC UA Nodes**: Control devices by writing values to multiple nodes.\n- **Seamless Integration**: Works with MCP clients like Claude Desktop for natural language interaction.\n\n\n### Tools\nThe server exposes five tools:\n- **`read_opcua_node`**:\n  - **Description**: Read the value of a specific OPC UA node.\n  - **Parameters**:\n    - `node_id` (str): OPC UA node ID (e.g., `ns=2;i=2`).\n  - **Returns**: A string with the node ID and its value (e.g., \"Node ns=2;i=2 value: 42\").\n\n- **`write_opcua_node`**:\n  - **Description**: Write a value to a specific OPC UA node.\n  - **Parameters**:\n    - `node_id` (str): OPC UA node ID (e.g., `ns=2;i=3`).\n    - `value` (str): Value to write (converted based on node type).\n  - **Returns**: A success or error message (e.g., \"Successfully wrote 100 to node ns=2;i=3\").\n\n- **`Browse nodes`**:\n  - **Description**: Read the value of a specific OPC UA node.\n\n- **`Read multiple OPC UA Nodes`**:\n  - **Description**: Read the value of a specific OPC UA node.\n\n- **`Write to multiple OPC UA Nodes`**:\n  - **Description**: Read the value of a specific OPC UA node.\n\n\n### Example Prompts\n\n- \"What’s the value of node ns=2;i=2?\" → Returns the current value.\n- \"Set node ns=2;i=3 to 100.\" → Writes 100 to the node.\n\n## Installation\n\n### Prerequisites\n- Python 3.13 or higher\n- An OPC UA server (e.g., a simulator or real industrial device)\n\n### Install Dependencies\nClone the repository and install the required Python packages:\n\n```bash\ngit clone https://github.com/kukapay/opcua-mcp.git\ncd opcua-mcp\npip install mcp[cli] opcua cryptography\n```\n\n### MCP Client Configuration\n\n```json\n{\n \"mcpServers\": {\n   \"opcua-mcp\": {\n     \"command\": \"python\",\n     \"args\": [\"path/to/opcua_mcp/main.py\"],\n     \"env\": {\n        \"OPCUA_SERVER_URL\": \"your-opc-ua-server-url\"\n     }\n   }\n }\n}\n```\n\n\n## License\nThis project is licensed under the MIT License. See the [LICENSE](LICENSE) file for details.\n"
}