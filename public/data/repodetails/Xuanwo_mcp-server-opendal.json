{
  "mcp_name": "Xuanwo/mcp-server-opendal",
  "mcp_description": "üêç üè† ‚òÅÔ∏è - Access any storage with Apache OpenDAL‚Ñ¢",
  "mcp_id": "Xuanwo_mcp-server-opendal",
  "fetch_timestamp": "2025-06-23T09:34:41.599890Z",
  "github_url": "https://github.com/Xuanwo/mcp-server-opendal",
  "repository": {
    "name": "mcp-server-opendal",
    "full_name": "Xuanwo/mcp-server-opendal",
    "description": "Model Context Protocol Server for Apache OpenDAL‚Ñ¢",
    "html_url": "https://github.com/Xuanwo/mcp-server-opendal",
    "created_at": "2025-03-04T13:15:53Z",
    "updated_at": "2025-06-14T18:34:22Z",
    "pushed_at": "2025-04-10T09:03:26Z",
    "size": 109,
    "stargazers_count": 30,
    "watchers_count": 30,
    "forks_count": 5,
    "open_issues_count": 1,
    "language": "Python",
    "license": "Apache License 2.0",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "Xuanwo",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/5351546?v=4",
      "html_url": "https://github.com/Xuanwo"
    },
    "has_issues": true,
    "has_projects": false,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 5,
    "subscribers_count": 4,
    "languages": {
      "Python": 14204
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 10,
    "contributors_count": 3,
    "latest_release": {
      "tag_name": "0.2.0",
      "name": "0.2.0",
      "published_at": "2025-03-10T06:53:11Z",
      "body": "### &nbsp;&nbsp;&nbsp;üöÄ Features\n\n- Add resources and tests &nbsp;-&nbsp; by @PsiACE in https://github.com/Xuanwo/mcp-server-opendal/issues/4 [<samp>(080ab)</samp>](https://github.com/Xuanwo/mcp-server-opendal/commit/080abfe)\n- Add ruff config and reformat code &nbsp;-&nbsp; by @frostming in https://github.com/Xuanwo/mcp-server-opendal/issues/5 [<samp>(dff34)</samp>](https://github.com/Xuanwo/mcp-server-opendal/commit/dff349e)\n- Add a llama index tools case &nbsp;-&nbsp; by @PsiACE in https://github.com/Xuanwo/mcp-server-opendal/issues/6 [<samp>(7a76b)</samp>](https://github.com/Xuanwo/mcp-server-opendal/commit/7a76b2a)\n- **ci**: Automated release workflow &nbsp;-&nbsp; by @frostming in https://github.com/Xuanwo/mcp-server-opendal/issues/9 [<samp>(aa5af)</samp>](https://github.com/Xuanwo/mcp-server-opendal/commit/aa5af87)\n\n### &nbsp;&nbsp;&nbsp;üíª Chores\n\n- Add example dependencies and update the instructions &nbsp;-&nbsp; by @frostming in https://github.com/Xuanwo/mcp-server-opendal/issues/7 [<samp>(11d23)</samp>](https://github.com/Xuanwo/mcp-server-opendal/commit/11d2393)\n- Add a basic ci &nbsp;-&nbsp; by @PsiACE in https://github.com/Xuanwo/mcp-server-opendal/issues/8 [<samp>(b7ebb)</samp>](https://github.com/Xuanwo/mcp-server-opendal/commit/b7ebb78)\n\n##### &nbsp;&nbsp;&nbsp;&nbsp;[View changes on GitHub](https://github.com/Xuanwo/mcp-server-opendal/compare/dec14355ce8a0c3b9cafd098d6cdd614e2af25db...0.2.0)",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "0.2.0",
        "commit_sha": "08de11402ae12951627ea1fa67bad79f4069aee1"
      }
    ],
    "latest_version": "0.2.0"
  },
  "readme": "# Model Context Protocol Server for Apache OpenDAL‚Ñ¢\nA Model Context Protocol (MCP) server implementation that provides access to various storage services via [Apache OpenDAL‚Ñ¢](https://opendal.apache.org/).\n\n[![PyPI - Version](https://img.shields.io/pypi/v/mcp-server-opendal)](https://pypi.org/project/mcp-server-opendal/)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mcp-server-opendal)](https://pypi.org/project/mcp-server-opendal/)\n[![Lint and Test](https://github.com/Xuanwo/mcp-server-opendal/actions/workflows/test.yml/badge.svg)](https://github.com/Xuanwo/mcp-server-opendal/actions/workflows/test.yml)\n\n## Features\n\n- Seamless access to multiple storage services including S3, Azure Blob Storage, Google Cloud Storage, and more\n- List files and directories from storage services\n- Read file contents with automatic text/binary detection\n- Environment variable based configuration\n\n## Installation\n\n```shell\npip install mcp-server-opendal\n```\n\n## Usage with Claude Desktop\n\nAdd the following to `claude_desktop_config.json`:\n\n```json\n{\n  \"mcpServers\": {\n    \"opendal\": {\n      \"command\": \"uvx\",\n      \"args\": [\n        \"mcp-server-opendal\"\n      ],\n      \"env\": {\n        \"YOUR_ENV_VAR\": \"YOUR_ENV_VALUE\"\n      }\n    }\n  }\n}\n```\n\nIt requires `uv` to be installed on your machine. Check the [official documentation](https://docs.astral.sh/uv/getting-started/installation/) for installation guides.\n\n## Environment variables\n\nConfigure storage services by setting environment variables. Each service requires a prefix and specific configuration options.\n\nFor example, to configure an S3 service with alias \"mys3\":\n\n```\nOPENDAL_MYS3_TYPE=s3\nOPENDAL_MYS3_BUCKET=mybucket\nOPENDAL_MYS3_REGION=us-east-1\nOPENDAL_MYS3_ENDPOINT=http://localhost:9000\nOPENDAL_MYS3_ACCESS_KEY_ID=myaccesskey\nOPENDAL_MYS3_SECRET_ACCESS_KEY=mysecretkey\n```\n\nThen you can use tool like `read` and `list` with `mys3://path/to/file`.\n\n`mcp-server-opendal` will also load from `.env`.\n\n## Development\n\n```shell\nnpx @modelcontextprotocol/inspector \\\n  uv run mcp-server-opendal\n```\n"
}