{
  "mcp_name": "sylphlab/filesystem-mcp",
  "mcp_description": "Node.js server offering secure and efficient filesystem access for AI agents, ensuring operations are confined to a project root.",
  "mcp_id": "sylphxltd_filesystem-mcp",
  "fetch_timestamp": "2025-06-23T08:45:35.261996Z",
  "github_url": "https://github.com/sylphlab/filesystem-mcp",
  "repository": {
    "name": "filesystem-mcp",
    "full_name": "sylphxltd/filesystem-mcp",
    "description": "Node.js Model Context Protocol (MCP) server providing secure, relative filesystem access for AI agents like Cline/Claude.",
    "html_url": "https://github.com/sylphxltd/filesystem-mcp",
    "created_at": "2025-04-04T01:43:55Z",
    "updated_at": "2025-06-20T14:07:52Z",
    "pushed_at": "2025-06-23T08:37:47Z",
    "size": 1905,
    "stargazers_count": 5,
    "watchers_count": 5,
    "forks_count": 2,
    "open_issues_count": 15,
    "language": "TypeScript",
    "license": "MIT License",
    "topics": [
      "ai-agent",
      "claude-ai",
      "cline",
      "filesystem",
      "mcp",
      "model-context-protocol",
      "nodejs",
      "npm",
      "roo-code",
      "typescript"
    ],
    "default_branch": "main",
    "owner": {
      "login": "sylphxltd",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/206448049?v=4",
      "html_url": "https://github.com/sylphxltd"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 2,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 354310,
      "JavaScript": 5366,
      "Dockerfile": 903
    },
    "language_percentages": {
      "TypeScript": 98.26,
      "JavaScript": 1.49,
      "Dockerfile": 0.25
    },
    "pull_requests_count": 70,
    "contributors_count": 1,
    "latest_release": {
      "tag_name": "v0.5.8",
      "name": "Release v0.5.8",
      "published_at": "2025-04-05T18:51:58Z",
      "body": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [0.5.8] - 2025-04-05\n\n### Fixed\n- Removed `build` directory exclusion from `.dockerignore` to fix Docker build context error where `COPY build ./build` failed.\n\n\n## [0.5.7] - 2025-04-05\n\n### Fixed\n- Corrected artifact archiving in CI/CD workflow (`.github/workflows/publish.yml`) to include the `build` directory itself, resolving Docker build context errors (5f5c7c4).\n\n\n## [0.5.6] - 2025-05-04\n\n### Fixed\n- Corrected CI/CD artifact handling (`package-lock.json` inclusion, extraction paths) in `publish.yml` to ensure successful npm and Docker publishing (4372afa).\n- Simplified CI/CD structure back to a single workflow (`publish.yml`) with conditional artifact upload, removing `ci.yml` and `build-reusable.yml` (38029ca).\n\n### Changed\n- Bumped version to 0.5.6 due to previous failed release attempt of 0.5.5.\n\n\n## [0.5.5] - 2025-05-04\n\n### Changed\n- Refined GitHub Actions workflow (`publish.yml`) triggers: publishing jobs (`publish-npm`, `publish-docker`, `create-release`) now run *only* on version tag pushes (`v*.*.*`), not on pushes to `main` (9c0df99).\n\n### Fixed\n- Corrected artifact extraction path in the `publish-docker` CI/CD job to resolve \"Dockerfile not found\" error (708d3f5).\n\n\n## [0.5.3] - 2025-05-04\n\n### Added\n- Enhanced path error reporting in `resolvePath` to include original path, resolved path, and project root for better debugging context (3810f14).\n- Created `.clinerules` file to document project-specific patterns and preferences, starting with tool usage recommendations (3810f14).\n- Enhanced `ENOENT` (File not found) error reporting in `readContent` handler to include resolved path, relative path, and project root (8b82e1c).\n\n### Changed\n- Updated `write_content` tool description to recommend using edit tools (`edit_file`, `replace_content`) for modifications (5521102).\n- Updated `edit_file` tool description to reinforce its recommendation for modifications (5e44ef2).\n- Refactored GitHub Actions workflow (`publish.yml`) to parallelize npm and Docker publishing using separate jobs dependent on a shared build job, improving release speed (3b51c2b).\n- Bumped version to 0.5.3.\n\n### Fixed\n- Corrected TypeScript errors in `readContent.ts` related to variable scope and imports during error reporting enhancement (8b82e1c).\n\n<!-- Previous versions can be added below -->",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v0.5.9",
        "commit_sha": "663679cb90d59f79bc23a3008f8f069442c386bd"
      },
      {
        "name": "v0.5.8",
        "commit_sha": "90b9780d6b745b41b464676b4c630a9bcbc5acf6"
      },
      {
        "name": "v0.5.7",
        "commit_sha": "f5affff4453e962d7e4b6437dd6bcc7975e4670a"
      },
      {
        "name": "v0.5.6",
        "commit_sha": "5e97152633ac8f24a302e49658bfada42ed90061"
      },
      {
        "name": "v0.5.5",
        "commit_sha": "4372aface1a1dcc323221f78b801cd04d7c7fe58"
      },
      {
        "name": "v0.5.3",
        "commit_sha": "708d3f5dec29bad12ea5d9d42553fd083bd887b8"
      },
      {
        "name": "v0.5.2",
        "commit_sha": "3b51c2b154fd59f03af317900a1bc62919a06874"
      },
      {
        "name": "v0.5.1",
        "commit_sha": "45a75b7b2819f11c3827de1338a44a35d3726ad2"
      },
      {
        "name": "v0.5.0",
        "commit_sha": "352186327d07ecf8bc28677806c68d994c6ff178"
      }
    ],
    "latest_version": "v0.5.9",
    "package_json_version": "0.5.9"
  },
  "readme": "Filesystem MCP Server\n---------------------\nA Python server implementing Model Context Protocol (MCP) for secure filesystem operations.\nFeatures\n--------\n*   Read/write files with multiple access methods (whole file, line ranges, keyword-based)\n*   Create/list directories and file trees\n*   Move files/directories\n*   Search files by name and content\n*   Perform diff-based edits with preview support\n*   Get detailed file metadata (size, permissions, ownership)\n*   Git-aware directory tree listing respecting .gitignore\n*   Function/keyword search in files with contextual results\n*   Multi-file read operations\n*   Path validation and security checks\n**Note**: The server only allows operations within directories specified via command-line arguments.\nInstallation\n------------\nBuild the Docker image locally:\ndocker build -t mcp/filesystem .\nUsage with Claude\n-----------------\nAdd this to your `claude_desktop_config.json`:\n{\n  \"mcpServers\": {\n    \"filesystem\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"-i\",\n        \"--rm\",\n        \"--mount\", \"type=bind,src=/path/to/your/directory,dst=/projects\",\n        \"mcp/filesystem\",\n        \"/projects\"\n      ]\n    }\n  }\n}\nNote: All directories are mounted to `/projects` by default. Adding the `,ro` flag will make the directory read-only.\nAvailable Tools\n---------------\n### read_file\n*   Read complete contents of a file\n*   Input: `path` (string)\n### read_multiple_files\n*   Read multiple files simultaneously\n*   Input: `paths` (string[])\n*   Failed reads won't stop the entire operation\n### read_file_by_line\n*   Read specific lines or line ranges from a file\n*   Inputs: \n    *   `path` (string)\n    *   `ranges` (string[]): Line numbers or ranges (e.g., [\"5\", \"10-20\"])\n### read_file_by_keyword\n*   Find lines containing a keyword with optional context\n*   Inputs: \n    *   `path` (string)\n    *   `keyword` (string): Text to search for\n    *   `before` (int): Lines to include before match (default: 0)\n    *   `after` (int): Lines to include after match (default: 0)\n    *   `use_regex` (bool): Use regex pattern (default: false)\n    *   `ignore_case` (bool): Case-insensitive search (default: false)\n*   Returns matching lines with \">\" prefix and line numbers\n### read_function_by_keyword\n*   Extract function definitions by keyword\n*   Inputs: \n    *   `path` (string)\n    *   `keyword` (string): Typically function name\n    *   `before` (int): Lines to include before match (default: 0)\n    *   `use_regex` (bool): Use regex pattern (default: false)\n### write_file\n*   Create or overwrite a file\n*   Inputs: \n    *   `path` (string)\n    *   `content` (string)\n### edit_file_diff\n*   Make surgical edits to a file without specifying line numbers\n*   Inputs: \n    *   `path` (string)\n    *   `replacements` (object): Dictionary with keys as content to find and values as replacement content\n    *   `inserts` (object): Dictionary for inserting content after specified anchor text\n    *   `replace_all` (boolean): Replace all occurrences or just first match (default: true)\n    *   `dry_run` (boolean): Preview changes without applying (default: false)\n*   Returns a summary of changes made\n### edit_file_diff_line\n*   Edit a file with precise line number specifications\n*   Inputs: \n    *   `path` (string)\n    *   `edits` (object): Dictionary of edits with keys as line specifiers and values as content \n        *   \"N\": Replace line N with provided content\n        *   \"N-M\": Replace lines N through M with provided content\n        *   \"Ni\": Insert content after line N (use \"0i\" for beginning)\n        *   \"a\": Append content to end of file\n    *   `dry_run` (boolean): Preview changes without applying (default: false)\n*   Returns a summary of applied changes\n### create_directory\n*   Create directory or ensure it exists\n*   Input: `path` (string)\n*   Creates parent directories if needed\n### list_directory\n*   List directory contents with [FILE] or [DIR] prefixes\n*   Input: `path` (string)\n### directory_tree\n*   Get a recursive tree view of files and directories with metadata\n*   Inputs: \n    *   `path` (string)\n    *   `count_lines` (boolean): Include line counts (default: false)\n    *   `show_permissions` (boolean): Show file permissions (default: false)\n    *   `show_owner` (boolean): Show file ownership information (default: false)\n    *   `show_size` (boolean): Show file sizes (default: false)\n### git_directory_tree\n*   Get a directory tree for a git repository respecting .gitignore\n*   Inputs: \n    *   `path` (string)\n    *   `count_lines` (boolean): Include line counts (default: false)\n    *   `show_permissions` (boolean): Show file permissions (default: false)\n    *   `show_owner` (boolean): Show file ownership information (default: false)\n    *   `show_size` (boolean): Show file sizes (default: false)\n### move_file\n*   Move or rename files and directories\n*   Inputs: \n    *   `source` (string)\n    *   `destination` (string)\n### search_files\n*   Recursively search for files/directories matching a pattern\n*   Inputs: \n    *   `path` (string): Starting directory\n    *   `pattern` (string): Search pattern (case-insensitive)\n    *   `excludePatterns` (string[]): Glob patterns to exclude\n*   Returns full paths to all matching files and directories\n### get_file_info\n*   Get detailed file metadata\n*   Input: `path` (string)\n*   Returns size, creation time, modified time, permissions, etc.\n### list_allowed_directories\n*   List all directories the server is allowed to access\nSecurity\n--------\nThe server implements comprehensive security measures:\n*   Maintains a whitelist of allowed directories specified via command-line arguments\n*   Performs strict path validation to prevent unauthorized access outside allowed directories\n*   Validates symlink targets to ensure they don't escape the allowed directories\n*   Handles circular symlinks and invalid paths gracefully\n*   Verifies parent directories for non-existent paths to ensure they're within allowed boundaries\nRequirements\n------------\n*   Python 3.12+\n*   MCP 1.5.0+\n*   Docker\n*   httpx 0.28.1+\n*   Git (optional, for git_directory_tree)\nLicense\n-------\n[MIT](https://github.com/0kenx/filesystem-mcp/blob/main/LICENSE)"
}