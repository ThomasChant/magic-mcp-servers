{
  "mcp_name": "loyaniu/moodle-mcp",
  "mcp_description": "Facilitates interaction with Moodle LMS through a Model Context Protocol server, offering features like retrieving upcoming events.",
  "mcp_id": "loyaniu_moodle-mcp",
  "fetch_timestamp": "2025-06-23T06:15:59.216659Z",
  "github_url": "https://github.com/loyaniu/moodle-mcp",
  "repository": {
    "name": "moodle-mcp",
    "full_name": "loyaniu/moodle-mcp",
    "description": "A Model Context Protocol (MCP) server implementation that provides capabilities to interact with Moodle LMS",
    "html_url": "https://github.com/loyaniu/moodle-mcp",
    "created_at": "2025-04-04T03:56:44Z",
    "updated_at": "2025-06-06T08:10:18Z",
    "pushed_at": "2025-04-04T06:17:07Z",
    "size": 25,
    "stargazers_count": 4,
    "watchers_count": 4,
    "forks_count": 2,
    "open_issues_count": 1,
    "language": "Python",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "loyaniu",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/112656202?v=4",
      "html_url": "https://github.com/loyaniu"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 2,
    "subscribers_count": 2,
    "languages": {
      "Python": 3395
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 1,
    "contributors_count": 1
  },
  "readme": "# Moodle-MCP\n\n> A Model Context Protocol (MCP) server implementation that provides capabilities to interact with Moodle LMS.\n>\n> **Warning:** This project is still in development, only some functions are available.\n\n## Features\n\n- [x] Get upcoming events from Moodle\n\n## API Reference\n\nFor available Moodle API functions, please refer to the [official documentation](https://docs.moodle.org/dev/Web_service_API_functions).\n\n## Setup Instructions\n\n### Method 1: Using `mcp` CLI (recommended)\n\n1. Create your own `.env` file from `.env.example`\n2. Assume you have `uv` installed, run `uv add \"mcp[cli]\"` to install the MCP CLI tools\n3. Run `mcp install main.py -f .env` to add the moodle-mcp server to Claude app\n\n### Method 2: Using `uvx`\n\nGo to Claude > Settings > Developer > Edit Config > claude_desktop_config.json to include the following\n\n```json\n{\n  \"mcpServers\": {\n    \"moodle-mcp\": {\n      \"command\": \"uvx\",\n      \"args\": [\"moodle-mcp\"],\n      \"env\": {\n        \"MOODLE_URL\": \"https://{your-moodle-url}/webservice/rest/server.php\",\n        \"MOODLE_TOKEN\": \"{your-moodle-token}\"\n      }\n    }\n  }\n}\n```\n\n## Authentication\n\n### Getting your Moodle token\n\n1. Navigate to your Moodle token management page `https://{your-moodle-url}/user/managetoken.php`\n2. Use the token with `Moodle mobile web service` in the `Service` column\n3. Add this token to your `.env` file\n"
}