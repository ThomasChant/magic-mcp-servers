{
  "mcp_name": "sxhxliang/mcp-security-scan",
  "mcp_description": "A Rust application for scanning and verifying the security of Model Context Protocol server configurations, prompts, resources, and tools.",
  "mcp_id": "sxhxliang_mcp-security-scan",
  "fetch_timestamp": "2025-06-23T08:45:02.223565Z",
  "github_url": "https://github.com/sxhxliang/mcp-security-scan",
  "repository": {
    "name": "mcp-security-scan",
    "full_name": "sxhxliang/mcp-security-scan",
    "description": "MCP-security-scan: Security scanner for Model Context Protocol servers and tools",
    "html_url": "https://github.com/sxhxliang/mcp-security-scan",
    "created_at": "2025-04-27T17:44:56Z",
    "updated_at": "2025-05-21T17:31:07Z",
    "pushed_at": "2025-05-03T06:26:13Z",
    "size": 33,
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "Rust",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "sxhxliang",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/8338091?v=4",
      "html_url": "https://github.com/sxhxliang"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "Rust": 46841
    },
    "language_percentages": {
      "Rust": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 1
  },
  "readme": "# MCP 安全扫描工具\n\n## 项目简介\nMCP安全扫描工具是一个用于检测和验证MCP(Model Context Protocol)配置文件中服务器、提示词(prompts)、资源(resources)和工具(tools)安全性的Rust应用程序。\n\n## 核心功能\n- ✅ 扫描MCP配置文件中的服务器配置\n- ✅ 自动验证服务器中的实体(prompts/resources/tools)安全性\n- ✅ 支持审查模式，将prompts/resources/tools描述装换成中文\n- ✅ 支持多种MCP服务器类型(SSE/Stdio)\n- ✅ 实时显示扫描进度和结果\n- ✅ 支持白名单管理功能\n- ✅ 记录扫描历史并检测配置变更\n\n\n## 技术栈\n- 语言: Rust\n- 主要依赖:\n  - `rmcp` - MCP协议实现\n  - `serde` - 序列化/反序列化\n  - `chrono` - 时间处理\n  - `colored` - 终端彩色输出\n\n## 安装与使用\n### 安装\n```bash\ncargo install --path .\n```\n\n### 基本用法\n```bash\nmcp-security-scan [配置文件路径]\n```\n\n### 高级选项\n- `--storage-path`: 指定存储扫描结果的路径\n- `--base-url`: 设置验证API的基础URL\n- `--reset-whitelist`: 重置白名单\n\n## 工作原理\n1. 解析MCP配置文件，提取服务器配置\n2. 连接到每个服务器并获取所有实体(prompts/resources/tools)\n3. 计算每个实体的MD5哈希值(基于描述信息)\n4. 通过验证API检查实体安全性\n5. 记录扫描结果并与历史记录比较\n6. 支持白名单功能跳过已验证的安全实体\n\n## 配置示例\n```json\n{\n  \"mcpServers\": {\n    \"example_server\": {\n      \"url\": \"http://example.com/sse\",\n      \"type\": \"sse\"\n    },\n    \"local_mcp\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"example-server\"\n      ]\n    }\n  }\n}\n```\n\n## 贡献指南\n欢迎提交Pull Request！请确保:\n1. 代码符合Rust惯用写法\n2. 包含适当的测试用例\n3. 更新相关文档\n\n## 许可证\nMIT"
}