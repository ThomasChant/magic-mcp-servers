{
  "mcp_name": "Secure Fetch",
  "mcp_description": "Secure fetch to prevent access to local resources",
  "mcp_id": "appsec-innovation-labs_secure-mcp-fetch",
  "fetch_timestamp": "2025-06-23T08:17:48.169628Z",
  "github_url": "https://github.com/appsec-innovation-labs/secure-mcp-fetch",
  "repository": {
    "name": "secure-mcp-fetch",
    "full_name": "appsec-innovation-labs/secure-mcp-fetch",
    "description": "Simple secured fetch",
    "html_url": "https://github.com/appsec-innovation-labs/secure-mcp-fetch",
    "created_at": "2025-04-25T21:02:34Z",
    "updated_at": "2025-04-26T07:09:11Z",
    "pushed_at": "2025-04-25T21:24:41Z",
    "size": 3,
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "appsec-innovation-labs",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/209173711?v=4",
      "html_url": "https://github.com/appsec-innovation-labs"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 0,
    "languages": {
      "Python": 5517
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 1
  },
  "readme": "# Secure Fetch\n\nThis project implements a secure URL fetching tool using FastMCP.\n\n## Prerequisites\n\n- Python 3.7+\n- uv (Python package installer and environment manager)\n\n## Installation\n\n1. Install uv if you haven't already:\n\n```bash\npip install uv\n```\n\n2. Create a new virtual environment and install dependencies:\n\n```bash\nuv venv\nsource .venv/bin/activate\nuv pip install fastmcp requests\n```\n\n## Usage\n\n1. Set the allowlist environment variable (optional):\n\n```bash\nexport SECURE_FETCH_ALLOWLIST=\"example.com,trusted-domain.org\"\n```\n\n2. Run the script:\n\n```bash\nuv run main.py\n```\n\n## Features\n\n- Fetches URLs securely\n- Resolves domains to IPs\n- Checks for private/internal IPs\n- Handles redirects (up to 3)\n- Supports custom HTTP methods and headers\n- Uses an allowlist for trusted domains/IPs\n\n## Security Considerations\n\n- The tool prevents access to private/internal IPs unless explicitly allowed\n- Only HTTP and HTTPS schemes are permitted\n- SNI is set to match the hostname for HTTPS connections\n\n## Example Usage\n\nOnce the script is running, you can use the `fetch_url` function to securely fetch URLs. The function will return a dictionary containing the status code, response body, and content length.\n\n## Note\n\nThis tool is designed for secure URL fetching. Always review and understand the code before using it in your environment.\n"
}