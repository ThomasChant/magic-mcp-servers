{
  "mcp_name": "shaxiaozz/prometheus-mcp-server",
  "mcp_description": "A Golang-based server that integrates with Prometheus to provide real-time metric querying and exploration via the Model Context Protocol.",
  "mcp_id": "shaxiaozz_prometheus-mcp-server",
  "fetch_timestamp": "2025-06-23T08:21:30.649574Z",
  "github_url": "https://github.com/shaxiaozz/prometheus-mcp-server",
  "repository": {
    "name": "prometheus-mcp-server",
    "full_name": "shaxiaozz/prometheus-mcp-server",
    "description": null,
    "html_url": "https://github.com/shaxiaozz/prometheus-mcp-server",
    "created_at": "2025-04-23T08:35:45Z",
    "updated_at": "2025-05-07T08:43:09Z",
    "pushed_at": "2025-05-07T08:43:41Z",
    "size": 51,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 1,
    "open_issues_count": 0,
    "language": "Go",
    "license": "GNU General Public License v3.0",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "shaxiaozz",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/43721571?v=4",
      "html_url": "https://github.com/shaxiaozz"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 1,
    "subscribers_count": 1,
    "languages": {
      "Go": 13906,
      "Dockerfile": 608
    },
    "language_percentages": {
      "Go": 95.81,
      "Dockerfile": 4.19
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "latest_release": {
      "tag_name": "v0.2",
      "name": "v0.2",
      "published_at": "2025-05-07T08:43:41Z",
      "body": "",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v0.2",
        "commit_sha": "dc280156f4d509860b263a926bae0801e5f4a525"
      },
      {
        "name": "v0.1",
        "commit_sha": "446f29ff9b044d33465732aaf6e8d0a121adf2ca"
      }
    ],
    "latest_version": "v0.2"
  },
  "readme": "# Prometheus MCP Server\n[Model Context Protocol][mcp] 这是一个基于Golang开发的Prometheus-MCP-Server,目前只支持sse运行模式\n![img.png](docs/cursor.png)\n\n[mcp]: https://modelcontextprotocol.io\n\n## 功能\n- [x] Prometheus MCP Tools\n  - [x] 列出可用指标 (prometheus_list_metrics)\n  - [x] 发现并探索指标 (prometheus_get_targets)\n  - [x] 获取特定指标的元数据 (prometheus_get_metric_metadata)\n  - [x] 查看即时查询结果 (prometheus_execute_query)\n  - [x] 查看不同步长间隔的范围查询结果 (prometheus_execute_range_query)\n  - [x] 查看最近时长查询结果 (prometheus_execute_last_query)\n- [x] 支持身份验证\n  - [x] 通过环境变量进行基本身份验证\n  - [x] 通过环境变量进行 Bearer Token 身份验证\n- [x] 支持 Docker 容器化\n\n## 使用方法\n\n1. 确保你的prometheus-mcp-server容器可以与prometheus-server通信.\n\n2. 使用以下命令运行prometheus-mcp-server容器\n\n```bash\n# 默认以sse方式运行mcp-server (prometheus无认证)\n# 如需stdio模式,请自行将 MCP_SERVER_TRANSPORT=sse 修改为 MCP_SERVER_TRANSPORT=stdio\ndocker run -d --name prometheus-mcp-server \\\n  -e PROMETHEUS_URL=http://your-prometheus-server:9090 \\\n  -e MCP_SERVER_TRANSPORT=sse \\\n  shaxiaozz/prometheus-mcp-server:latest\n```\n\n```bash\n# 默认以sse方式运行mcp-server (prometheus basic auth)\n# 如需stdio模式,请自行将 MCP_SERVER_TRANSPORT=sse 修改为 MCP_SERVER_TRANSPORT=stdio\ndocker run -d --name prometheus-mcp-server \\\n  -e PROMETHEUS_URL=http://your-prometheus-server:9090 \\\n  -e PROMETHEUS_USERNAME=your_username \\\n  -e PROMETHEUS_PASSWORD=your_password \\\n  -e MCP_SERVER_TRANSPORT=sse \\\n  shaxiaozz/prometheus-mcp-server:latest\n```\n\n```bash\n# 默认以sse方式运行mcp-server (prometheus token auth)\n# 如需stdio模式,请自行将 MCP_SERVER_TRANSPORT=sse 修改为 MCP_SERVER_TRANSPORT=stdio\ndocker run -d --name prometheus-mcp-server \\\n  -e PROMETHEUS_URL=http://your-prometheus-server:9090 \\\n  -e PROMETHEUS_TOKEN=your_token \\\n  -e MCP_SERVER_TRANSPORT=sse \\\n  shaxiaozz/prometheus-mcp-server:latest\n```\n\n3. 将服务器配置添加到客户端配置文件中。例如，Cursor Desktop:  \n\nurl可直接通过命令: ```docker logs prometheus-mcp-server``` 查看\n```json\n{\n  \"mcpServers\": {\n    \"prometheus-mcp-server\": {\n      \"url\": \"http://10.0.0.1:8000/sse\"\n    }\n  }\n}\n```\n![img.png](docs/cursor.png)\n\n## 构建镜像\n```bash\ngit clonse https://github.com/shaxiaozz/prometheus-mcp-server.git && cd prometheus-mcp-server\ndocker build -t prometheus-mcp-server .\n```\n\n## 致谢\n- [mark3labs/mcp-go](https://github.com/mark3labs/mcp-go)\n- [pab1it0/prometheus-mcp-server](https://github.com/pab1it0/prometheus-mcp-server)\n\n## License\nGNU v3.0\n"
}