{
  "mcp_name": "Axiom",
  "mcp_description": "Query and analyze your Axiom logs, traces, and all other event data in natural language",
  "mcp_id": "axiomhq_mcp-server-axiom",
  "fetch_timestamp": "2025-06-23T01:28:47.250827Z",
  "github_url": "https://github.com/axiomhq/mcp-server-axiom",
  "repository": {
    "name": "mcp-server-axiom",
    "full_name": "axiomhq/mcp-server-axiom",
    "description": "Axiom Model Context Protocol Server",
    "html_url": "https://github.com/axiomhq/mcp-server-axiom",
    "created_at": "2024-12-05T13:06:26Z",
    "updated_at": "2025-06-16T13:46:05Z",
    "pushed_at": "2025-04-14T18:32:01Z",
    "size": 30,
    "stargazers_count": 49,
    "watchers_count": 49,
    "forks_count": 8,
    "open_issues_count": 4,
    "language": "Go",
    "license": "MIT License",
    "topics": [],
    "default_branch": "master",
    "owner": {
      "login": "axiomhq",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/21122348?v=4",
      "html_url": "https://github.com/axiomhq"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 8,
    "subscribers_count": 6,
    "languages": {
      "Go": 9630
    },
    "language_percentages": {
      "Go": 100
    },
    "pull_requests_count": 4,
    "contributors_count": 2,
    "latest_release": {
      "tag_name": "v0.0.1",
      "name": "v0.0.1",
      "published_at": "2024-12-05T13:16:51Z",
      "body": "## Changelog\n* e302791 Initial commit\n* f93ef32 fix config.txt in README\n* 2b828eb fix goreleaser.yml\n\n",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v0.0.1",
        "commit_sha": "2b828eb0c5c9cd3e0b7aafa2b912b13a7fa529e6"
      }
    ],
    "latest_version": "v0.0.1"
  },
  "readme": "# mcp-server-axiom\n\nA [Model Context Protocol](https://modelcontextprotocol.io/) server implementation for [Axiom](https://axiom.co) that enables AI agents to query your data using Axiom Processing Language (APL).\n\n## Status\n\nWorks with Claude desktop app. Implements two MCP [tools](https://modelcontextprotocol.io/docs/concepts/tools):\n\n- queryApl: Execute APL queries against Axiom datasets\n- listDatasets: List available Axiom datasets\n\nNo support for MCP [resources](https://modelcontextprotocol.io/docs/concepts/resources) or [prompts](https://modelcontextprotocol.io/docs/concepts/prompts) yet.\n\n## Installation\n\n### Releases\n\nDownload the latest built binary from the [releases page](https://github.com/axiomhq/axiom-mcp/releases).\n\n### Source\n\n```bash\ngo install github.com/axiomhq/axiom-mcp@latest\n```\n\n## Configuration\n\nConfigure using one of these methods:\n\n### Config File Example (config.txt):\n```txt\ntoken xaat-your-token\nurl https://api.axiom.co\nquery-rate 1\nquery-burst 1\ndatasets-rate 1\ndatasets-burst 1\n```\n\n### Command Line Flags:\n```bash\naxiom-mcp \\\n  -token xaat-your-token \\\n  -url https://api.axiom.co \\\n  -query-rate 1 \\\n  -query-burst 1 \\\n  -datasets-rate 1 \\\n  -datasets-burst 1\n```\n\n### Environment Variables:\n```bash\nexport AXIOM_TOKEN=xaat-your-token\nexport AXIOM_URL=https://api.axiom.co\nexport AXIOM_ORG_ID=your-org-id\nexport AXIOM_QUERY_RATE=1\nexport AXIOM_QUERY_BURST=1\nexport AXIOM_DATASETS_RATE=1\nexport AXIOM_DATASETS_BURST=1\n```\n\n## Usage\n\n1. Create a config file:\n```bash\necho \"token xaat-your-token\" > config.txt\n```\n\n2. Configure the Claude app to use the MCP server:\n\n```bash\ncode ~/Library/Application\\ Support/Claude/claude_desktop_config.json\n```\n\n```json\n{\n  \"mcpServers\": {\n    \"axiom\": {\n      \"command\": \"/path/to/your/axiom-mcp-binary\",\n      \"args\" : [\"--config\", \"/path/to/your/config.txt\"],\n      \"env\": { // Alternatively, you can set the environment variables here\n        \"AXIOM_TOKEN\": \"xaat-your-token\",\n        \"AXIOM_URL\": \"https://api.axiom.co\",\n        \"AXIOM_ORG_ID\": \"your-org-id\"\n      }\n    }\n  }\n}\n```\n\n## License\n\nMIT License - see LICENSE file\n"
}