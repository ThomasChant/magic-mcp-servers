{
  "mcp_name": "kukapay/token-minter-mcp",
  "mcp_description": "🐍 ☁️ -  An MCP server providing tools for AI agents to mint ERC-20 tokens across multiple blockchains.",
  "mcp_id": "kukapay_token-minter-mcp",
  "fetch_timestamp": "2025-06-23T06:00:49.860543Z",
  "github_url": "https://github.com/kukapay/token-minter-mcp",
  "repository": {
    "name": "token-minter-mcp",
    "full_name": "kukapay/token-minter-mcp",
    "description": "An MCP server providing tools for AI agents to mint ERC-20 tokens across multiple blockchains.",
    "html_url": "https://github.com/kukapay/token-minter-mcp",
    "created_at": "2025-03-19T14:18:31Z",
    "updated_at": "2025-05-26T20:11:29Z",
    "pushed_at": "2025-04-28T12:09:32Z",
    "size": 170,
    "stargazers_count": 13,
    "watchers_count": 13,
    "forks_count": 6,
    "open_issues_count": 2,
    "language": "JavaScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "kukapay",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/201164822?v=4",
      "html_url": "https://github.com/kukapay"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 6,
    "subscribers_count": 1,
    "languages": {
      "JavaScript": 19087,
      "Solidity": 596
    },
    "language_percentages": {
      "JavaScript": 96.97,
      "Solidity": 3.03
    },
    "pull_requests_count": 2,
    "contributors_count": 2,
    "package_json_version": "1.0.1"
  },
  "readme": "[![MseeP.ai Security Assessment Badge](https://mseep.net/mseep-audited.png)](https://mseep.ai/app/kukapay-token-minter-mcp)\n\n# Token Minter MCP\n\nAn MCP server providing tools for AI agents to mint ERC-20 tokens, supporting 21 blockchains.\n\n![License](https://img.shields.io/badge/license-MIT-blue.svg)\n![Node.js](https://img.shields.io/badge/Node.js-18.x-green.svg)\n![Status](https://img.shields.io/badge/status-active-brightgreen.svg)\n\n## Features\n\n- Deploy new ERC-20 tokens with customizable parameters.\n- Query token metadata (name, symbol, decimals, total supply).\n- Initiate token transfers (returns transaction hash without confirmation).\n- Retrieve transaction details by hash.\n- Check native token balance of the current account.\n- Access token metadata via URI.\n- Interactive prompt for deployment guidance.\n\n### Tools\n\n- **deployToken**: Deploys a new ERC-20 token (name, symbol, initialSupply, decimals, chainId).\n- **transferToken**: Transfers ERC-20 tokens (tokenAddress, toAddress, amount, chainId).\n- **getTransactionInfo**: Retrieves transaction details (txHash, chainId).\n- **getTokenBalance**: Queries the balance of a specific ERC-20 token for the current account.\n- **getTokenInfo**: Queries ERC-20 token metadata (tokenAddress, chainId).\n- **getBalance**: Checks native token balance (chainId).\n\n### Resources\n\n- **tokenMetadata**: Exposes token metadata via `token://{chainId}/{address}`.\n\n### Prompts\n\n- **deployTokenGuide**: Guides token deployment with required parameters (chainId).\n\n## Prerequisites\n\n- [Node.js](https://nodejs.org/) v18.x or higher\n- [npm](https://www.npmjs.com/) (typically bundled with Node.js)\n- A valid [Infura API key](https://infura.io/) for EVM network access\n- An Ethereum private key for signing transactions\n\n## Installation\n\n1. **Clone the Repository**:\n   ```bash\n   git clone https://github.com/kukapay/token-minter-mcp.git\n   cd token-minter-mcp/server\n   ```\n\n2. **Install Dependencies**:\n   ```bash\n   npm install\n   ```\n\n## Configuration\n\n```json\n{\n  \"mcpServers\": {\n    \"Token-Minter-MCP\": {\n      \"command\": \"node\",\n      \"args\": [\"path/to/token-minter-mcp/server/index.js\"],\n      \"env\": {\n        \"INFURA_KEY\": \"your infura key\",\n        \"PRIVATE_KEY\": \"your private key\"\n      }\n    }\n  }\n}\n```\n\n\n\n## Usage\n\n1. **Examples**:\n\n    > I want to create a new token called 'RewardToken' with the symbol 'RWD' on Arbitrum. It should have 5 million tokens in initial supply and use 6 decimal places.\n    \n    ```\n    Token deployment initiated on Arbitrum (chainId: 42161)!\n    Name: RewardToken\n    Symbol: RWD\n    Decimals: 6\n    Initial Supply: 5000000 tokens\n    Transaction Hash: 0xabc123...\n    Note: Use 'getTransactionInfo' to check deployment status.\n    ```\n\n    > Can you tell me how much POL I have in my wallet on the Polygon network?\n\n    ```\n    Account Balance on Polygon (chainId: 137):\n    Address: 0xYourAddressHere\n    Balance: 25.3478 POL\n    ```\n    \n    > What’s the balance of my newly created token on Polygon?\n    \n    ```\n    Token Balance on Polygon (chainId: 137):\n    Address: 0xYourAddressHere\n    Token: 0xYourTokenAddressHere\n    Symbol: ABCD\n    Balance: 10000000.00 ABCD\n    ```    \n\n    > Please transfer 150.75 USDC from my account to 0xRecipientAddressHere on Polygon.\"\n\n    ```\n    Transfer initiated on Polygon (chainId: 137)!\n    Token: 0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174\n    To: 0xRecipientAddressHere\n    Amount: 150.75 (150.75 tokens)\n    Transaction Hash: 0xdef456...\n    Note: Use 'getTransactionInfo' to check transfer status.\n    ```\n\n    > What’s the status of my token deployment transaction with hash 0xabc123... on Arbitrum?\n\n    ```\n    Transaction Info on Arbitrum (chainId: 42161):\n    Hash: 0xabc123...\n    From: 0xYourAddressHere\n    To: Contract Creation\n    Value: 0 ETH\n    Status: Success\n    Deployed Contract Address: 0xNewTokenAddressHere\n    ```\n\n    > Give me the details of the token at address 0xNewTokenAddressHere on Arbitrum.\n\n    ```\n    Token Info on Arbitrum (chainId: 42161):\n    Address: 0xNewTokenAddressHere\n    Name: RewardToken\n    Symbol: RWD\n    Decimals: 6\n    Total Supply: 5000000\n    ```\n\n    > How do I deploy a token on Polygon? What details do I need to provide?\n\n    ```\n    To deploy a token on Polygon (chainId: 137), use the \"deployToken\" tool with these parameters:\n    - name: The token's full name (e.g., \"MyToken\")\n    - symbol: The token's ticker (e.g., \"MTK\")\n    - initialSupply: Amount in token units (e.g., 1000000 for 1M tokens, default 1,000,000)\n    - decimals: Optional number of decimals (default is 18)\n    - chainId: Optional chain ID (default is 1 for Ethereum)\n    ```\n\n2. **Local Testing**:\n\n    Intall dependencies:\n    \n    ```bash\n    cd token-minter-mcp\n    npm install\n    ```\n\n    Start a local Hardhat node:\n    \n    ```\n    npx hardhat node\n    ```\n    \n    Use chainId: 1337 in your prompts to test locally.  \n\n## Supported Networks\n\n| Chain ID       | Network Name | Native Token |\n|----------------|--------------|--------------|\n| 1              | Ethereum     | ETH          |\n| 137            | Polygon      | POL          |\n| 56             | BSC          | BNB          |\n| 42161          | Arbitrum     | ETH          |\n| 10             | Optimism     | ETH          |\n| 59144          | Linea        | ETH          |\n| 8453           | Base         | ETH          |\n| 81457          | Blast        | ETH          |\n| 11297108109    | Palm         | PALM         |\n| 43114          | Avalanche    | AVAX         |\n| 42220          | Celo         | CELO         |\n| 324            | zkSync       | ETH          |\n| 5000           | Mantle       | MNT          |\n| 204            | opBNB        | BNB          |\n| 534352         | Scroll       | ETH          |\n| 1923           | Swellchain   | ETH          |\n| 130            | Unichain     | ETH          |\n| 23448594291968334 | Starknet  | ETH          |\n| 80094          | Berachain    | BERA         |\n| 999            | Hyperliquid  | HYPE         |\n| 146            | Sonic        | S            |\n| 1337           | Localhost    | ETH          |\n    \n\n## License\n\nThis project is licensed under the [MIT License](LICENSE). See the `LICENSE` file for details.\n\n"
}