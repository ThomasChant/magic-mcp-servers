{
  "mcp_name": "liorfranko/home-assistant-mcp",
  "mcp_description": "Integrate Anthropic's Claude with Home Assistant for seamless natural language control and monitoring of home automation systems.",
  "mcp_id": "liorfranko_home-assistant-mcp",
  "fetch_timestamp": "2025-06-23T06:12:16.250893Z",
  "github_url": "https://github.com/liorfranko/home-assistant-mcp",
  "repository": {
    "name": "home-assistant-mcp",
    "full_name": "liorfranko/home-assistant-mcp",
    "description": null,
    "html_url": "https://github.com/liorfranko/home-assistant-mcp",
    "created_at": "2025-04-13T20:26:15Z",
    "updated_at": "2025-04-26T17:55:28Z",
    "pushed_at": "2025-04-26T17:55:25Z",
    "size": 120,
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "TypeScript",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "liorfranko",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/20726865?v=4",
      "html_url": "https://github.com/liorfranko"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 178738,
      "JavaScript": 304
    },
    "language_percentages": {
      "TypeScript": 99.83,
      "JavaScript": 0.17
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "package_json_version": "1.0.0"
  },
  "readme": "# 🏡 Home Assistant MCP (Model Context Protocol) 🚀\n\n**The AI-powered bridge between you and your smart home.**  \nControl, monitor, and automate your Home Assistant and Node-RED setup using natural language and powerful tools—right from your favorite AI assistant!\n\n---\n\n## ✨ Features at a Glance\n\n- 🤖 **AI-Driven Automations**: List, create, update, and delete automations with ease.\n- 💡 **Entity Control**: Manage lights, switches, sensors, and more—individually or in bulk.\n- 🎵 **Media Player Magic**: Play, pause, adjust volume, and control your home's soundscape.\n- 🔄 **Real-Time Updates**: Get instant feedback and event-driven automations via WebSocket.\n- 🛠️ **Node-RED Integration**: Full flow management and deployment.\n- 🖥️ **Dashboard Management**: API and YAML-based Lovelace dashboard tools.\n- 🧩 **Modular & Extensible**: Add new tools, domains, and integrations with minimal effort.\n- 🔒 **Secure by Design**: Token-based authentication and environment-based configuration.\n- 🧪 **Battle-Tested**: All tests pass after every refactor!\n\n---\n\n## 🚀 Quick Start\n\n### 1️⃣ With Cursor MCP\n\n```bash\ngit clone https://github.com/yourusername/home-assistant-mcp.git\ncd home-assistant-mcp\nnpm install\nnpm run build\n```\n\nCreate `.cursor/mcp.json`:\n\n```json\n{\n  \"mcpServers\": {\n    \"home-assistant\": {\n      \"command\": \"node\",\n      \"args\": [\"<path/to/your/dist/folder>\"],\n      \"env\": {\n        \"HA_URL\": \"http://homeassistant.local:8123\",\n        \"HA_TOKEN\": \"your_long_lived_access_token\",\n        \"HA_WEBSOCKET_URL\": \"ws://homeassistant.local:8123/api/websocket\",\n        \"NODE_RED_URL\": \"http://homeassistant.local:1880\",\n        \"NODE_RED_USERNAME\": \"your_node_red_username\",\n        \"NODE_RED_PASSWORD\": \"your_node_red_password\"\n      }\n    }\n  }\n}\n```\n\n> 💡 **Tip:** Open Cursor's chat and try:  \n> _\"List all my Home Assistant automations\"_\n\n---\n\n### 2️⃣ Standalone Mode\n\n```bash\ngit clone https://github.com/yourusername/home-assistant-mcp.git\ncd home-assistant-mcp\nnpm install\n```\n\nCreate a `.env` file:\n\n```\nHA_URL=http://homeassistant.local:8123\nHA_TOKEN=your_long_lived_access_token\nHA_WEBSOCKET_URL=ws://homeassistant.local:8123/api/websocket\nNODE_RED_URL=http://homeassistant.local:1880\nNODE_RED_USERNAME=your_node_red_username\nNODE_RED_PASSWORD=your_node_red_password\n```\n\nBuild and start:\n\n```bash\nnpm run build\nnpm start\n```\n\n---\n\n## 🧑‍💻 Development\n\n- **Hot reload:** `npm run dev`\n- **Run tests:** `npm test`\n- **Lint:** `npm run lint`\n- **Format:** `npm run format`\n\n> ✅ All tests pass after every refactor!\n\n---\n\n## 🛠️ Tool Reference & Examples\n\n### Automations\n\n- **List automations:**  \n  _\"Show me all automations\"_\n- **Create automation:**  \n  _\"Create an automation to turn on the living room light at sunset\"_\n\n### Entities\n\n- **List entities:**  \n  _\"List all lights\"_\n- **Update entity:**  \n  _\"Turn off the kitchen light\"_\n\n### Media Players\n\n- **Control playback:**  \n  _\"Pause the living room TV\"_\n- **Set volume:**  \n  _\"Set the bedroom speaker to 50%\"_\n\n### Node-RED\n\n- **List flows:**  \n  _\"Show all Node-RED flows\"_\n- **Deploy flows:**  \n  _\"Deploy Node-RED flows\"_\n\n### Dashboards\n\n- **List dashboards:**  \n  _\"List all Lovelace dashboards\"_\n- **Update dashboard:**  \n  _\"Update the main dashboard to add a new card\"_\n\n---\n\n## 🤖 More LLM Prompt Examples\n\n- 🏠 **Home Control:**\n  - _\"Dim the living room lights to 30% at 8pm every night.\"_\n  - _\"What sensors are currently open?\"_\n  - _\"Turn off all lights in the house.\"_\n  - _\"Is the garage door open?\"_\n\n- 🔔 **Automations & Scheduling:**\n  - _\"Create an automation to notify me if the front door is left open for more than 5 minutes.\"_\n  - _\"Disable the 'Good Night' automation until tomorrow.\"_\n  - _\"List automations that control the kitchen lights.\"_\n\n- 🎶 **Media & Entertainment:**\n  - _\"Play jazz on the living room speakers.\"_\n  - _\"Mute all media players.\"_\n  - _\"What is currently playing in the bedroom?\"_\n\n- 🧑‍🔧 **Node-RED & Advanced Flows:**\n  - _\"Show me all Node-RED flows that use the 'motion detected' event.\"_\n  - _\"Update the 'morning routine' flow to include weather forecast.\"_\n\n- 🖥️ **Dashboards & UI:**\n  - _\"Add a weather card to the main dashboard.\"_\n  - _\"Remove the 'energy usage' card from the overview dashboard.\"_\n\n- 🎭 **Scenes & Themes:**\n  - _\"Activate the 'Movie Night' scene.\"_\n  - _\"Switch to dark theme at sunset automatically.\"_\n\n- 🔄 **Updates & Maintenance:**\n  - _\"Check for Home Assistant updates.\"_\n  - _\"Update all add-ons to the latest version.\"_\n\n- 🛠️ **Troubleshooting & Info:**\n  - _\"Why did the 'morning lights' automation fail?\"_\n  - _\"Show me the last 10 log entries for the thermostat.\"_\n  - _\"Validate my Home Assistant configuration.\"_\n\n- 📦 **MQTT & Integrations:**\n  - _\"Publish 'ON' to topic 'home/garden/lights'.\"_\n  - _\"Subscribe to MQTT topic 'home/alerts'.\"_\n\n- 🕹️ **Custom Services:**\n  - _\"Call the 'vacuum.start' service for the living room vacuum.\"_\n  - _\"Restart Home Assistant core.\"_\n\n---\n\n## 🏗️ Architectural Patterns\n\n- 🧩 **Modular, domain-driven tool architecture**\n- 🔌 **REST & WebSocket separation**\n- 🗃️ **Explicit tool registration in `src/index.ts`**\n- 🛡️ **Strong typing & validation**\n- 🕹️ **Observer/EventEmitter for real-time events**\n- 🏭 **Factory & strategy for tool creation**\n- 🦾 **Singleton WebSocket client**\n- 🧪 **Comprehensive error handling & automated testing**\n\n---\n\n## 🗂️ Project Structure\n\n```\nsrc/\n  config/         # Configuration logic\n  tools/          # All tool implementations (REST & WebSocket)\n  types/          # TypeScript type definitions\n  utils/          # API & WebSocket utilities\n  index.ts        # Explicit tool registration\ndist/             # Compiled output\n```\n\n---\n\n## 🔐 Security\n\n- Keep your Home Assistant token safe!\n- Use a restricted user for the access token.\n- All WebSocket connections are authenticated.\n\n---\n\n## 🆘 Troubleshooting\n\n- **Node.js error?**  \n  Use Node.js v20.10.0+ (`nvm install 20.10.0`)\n- **Connection issues?**  \n  Check your Home Assistant and Node-RED URLs and tokens.\n- **Test failures?**  \n  Run `npm test` and review the output.\n\n---\n\n## 📝 License\n\nMIT\n\n---\n\n## ⭐️ Contributing\n\n1. Fork the repo\n2. Create a feature branch\n3. Add tests for new features\n4. Ensure all tests pass (`npm test`)\n5. Submit a pull request!\n\n---\n\n## 💬 Example Usage\n\n```bash\n# List all automations\ncurl -X GET http://localhost:3000/api/automations -H 'Authorization: ApiKey <your_token>'\n\n# Turn on a light\ncurl -X POST http://localhost:3000/api/action \\\n  -H 'Authorization: ApiKey <your_token>' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\"action\": \"turn_on_lights\", \"parameters\": {\"room\": \"living_room\"}}'\n```\n\n---\n\n## 📎 Resources\n\n- [Home Assistant Docs](https://www.home-assistant.io/docs/)\n- [Node-RED Docs](https://nodered.org/docs/)\n- [Project GitHub](https://github.com/yourusername/home-assistant-mcp)\n"
}