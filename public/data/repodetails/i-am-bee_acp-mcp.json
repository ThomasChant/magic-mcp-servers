{
  "mcp_name": "i-am-bee/acp-mcp",
  "mcp_description": "üêç üí¨ - An MCP server acting as an adapter into the [ACP](https://agentcommunicationprotocol.dev) ecosystem. Seamlessly exposes ACP agents to MCP clients, bridging the communication gap between the two protocols.",
  "mcp_id": "i-am-bee_acp-mcp",
  "fetch_timestamp": "2025-06-23T04:54:18.690794Z",
  "github_url": "https://github.com/i-am-bee/acp-mcp",
  "repository": {
    "name": "acp-mcp",
    "full_name": "i-am-bee/acp-mcp",
    "description": null,
    "html_url": "https://github.com/i-am-bee/acp-mcp",
    "created_at": "2025-04-28T07:13:14Z",
    "updated_at": "2025-06-21T18:01:39Z",
    "pushed_at": "2025-05-09T05:21:00Z",
    "size": 357,
    "stargazers_count": 20,
    "watchers_count": 20,
    "forks_count": 3,
    "open_issues_count": 1,
    "language": "Python",
    "license": "Apache License 2.0",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "i-am-bee",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/178592583?v=4",
      "html_url": "https://github.com/i-am-bee"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 3,
    "subscribers_count": 6,
    "languages": {
      "Python": 11790,
      "Dockerfile": 114
    },
    "language_percentages": {
      "Python": 99.04,
      "Dockerfile": 0.96
    },
    "pull_requests_count": 4,
    "contributors_count": 2,
    "latest_release": {
      "tag_name": "v0.4.2",
      "name": "v0.4.2",
      "published_at": "2025-05-08T07:51:37Z",
      "body": "## What's Changed\r\n* fix: resource url parsing by @pilartomas in https://github.com/i-am-bee/acp-mcp/pull/6\r\n\r\n\r\n**Full Changelog**: https://github.com/i-am-bee/acp-mcp/compare/v0.4.1...v0.4.2",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v0.4.2",
        "commit_sha": "48b449d8092447b6508930c3f904a11b0c981d92"
      },
      {
        "name": "v0.4.1",
        "commit_sha": "4f9bd24019ecfbe55cea78a99c7ab7307c7bde00"
      },
      {
        "name": "v0.4.0",
        "commit_sha": "aff209d5a19be419b980f8b862ea19b96c0fd60c"
      },
      {
        "name": "v0.2.0",
        "commit_sha": "5177a2d2ac14236e7fc54e094481268d1c035dee"
      },
      {
        "name": "v0.1.0",
        "commit_sha": "2fcfc89fd7ea7d3cf8822d81744a6f6f81947e36"
      },
      {
        "name": "v0.0.9",
        "commit_sha": "8b7827e42e34cdca31e9a8653ca7b71b32150d9f"
      },
      {
        "name": "v0.0.8",
        "commit_sha": "a7e7c3967ac987b22091274cea8895316dd5a444"
      },
      {
        "name": "v0.0.7",
        "commit_sha": "5dcee1f90f525d775d9ffe0f16f7aa7408f4fde3"
      },
      {
        "name": "v0.0.6",
        "commit_sha": "59ac64b5e3b14062c8b011c29f5a9099873bd663"
      },
      {
        "name": "v0.0.5",
        "commit_sha": "54ff7e27bf6416fc865acb3c93f143a271318ef7"
      }
    ],
    "latest_version": "v0.4.2"
  },
  "readme": "<div align=\"left\">\n\n<h1>ACP to MCP Adapter</h1>\n\n**Connect ACP Agents to MCP Applications Seamlessly**\n\n[![Apache 2.0](https://img.shields.io/badge/Apache%202.0-License-EA7826?style=plastic&logo=apache&logoColor=white)](https://github.com/i-am-bee/beeai-framework?tab=Apache-2.0-1-ov-file#readme)\n[![Follow on Bluesky](https://img.shields.io/badge/Follow%20on%20Bluesky-0285FF?style=plastic&logo=bluesky&logoColor=white)](https://bsky.app/profile/beeaiagents.bsky.social)\n[![Join our Discord](https://img.shields.io/badge/Join%20our%20Discord-7289DA?style=plastic&logo=discord&logoColor=white)](https://discord.com/invite/NradeA6ZNF)\n[![LF AI & Data](https://img.shields.io/badge/LF%20AI%20%26%20Data-0072C6?style=plastic&logo=linuxfoundation&logoColor=white)](https://lfaidata.foundation/projects/)\n\n</div>\n\nThe **ACP to MCP Adapter** is a lightweight standalone server that acts as a bridge between two AI ecosystems: **Agent Communication Protocol (ACP)** for agent-to-agent communication and **Model Context Protocol (MCP)** for connecting AI models to external tools. It allows MCP applications (like **Claude Desktop**) to discover and interact with ACP agents as resources.\n\n## Capabilities & Tradeoffs\n\nThis adapter enables interoperability between ACP and MCP with specific benefits and tradeoffs:\n\n### Benefits\n\n- Makes ACP agents discoverable as MCP resources\n- Exposes ACP agent runs as MCP tools\n- Bridges two ecosystems with minimal configuration\n\n### Current Limitations\n\n- ACP agents become MCP tools instead of conversational peers\n- No streaming of incremental updates\n- No shared memory across servers\n- Basic content translation between formats without support for complex data structures\n\nThis adapter is best for situations where you need ACP agents in MCP environments and accept these compromises.\n\n## Requirements\n\n- Python 3.11 or higher\n- Installed Python packages: `acp-sdk`, `mcp`\n- An ACP server running (Tip: Follow the [ACP quickstart](https://github.com/i-am-bee/acp/blob/main/README.md#quickstart) to start one easily)\n- An MCP client application (We use [Claude Desktop](https://claude.ai/download) in the quickstart)\n\n## Quickstart\n\n**1. Run the Adapter**\n\nStart the adapter and connect it to your ACP server:\n\n```sh\nuvx acp-mcp http://localhost:8000\n```\n\n> [!NOTE]\n> Replace `http://localhost:8000` with your ACP server URL if different.\n\n<details> <summary><strong>Prefer Docker?</strong></summary>\n\n```sh\ndocker run -i --rm ghcr.io/i-am-bee/acp-mcp http://host.docker.internal:8000\n```\n\n**Tip:** `host.docker.internal` allows Docker containers to reach services running on the host (adjust if needed for your setup).\n\n</details> \n\n**2. Connect via Claude Desktop**\n\nTo connect via Claude Desktop, follow these steps:\n1. Open the Claude menu on your computer and navigate to Settings (note: this is separate from the in-app Claude account settings).\n2. Navigate to Developer > Edit Config\n3. The config file will be created here:\n  - macOS: `~/Library/Application Support/Claude/claude_desktop_config.json`\n  - Windows: `%APPDATA%\\Claude\\claude_desktop_config.json`\n4. Edit the file with the following:\n\n```json\n{\n  \"mcpServers\": {\n    \"acp-local\": {\n      \"command\": \"uvx\",\n      \"args\": [\"acp-mcp\", \"http://localhost:8000\"]\n    }\n  }\n}\n```\n  \n<details> <summary><strong>Prefer Docker?</strong></summary>\n  \n```json\n{\n  \"mcpServers\": {\n    \"acp-docker\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"-i\",\n        \"--rm\",\n        \"ghcr.io/i-am-bee/acp-mcp\",\n        \"http://host.docker.internal:8000\"\n      ]\n    }\n  }\n}\n```\n\n</details>\n\n**3. Restart Claude Desktop and Invoke Your ACP Agent**\n\nAfter restarting, invoke your ACP agent with:\n\n```\nuse \"echo\" agent with the \"Good morning!\" input\n```\n\nAccept the integration and observe the agent running.\n\n![Screenshot of Claude Desktop invoking the echo agent](docs/assets/running_echo.png)\n\n![MCP Resources](docs/assets/attach-from-mcp.png)\n\n> [!TIP]\n> ACP agents are also registered as **MCP resources** in Claude Desktop.<br />\n> To attach them manually, click the Resources icon (two plugs connecting) in the sidebar, labeled \"Attach from MCP\", then select an agent like `acp://agents/echo`.\n\n## How It Works\n\n1. The adapter connects to your ACP server.\n2. It automatically discovers all registered ACP agents.\n3. Each ACP agent is registered in MCP as a resource using the URI: `acp://agents/{agent_name}`\n4. The adapter provides a new MCP tool called `run_agent`, letting MCP apps easily invoke ACP agents.\n\n## Supported Transports\n\n- Currently supports Stdio transport\n\n---\n\nDeveloped by contributors to the BeeAI project, this initiative is part of the [Linux Foundation AI & Data program](https://lfaidata.foundation/projects/). Its development follows open, collaborative, and community-driven practices.\n"
}