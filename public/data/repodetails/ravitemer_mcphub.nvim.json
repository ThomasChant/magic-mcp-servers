{
  "mcp_name": "mcphub.nvim",
  "mcp_description": "",
  "mcp_id": "ravitemer_mcphub.nvim",
  "fetch_timestamp": "2025-06-23T06:37:15.867789Z",
  "github_url": "https://github.com/ravitemer/mcphub.nvim",
  "repository": {
    "name": "mcphub.nvim",
    "full_name": "ravitemer/mcphub.nvim",
    "description": "An MCP client for Neovim that seamlessly integrates MCP servers into your editing workflow with an intuitive interface for managing, testing, and using MCP servers with your favorite chat plugins.",
    "html_url": "https://github.com/ravitemer/mcphub.nvim",
    "created_at": "2025-02-19T06:55:16Z",
    "updated_at": "2025-06-23T05:04:08Z",
    "pushed_at": "2025-06-23T05:04:13Z",
    "size": 6442,
    "stargazers_count": 1187,
    "watchers_count": 1187,
    "forks_count": 47,
    "open_issues_count": 5,
    "language": "Lua",
    "license": "MIT License",
    "topics": [
      "avante",
      "chatgpt",
      "chatplugin",
      "claude-ai",
      "codecompanion",
      "llm",
      "mcp",
      "mcp-client",
      "mcp-hub",
      "mcp-server",
      "mcp-servers",
      "model-context-protocol",
      "neovim",
      "neovim-plugin",
      "nvim",
      "nvim-plugin"
    ],
    "default_branch": "main",
    "owner": {
      "login": "ravitemer",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/80028678?v=4",
      "html_url": "https://github.com/ravitemer"
    },
    "has_issues": true,
    "has_projects": false,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": true,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 47,
    "subscribers_count": 7,
    "languages": {
      "Lua": 546923,
      "Makefile": 1518,
      "Nix": 1229
    },
    "language_percentages": {
      "Lua": 99.5,
      "Makefile": 0.28,
      "Nix": 0.22
    },
    "pull_requests_count": 40,
    "contributors_count": 23,
    "latest_release": {
      "tag_name": "v5.8.0",
      "name": "v5.8.0",
      "published_at": "2025-06-22T19:09:32Z",
      "body": "### Added\n\n- Function-based auto-approval system for MCP tool calls (#173)\n  - `auto_approve` can now be a function that receives tool call parameters\n  - Function receives `server_name`, `tool_name`, `arguments`, `action`, `uri`, and `is_auto_approved_in_server`\n  - Return `true` to approve, `false` to prompt, or `string` to deny with custom error message\n  - Enables sophisticated approval logic based on tool arguments and context\n  - Backward compatible with existing boolean and server-level configuration\n\n### Changed\n\n- **Breaking**: Removed automatic `vim.g.codecompanion_auto_tool_mode` checking in CodeCompanion integration\n  - Users can achieve the same behavior by checking this variable in their custom `auto_approve` function\n  - Simplifies auto-approval logic and removes plugin-specific dependencies\n- Refactored extension system for better modularity and type safety\n- Updated auto-approval priority: function-based ‚Üí server config ‚Üí user prompt\n- Enhanced hub startup logic with better state management and restart handling\n\n### Documentation\n\n- Added comprehensive function-based auto-approval examples and parameter documentation\n- Updated integration guides for Avante and CodeCompanion with new auto-approval patterns\n- Added real-world examples for GitHub access control and project-scoped operations\n\n",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v5.8.0",
        "commit_sha": "f95d346668eb7ee39e1b714736a807449c2422c1"
      },
      {
        "name": "v5.7.5",
        "commit_sha": "85a7a659fc82da1429a2241ab61e9ce07b3db374"
      },
      {
        "name": "v5.7.4",
        "commit_sha": "a51c678a313a8798de6ff0fc9f8b0f06a1aa86e1"
      },
      {
        "name": "v5.7.3",
        "commit_sha": "4888f27a2c0122d351a337e7576797f4a63df166"
      },
      {
        "name": "v5.7.2",
        "commit_sha": "72109843e29b9cf3ab663a799934bb498518bf00"
      },
      {
        "name": "v5.7.1",
        "commit_sha": "8abf2c6fbbec5da2f53772379e2def0a53554492"
      },
      {
        "name": "v5.7.0",
        "commit_sha": "d80c1286a3efe2157b173e0823e83d39ff563f45"
      },
      {
        "name": "v5.6.1",
        "commit_sha": "08cd58b0263b20638973ba57950d15f1c3b7b427"
      },
      {
        "name": "v5.6.0",
        "commit_sha": "feaa49574d94c88c3ee7cdf1bb10d46cf31755b0"
      },
      {
        "name": "v5.5.0",
        "commit_sha": "24bc70d5e382795f38fe11a488dfe14cd4de6e66"
      }
    ],
    "latest_version": "v5.8.0"
  },
  "readme": "<div align=\"center\" markdown=\"1\">\n   <sup>Special thanks to:</sup>\n   <br>\n   <br>\n   <a href=\"https://www.warp.dev/mcp-hub-nvim\">\n      <img alt=\"Warp sponsorship\" src=\"https://github.com/user-attachments/assets/fae9c70d-51de-43fa-af65-c82228ba67f9\">\n   </a>\n\n### [The Intelligent Terminal](https://www.warp.dev/mcp-hub-nvim)\n\n[Run mcphub.nvim in Warp today](https://www.warp.dev/mcp-hub-nvim)<br>\n\n</div>\n<hr>\n\n<div align=\"center\" markdown=\"1\">\n<h1> <img width=\"28px\" style=\"display:inline;\" src=\"https://github.com/user-attachments/assets/5cdf9d69-3de7-458b-a670-5153a97c544a\"/> MCP HUB</h1>\n\n[![Lua](https://img.shields.io/badge/Lua-2C2D72?style=flat-square&logo=lua&logoColor=white)](https://www.lua.org)\n[![NixOS](https://img.shields.io/badge/NixOS-5277C3?style=flat-square&logo=nixos&logoColor=white)](https://nixos.org)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![Discord](https://img.shields.io/badge/Discord-Join-7289DA?style=flat-square&logo=discord&logoColor=white)](https://discord.gg/NTqfxXsNuN)\n</div>\n\nMCP Hub is a MCP client for neovim that seamlessly integrates [MCP (Model Context Protocol)](https://modelcontextprotocol.io/) servers into your editing workflow. It provides an intuitive interface for managing, testing, and using MCP servers with your favorite chat plugins.\n\n![Image](https://github.com/user-attachments/assets/21fe7703-9bc3-4c01-93ce-3230521bd5bf)\n\n## üíú Sponsors\n\n<!-- sponsors --> <p align=\"center\"> <a href=\"https://github.com/CryogenicPlanet\"><img src=\"https://github.com/CryogenicPlanet.png\" width=\"60px\" alt=\"CryogenicPlanet\" /></a> <a href=\"https://github.com/yingmanwumen\"><img src=\"https://github.com/yingmanwumen.png\" width=\"60px\" alt=\"yingmanwumen\" /></a> <a href=\"https://github.com/yetone\"><img src=\"https://github.com/yetone.png\" width=\"60px\" alt=\"Yetone\" /></a> <a href=\"https://github.com/omarcresp\"><img src=\"https://github.com/omarcresp.png\" width=\"60px\" alt=\"omarcresp\" /></a> <a href=\"https://github.com/petermoser\"><img src=\"https://github.com/petermoser.png\" width=\"60px\" alt=\"petermoser\" /></a> <a href=\"https://github.com/watsy0007\"><img src=\"https://github.com/watsy0007.png\" width=\"60px\" alt=\"watsy0007\" /></a> <a href=\"https://github.com/kohane27\"><img src=\"https://github.com/kohane27.png\" width=\"60px\" alt=\"kohane27\" /></a>  <a href=\"https://github.com/copleykj\"><img src=\"https://github.com/copleykj.png\" width=\"60px\" alt=\"Kelly Copley\" /></a></p><!-- sponsors -->\n\n<p align=\"center\">\n  <b>Special thanks to:</b> \n</p>\n<p align=\"center\">\n  <a href=\"https://dub.sh/composio-mcp\" target=\"_blank\"> <img src=\"https://composio.dev/wp-content/uploads/2025/01/Composio-logo-25.png\" height=\"30px\" alt=\"Composio.dev logo\" />  </a>\n</p>\n\n## ‚ú® Features \n\n| Category | Feature | Support | Details |\n|----------|---------|---------|-------|\n| [**Capabilities**](https://modelcontextprotocol.io/specification/2025-03-26/server) ||||\n| | Tools | ‚úÖ | Full support |\n| | üîî Tool List Changed | ‚úÖ | Real-time updates |\n| | Resources | ‚úÖ | Full support |\n| | üîî Resource List Changed | ‚úÖ | Real-time updates |\n| | Resource Templates | ‚úÖ | URI templates |\n| | Prompts | ‚úÖ | Full support |\n| | üîî Prompts List Changed | ‚úÖ | Real-time updates |\n| | Roots | ‚ùå | Not supported |\n| | Sampling | ‚ùå | Not supported |\n| **MCP Server Transports** ||||\n| | [Streamable-HTTP](https://modelcontextprotocol.io/specification/2025-03-26/basic/transports#streamable-http) | ‚úÖ | Primary transport protocol for remote servers |\n| | [SSE](https://modelcontextprotocol.io/specification/2025-03-26/basic/transports#backwards-compatibility) | ‚úÖ | Fallback transport for remote servers |\n| | [STDIO](https://modelcontextprotocol.io/specification/2025-03-26/basic/transports#stdio) | ‚úÖ | For local servers |\n| **Authentication for remote servers** ||||\n| | [OAuth](https://modelcontextprotocol.io/specification/2025-03-26/basic/authorization) | ‚úÖ | With PKCE flow |\n| | Headers | ‚úÖ | For API keys/tokens |\n| **Chat Integration** ||||\n| | [Avante.nvim](https://github.com/yetone/avante.nvim) | ‚úÖ | Tools, resources, resourceTemplates, prompts(as slash_commands) |\n| | [CodeCompanion.nvim](https://github.com/olimorris/codecompanion.nvim) | ‚úÖ | Tools, resources, templates, prompts (as slash_commands), üñº image responses | \n| | [CopilotChat.nvim](https://github.com/CopilotC-Nvim/CopilotChat.nvim) | ‚úÖ | In-built support [Draft](https://github.com/CopilotC-Nvim/CopilotChat.nvim/pull/1029) | \n| **Marketplace** ||||\n| | Server Discovery | ‚úÖ | Browse from verified MCP servers |\n| | Installation | ‚úÖ | Manual and auto install with AI |\n| **Configuration** ||||\n| | Universal `${}` Syntax | ‚úÖ | Environment variables and command execution across all fields |\n| **Advanced** ||||\n| | Smart File-watching | ‚úÖ | Smart updates with config file watching |\n| | Multi-instance | ‚úÖ | All neovim instances stay in sync |\n| | Shutdown-delay | ‚úÖ | Can run as systemd service with configure delay before stopping the hub |\n| | Lua Native MCP Servers | ‚úÖ | Write once , use everywhere. Can write tools, resources, prompts directly in lua |\n| | Dev Mode | ‚úÖ | Hot reload MCP servers on file changes for development |\n\n## üé• Demos\n\n<div align=\"center\">\n<p>\n<h4>MCP Hub + <a href=\"https://github.com/yetone/avante.nvim\">Avante</a> + Figma </h4>\n<video controls muted src=\"https://github.com/user-attachments/assets/e33fb5c3-7dbd-40b2-bec5-471a465c7f4d\"></video>\n</p>\n</div>\n\n\n## üöÄ Getting Started\n\nVisit our [documentation site](https://ravitemer.github.io/mcphub.nvim/) for detailed guides and examples\n\n## üëã Get Help\n\n- Check out the [Troubleshooting guide](https://ravitemer.github.io/mcphub.nvim/troubleshooting)\n- Join our [Discord server](https://discord.gg/NTqfxXsNuN) for discussions, help, and updates\n\n## :gift: Contributing\n\nPlease read the [CONTRIBUTING.md](CONTRIBUTING.md) guide.\n\n## üöß TODO\n\n- [x] Neovim MCP Server (kind of) with better editing, diffs, terminal integration etc (Ideas are welcome)\n- [x] Enhanced help view with comprehensive documentation\n- [x] MCP Resources as variables in chat plugins\n- [x] MCP Prompts as slash commands in chat plugins\n- [x] Enable LLM to start and stop MCP Servers dynamically\n- [x] Support SSE transport\n- [x] Support /slash_commands in avante\n- [x] Support streamable-http transport\n- [x] Support OAuth\n- [x] Add types\n- [x] Better Docs \n- [ ] Add tests\n- [ ] Support #variables in avante\n\n\n## üëè Acknowledgements\n\nThanks to:\n\n- [cline/mcp-marketplace](https://github.com/cline/mcp-marketplace) for providing the marketplace api\n- [nui.nvim](https://github.com/MunifTanjim/nui.nvim) for inspiring our text highlighting utilities\n\n"
}