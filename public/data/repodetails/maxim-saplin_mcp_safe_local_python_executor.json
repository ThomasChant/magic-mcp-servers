{
  "mcp_name": "maxim-saplin/mcp_safe_local_python_executor",
  "mcp_description": "Safe Python interpreter based on HF Smolagents `LocalPythonExecutor`",
  "mcp_id": "maxim-saplin_mcp_safe_local_python_executor",
  "fetch_timestamp": "2025-06-23T06:29:13.428844Z",
  "github_url": "https://github.com/maxim-saplin/mcp_safe_local_python_executor",
  "repository": {
    "name": "mcp_safe_local_python_executor",
    "full_name": "maxim-saplin/mcp_safe_local_python_executor",
    "description": "Stdio MCP Server wrapping custom Python runtime (LocalPythonExecutor) from Hugging Faces' `smolagents` framework. The runtime combines the ease of setup (compared to docker, VM, cloud runtimes) while providing safeguards and limiting operations/imports that are allowed inside the runtime.",
    "html_url": "https://github.com/maxim-saplin/mcp_safe_local_python_executor",
    "created_at": "2025-03-27T12:36:20Z",
    "updated_at": "2025-06-16T21:57:14Z",
    "pushed_at": "2025-06-05T15:00:36Z",
    "size": 156,
    "stargazers_count": 25,
    "watchers_count": 25,
    "forks_count": 6,
    "open_issues_count": 1,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "maxim-saplin",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/7947027?v=4",
      "html_url": "https://github.com/maxim-saplin"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 6,
    "subscribers_count": 1,
    "languages": {
      "Python": 5323,
      "Dockerfile": 400
    },
    "language_percentages": {
      "Python": 93.01,
      "Dockerfile": 6.99
    },
    "pull_requests_count": 2,
    "contributors_count": 2
  },
  "readme": "# Safe Local Python Executor\n\nAn MCP server (stdio transport) that wraps Hugging Face's [`LocalPythonExecutor`](https://github.com/huggingface/smolagents/blob/main/src/smolagents/local_python_executor.py)\n(from the [`smolagents`](https://huggingface.co/docs/smolagents/en/index) framework). It is a custom Python runtime that \nprovides basic isolation/security when running Python code generated by LLMs locally. It does not require Docker or VM.\nThis package allows to expose the Python executor via MCP (Model Context Protocol) as a tool for LLM apps like Claude Desktop, Cursor or any other MCP compatible client.\nIn case of Claude Desktop this tool is an easy way to add a missing Code Interpreter (available as a plugin in ChatGPT for quite a while already).\n\n<img width=\"1032\" alt=\"image\" src=\"https://github.com/user-attachments/assets/3b820bfc-970a-4315-8f2d-970591c6fdae\" />\n\n## Features\n\n- Exposes `run_python` tool\n- Safer execution of Python code compared to direct use of Python `eva()l`\n- Ran via uv in Python venv\n- No file I/O ops are allowed\n- Restricted list of imports\n    - collections\n    - datetime\n    - itertools\n    - math\n    - queue\n    - random\n    - re\n    - stat\n    - statistics\n    - time\n    - unicodedata\n\n## Security\n\nBe careful with execution of code produced by LLM on your machine, stay away from MCP servers that run Python via command line or using `eval()`. The safest option is using a VM or a docker container, though it requires some effort to set-up, consumes resources/slower. There're 3rd party servcices providing Python runtime, though they require registration, API keys etc.\n\n`LocalPythonExecutor` provides a good balance between direct use of local Python environment (which is easier to set-up) AND remote execution in Dokcer container or a VM/3rd party service (which is safe). Hugginng Face team has invested time into creating a quick and safe option to run LLM generated code used by their code agents. This MCP server builds upon it:\n\n>To add a first layer of security, code execution in smolagents is not performed by the vanilla Python interpreter. We have re-built a more secure LocalPythonExecutor from the ground up.\n\nRead more [here](https://huggingface.co/docs/smolagents/en/tutorials/secure_code_execution#local-code-execution).\n\n## Installation and Execution\n\n### Installing via Smithery\n\nTo install Safe Local Python Executor for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@maxim-saplin/mcp_safe_local_python_executor):\n\n```bash\nnpx -y @smithery/cli install @maxim-saplin/mcp_safe_local_python_executor --client claude\n```\n\n### Installing Manually\n1. Install `uv` (e.h. `brew install uv` on macOS or use [official docs](https://docs.astral.sh/uv/getting-started/installation/#__tabbed_1_2))\n2. Clone the repo, change the directory `cd mcp_safe_local_python_executor`\n3. The server can be started via command line `uv run mcp_server.py`, venv will be created automatically, depedencies (smollagents, mcp) will be installed\n\n\n## Configuring Claude Desktop\n\n1. Make sure you have Claude for Desktop installed (download from [claude.ai](https://claude.ai/desktop))\n2. Edit your Claude for Desktop configuration file:\n   - macOS: `~/Library/Application Support/Claude/claude_desktop_config.json`\n   - Windows: `%APPDATA%\\Claude\\claude_desktop_config.json`\n   - Or open Claude Desktop -> Settings -> Developer -> click \"Edit Config\" button\n\n3. Add the following configuration:\n\n```json\n{\n    \"mcpServers\": {\n        \"safe-local-python-executor\": {\n            \"command\": \"uv\",\n            \"args\": [\n                \"--directory\", \n                \"/path/to/mcp_local_python_executor/\",\n                \"run\",\n                \"mcp_server.py\"\n            ]\n        }\n    }\n}\n```\n\n4. Restart Claude for Desktop\n5. The Python executor tool will now be available in Claude (you'll see hammer icon in the message input field)\n\n## Example Prompts\n\nOnce configured, you can use prompts like:\n\n- \"Calculate the factorial of 5 using Python\"\n- \"Create a list of prime numbers up to 100\"\n- \"Solve this equation (use Python): x^2 + 5x + 6 = 0\"\n\n\n## Development\n\nClone the repo. Use `uv` to create venv, install dev dependencies, run tests:\n\n```\nuv venv .venv\nuv sync --group dev\npython -m pytest tests/\n```\n\n-----------------------\n\n<a href=\"https://glama.ai/mcp/servers/@maxim-saplin/mcp_safe_local_python_executor\">\n  <img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/@maxim-saplin/mcp_safe_local_python_executor/badge\" />\n</a>\n\n[![smithery badge](https://smithery.ai/badge/@maxim-saplin/mcp_safe_local_python_executor)](https://smithery.ai/server/@maxim-saplin/mcp_safe_local_python_executor)\n"
}