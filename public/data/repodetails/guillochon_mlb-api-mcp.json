{
  "mcp_name": "guillochon/mlb-api-mcp",
  "mcp_description": "A Python MCP server that acts as a proxy to the freely available MLB API, which provides player info, stats, and game information.",
  "mcp_id": "guillochon_mlb-api-mcp",
  "fetch_timestamp": "2025-06-23T04:16:15.096638Z",
  "github_url": "https://github.com/guillochon/mlb-api-mcp",
  "repository": {
    "name": "mlb-api-mcp",
    "full_name": "guillochon/mlb-api-mcp",
    "description": null,
    "html_url": "https://github.com/guillochon/mlb-api-mcp",
    "created_at": "2025-05-21T16:26:26Z",
    "updated_at": "2025-06-20T19:07:28Z",
    "pushed_at": "2025-06-20T16:21:28Z",
    "size": 28,
    "stargazers_count": 3,
    "watchers_count": 3,
    "forks_count": 1,
    "open_issues_count": 0,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "guillochon",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/4998058?v=4",
      "html_url": "https://github.com/guillochon"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 1,
    "subscribers_count": 1,
    "languages": {
      "Python": 33640,
      "Dockerfile": 923
    },
    "language_percentages": {
      "Python": 97.33,
      "Dockerfile": 2.67
    },
    "pull_requests_count": 3,
    "contributors_count": 1
  },
  "readme": "# MLB API MCP Server\n\nA [Model Context Protocol (MCP)](https://modelcontextprotocol.io/) server that provides comprehensive access to MLB statistics and baseball data through a FastAPI-based interface.\n\n## Overview\n\nThis MCP server acts as a bridge between AI applications and MLB data sources, enabling seamless integration of baseball statistics, game information, player data, and more into AI workflows and applications.\n\n## Features\n\n### MLB Data Access\n- **Current standings** for all MLB teams with flexible filtering by league, season, and date\n- **Game schedules** and results with date range support\n- **Player statistics** including traditional and sabermetric stats (WAR, wOBA, wRC+)\n- **Team information** and rosters with various roster types\n- **Live game data** including boxscores, linescores, and play-by-play\n- **Game highlights** and scoring plays\n- **Player and team search** functionality\n- **Draft information** and award recipients\n- **Game pace statistics** and lineup information\n\n### API Endpoints\n\n#### MLB Endpoints (`/mlb/`)\n- `GET /mlb/standings` - Current MLB standings with league and season filters\n- `GET /mlb/schedule` - Game schedules for specific dates, ranges, or teams\n- `GET /mlb/team/{team_id}` - Detailed team information\n- `GET /mlb/player/{player_id}` - Player biographical information\n- `GET /mlb/boxscore` - Complete game boxscores\n- `GET /mlb/linescore` - Inning-by-inning game scores\n- `GET /mlb/game_highlights` - Video highlights for games\n- `GET /mlb/game_scoring_plays` - Play-by-play data with event filtering\n- `GET /mlb/game_pace` - Game duration and pace statistics\n- `GET /mlb/game_lineup` - Detailed lineup information for games\n- `GET /mlb/player_stats` - Traditional player statistics\n- `GET /mlb/sabermetrics` - Advanced sabermetric statistics (WAR, wOBA, etc.)\n- `GET /mlb/roster` - Team rosters with various roster types\n- `GET /mlb/search_players` - Search players by name\n- `GET /mlb/search_teams` - Search teams by name\n- `GET /mlb/players` - All players for a sport/season\n- `GET /mlb/teams` - All teams for a sport/season\n- `GET /mlb/draft/{year}` - Draft information by year\n- `GET /mlb/awards/{award_id}` - Award recipients\n\n#### Generic Endpoints\n- `GET /current_date` - Current date\n- `GET /current_time` - Current time\n\n### MCP Integration\n- Compatible with MCP-enabled AI applications\n- Tool-based interaction model with comprehensive endpoint descriptions\n- Automatic API documentation generation\n- Schema validation and type safety\n- Full response schema descriptions for better AI integration\n\n## Installation\n\n### Option 1: Local Installation\n\n1. Clone the repository:\n```bash\ngit clone https://github.com/guillochon/mlb-api-mcp.git\ncd mlb-api-mcp\n```\n\n2. Install dependencies:\n```bash\npip install -e .\n```\n\n### Option 2: Docker Installation\n\n1. Clone the repository:\n```bash\ngit clone https://github.com/guillochon/mlb-api-mcp.git\ncd mlb-api-mcp\n```\n\n2. Build the Docker image:\n```bash\ndocker build -t mlb-api-mcp .\n```\n\n3. Run the container:\n```bash\ndocker run -p 8000:8000 mlb-api-mcp\n```\n\nThe server will be available at `http://localhost:8000`.\n\n#### Docker Options\n\nYou can also run the container with additional options:\n\n```bash\n# Run in detached mode\ndocker run -d -p 8000:8000 --name mlb-api-server mlb-api-mcp\n\n# Run with custom port mapping\ndocker run -p 3000:8000 mlb-api-mcp\n\n# View logs\ndocker logs mlb-api-server\n\n# Stop the container\ndocker stop mlb-api-server\n\n# Remove the container\ndocker rm mlb-api-server\n```\n\n## Usage\n\n### Starting the Server\n\nRun the MCP server locally:\n```bash\npython main.py\n```\n\nThe server will start on `http://localhost:8000` with interactive API documentation available at `http://localhost:8000/docs`.\n\n### MCP Client Integration\n\nThis server can be integrated into any MCP-compatible application. The server provides tools for:\n- Retrieving team standings and schedules\n- Getting comprehensive player and team statistics\n- Accessing live game data and historical records\n- Searching for players and teams\n- Fetching sabermetric statistics like WAR\n- And much more...\n\n## API Documentation\n\nOnce the server is running, visit `http://localhost:8000/docs` for comprehensive API documentation including:\n- Available endpoints with detailed descriptions\n- Request/response schemas\n- Interactive testing interface\n- Parameter descriptions and examples\n\n## Dependencies\n\n- **FastAPI**: Modern web framework for building APIs\n- **fastapi-mcp**: MCP integration for FastAPI\n- **python-mlb-statsapi**: Official MLB Statistics API wrapper\n\n## Development\n\nThis project uses:\n- Python 3.10+\n- FastAPI for the web framework\n- Hatchling for build management\n- MLB Stats API for comprehensive baseball data access\n\n## Contributing\n\nContributions are welcome! Please feel free to submit issues or pull requests.\n\n## License\n\nThis project is open source. Please check the license file for details."
}