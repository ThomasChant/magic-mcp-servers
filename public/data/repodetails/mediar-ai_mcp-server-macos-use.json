{
  "mcp_name": "mediar-ai/mcp-server-macos-use",
  "mcp_description": "Swift-based server enabling macOS application control via accessibility APIs, compatible with MCP clients like Claude Desktop.",
  "mcp_id": "mediar-ai_mcp-server-macos-use",
  "fetch_timestamp": "2025-06-23T06:37:32.883235Z",
  "github_url": "https://github.com/mediar-ai/mcp-server-macos-use",
  "repository": {
    "name": "mcp-server-macos-use",
    "full_name": "mediar-ai/mcp-server-macos-use",
    "description": "AI agent that controls computer with OS-level tools, MCP compatible, works with any model",
    "html_url": "https://github.com/mediar-ai/mcp-server-macos-use",
    "created_at": "2025-04-09T22:21:18Z",
    "updated_at": "2025-06-20T15:48:23Z",
    "pushed_at": "2025-04-15T22:37:06Z",
    "size": 1088,
    "stargazers_count": 85,
    "watchers_count": 85,
    "forks_count": 10,
    "open_issues_count": 2,
    "language": "Swift",
    "license": "Other",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "mediar-ai",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/179202840?v=4",
      "html_url": "https://github.com/mediar-ai"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 10,
    "subscribers_count": 3,
    "languages": {
      "Swift": 23212
    },
    "language_percentages": {
      "Swift": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 1
  },
  "readme": "# mcp-server-macos-use\n\nModel Context Protocol (MCP) server in Swift. It allows controlling macOS applications by leveraging the accessibility APIs, primarily through the `MacosUseSDK`.\n\nYou can use it in Claude Desktop or other compatible MCP-client.\n\nThe server listens for MCP commands over standard input/output (`stdio`) and exposes several tools to interact with applications.\n\n\nhttps://github.com/user-attachments/assets/b43622a3-3d20-4026-b02f-e9add06afe2b\n\n## Available Tools\n\nThe server exposes the following tools via the `CallTool` MCP method:\n\n1.  **`macos-use_open_application_and_traverse`**\n    *   **Description:** Opens or activates a specified application and then traverses its accessibility tree.\n    *   **Parameters:**\n        *   `identifier` (String, Required): The application's name, bundle ID, or file path.\n\n2.  **`macos-use_click_and_traverse`**\n    *   **Description:** Simulates a mouse click at specific coordinates within the window of the target application (identified by PID) and then traverses its accessibility tree.\n    *   **Parameters:**\n        *   `pid` (Number, Required): The Process ID (PID) of the target application.\n        *   `x` (Number, Required): The X-coordinate for the click (relative to the window/screen, depending on SDK behavior).\n        *   `y` (Number, Required): The Y-coordinate for the click.\n\n3.  **`macos-use_type_and_traverse`**\n    *   **Description:** Simulates typing text into the target application (identified by PID) and then traverses its accessibility tree.\n    *   **Parameters:**\n        *   `pid` (Number, Required): The Process ID (PID) of the target application.\n        *   `text` (String, Required): The text to be typed.\n\n4.  **`macos-use_press_key_and_traverse`**\n    *   **Description:** Simulates pressing a specific keyboard key (e.g., 'Enter', 'Tab', 'a', 'B') with optional modifier keys held down, targeting the application specified by PID, and then traverses its accessibility tree.\n    *   **Parameters:**\n        *   `pid` (Number, Required): The Process ID (PID) of the target application.\n        *   `keyName` (String, Required): The name of the key (e.g., `Return`, `Escape`, `ArrowUp`, `Delete`, `a`, `B`). Case-sensitive for letters if no modifiers are active.\n        *   `modifierFlags` (Array<String>, Optional): An array of modifier keys to hold during the press. Valid values: `CapsLock` (or `Caps`), `Shift`, `Control` (or `Ctrl`), `Option` (or `Opt`, `Alt`), `Command` (or `Cmd`), `Function` (or `Fn`), `NumericPad` (or `Numpad`), `Help`.\n\n5.  **`macos-use_refresh_traversal`**\n    *   **Description:** Only performs the accessibility tree traversal for the specified application (identified by PID). Useful for getting the current UI state without performing an action.\n    *   **Parameters:**\n        *   `pid` (Number, Required): The Process ID (PID) of the application to traverse.\n\n**Common Optional Parameters (for `CallTool`)**\n\nThese can potentially be passed in the `arguments` object for any tool call to override default `MacosUseSDK` behavior (refer to `ActionOptions` in the code):\n\n*   `traverseBefore` (Boolean, Optional): Traverse accessibility tree before the primary action.\n*   `traverseAfter` (Boolean, Optional): Traverse accessibility tree after the primary action (usually defaults to true).\n*   `showDiff` (Boolean, Optional): Include a diff between traversals (if applicable).\n*   `onlyVisibleElements` (Boolean, Optional): Limit traversal to visible elements.\n*   `showAnimation` (Boolean, Optional): Show visual feedback animation for actions.\n*   `animationDuration` (Number, Optional): Duration of the feedback animation.\n*   `delayAfterAction` (Number, Optional): Add a delay after performing the action.\n\n## Dependencies\n\n*   `MacosUseSDK` (Assumed local or external Swift package providing macOS control functionality)\n\n## Building and Running\n\n```bash\n# Example build command (adjust as needed, use 'debug' for development)\nswift build -c debug # Or 'release' for production\n\n# Running the server (it communicates via stdin/stdout)\n./.build/debug/mcp-server-macos-use\n```\n\n**Integrating with Clients (Example: Claude Desktop)**\n\nOnce built, you need to tell your client application where to find the server executable. For example, to configure Claude Desktop, you might add the following to its configuration:\n\n```json\n{\n    \"mcpServers\": {\n        \"mcp-server-macos-use\": {\n            \"command\": \"/path/to/your/project/mcp-server-macos-use/.build/debug/mcp-server-macos-use\"\n        }\n    }\n}\n```\n\n*Replace `/path/to/your/project/` with the actual absolute path to your `mcp-server-macos-use` directory.*\n\n## Help\n\nReach out to matt@mediar.ai\nDiscord: m13v_\n\n\n## Plans\n\nHappy to tailor the server for your needs, feel free to open an issue or reach out\n"
}