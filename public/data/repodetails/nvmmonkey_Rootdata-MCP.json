{
  "mcp_name": "nvmmonkey/Rootdata-MCP",
  "mcp_description": "Integrate RootData's crypto asset data into AI applications with a comprehensive MCP server offering detailed analysis, market trends, and ecosystem mapping.",
  "mcp_id": "nvmmonkey_Rootdata-MCP",
  "fetch_timestamp": "2025-06-23T07:12:41.138625Z",
  "github_url": "https://github.com/nvmmonkey/Rootdata-MCP",
  "repository": {
    "name": "Rootdata-MCP",
    "full_name": "nvmmonkey/Rootdata-MCP",
    "description": null,
    "html_url": "https://github.com/nvmmonkey/Rootdata-MCP",
    "created_at": "2025-04-25T07:29:28Z",
    "updated_at": "2025-04-28T20:18:39Z",
    "pushed_at": "2025-04-28T20:18:36Z",
    "size": 42,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "JavaScript",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "nvmmonkey",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/100928742?v=4",
      "html_url": "https://github.com/nvmmonkey"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "JavaScript": 56536
    },
    "language_percentages": {
      "JavaScript": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 2,
    "package_json_version": "1.1.0"
  },
  "readme": "# RootData MCP Server\n\nEnglish | [ÁÆÄ‰Ωì‰∏≠Êñá](./README_zh.md)\n\nA comprehensive Model Context Protocol (MCP) server that provides access to RootData's crypto asset data platform API, enabling seamless integration of crypto project, investor, and market data into AI applications.\n\n## Features\n\n- üîç **Entity Search**: Search for projects, VCs, and people in the crypto space\n- üìä **Detailed Analysis**: Get comprehensive information about projects, investors, and individuals\n- üìà **Market Trends**: Track hot projects, funding rounds, and social metrics\n- üîÑ **Cross-functional Analysis**: Combine multiple API endpoints for holistic insights\n- üí∞ **Funding Data**: Access detailed fundraising round information\n- üåê **Ecosystem Mapping**: Explore relationships between projects and ecosystems\n- üë• **Social Metrics**: Track X (Twitter) engagement and influence rankings\n\n## Installation\n\n```bash\n# Clone the repository\ngit clone https://github.com/your-username/rootdata-mcp\n\n# Install dependencies\nnpm install\n\n# Build file\nnpm run build\n\n# Create .env file\ncp .env.example .env\n\n# Add your RootData API key to .env\nROOTDATA_API_KEY=your_api_key_here\n```\n\n## Configuration\n\n1. Get your API key from [RootData](https://www.rootdata.com/Api)\n2. Create a `.env` file in the root directory:\n\n```env\nROOTDATA_API_KEY=your_api_key_here\n```\n\n3. Add the server to your Claude Desktop configuration:\n\n```json\n{\n  \"mcpServers\": {\n    \"rootdata\": {\n      \"command\": \"node\",\n      \"args\": [\"path/to/rootdata-mcp/build/index.js\"], //change to build directory\n      \"env\": {\n        \"ROOTDATA_API_KEY\": \"your_api_key_here\"\n      }\n    }\n  }\n}\n```\n\n## Available Tools\n\n### 1. Core API Functions\n\n#### `searchEntities`\nSearch for projects, VCs, or people by keywords.\n\n```typescript\n{\n  query: string;         // Search keywords\n  preciseXSearch?: boolean; // Search by X handle (@...)\n}\n```\n\n#### `getProject`\nGet detailed project information.\n\n```typescript\n{\n  projectId: number;     // Project ID\n  includeTeam?: boolean; // Include team members\n  includeInvestors?: boolean; // Include investors\n}\n```\n\n#### `getOrg`\nGet detailed VC/organization information.\n\n```typescript\n{\n  orgId: number;         // Organization ID\n  includeTeam?: boolean; // Include team members\n  includeInvestments?: boolean; // Include investments\n}\n```\n\n### 2. Advanced Analysis Tools\n\n#### `analyzeComprehensive`\nComprehensive analysis combining multiple RootData endpoints.\n\n```typescript\n{\n  query: string;        // Natural language query\n  analysisType?: 'project' | 'investor' | 'ecosystem' | 'trends' | 'fundraising' | 'comprehensive';\n  timeframe?: string;   // Time period for analysis\n  depth?: 'basic' | 'detailed' | 'full';\n  includeRelated?: boolean; // Include related entities\n}\n```\n\n#### `investigateEntity`\nDeep dive into a specific entity with all related information.\n\n```typescript\n{\n  entityName: string;   // Name of the project, investor, or person\n  entityType?: 'project' | 'investor' | 'person' | 'auto';\n  investigationScope?: 'basic' | 'funding' | 'social' | 'ecosystem' | 'all';\n}\n```\n\n#### `trackTrends`\nTrack market trends across projects, funding, and social metrics.\n\n```typescript\n{\n  category: 'hot_projects' | 'funding' | 'job_changes' | 'new_tokens' | 'ecosystem' | 'all';\n  timeRange?: '1d' | '7d' | '30d' | '3m';\n  filterBy?: {\n    ecosystem?: string;\n    tags?: string;\n    minFunding?: number;\n  };\n}\n```\n\n#### `compareEntities`\nCompare multiple projects or investors side by side.\n\n```typescript\n{\n  entities: string[];   // List of entity names to compare\n  compareType?: 'metrics' | 'funding' | 'ecosystem' | 'social' | 'all';\n}\n```\n\n### 3. Market Analysis Tools\n\n#### `getHotProjects`\nGet top 100 hot crypto projects.\n\n```typescript\n{\n  days: number;         // Time period (1 or 7 days)\n}\n```\n\n#### `getXHotProjects`\nGet X platform hot projects rankings.\n\n```typescript\n{\n  heat?: boolean;       // Get heat ranking\n  influence?: boolean;  // Get influence ranking\n  followers?: boolean;  // Get followers ranking\n}\n```\n\n#### `getNewTokens`\nGet newly issued tokens in the past 3 months.\n\n#### `getFundingRounds`\nGet fundraising rounds information.\n\n```typescript\n{\n  page?: number;\n  pageSize?: number;\n  startTime?: string;   // yyyy-MM\n  endTime?: string;     // yyyy-MM\n  minAmount?: number;\n  maxAmount?: number;\n  projectId?: number;\n}\n```\n\n## Example Usage\n\n### 1. Project Analysis\n```\n\"Give me a comprehensive analysis of Ethereum including funding, ecosystem, and social metrics\"\n```\n\n### 2. Investor Research\n```\n\"Investigate Binance Labs and show me their recent investments and portfolio\"\n```\n\n### 3. Market Trends\n```\n\"Track the hottest AI projects in the crypto space with recent funding\"\n```\n\n### 4. Entity Comparison\n```\n\"Compare Ethereum, Polygon, and Solana across funding, ecosystem, and social metrics\"\n```\n\n### 5. Ecosystem Analysis\n```\n\"Show me all Layer 2 projects with their funding and hot rankings\"\n```\n\n## API Rate Limits\n\n- 30 requests per minute per API key\n- Different endpoints have different credit costs (1-50 credits per request)\n- Monitor your usage to avoid hitting limits\n\n## Development\n\n### Build\n```bash\nnpm run build\n```\n\n### Watch Mode\n```bash\nnpm run watch\n```\n\n### Clean\n```bash\nnpm run clean\n```\n\n## Error Handling\n\nThe server includes comprehensive error handling:\n- API authentication errors\n- Invalid parameters\n- Rate limiting\n- Network issues\n- Data parsing errors\n\n## Contributing\n\n1. Fork the repository\n2. Create your feature branch (`git checkout -b feature/amazing-feature`)\n3. Commit your changes (`git commit -m 'Add some amazing feature'`)\n4. Push to the branch (`git push origin feature/amazing-feature`)\n5. Open a Pull Request\n\n## License\n\nMIT License - see the [LICENSE](LICENSE) file for details\n\n## Acknowledgments\n\n- [RootData](https://www.rootdata.com) for providing the comprehensive crypto data API\n- [Anthropic](https://www.anthropic.com) for the Model Context Protocol framework\n\n## Support\n\nFor issues and feature requests, please open an issue on GitHub or contact support@rootdata.com for API-related questions.\n\n---\n\nMade with ‚ù§Ô∏è for the crypto community"
}