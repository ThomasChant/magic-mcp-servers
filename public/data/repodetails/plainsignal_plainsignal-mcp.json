{
  "mcp_name": "plainsignal/plainsignal-mcp",
  "mcp_description": "Facilitates analytics data retrieval and reporting through the MCP protocol for PlainSignal.",
  "mcp_id": "plainsignal_plainsignal-mcp",
  "fetch_timestamp": "2025-06-23T07:32:24.187402Z",
  "github_url": "https://github.com/plainsignal/plainsignal-mcp",
  "repository": {
    "name": "plainsignal-mcp",
    "full_name": "plainsignal/plainsignal-mcp",
    "description": "PlainSignal Official MCP Server",
    "html_url": "https://github.com/plainsignal/plainsignal-mcp",
    "created_at": "2025-04-21T08:11:06Z",
    "updated_at": "2025-05-15T03:54:37Z",
    "pushed_at": "2025-04-21T09:00:23Z",
    "size": 36,
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "JavaScript",
    "license": "MIT License",
    "topics": [
      "mcp",
      "mcp-server",
      "plainsignal"
    ],
    "default_branch": "main",
    "owner": {
      "login": "plainsignal",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/177711117?v=4",
      "html_url": "https://github.com/plainsignal"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "JavaScript": 13445,
      "Shell": 877
    },
    "language_percentages": {
      "JavaScript": 93.88,
      "Shell": 6.12
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "tags": [
      {
        "name": "v0.1.2",
        "commit_sha": "006cd46e8585708eb5559549c9e67e7d750fb908"
      },
      {
        "name": "v0.1.1",
        "commit_sha": "bf4b6d39274a71ef4068e0c1d0c78557d833c5d7"
      }
    ],
    "latest_version": "v0.1.2",
    "package_json_version": "0.1.3"
  },
  "readme": "# PlainSignal MCP Server\n\nThis is a Model Context Protocol (MCP) server implementation for PlainSignal analytics data. It provides tools for retrieving analytics reports and metrics through the MCP protocol.\n\n## Setup\n\n### Installation\n\n#### From npm (recommended)\n\n```bash\n# Install globally\nnpm install -g @plainsignal/plainsignal-mcp\n\n# Or install locally in your project\nnpm install @plainsignal/plainsignal-mcp\n```\n\n#### From source\n\n1. Clone this repository\n2. Install dependencies:\n\n```bash\nnpm install\n```\n\nThis project uses ES modules instead of CommonJS. Make sure you're using a Node.js version that supports ES modules (Node.js 14+).\n\n## Usage\n\n### When installed from npm\n\n```bash\n# If installed globally\nplainsignal-mcp --token <your_access_token>\n\n# If installed locally\nnpx plainsignal-mcp --token <your_access_token>\n\n# Or using an environment variable\nexport PLAINSIGNAL_TOKEN=<your_access_token>\nplainsignal-mcp\n```\n\n### When using from source\n\nRun the server with your access token:\n\n```bash\nnode src/index.js --token <your_access_token>\n\n# Or using an environment variable\nexport PLAINSIGNAL_TOKEN=<your_access_token>\nnode src/index.js\n```\n\nYou can also specify a custom API base URL:\n\n```bash\nnode src/index.js --token <your_access_token> --api-base-url <api_base_url>\n```\n\nOr use the short format:\n\n```bash\nnode src/index.js -t <your_access_token> -u <api_base_url>\n```\n\nAlternatively, set the access token and API base URL as environment variables and use the test script:\n\n```bash\nexport PLAINSIGNAL_TOKEN=your_access_token\nexport API_BASE_URL=https://app.plainsignal.com/api/v1\n./test.sh\n```\n\nBy default, the server connects to `https://app.plainsignal.com/api/v1`.\n\n## MCP Server configs\n\n### Claude Desktop\n\nAdd this snippet to your `claude_desktop_config.json`:\n\n```\n{\n  \"mcpServers\": {\n    \"plainsignal\": {\n      \"command\": \"npx -y @plainsignal/plainsignal-mcp\",\n      \"env\": {\n        \"PLAINSIGNAL_TOKEN\": \"<YOUR_PLAINSIGNAL_TOKEN>\"\n      }\n    }\n  }\n}\n```\n\n## Available Tools\n\nThe server provides the following tools:\n\n### getReport\n\nRetrieves an analytics report for a specified domain and time period.\n\nParameters:\n- `organizationID`: Organization ID\n- `domainID`: Domain ID\n- `periodFrom`: Report start datetime in RFC3339 format\n- `periodTo`: Report end datetime in RFC3339 format\n- `periodSelection`: Period type (m: month, y: year, d: day)\n- `aggregationWindow`: Data aggregation window (h: hour, d: day)\n- `filters`: (Optional) List of filters as key-value pairs\n\n### getSubReport\n\nRetrieves detailed metrics for a specific aspect of analytics data.\n\nParameters:\n- `organizationID`: Organization ID\n- `domainID`: Domain ID\n- `periodFrom`: Report start datetime in RFC3339 format\n- `periodTo`: Report end datetime in RFC3339 format\n- `periodSelection`: Period type (m: month, y: year, d: day)\n- `aggregationWindow`: Data aggregation window (h: hour, d: day)\n- `subReportType`: Type of report (1: page, 2: entry page, etc.)\n- `filters`: (Optional) List of filters as key-values pairs\n- `pagination`: (Optional) Pagination controls with limit and offset\n\n## API Reference\n\nThis server communicates with the PlainSignal API. By default, it connects to `https://app.plainsignal.com/api/v1`, but you can configure the API endpoint in several ways:\n\n1. Use the `--api-base-url` command line option:\n   ```bash\n   node src/index.js --token <your_token> --api-base-url https://app.plainsignal.com/api/v1\n   ```\n\n2. Set the `API_BASE_URL` environment variable:\n   ```bash\n   export API_BASE_URL=https://app.plainsignal.com/api/v1\n   ```\n\n3. Pass a custom API base URL to the constructor when instantiating the server programmatically:\n   ```javascript\n   const server = new PlainSignalStdioServer(token, 'https://app.plainsignal.com/api/v1');\n   ```\n\n## For Developers\n\nThe server is implemented using the MCP SDK and communicates over STDIO.\n\n## Examples\n\nAn example client is provided to demonstrate how to use the MCP server:\n\n```bash\n# Set your access token\nexport PLAINSIGNAL_TOKEN=your_access_token\n\n# Run the example client\nnpm run example\n```\n\nOr run the resources example client:\n\n```bash\n# Set your access token\nexport PLAINSIGNAL_TOKEN=your_access_token\n\n# Run the resources example client\nnpm run resources-example\n```\n\nThe example client demonstrates:\n1. Connecting to the MCP server\n2. Listing available tools\n3. Calling the `getReport` tool with sample parameters\n4. Processing and displaying the results\n\nThe resources example client demonstrates:\n1. Connecting to the MCP server\n2. Listing available resources\n3. Reading the `listDomains` resource\n4. Processing and displaying the results\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details."
}