{
  "mcp_name": "centralmind/gateway",
  "mcp_description": "MCP and MCP SSE Server that automatically generate production ready API based on database schema and data. Supports PostgreSQL, Clickhouse, MySQL, Snowflake, BigQuery, Supabase",
  "mcp_id": "centralmind_gateway",
  "fetch_timestamp": "2025-06-23T01:59:29.412227Z",
  "github_url": "https://github.com/centralmind/gateway",
  "repository": {
    "name": "gateway",
    "full_name": "centralmind/gateway",
    "description": "Universal MCP-Server for your Databases optimized for LLMs and AI-Agents.",
    "html_url": "https://github.com/centralmind/gateway",
    "created_at": "2025-02-10T19:34:14Z",
    "updated_at": "2025-06-22T06:15:29Z",
    "pushed_at": "2025-06-21T08:13:50Z",
    "size": 94573,
    "stargazers_count": 403,
    "watchers_count": 403,
    "forks_count": 41,
    "open_issues_count": 13,
    "language": "Go",
    "license": "Apache License 2.0",
    "topics": [
      "amazon-bedrock",
      "anthropic-claude",
      "api",
      "automatic-api",
      "clickhouse",
      "duckdb",
      "elasticsearch",
      "golang",
      "google-vertex-ai",
      "llm",
      "mcp",
      "mysql-database",
      "openai",
      "oracle-database",
      "postgresql",
      "rest-api",
      "snowflake",
      "supabase"
    ],
    "default_branch": "main",
    "owner": {
      "login": "centralmind",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/167236369?v=4",
      "html_url": "https://github.com/centralmind"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 41,
    "subscribers_count": 8,
    "languages": {
      "Go": 566567,
      "Shell": 5017,
      "Makefile": 4138,
      "Smarty": 1782,
      "Dockerfile": 989,
      "HTML": 803
    },
    "language_percentages": {
      "Go": 97.8,
      "Shell": 0.87,
      "Makefile": 0.71,
      "Smarty": 0.31,
      "Dockerfile": 0.17,
      "HTML": 0.14
    },
    "pull_requests_count": 37,
    "contributors_count": 9,
    "latest_release": {
      "tag_name": "v0.2.18",
      "name": "v0.2.18",
      "published_at": "2025-06-14T14:24:27Z",
      "body": "Snowflake connection-string fix\r\n**Full Changelog**: https://github.com/centralmind/gateway/compare/v0.2.17...v0.2.18",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v0.2.18",
        "commit_sha": "c0ebc1ed754733c464d1c9bd75b8c4aa812800ef"
      },
      {
        "name": "v0.2.17",
        "commit_sha": "1320ae0204f4552980d2e595555324adf74ab5f1"
      },
      {
        "name": "v0.2.16",
        "commit_sha": "99c00e61658b4aa49cec0d380f4d5fd918ef7b06"
      },
      {
        "name": "v0.2.15",
        "commit_sha": "95e7b14b20ed7c70666f983c7898c8c8f96e2ddc"
      },
      {
        "name": "v0.2.14",
        "commit_sha": "c668f3a48b93898921a53223112998ed766fbdfb"
      },
      {
        "name": "v0.2.13",
        "commit_sha": "a01f6a2f953cb57824fefb46f7d0732599665ae3"
      },
      {
        "name": "v0.2.12",
        "commit_sha": "7c8399c1d4c415866d40c79a1af301b58e69f8a6"
      },
      {
        "name": "v0.2.11",
        "commit_sha": "20ebd218893fc1714282f2552bd07dea0b46c779"
      },
      {
        "name": "v0.2.10",
        "commit_sha": "cce9a8b675f24cb3b62503a60f0eae47142a1a94"
      },
      {
        "name": "v0.2.9",
        "commit_sha": "a96de8a96265eb97716527c6e8b0a38a7745932e"
      }
    ],
    "latest_version": "v0.2.18"
  },
  "readme": "<div align=\"center\">\n\n![Build Binaries](https://github.com/centralmind/gateway/actions/workflows/build-binaries.yml/badge.svg) &nbsp; <a href=\"https://discord.gg/XFhaUG4F5x\"><img src=\"https://dcbadge.limes.pink/api/server/https://discord.gg/XFhaUG4F5x\" height=\"20\"></a> &nbsp;&nbsp;<a href=\"https://t.me/+TM3T1SikjzA4ZWVi\"><img src=\"https://img.shields.io/badge/telegram-%E2%9D%A4%EF%B8%8F-252850?style=plastic&logo=telegram\" height=20></a> &nbsp;&nbsp; <a href=\"https://docs.centralmind.ai\"><img src=\"https://img.shields.io/badge/Full%20Documentation-blue?style=for-the-badge&logo=rocket&logoColor=white\" height=\"20\"></a>&nbsp;&nbsp; <a href=\"https://cursor.com/install-mcp?name=CentralMind%20Database%20Gateway&config=eyJjb21tYW5kIjoiZG9ja2VyIHJ1biAtaSAtLXBsYXRmb3JtIGxpbnV4L2FtZDY0IGdoY3IuaW8vY2VudHJhbG1pbmQvZ2F0ZXdheTp2MC4yLjE4IC0tY29ubmVjdGlvbi1zdHJpbmcgcG9zdGdyZXNxbDovL215X3VzZXI6bXlfcGFzc0Bsb2NhbGhvc3Q6NTQzMi9teWRiIHN0YXJ0IHN0ZGlvIn0%3D\"><img height=\"21\" src=\"https://cursor.com/deeplink/mcp-install-dark.svg\"></a>\n\n\n</div>\n\n\n<h2 align=\"center\">CentralMind Gateway: Create API or MCP Server in Minutes</h2>\n\nüöÄ Interactive Demo avialable here: https://centralmind.ai\n\n## What is Centralmind/Gateway\n\nSimple way to expose your database to AI-Agent via MCP or OpenAPI 3.1 protocols.\n\n```bash\ndocker run --platform linux/amd64 -p 9090:9090 \\\n  ghcr.io/centralmind/gateway:v0.2.18 start \\\n  --connection-string \"postgres://db-user:db-password@db-host/db-name?sslmode=require\"\n```\n\nThis will run for you an API:\n\n```shell\nINFO Gateway server started successfully!         \nINFO MCP SSE server for AI agents is running at: http://localhost:9090/sse \nINFO REST API with Swagger UI is available at: http://localhost:9090/ \n```\n\nWhich you can use inside your AI Agent:\n\n![mcp-raw-cursor-setup.png](./assets/mcp-raw-cursor-setup.png)\n\nGateway will generate AI optimized API.\n\n\n## Why Centralmind/Gateway\n\nAI agents and LLM-powered applications need fast, secure access to data. We're building an API layer that automatically generates secure, LLM-optimized APIs for your structured data.\n- Quickly start with MCP or OpenAPI, or use Direct/Raw SQL APIs\n- Filters out PII and sensitive data to ensure compliance with GDPR, CPRA, SOC 2, and other regulations\n- Adds traceability and auditing capabilities, ensuring AI applications aren't black boxes and allowing security teams to maintain control\n- Optimized for AI workloads: supports the Model Context Protocol (MCP) with enhanced metadata to help AI agents understand APIs, along with built-in caching and security features\n\nIt can be useful during development, when an LLM needs to create, adjust, or query data from your database.\nIn analytical scenarios, it enables you to chat with your database or data warehouse.\nEnrich your AI agents with data from your database using remote function/tool calling.\n\n![demo](/assets/demo.gif)\n\n## Features\n\n- ‚ö° **Automatic API Generation** ‚Äì Creates APIs automatically using LLM based on table schema and sampled data\n- üóÑÔ∏è **Structured Database Support** ‚Äì Supports <a href=\"https://docs.centralmind.ai/connectors/postgres/\">PostgreSQL</a>, <a href=\"https://docs.centralmind.ai/connectors/mysql/\">MySQL</a>, <a href=\"https://docs.centralmind.ai/connectors/clickhouse/\">ClickHouse</a>, <a href=\"https://docs.centralmind.ai/connectors/snowflake/\">Snowflake</a>, <a href=\"https://docs.centralmind.ai/connectors/mssql/\">MSSQL</a>, <a href=\"https://docs.centralmind.ai/connectors/bigquery/\">BigQuery</a>, <a href=\"https://docs.centralmind.ai/connectors/oracle/\">Oracle Database</a>, <a href=\"https://docs.centralmind.ai/connectors/sqlite/\">SQLite</a>, <a href=\"https://docs.centralmind.ai/connectors/sqlite/\">ElasticSearch</a>\n- üåç **Multiple Protocol Support** ‚Äì Provides APIs as REST or MCP Server including SSE mode\n- üîê **Authentication Options** ‚Äì Built-in support for <a href=\"https://docs.centralmind.ai/plugins/api_keys/\">API keys</a> and <a href=\"https://docs.centralmind.ai/plugins/oauth/\">OAuth</a>\n- üîí **PII Protection** ‚Äì Implements <a href=\"https://docs.centralmind.ai/plugins/pii_remover/\">regex plugin</a> or <a href=\"https://docs.centralmind.ai/plugins/presidio_anonymizer/\">Microsoft Presidio plugin</a> for PII and sensitive data redaction\n- üëÄ **Comprehensive Monitoring** ‚Äì Integration with <a href=\"https://docs.centralmind.ai/plugins/otel/\">OpenTelemetry (OTel)</a> for request tracking and audit trails\n- üì¶ **Local & On-Premises** ‚Äì Support for <a href=\"https://docs.centralmind.ai/providers/local-models/\">self-hosted LLMs</a> through configurable AI endpoints and models\n- ü§ñ **Multiple AI Providers Support** - Support for [OpenAI](https://docs.centralmind.ai/providers/openai), [Anthropic](https://docs.centralmind.ai/providers/anthropic), [Amazon Bedrock](https://docs.centralmind.ai/providers/bedrock), [Google Gemini](https://docs.centralmind.ai/providers/gemini) & [Google VertexAI](https://docs.centralmind.ai/providers/anthropic-vertexai)\n- ‚ö° **Flexible Configuration** ‚Äì Easily extensible via YAML configuration and plugin system\n- üìú **API Documentation** ‚Äì Auto-generated Swagger documentation and OpenAPI 3.1.0 specification\n- üîë **Row-Level Security (RLS)** ‚Äì Fine-grained data access control using <a href=\"https://docs.centralmind.ai/plugins/lua_rls/\">Lua scripts</a>\n- üèéÔ∏è **Performance Optimization** ‚Äì Implements time-based and <a href=\"https://docs.centralmind.ai/plugins/lru_cache/\">LRU caching</a> strategies\n\n## How it Works\n\n<div align=\"center\">\n\n![img.png](assets/diagram.png)\n\n</div>\n\n### 1. Connect & Discover\n\nGateway connects to your structured databases like PostgreSQL and automatically analyzes the schema and data samples\nto generate an optimized API structure based on your prompt. LLM is used only on discovery stage to produce API configuration.\nThe tool uses [AI Providers](https://docs.centralmind.ai/providers) to generate the API configuration while ensuring security\nthrough PII detection.\n\n### 2. Deploy\n\nGateway supports multiple deployment options from standalone binary, docker or <a href=\"https://docs.centralmind.ai/example/k8s/\">Kubernetes</a>.\nCheck our <a href=\"https://docs.centralmind.ai/docs/content/getting-started/launching-api/\">launching guide</a> for detailed\ninstructions. The system uses YAML configuration and plugins for easy customization.\n\n### 3. Use & Integrate\n\nAccess your data through REST APIs or Model Context Protocol (MCP) with built-in security features.\nGateway seamlessly integrates with AI models and applications like <a href=\"https://docs.centralmind.ai/docs/content/integration/langchain/\">LangChain</a>,\n<a href=\"https://docs.centralmind.ai/docs/content/integration/chatgpt/\">OpenAI</a> and\n<a href=\"https://docs.centralmind.ai/docs/content/integration/claude-desktop/\">Claude Desktop</a> using function calling\nor <a href=\"https://docs.centralmind.ai/docs/content/integration/cursor/\">Cursor</a> through MCP. You can also <a href=\"https://docs.centralmind.ai/plugins/otel/\">setup telemetry</a> to local or remote destination in otel format.\n\n## Documentation\n\n### Getting Started\n\n- <a href=\"https://docs.centralmind.ai/docs/content/getting-started/quickstart/\">Quickstart Guide</a>\n- <a href=\"https://docs.centralmind.ai/docs/content/getting-started/installation/\">Installation Instructions</a>\n- <a href=\"https://docs.centralmind.ai/docs/content/getting-started/generating-api/\">API Generation Guide</a>\n- <a href=\"https://docs.centralmind.ai/docs/content/getting-started/launching-api/\">API Launch Guide</a>\n\n### Additional Resources\n\n- <a href=\"https://docs.centralmind.ai/docs/content/integration/chatgpt/\">ChatGPT Integration Guide</a>\n- <a href=\"https://docs.centralmind.ai/connectors/\">Database Connector Documentation</a>\n- <a href=\"https://docs.centralmind.ai/plugins/\">Plugin Documentation</a>\n\n## How to Build\n\n```shell\n# Clone the repository\ngit clone https://github.com/centralmind/gateway.git\n\n# Navigate to project directory\ncd gateway\n\n# Install dependencies\ngo mod download\n\n# Build the project\ngo build .\n```\n\n## API Generation\n\nGateway uses LLM models to generate your API configuration. Follow these steps:\n\n\nChoose one of our supported AI providers:\n- [OpenAI](https://docs.centralmind.ai/providers/openai) and all OpenAI-compatible providers\n- [Anthropic](https://docs.centralmind.ai/providers/anthropic)\n- [Amazon Bedrock](https://docs.centralmind.ai/providers/bedrock)\n- [Google Vertex AI (Anthropic)](https://docs.centralmind.ai/providers/anthropic-vertexai)\n- [Google Gemini](https://docs.centralmind.ai/providers/gemini)\n\nGoogle Gemini provides a generous **free tier**. You can obtain an API key by visiting Google AI Studio:\n\n- [Google AI Studio](https://aistudio.google.com/apikey)\n\nOnce logged in, you can create an API key in the API section of AI Studio. The free tier includes a generous monthly token allocation, making it accessible for development and testing purposes.\n\nConfigure AI provider authorization. For Google Gemini, set an API key.\n\n```bash\nexport GEMINI_API_KEY='yourkey'\n```\n\n2. Run the discovery command:\n\n```shell\n./gateway discover \\\n  --ai-provider gemini \\\n  --connection-string \"postgresql://neondb_owner:MY_PASSWORD@MY_HOST.neon.tech/neondb?sslmode=require\" \\\n  --prompt \"Generate for me awesome readonly API\"\n```\n\n3. Enjoy the generation process:\n\n```shell\nINFO üöÄ API Discovery Process\nINFO Step 1: Read configs\nINFO ‚úÖ Step 1 completed. Done.\n\nINFO Step 2: Discover data\nINFO Discovered Tables:\nINFO   - payment_dim: 3 columns, 39 rows\nINFO   - fact_table: 9 columns, 1000000 rows\nINFO ‚úÖ Step 2 completed. Done.\n\n# Additional steps and output...\n\nINFO ‚úÖ All steps completed. Done.\n\nINFO --- Execution Statistics ---\nINFO Total time taken: 1m10s\nINFO Tokens used: 16543 (Estimated cost: $0.0616)\nINFO Tables processed: 6\nINFO API methods created: 18\nINFO Total number of columns with PII data: 2\n```\n\n4. Review the generated configuration in `gateway.yaml`:\n\n```yaml\napi:\n  name: Awesome Readonly API\n  description: ''\n  version: '1.0'\ndatabase:\n  type: postgres\n  connection: YOUR_CONNECTION_INFO\n  tables:\n    - name: payment_dim\n      columns: # Table columns\n      endpoints:\n        - http_method: GET\n          http_path: /some_path\n          mcp_method: some_method\n          summary: Some readable summary\n          description: 'Some description'\n          query: SQL Query with params\n          params: # Query parameters\n```\n\n## Running the API\n\n### Run locally\n\n```shell\n./gateway start --config gateway.yaml\n```\n\n### Docker Compose\n\n```shell\ndocker compose -f ./example/simple/docker-compose.yml up\n```\n\n### MCP Protocol Integration\n\nGateway implements the MCP protocol for seamless integration with Claude and other tools. For detailed setup instructions, see our <a href=\"https://docs.centralmind.ai/docs/content/integration/claude-desktop/\">Claude integration guide</a>.\n\nTo add MCP Tool to Claude Desktop just adjust Claude's config :\n\n```json\n{\n  \"mcpServers\": {\n    \"gateway\": {\n      \"command\": \"PATH_TO_GATEWAY_BINARY\",\n      \"args\": [\"start\", \"--config\", \"PATH_TO_GATEWAY_YAML_CONFIG\", \"mcp-stdio\"]\n    }\n  }\n}\n```\n\n## Roadmap\n\nIt is always subject to change, and the roadmap will highly depend on user feedback. At this moment,\nwe are planning the following features:\n\n#### Database and Connectivity\n- üóÑÔ∏è **Extended Database Integrations** - Databricks, Redshift, S3 (Iceberg and Parquet), Oracle DB, Microsoft SQL Server, Elasticsearch\n- üîë **SSH tunneling** - ability to use jumphost or ssh bastion to tunnel connections\n\n#### Enhanced Functionality\n- üîç **Advanced Query Capabilities** - Complex filtering syntax and Aggregation functions as parameters\n- üîê **Enhanced MCP Security** - API key and OAuth authentication\n\n#### Platform Improvements\n- üì¶ **Schema Management** - Automated schema evolution and API versioning\n- üö¶ **Advanced Traffic Management** - Intelligent rate limiting, Request throttling\n- ‚úçÔ∏è **Write Operations Support** - Insert, Update operations\n\n## Database Gateway in MCP Registries  \n- https://mcpreview.com/mcp-servers/centralmind/gateway\n- https://mcp.so/server/gateway/centralmind\n- https://smithery.ai/server/@centralmind/gateway\n- https://www.pulsemcp.com/servers/centralmind-database-gateway\n"
}