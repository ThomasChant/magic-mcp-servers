{
  "mcp_name": "ayush-rudani/google-search-mcp-server",
  "mcp_description": "Integrates with Google's Custom Search JSON API to provide advanced web search capabilities with structured results and rate limiting.",
  "mcp_id": "ayush-rudani_google-search-mcp-server",
  "fetch_timestamp": "2025-06-23T01:30:21.127848Z",
  "github_url": "https://github.com/ayush-rudani/google-search-mcp-server",
  "repository": {
    "name": "google-search-mcp-server",
    "full_name": "ayush-rudani/google-search-mcp-server",
    "description": "An MCP server implementation that integrates with Google's Custom Search JSON API, providing web search capabilities.",
    "html_url": "https://github.com/ayush-rudani/google-search-mcp-server",
    "created_at": "2025-04-13T12:38:58Z",
    "updated_at": "2025-04-13T13:51:41Z",
    "pushed_at": "2025-04-13T13:21:43Z",
    "size": 23,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 1,
    "open_issues_count": 0,
    "language": "TypeScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "master",
    "owner": {
      "login": "ayush-rudani",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/78534043?v=4",
      "html_url": "https://github.com/ayush-rudani"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 1,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 7718
    },
    "language_percentages": {
      "TypeScript": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "package_json_version": "0.1.0"
  },
  "readme": "# Google Search MCP Server\n\nAn MCP server implementation that integrates with Google's Custom Search JSON API, providing web search capabilities.\n\n## Features\n\n- **Web Search**: Search Google with comprehensive query options\n- **Advanced Filtering**: Control results by date, language, country, and safe search level\n- **Rate Limited**: Built-in rate limiting to prevent API quota exhaustion\n- **Structured Results**: Returns formatted search results with titles, URLs, and snippets\n\n## Tools\n\n- **google_search**\n  - Execute Google searches with advanced filtering options\n  - Inputs:\n    - `query` (string): Search terms (required)\n    - `num_results` (number, optional): Number of results (1-10, default: 5)\n    - `date_restrict` (string, optional): Filter by date (e.g., \"d1\" for last day)\n    - `language` (string, optional): 2-letter language code (e.g., \"en\")\n    - `country` (string, optional): 2-letter country code (e.g., \"us\")\n    - `safe_search` (string, optional): Safety level (\"off\", \"medium\", \"high\")\n\n## Configuration\n\n### Getting API Keys\n\n1. Create a Google Cloud project at [Google Cloud Console](https://console.cloud.google.com/)\n2. Activate the Custom Search JSON API for your project via the [API dashboard](https://console.cloud.google.com/apis/api/customsearch.googleapis.com)\n3. Generate an API key either through the Credentials section or following the [Custom Search API guide](https://developers.google.com/custom-search/v1/overview)\n4. Obtain a Search Engine ID by setting up a custom search engine in [Google's Programmable Search](https://programmablesearchengine.google.com/)\n\n### Environment Variables\n\nSet these before running the server:\n\n```bash\nexport GOOGLE_API_KEY=\"your-api-key\"\nexport GOOGLE_SEARCH_ENGINE_ID=\"your-search-engine-id\"\n```\n\n## Running from Local Repository\n\nTo run the server directly from source:\n\n1. **Clone the repository**\n\n   ```bash\n    git clone https://github.com/ayush-rudani/google-search-mcp-server.git\n    cd google-search-mcp-server\n   ```\n\n2. **Install dependencies**\n\n   ```bash\n    pnpm install\n    # or\n    npm install\n   ```\n\n3. **Build the project**\n\n   ```bash\n    pnpm run build\n    # or\n    npm run build\n   ```\n\n4. **Configure Claude Desktop**\n   Update your `claude_desktop_config.json`:\n\n   ```json\n   {\n     \"mcpServers\": {\n       \"google-search\": {\n         \"command\": \"/path/to/node\", // <--- Important to add the following, run in your terminal `echo \"$(which node)\"` to get the path\n         \"args\": [\"/full/path/to/google-search-mcp/index.js\"],\n         \"env\": {\n           \"GOOGLE_API_KEY\": \"your-api-key\",\n           \"GOOGLE_SEARCH_ENGINE_ID\": \"your-search-engine-id\"\n         }\n       }\n     }\n   }\n   ```\n\n   - Replace `/path/to/node` with the complete path to your Node.js executable (you can locate this by running the command `which node` in your terminal)\n\n5. **Test the server**\n   ```bash\n    export GOOGLE_API_KEY=your_api_key_here\n    export GOOGLE_SEARCH_ENGINE_ID=your_engine_id_here\n    node dist/index.js\n   ```\n\n## Rate Limits\n\nThe server enforces a rate limit of 10 requests per minute by default to prevent exceeding Google's API quotas. You can adjust this in the code if needed.\n\n## License\n\nThis MCP server is licensed under the MIT License. See the LICENSE file for details.\n"
}