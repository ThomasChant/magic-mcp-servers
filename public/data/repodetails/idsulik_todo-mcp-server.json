{
  "mcp_name": "idsulik/todo-mcp-server",
  "mcp_description": "A minimal Todo application utilizing MCP for managing and interacting with tasks, serving as a practical demonstration of MCP server capabilities.",
  "mcp_id": "idsulik_todo-mcp-server",
  "fetch_timestamp": "2025-06-23T04:56:42.595262Z",
  "github_url": "https://github.com/idsulik/todo-mcp-server",
  "repository": {
    "name": "todo-mcp-server",
    "full_name": "idsulik/todo-mcp-server",
    "description": "The repository todo-mcp-server is a minimal Todo application implemented as an MCP (Model Context Protocol) server. It provides basic functionalities such as listing, viewing, adding, removing, and clearing todo items.",
    "html_url": "https://github.com/idsulik/todo-mcp-server",
    "created_at": "2025-04-26T13:42:06Z",
    "updated_at": "2025-05-20T13:53:39Z",
    "pushed_at": "2025-04-27T05:34:40Z",
    "size": 27,
    "stargazers_count": 2,
    "watchers_count": 2,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "Python",
    "license": null,
    "topics": [
      "mcp",
      "mcp-server",
      "modelcontextprotocol"
    ],
    "default_branch": "main",
    "owner": {
      "login": "idsulik",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/3595194?v=4",
      "html_url": "https://github.com/idsulik"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "Python": 1875,
      "Dockerfile": 213
    },
    "language_percentages": {
      "Python": 89.8,
      "Dockerfile": 10.2
    },
    "pull_requests_count": 0,
    "contributors_count": 1
  },
  "readme": "# Todo MCP Server\n\nA simple Todo application built using MCP (Model Context Protocol) Server for testing and demonstrating MCP\ninteractions.\n\n## Overview\n\nThis repository contains a minimal Todo application implemented as an MCP server. It allows you to:\n\n- List all todo items\n- View specific todo items\n- Add new todo items\n- Remove todo items\n- Clear all todo items\n- Create structured todo tasks with metadata\n\nThis project serves as a test bed for interacting with Model Context Protocol servers and understanding how to build and\nexpose functionality through the MCP protocol. For more information about the Model Context Protocol,\nvisit [modelcontextprotocol.io](http://modelcontextprotocol.io/).\n\n## Requirements\n\n- Python 3.10+\n- uv (Python package installer)\n\n## Installation\n\n1. Clone the repository:\n\n```bash\ngit clone https://github.com/idsulik/todo-mcp-server.git\ncd todo-mcp-server\n```\n\n2. Install dependencies using uv:\n\n```bash\nuv pip install -e .\n```\n\n### Adding to MCP Servers List\n\nTo add this server to your MCP servers list, use the following command:\n\n```bash\nmcp install server.py --name \"Todo MCP\"\n```\n\nThis registers the server with the Claude Desktop app or other MCP-enabled applications.\n\nAlternatively, if you want to test the server with the MCP Inspector, you can use:\n\n```bash\nmcp dev server.py\n```\n\nThis will launch the server along with the MCP Inspector interface for easy testing and debugging.\n\n## API Usage\n\nThe server exposes the following MCP resources and tools:\n\n### Resources\n\n1. List all todo items:\n\n```\nGET todo://list\n```\n\n2. View a specific todo item:\n\n```\nGET todo://view/{item_idx}\n```\n\nWhere `item_idx` is the index of the item you want to view.\n\n### Prompts\n\n1. Create a structured todo task:\n\n```python\ncreate_task(task_name: str, priority: str = \"medium\", due_date: str = \"\")\n```\n\nThis prompt helps format todo tasks with priority levels and due dates. Parameters:\n- `task_name`: The name/description of the task\n- `priority`: Task priority (low, medium, high)\n- `due_date`: When the task is due (optional)\n\n### Tools\n\n1. Add a new todo item:\n\n```python\nadd_todo(value: str)\n```\n\n2. Remove a todo item:\n\n```python\nremove_todo(item_idx: int)\n```\n\n3. Clear all todo items:\n\n```python\nclear_todo()\n```\n\n### Adding to MCP Configuration Manually\n\nIf you prefer to add the server manually to your MCP configuration, you can add the following JSON to your Claude\nDesktop configuration file (typically located at `~/.claude-desktop/claude_desktop_config.json` on Mac/Linux or\n`C:\\Users\\YourUsername\\AppData\\Roaming\\Claude\\claude_desktop_config.json` on Windows):\n\n```json\n{\n  \"mcpServers\": {\n    \"todo\": {\n      \"command\": \"uv\",\n      \"args\": [\n        \"run\",\n        \"--with\",\n        \"mcp[cli]\",\n        \"mcp\",\n        \"run\",\n        \"/path/to/your/server.py\"\n      ]\n    }\n  }\n}\n```\n\nReplace `/path/to/your/server.py` with the absolute path to your server.py file. Make sure to use absolute paths, not\nrelative paths.\n\n### Using Docker\n\nYou can also run this MCP server using Docker without installing anything locally. Add the following to your Claude Desktop configuration:\n\n```json\n{\n  \"mcpServers\": {\n    \"todo\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"-i\",\n        \"--rm\",\n        \"idsulik/todo-mcp-server\"\n      ]\n    }\n  }\n}\n```\n\nThe Docker image will automatically pull from Docker Hub if it's not already on your system.\n\n## Contributing\n\nContributions are welcome! Please feel free to submit a Pull Request."
}