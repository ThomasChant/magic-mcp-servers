{
  "mcp_name": "kukapay/defi-yields-mcp",
  "mcp_description": "üêç ‚òÅÔ∏è - An MCP server for AI agents to explore DeFi yield opportunities.",
  "mcp_id": "kukapay_defi-yields-mcp",
  "fetch_timestamp": "2025-06-23T05:57:42.272424Z",
  "github_url": "https://github.com/kukapay/defi-yields-mcp",
  "repository": {
    "name": "defi-yields-mcp",
    "full_name": "kukapay/defi-yields-mcp",
    "description": "An MCP server for AI agents to explore DeFi yield opportunities, powered by DefiLlama.",
    "html_url": "https://github.com/kukapay/defi-yields-mcp",
    "created_at": "2025-04-19T05:39:29Z",
    "updated_at": "2025-06-13T23:42:55Z",
    "pushed_at": "2025-04-19T05:41:08Z",
    "size": 17,
    "stargazers_count": 4,
    "watchers_count": 4,
    "forks_count": 2,
    "open_issues_count": 0,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "kukapay",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/201164822?v=4",
      "html_url": "https://github.com/kukapay"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 2,
    "subscribers_count": 1,
    "languages": {
      "Python": 3214
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 1
  },
  "readme": "# DeFi Yields MCP\n\nAn MCP server for AI agents to explore DeFi yield opportunities, powered by DefiLlama.\n\n[![Discord](https://img.shields.io/discord/1353556181251133481?cacheSeconds=3600)](https://discord.gg/aRnuu2eJ)\n![GitHub License](https://img.shields.io/github/license/kukapay/defi-yields-mcp)\n![Python Version](https://img.shields.io/badge/python-3.10+-blue)\n![Status](https://img.shields.io/badge/status-active-brightgreen.svg)\n\n## Features\n\n- **Data Fetching Tool**: The `get_yield_pools` tool retrieves DeFi yield pool data from the DefiLlama, allowing filtering by chain (e.g., Ethereum, Solana) or project (e.g., Lido, Aave).\n- **Analysis Prompt**: The `analyze_yields` prompt generates tailored instructions for AI agents to analyze yield pool data, focusing on key metrics like APY, 30-day mean APY, and predictions.\n- **Packaged for Ease**: Run the server directly with `uvx defi-yields-mcp`.\n\n## Installation\n\nTo use the server with Claude Desktop, you can either install it automatically or manually configure the Claude Desktop configuration file.\n\n### Option 1: Automatic Installation\nInstall the server for Claude Desktop:\n```bash\nuvx mcp install -m defi_yields_mcp --name \"DeFi Yields Server\"\n```\n\n### Option 2: Manual Configuration\n\n\nLocate the configuration file:\n- **macOS**: `~/Library/Application Support/Claude/claude_desktop_config.json`\n- **Windows**: `%APPDATA%\\Claude\\claude_desktop_config.json`\n\nAdd the server configuration:\n\n```json\n{\n \"mcpServers\": {\n   \"defi-yields-mcp\": {\n     \"command\": \"uvx\",\n     \"args\": [ \"defi-yields-mcp\" ]\n   }\n }\n}\n```\n\nRestart Claude Desktop.\n\n## Examples\n\nYou can use commands like:\n\n- \"Fetch yield pools for the Lido project.\"\n- \"Analyze yield pools on Ethereum.\"\n- \"What are the 30-day mean APYs for Solana pools?\"\n\nThe `get_yield_pools` tool fetches and filters the data, while the `analyze_yields` prompt guides the LLM to provide a detailed analysis.\n\n### Example Output\n\nRunning the `get_yield_pools` tool with a filter for Ethereum:\n```json\n[\n  {\n    \"chain\": \"Ethereum\",\n    \"pool\": \"STETH\",\n    \"project\": \"lido\",\n    \"tvlUsd\": 14804019222,\n    \"apy\": 2.722,\n    \"apyMean30d\": 3.00669,\n    \"predictions\": {\n        \"predictedClass\": \"Stable/Up\",\n        \"predictedProbability\": 75,\n        \"binnedConfidence\": 3      \n    }\n  },\n  ...\n]\n```\n\n## License\n\nThis project is licensed under the MIT License. See the [LICENSE](LICENSE) file for details.\n"
}