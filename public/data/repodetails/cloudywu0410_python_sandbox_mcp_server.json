{
  "mcp_name": "cloudywu0410/python_sandbox_mcp_server",
  "mcp_description": "Enables LLMs to execute Python code securely in isolated Docker containers with real-time communication via SSE.",
  "mcp_id": "cloudywu0410_python_sandbox_mcp_server",
  "fetch_timestamp": "2025-06-23T02:09:54.710281Z",
  "github_url": "https://github.com/cloudywu0410/python_sandbox_mcp_server",
  "repository": {
    "name": "python_sandbox_mcp_server",
    "full_name": "cloudywu0410/python_sandbox_mcp_server",
    "description": "A MCP server that enables LLMs to run python code safely in isolated Docker containers.",
    "html_url": "https://github.com/cloudywu0410/python_sandbox_mcp_server",
    "created_at": "2025-04-28T07:36:49Z",
    "updated_at": "2025-05-17T21:08:43Z",
    "pushed_at": "2025-05-14T03:35:19Z",
    "size": 25,
    "stargazers_count": 2,
    "watchers_count": 2,
    "forks_count": 1,
    "open_issues_count": 0,
    "language": "Python",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "cloudywu0410",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/209365472?v=4",
      "html_url": "https://github.com/cloudywu0410"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 1,
    "subscribers_count": 1,
    "languages": {
      "Python": 6676
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 2,
    "contributors_count": 2
  },
  "readme": "[![MseeP.ai Security Assessment Badge](https://mseep.net/pr/cloudywu0410-python-sandbox-mcp-server-badge.png)](https://mseep.ai/app/cloudywu0410-python-sandbox-mcp-server)\n\n# Python Sandbox MCP Server\n\nA secure Python code execution server that enables LLMs to run Python code safely in isolated\nDocker containers. The server supports:\n\n- Regular Python code execution with stdout capture\n- Matplotlib plotting with PNG image generation\n- Secure sandboxing via Snekbox Docker container\n- Real-time communication using Server-Sent Events (SSE)\n\n## Development\n\nTo get started with development, follow these steps:\n\n### Step 1: Clone the Repository\n\nFork and clone the repository:\n\n```bash\ngit clone https://github.com/username/python_sandbox_mcp_server.git\n```\n\nNavigate into the project directory:\n\n```bash\ncd python_sandbox_mcp_server\n```\n\n### Step 2: Install Dependencies\n\nInstall the required dependencies:\n\n```bash\nuv add -r requirements.txt\n```\n\n### Step 3: Build the Python Sandbox\n\nPull the Snekbox Container Image:\n\n```bash\ndocker pull ghcr.io/python-discord/snekbox:latest\n```\n\nStart the Container with Security Parameters:\n\n```bash\ndocker run -d --ipc=none --privileged -p 8060:8060 ghcr.io/python-discord/snekbox\n```\n\nInstall Additional Dependencies (Optional):\n\n- If additional Python packages are required, you can install them as follows:\n\n```bash\ndocker exec <container_id> /bin/sh -c \\\n    'PYTHONUSERBASE=/snekbox/user_base /snekbox/python/default/bin/python -m pip install --user <package_name>'\n```\n\n- Replace <container_id> with the ID of your running Snekbox container and <package_name> with the desired package.\n\n### Step 4: Update MCP Server Configuration\n\nUpdate your MCP server configuration to point to the local build:\n\n```json\n{\n  \"mcpServers\": {\n    \"python-sandbox-sse\": {\n      \"command\": \"mcp-proxy\",\n      \"args\": [\n        \"http://localhost:8060/eval\"\n      ],\n      \"ssePath\": \"/eval\"\n    }\n  }\n}\n```\n\n## Configuration\n\nThe server can be configured through the following environment variables or by modifying the `Config` class:\n\n- `MCP_SERVER_NAME`: Server identifier (default: \"python-sandbox-mcp-sse\")\n- `SNEKBOX_URL`: Snekbox API endpoint (default: \"http://localhost:8060/eval\")\n- `TEMP_DIR`: Directory for temporary files storage\n\n## License\n\n[MIT License](LICENSE)"
}