{
  "mcp_name": "GistPad-MCP",
  "mcp_description": "üìá üè† - Use GitHub Gists to manage and access your personal knowledge, daily notes, and reusable prompts. This acts as a companion to https://gistpad.dev and the [GistPad VS Code extension](https://aka.ms/gistpad).",
  "mcp_id": "lostintangent_gistpad-mcp",
  "fetch_timestamp": "2025-06-23T03:47:32.264626Z",
  "github_url": "https://github.com/lostintangent/gistpad-mcp",
  "repository": {
    "name": "gistpad-mcp",
    "full_name": "lostintangent/gistpad-mcp",
    "description": "üìì An MCP server for managing your personal knowledge, daily notes, and re-usable prompts via GitHub Gists",
    "html_url": "https://github.com/lostintangent/gistpad-mcp",
    "created_at": "2025-03-12T18:02:16Z",
    "updated_at": "2025-06-23T03:18:40Z",
    "pushed_at": "2025-06-19T14:03:51Z",
    "size": 114,
    "stargazers_count": 101,
    "watchers_count": 101,
    "forks_count": 13,
    "open_issues_count": 1,
    "language": "TypeScript",
    "license": "MIT License",
    "topics": [
      "gists",
      "mcp",
      "mcp-server",
      "notetaking",
      "pkm"
    ],
    "default_branch": "main",
    "owner": {
      "login": "lostintangent",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/116461?v=4",
      "html_url": "https://github.com/lostintangent"
    },
    "has_issues": true,
    "has_projects": false,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 13,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 53579,
      "JavaScript": 8754
    },
    "language_percentages": {
      "TypeScript": 85.96,
      "JavaScript": 14.04
    },
    "pull_requests_count": 6,
    "contributors_count": 3,
    "package_json_version": "0.4.7"
  },
  "readme": "# üìì GistPad MCP\n\nAn MCP server for managing and sharing your personal knowledge, daily notes, and reuseable prompts via GitHub Gists. It's a companion to the GistPad [VS Code extension](https://aka.ms/gistpad) and [GistPad.dev](https://gistpad.dev) (for web/mobile), which allows you to access and edit your gists from any MCP-enabled AI product (e.g. GitHub Copilot, Claude Desktop).\n\n- üèÉ [Getting started](#-getting-started)\n- üõ†Ô∏è [Included tools](#Ô∏è-included-tools)\n- üìÅ [Included resources](#-included-resources)\n- üí¨ [Reusable prompts](#-reusable-prompts)\n- üíª [CLI reference](#-cli-reference)\n\n## üèÉ Getting started\n\n1. Using VS Code?\n\n   1. Install the [GistPad extension](https://aka.ms/gistpad) and then reload VS Code\n\n      > _Note: This requires VS Code 1.101.0+, so if you're on an older version, it's time to upgrade!_\n\n   1. Open the `GistPad` tab and sign-in with your GitHub account. After that, you can begin using GistPad from Copilot chat (in `Agent` mode) without doing any extra setup or token management üí™\n\n1. Other MCP clients...\n\n   1. Generate a personal access token that includes _only_ the `gist` scope: https://github.com/settings/tokens/new\n   1. Add the equivalent of the following to your client's MCP config file (or via an \"Add MCP server\" GUI/TUI):\n\n      ```json\n      {\n        \"mcpServers\": {\n          \"gistpad\": {\n            \"command\": \"npx\",\n            \"args\": [\"-y\", \"gistpad-mcp\"],\n            \"env\": {\n              \"GITHUB_TOKEN\": \"<YOUR_PAT>\"\n            }\n          }\n        }\n      }\n      ```\n\nOnce your client it setup, you can start having fun with gists + MCP! ü•≥ For example, try things like...\n\n1. **Exploring content**\n\n   - `How many gists have I edited this month?`\n   - `What's the summary of my <foo> gist?`\n\n1. **Creating content**\n\n   - `Create a new gist about <foo>`\n   - `Update my <foo> gist to call out <bar>`\n\n1. **Daily todos**\n\n   - `What are my unfinished todos for today?`\n   - `Add a new todo for <foo>`\n\n1. **Collaboration**\n\n   - `Add a comment to the <foo> gist saying <bar>`\n   - `Give me a share URL for the <foo> gist`\n   - `View my starred gists`\n\n1. **Gist organization**\n\n   - `Archive my gist about <foo>`\n   - `Add a new <foo> file to the <bar> gist and migrate the <baz> content into it`\n\n1. **Reusable prompts**\n\n   - `Create a new prompt that searches the web ofor a specified manga series and then provides a summary about it`\n   - `Delete my prompt about <foo>`\n\n## üõ†Ô∏è Included tools\n\n### Gist management\n\n- `list_gists` - List all of your gists (excluding daily notes and archived gists).\n- `get_gist` - Get the contents of a gist by ID.\n- `create_gist` - Create a new gist with a specified description and initial file contents.\n- `delete_gist` - Delete a gist by ID.\n- `update_gist_description` - Update a gist's description by ID.\n- `duplicate_gist` - Create a copy of an existing gist with all its files.\n- `refresh_gists` - Reload your gist lists, ignoring any cached data.\n\n### File management\n\n- `update_gist_file` - Update the contents of a specific file in a gist.\n- `add_gist_file` - Add a new file to an existing gist.\n- `delete_gist_file` - Delete a file from a gist.\n- `rename_gist_file` - Rename an existing file within a gist.\n\n### Daily notes\n\n- `get_todays_note` - Get or create today's daily note.\n- `update_todays_note` - Update the content of today's daily note.\n- `list_daily_notes` - List all of your daily notes.\n- `get_daily_note` - Get the contents of a specific daily note by date.\n- `delete_daily_note` - Delete a specific daily note by date.\n\n### Starring\n\n- `list_starred_gists` - List all your starred gists.\n- `star_gist` - Star a specific gist by ID.\n- `unstar_gist` - Unstar a starered gist by ID.\n\n### Archiving\n\n- `list_archived_gists` - List all of your archived gists.\n- `archive_gist` - Archive one of your gists.\n- `unarchive_gist` - Unarchive an archived gist.\n\n### Comments\n\n- `list_gist_comments` - List all comments for a specified gist.\n- `add_gist_comment` - Add a new comment to a gist.\n- `edit_gist_comment` - Update the content of an existing comment.\n- `delete_gist_comment` - Delete a comment from a gist.\n\n### Prompts\n\n- `add_gist_prompt` - Add a new prompt to your prompts collection.\n- `delete_gist_prompt` - Delete a prompt from your collection.\n\n## üìÅ Included resources\n\nIn addition to the above tools, the GistPad MCP server also exposes your gists as resources (using the `gist:///` URI scheme), which allows clients to read them without requiring tool execution.\n\nWhen you add/delete/duplicate a gist, or change a gist's description, then a notification will be provided to MCP clients, indicating that the list of resources have changed. And if your MCP client supports resource subscriptions, then you can subscribe to a specific gist and get notified when it's updated.\n\nAdditionally, for MCP clients that support resource templates, GistPad also exposes a resource at `gist:///{gistId}/comments`, which allows querying the comments for a gist (without needing to execute the `list_gist_comments` tool).\n\n### Resource configuration\n\nIf you'd like to expose either your archived gists, starred gists, and/or daily notes as resources, then simply update your MCP server config to pass the `--archived`, `--starred`, and/or `--daily` flags to the `gistpad-mcp` CLI.\n\n## üí¨ Reusable prompts\n\nGistPad allows you to create and manage parameterized/reusable prompts that are stored as markdown files in a gist. You can manage prompts using the `add_prompt` and `delete_prompt` tool, by simply asking your MCP client to create/delete a prompt, with the specified contents/arguments you want.\n\nBehind the scenes, prompts are stored as markdown files in a gist called `üí¨ Prompts` (which is automatically created by the `add_prompt` tool). The prompt files include their prompt as the body, and optionally, a description and arguments using front-matter. And if the prompt makes use of arguments, the body of the prompt should include `{{argument}}` placeholders, which will be replaced when the MCP client retrieves it.\n\n## üíª CLI Reference\n\nThe `gistpad-mcp` CLI accepts the following optional flags:\n\n- `--archived` - Include archived gists in the list of MCP resources _(Note: The `list_archived_gists` tool is always available)_\n- `--starred` - Include starred gists in the list of MCP resources _(Note: The `list_starred_gists` tool is always available)_\n- `--daily` - Include daily notes in the list of MCP resources _(Note: The `list_daily_notes` tool is always available)_\n- `--markdown` - Filter the list of gists that are returned, to only those that are composed of Markdown files.\n\n## üß∞ Troubleshooting\n\n- <u>Not seeing a gist in your list?</u> The GistPad MCP server caches your gist list and updates it 1) anytime you make a change through the MCP server, or 2) every hour. However, if you add/edit/delete a gist using an external client, you may need to tell GistPad MCP to refresh itself (assuming it hasn't performed its hourly refresh yet). You can do this by triggering the `refresh_gists` tool (e.g. running `#refresh_gists` in VS Code Copilot chat).\n"
}