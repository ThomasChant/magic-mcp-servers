{
  "mcp_name": "yangkyeongmo@/mcp-server-apache-airflow",
  "mcp_description": "üêç üè† - MCP server that connects to [Apache Airflow](https://airflow.apache.org/) using official client.",
  "mcp_id": "yangkyeongmo_mcp-server-apache-airflow",
  "fetch_timestamp": "2025-06-23T09:36:31.395270Z",
  "github_url": "https://github.com/yangkyeongmo/mcp-server-apache-airflow",
  "repository": {
    "name": "mcp-server-apache-airflow",
    "full_name": "yangkyeongmo/mcp-server-apache-airflow",
    "description": null,
    "html_url": "https://github.com/yangkyeongmo/mcp-server-apache-airflow",
    "created_at": "2025-02-13T04:09:06Z",
    "updated_at": "2025-06-23T07:43:42Z",
    "pushed_at": "2025-06-18T12:30:05Z",
    "size": 96,
    "stargazers_count": 53,
    "watchers_count": 53,
    "forks_count": 16,
    "open_issues_count": 9,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "yangkyeongmo",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/24609628?v=4",
      "html_url": "https://github.com/yangkyeongmo"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 16,
    "subscribers_count": 3,
    "languages": {
      "Python": 56485,
      "Dockerfile": 449,
      "Makefile": 278
    },
    "language_percentages": {
      "Python": 98.73,
      "Dockerfile": 0.78,
      "Makefile": 0.49
    },
    "pull_requests_count": 8,
    "contributors_count": 6,
    "latest_release": {
      "tag_name": "0.2.4",
      "name": "0.2.4",
      "published_at": "2025-06-18T12:26:20Z",
      "body": "## What's Changed\r\n* fix: restrict apache-airflow-client version to 2.x by @ChaohaoDu in https://github.com/yangkyeongmo/mcp-server-apache-airflow/pull/16\r\n\r\n## New Contributors\r\n* @ChaohaoDu made their first contribution in https://github.com/yangkyeongmo/mcp-server-apache-airflow/pull/16\r\n\r\n**Full Changelog**: https://github.com/yangkyeongmo/mcp-server-apache-airflow/compare/0.2.3...0.2.4",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "0.2.4",
        "commit_sha": "68f4fa3161d3392b709ccfd3f00a82c9834f96f8"
      },
      {
        "name": "0.2.3",
        "commit_sha": "7aee31da0285b466788b0427edc4d7b4b26bba51"
      }
    ],
    "latest_version": "0.2.4"
  },
  "readme": "[![MseeP.ai Security Assessment Badge](https://mseep.net/pr/yangkyeongmo-mcp-server-apache-airflow-badge.png)](https://mseep.ai/app/yangkyeongmo-mcp-server-apache-airflow)\n\n# mcp-server-apache-airflow\n\n[![smithery badge](https://smithery.ai/badge/@yangkyeongmo/mcp-server-apache-airflow)](https://smithery.ai/server/@yangkyeongmo/mcp-server-apache-airflow)\n\nA Model Context Protocol (MCP) server implementation for Apache Airflow, enabling seamless integration with MCP clients. This project provides a standardized way to interact with Apache Airflow through the Model Context Protocol.\n\n<a href=\"https://glama.ai/mcp/servers/e99b6vx9lw\">\n  <img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/e99b6vx9lw/badge\" alt=\"Server for Apache Airflow MCP server\" />\n</a>\n\n## About\n\nThis project implements a [Model Context Protocol](https://modelcontextprotocol.io/introduction) server that wraps Apache Airflow's REST API, allowing MCP clients to interact with Airflow in a standardized way. It uses the official Apache Airflow client library to ensure compatibility and maintainability.\n\n## Feature Implementation Status\n\n| Feature                          | API Path                                                                                      | Status |\n| -------------------------------- | --------------------------------------------------------------------------------------------- | ------ |\n| **DAG Management**         |                                                                                               |        |\n| List DAGs                        | `/api/v1/dags`                                                                              | ‚úÖ     |\n| Get DAG Details                  | `/api/v1/dags/{dag_id}`                                                                     | ‚úÖ     |\n| Pause DAG                        | `/api/v1/dags/{dag_id}`                                                                     | ‚úÖ     |\n| Unpause DAG                      | `/api/v1/dags/{dag_id}`                                                                     | ‚úÖ     |\n| Update DAG                       | `/api/v1/dags/{dag_id}`                                                                     | ‚úÖ     |\n| Delete DAG                       | `/api/v1/dags/{dag_id}`                                                                     | ‚úÖ     |\n| Get DAG Source                   | `/api/v1/dagSources/{file_token}`                                                           | ‚úÖ     |\n| Patch Multiple DAGs              | `/api/v1/dags`                                                                              | ‚úÖ     |\n| Reparse DAG File                 | `/api/v1/dagSources/{file_token}/reparse`                                                   | ‚úÖ     |\n| **DAG Runs**               |                                                                                               |        |\n| List DAG Runs                    | `/api/v1/dags/{dag_id}/dagRuns`                                                             | ‚úÖ     |\n| Create DAG Run                   | `/api/v1/dags/{dag_id}/dagRuns`                                                             | ‚úÖ     |\n| Get DAG Run Details              | `/api/v1/dags/{dag_id}/dagRuns/{dag_run_id}`                                                | ‚úÖ     |\n| Update DAG Run                   | `/api/v1/dags/{dag_id}/dagRuns/{dag_run_id}`                                                | ‚úÖ     |\n| Delete DAG Run                   | `/api/v1/dags/{dag_id}/dagRuns/{dag_run_id}`                                                | ‚úÖ     |\n| Get DAG Runs Batch               | `/api/v1/dags/~/dagRuns/list`                                                               | ‚úÖ     |\n| Clear DAG Run                    | `/api/v1/dags/{dag_id}/dagRuns/{dag_run_id}/clear`                                          | ‚úÖ     |\n| Set DAG Run Note                 | `/api/v1/dags/{dag_id}/dagRuns/{dag_run_id}/setNote`                                        | ‚úÖ     |\n| Get Upstream Dataset Events      | `/api/v1/dags/{dag_id}/dagRuns/{dag_run_id}/upstreamDatasetEvents`                          | ‚úÖ     |\n| **Tasks**                  |                                                                                               |        |\n| List DAG Tasks                   | `/api/v1/dags/{dag_id}/tasks`                                                               | ‚úÖ     |\n| Get Task Details                 | `/api/v1/dags/{dag_id}/tasks/{task_id}`                                                     | ‚úÖ     |\n| Get Task Instance                | `/api/v1/dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}`                        | ‚úÖ     |\n| List Task Instances              | `/api/v1/dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances`                                  | ‚úÖ     |\n| Update Task Instance             | `/api/v1/dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}`                        | ‚úÖ     |\n| Clear Task Instances             | `/api/v1/dags/{dag_id}/clearTaskInstances`                                                  | ‚úÖ     |\n| Set Task Instances State         | `/api/v1/dags/{dag_id}/updateTaskInstancesState`                                            | ‚úÖ     |\n| **Variables**              |                                                                                               |        |\n| List Variables                   | `/api/v1/variables`                                                                         | ‚úÖ     |\n| Create Variable                  | `/api/v1/variables`                                                                         | ‚úÖ     |\n| Get Variable                     | `/api/v1/variables/{variable_key}`                                                          | ‚úÖ     |\n| Update Variable                  | `/api/v1/variables/{variable_key}`                                                          | ‚úÖ     |\n| Delete Variable                  | `/api/v1/variables/{variable_key}`                                                          | ‚úÖ     |\n| **Connections**            |                                                                                               |        |\n| List Connections                 | `/api/v1/connections`                                                                       | ‚úÖ     |\n| Create Connection                | `/api/v1/connections`                                                                       | ‚úÖ     |\n| Get Connection                   | `/api/v1/connections/{connection_id}`                                                       | ‚úÖ     |\n| Update Connection                | `/api/v1/connections/{connection_id}`                                                       | ‚úÖ     |\n| Delete Connection                | `/api/v1/connections/{connection_id}`                                                       | ‚úÖ     |\n| Test Connection                  | `/api/v1/connections/test`                                                                  | ‚úÖ     |\n| **Pools**                  |                                                                                               |        |\n| List Pools                       | `/api/v1/pools`                                                                             | ‚úÖ     |\n| Create Pool                      | `/api/v1/pools`                                                                             | ‚úÖ     |\n| Get Pool                         | `/api/v1/pools/{pool_name}`                                                                 | ‚úÖ     |\n| Update Pool                      | `/api/v1/pools/{pool_name}`                                                                 | ‚úÖ     |\n| Delete Pool                      | `/api/v1/pools/{pool_name}`                                                                 | ‚úÖ     |\n| **XComs**                  |                                                                                               |        |\n| List XComs                       | `/api/v1/dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}/xcomEntries`            | ‚úÖ     |\n| Get XCom Entry                   | `/api/v1/dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}/xcomEntries/{xcom_key}` | ‚úÖ     |\n| **Datasets**               |                                                                                               |        |\n| List Datasets                    | `/api/v1/datasets`                                                                          | ‚úÖ     |\n| Get Dataset                      | `/api/v1/datasets/{uri}`                                                                    | ‚úÖ     |\n| Get Dataset Events               | `/api/v1/datasetEvents`                                                                     | ‚úÖ     |\n| Create Dataset Event             | `/api/v1/datasetEvents`                                                                     | ‚úÖ     |\n| Get DAG Dataset Queued Event     | `/api/v1/dags/{dag_id}/dagRuns/queued/datasetEvents/{uri}`                                  | ‚úÖ     |\n| Get DAG Dataset Queued Events    | `/api/v1/dags/{dag_id}/dagRuns/queued/datasetEvents`                                        | ‚úÖ     |\n| Delete DAG Dataset Queued Event  | `/api/v1/dags/{dag_id}/dagRuns/queued/datasetEvents/{uri}`                                  | ‚úÖ     |\n| Delete DAG Dataset Queued Events | `/api/v1/dags/{dag_id}/dagRuns/queued/datasetEvents`                                        | ‚úÖ     |\n| Get Dataset Queued Events        | `/api/v1/datasets/{uri}/dagRuns/queued/datasetEvents`                                       | ‚úÖ     |\n| Delete Dataset Queued Events     | `/api/v1/datasets/{uri}/dagRuns/queued/datasetEvents`                                       | ‚úÖ     |\n| **Monitoring**             |                                                                                               |        |\n| Get Health                       | `/api/v1/health`                                                                            | ‚úÖ     |\n| **DAG Stats**              |                                                                                               |        |\n| Get DAG Stats                    | `/api/v1/dags/statistics`                                                                   | ‚úÖ     |\n| **Config**                 |                                                                                               |        |\n| Get Config                       | `/api/v1/config`                                                                            | ‚úÖ     |\n| **Plugins**                |                                                                                               |        |\n| Get Plugins                      | `/api/v1/plugins`                                                                           | ‚úÖ     |\n| **Providers**              |                                                                                               |        |\n| List Providers                   | `/api/v1/providers`                                                                         | ‚úÖ     |\n| **Event Logs**             |                                                                                               |        |\n| List Event Logs                  | `/api/v1/eventLogs`                                                                         | ‚úÖ     |\n| Get Event Log                    | `/api/v1/eventLogs/{event_log_id}`                                                          | ‚úÖ     |\n| **System**                 |                                                                                               |        |\n| Get Import Errors                | `/api/v1/importErrors`                                                                      | ‚úÖ     |\n| Get Import Error Details         | `/api/v1/importErrors/{import_error_id}`                                                    | ‚úÖ     |\n| Get Health Status                | `/api/v1/health`                                                                            | ‚úÖ     |\n| Get Version                      | `/api/v1/version`                                                                           | ‚úÖ     |\n\n## Setup\n\n### Dependencies\n\nThis project depends on the official Apache Airflow client library (`apache-airflow-client`). It will be automatically installed when you install this package.\n\n### Environment Variables\n\nSet the following environment variables:\n\n```\nAIRFLOW_HOST=<your-airflow-host>\nAIRFLOW_USERNAME=<your-airflow-username>\nAIRFLOW_PASSWORD=<your-airflow-password>\nAIRFLOW_API_VERSION=v1  # Optional, defaults to v1\n```\n\n### Usage with Claude Desktop\n\nAdd to your `claude_desktop_config.json`:\n\n```json\n{\n  \"mcpServers\": {\n    \"mcp-server-apache-airflow\": {\n      \"command\": \"uvx\",\n      \"args\": [\"mcp-server-apache-airflow\"],\n      \"env\": {\n        \"AIRFLOW_HOST\": \"https://your-airflow-host\",\n        \"AIRFLOW_USERNAME\": \"your-username\",\n        \"AIRFLOW_PASSWORD\": \"your-password\"\n      }\n    }\n  }\n}\n```\n\nAlternative configuration using `uv`:\n\n```json\n{\n  \"mcpServers\": {\n    \"mcp-server-apache-airflow\": {\n      \"command\": \"uv\",\n      \"args\": [\n        \"--directory\",\n        \"/path/to/mcp-server-apache-airflow\",\n        \"run\",\n        \"mcp-server-apache-airflow\"\n      ],\n      \"env\": {\n        \"AIRFLOW_HOST\": \"https://your-airflow-host\",\n        \"AIRFLOW_USERNAME\": \"your-username\",\n        \"AIRFLOW_PASSWORD\": \"your-password\"\n      }\n    }\n  }\n}\n```\n\nReplace `/path/to/mcp-server-apache-airflow` with the actual path where you've cloned the repository.\n\n### Selecting the API groups\n\nYou can select the API groups you want to use by setting the `--apis` flag.\n\n```bash\nuv run mcp-server-apache-airflow --apis \"dag,dagrun\"\n```\n\nThe default is to use all APIs.\n\nAllowed values are:\n\n- config\n- connections\n- dag\n- dagrun\n- dagstats\n- dataset\n- eventlog\n- importerror\n- monitoring\n- plugin\n- pool\n- provider\n- taskinstance\n- variable\n- xcom\n\n### Manual Execution\n\nYou can also run the server manually:\n\n```bash\nmake run\n```\n\n`make run` accepts following options:\n\nOptions:\n\n- `--port`: Port to listen on for SSE (default: 8000)\n- `--transport`: Transport type (stdio/sse, default: stdio)\n\nOr, you could run the sse server directly, which accepts same parameters:\n\n```bash\nmake run-sse\n```\n\n### Installing via Smithery\n\nTo install Apache Airflow MCP Server for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@yangkyeongmo/mcp-server-apache-airflow):\n\n```bash\nnpx -y @smithery/cli install @yangkyeongmo/mcp-server-apache-airflow --client claude\n```\n\n## Contributing\n\nContributions are welcome! Please feel free to submit a Pull Request.\n\nThe package is deployed automatically to PyPI when project.version is updated in `pyproject.toml`.\nFollow semver for versioning.\n\nPlease include version update in the PR in order to apply the changes to core logic.\n\n## License\n\n[MIT License](LICENSE)\n"
}