{
  "mcp_name": "NS Travel Information MCP Server",
  "mcp_description": "üìá ‚òÅÔ∏è - Access Dutch Railways (NS) travel information, schedules, and real-time updates",
  "mcp_id": "r-huijts_ns-mcp-server",
  "fetch_timestamp": "2025-06-23T07:11:27.270681Z",
  "github_url": "https://github.com/r-huijts/ns-mcp-server",
  "repository": {
    "name": "ns-mcp-server",
    "full_name": "r-huijts/ns-mcp-server",
    "description": "A Model Context Protocol (MCP) server that provides access to NS (Dutch Railways) travel information through Claude AI. This server enables Claude to fetch real-time train travel information and disruptions using the official Dutch NS API.",
    "html_url": "https://github.com/r-huijts/ns-mcp-server",
    "created_at": "2024-12-04T11:32:38Z",
    "updated_at": "2025-06-07T22:20:20Z",
    "pushed_at": "2025-04-11T07:23:41Z",
    "size": 69,
    "stargazers_count": 38,
    "watchers_count": 38,
    "forks_count": 8,
    "open_issues_count": 1,
    "language": "TypeScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "r-huijts",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/22192747?v=4",
      "html_url": "https://github.com/r-huijts"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 8,
    "subscribers_count": 2,
    "languages": {
      "TypeScript": 21005,
      "JavaScript": 14892,
      "Dockerfile": 879
    },
    "language_percentages": {
      "TypeScript": 57.12,
      "JavaScript": 40.49,
      "Dockerfile": 2.39
    },
    "pull_requests_count": 3,
    "contributors_count": 3,
    "package_json_version": "0.1.6"
  },
  "readme": "| <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b7/Nederlandse_Spoorwegen_logo.svg\" alt=\"NS Logo\" width=\"380\"/> | <img src=\"https://glama.ai/mcp/servers/tzd5oz5tov/badge\" alt=\"NS Travel Information Server MCP server\" width=\"380\"/> |\n|:---:|:---:|\n\n# NS Travel Information MCP Server\n\n[![smithery badge](https://smithery.ai/badge/ns-server)](https://smithery.ai/server/ns-server)\n[![npm version](https://badge.fury.io/js/ns-mcp-server.svg)](https://www.npmjs.com/package/ns-mcp-server)\n\nTransform your AI assistant into a Dutch railways expert! This MCP server connects Claude to real-time NS (Nederlandse Spoorwegen) travel information, making it your perfect companion for navigating the Netherlands by train.\n\n## Installation\n\nYou can install this server in three ways:\n\n### 1. Using Claude Desktop with NPM Package\n\nUpdate your Claude configuration file (`~/Library/Application Support/Claude/claude_desktop_config.json`):\n\n```json\n{\n  \"mcpServers\": {\n    \"ns-server\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"ns-mcp-server\"\n      ],\n      \"env\": {\n        \"NS_API_KEY\": \"your_api_key_here\"\n      }\n    }\n  }\n}\n```\n\nYou can get an API key from [NS API Portal](https://apiportal.ns.nl/)\n\n### 2. Using Smithery\n\nTo install NS Travel Information Server automatically via [Smithery](https://smithery.ai/server/ns-server):\n\n```bash\nnpx -y @smithery/cli install ns-server --client claude\n```\n\n### 3. From Source\n\n1. Clone this repository\n2. Install dependencies:\n   ```bash\n   npm install\n   ```\n3. Copy the example environment file:\n   ```bash\n   cp .env.example .env\n   ```\n4. Add your NS API key to the `.env` file:\n   ```\n   NS_API_KEY=your_api_key_here\n   ```\n\nThen update your Claude configuration file:\n\n```json\n{\n  \"mcpServers\": {\n    \"ns-server\": {\n      \"command\": \"node\",\n      \"args\": [\n        \"/path/to/ns-server/build/index.js\"\n      ],\n      \"env\": {\n        \"NS_API_KEY\": \"your_api_key_here\"\n      }\n    }\n  }\n}\n```\n\nMake sure to:\n1. Replace `/path/to/ns-server` with the actual path to your installation\n2. Add your NS API key in the `env` section. It can be obtained from here [https://apiportal.ns.nl/product#product=NsApp](https://apiportal.ns.nl/product#product=NsApp)\n\nAfter updating the configuration, restart Claude Desktop for the changes to take effect.\n\n## Real-World Use Cases\n\n- \"Is my usual 8:15 train from Almere to Amsterdam running on time?\"\n- \"Are there any delays on the Rotterdam-Den Haag route today?\"\n- \"What's the best alternative route to Utrecht if there's maintenance on the direct line?\"\n- \"Which train should I take to arrive at my office in Amsterdam Zuid before 9 AM?\"\n- \"Which route to Amsterdam has the fewest transfers with a stroller?\"\n- \"What's the earliest train I can take to make my 10 AM meeting in The Hague?\"\n- \"When's the last train back to Groningen after a night out in Amsterdam?\"\n- \"Are there any weekend engineering works that might affect my Monday morning class?\"\n- \"Are there OV-fiets bikes available at Utrecht Centraal for my afternoon meeting?\"\n- \"Is Eindhoven Strijp-S station wheelchair accessible and what platforms does it have?\"\n- \"What trains are arriving at Utrecht Centraal in the next hour?\"\n- \"Has the train from Venlo to Schiphol Airport arrived on time?\"\n- \"How much does a first-class ticket from Amsterdam to Rotterdam cost?\"\n- \"What's the price for 2 adults and 1 child traveling to Den Haag?\"\n\n## üîë Environment Variables\n\n| Variable | Description |\n|----------|-------------|\n| NS_API_KEY | Your NS API key (required) |\n\n## üåü Features\n\nThis MCP server provides comprehensive access to NS train information through the following endpoints:\n\n### Real-time Train Information\n- **Departures**: Get real-time departure information including platform numbers, delays, and travel notes\n- **Arrivals**: Access upcoming train arrivals with origin stations, platform changes, and status updates\n- **Journey Planning**: Find optimal travel routes with transfers and real-time updates\n- **Service Updates**: Check for disruptions, maintenance work, and engineering activities\n\n### Pricing Information\n- **Ticket Prices**: Get accurate pricing for single and return journeys\n- **Travel Classes**: Compare prices for first and second class travel\n- **Group Pricing**: Calculate fares for adults and children\n- **Discount Options**: Check joint journey discounts and special offers\n- **Validity Details**: View ticket validity periods and travel conditions\n\n### Station Information\n- **Station Details**: Access comprehensive station information including:\n  - Facilities and accessibility features\n  - Platform layouts and track information\n  - OV-fiets (bike rental) availability\n  - Location and approach details\n\n### Additional Features\n- **Multi-language Support**: Information available in Dutch and English\n- **Flexible Queries**: Search by station name, code, or UIC identifier\n- **Time Zones**: Proper handling of time zones for international stations\n- **Status Updates**: Track changes, delays, and cancellations in real-time\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details\n"
}