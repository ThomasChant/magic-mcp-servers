{
  "mcp_name": "noboru-i/nature-remo-mcp-server",
  "mcp_description": "Facilitates automation and management of Nature Remo devices through the Model Context Protocol SDK.",
  "mcp_id": "noboru-i_nature-remo-mcp-server",
  "fetch_timestamp": "2025-06-23T07:08:22.399081Z",
  "github_url": "https://github.com/noboru-i/nature-remo-mcp-server",
  "repository": {
    "name": "nature-remo-mcp-server",
    "full_name": "noboru-i/nature-remo-mcp-server",
    "description": "MCP Server for the Nature Remo API.",
    "html_url": "https://github.com/noboru-i/nature-remo-mcp-server",
    "created_at": "2025-03-20T13:13:24Z",
    "updated_at": "2025-04-17T23:41:10Z",
    "pushed_at": "2025-04-09T14:03:03Z",
    "size": 39,
    "stargazers_count": 5,
    "watchers_count": 5,
    "forks_count": 2,
    "open_issues_count": 1,
    "language": "TypeScript",
    "license": "MIT License",
    "topics": [
      "mcp",
      "mcp-server",
      "nature-remo"
    ],
    "default_branch": "main",
    "owner": {
      "login": "noboru-i",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/1567757?v=4",
      "html_url": "https://github.com/noboru-i"
    },
    "has_issues": true,
    "has_projects": false,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 2,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 7966,
      "JavaScript": 3784
    },
    "language_percentages": {
      "TypeScript": 67.8,
      "JavaScript": 32.2
    },
    "pull_requests_count": 4,
    "contributors_count": 1,
    "latest_release": {
      "tag_name": "v0.0.2",
      "name": "v0.0.2",
      "published_at": "2025-04-09T14:03:03Z",
      "body": "- Add times parameter to operate_tv and operate_aircon",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v0.0.2",
        "commit_sha": "053d80f7c00130c02ce837e34fc23b64d942d8ab"
      },
      {
        "name": "v0.0.1",
        "commit_sha": "dc16a067389069be1a22f7d84358b37e99974e8c"
      }
    ],
    "latest_version": "v0.0.2",
    "package_json_version": "0.0.2"
  },
  "readme": "# Nature Remo MCP server\n\n[![npm version](https://badge.fury.io/js/nature-remo-mcp-server.svg)](https://badge.fury.io/js/nature-remo-mcp-server)\n\nMCP Server for the Nature Remo API.\n\n## Overview\n\nThis is an MCP server for Nature Remo, designed to handle requests and interact with the Nature Remo API using the Model Context Protocol SDK. It provides tools to manage and automate interactions with Nature Remo devices.\n\n## Prerequisites\n\n1. Create your own access_token on [Nature Remo Home](https://home.nature.global/). more detail, see [documentation](https://developer.nature.global/en/)).\n\n## Setup\n\n### Usage with VS Code\n\nAdd the following configuration to your User Settings (JSON) file. Open the settings by pressing `Cmd + Shift + P` and selecting `Preferences: Open User Settings (JSON)`.\n\nAlternatively, you can create a `.vscode/mcp.json` file in your workspace to share the configuration with others. Note that the `mcp` key is not needed in the `.vscode/mcp.json` file.\n\n> Note that the `mcp` key is not needed in the `.vscode/mcp.json` file.\n\n```json\n{\n  \"mcp\": {\n    \"servers\": {\n      \"nature-remo\": {\n        \"command\": \"npx\",\n        \"args\": [\n          \"-y\",\n          \"noboru-i/nature-remo-mcp-server\"\n        ],\n        \"env\": {\n          \"ACCESS_TOKEN\": \"<YOUR_TOKEN>\"\n        }\n      }\n    }\n  }\n}\n```\n\n### Usage with Claude Desktop\n\n```json\n{\n  \"mcpServers\": {\n    \"github\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"noboru-i/nature-remo-mcp-server\"\n      ],\n      \"env\": {\n        \"ACCESS_TOKEN\": \"<YOUR_TOKEN>\"\n      }\n    }\n  }\n}\n```\n\n## Tools\n\nThis server provides the following tools:\n\n- **list_devices** - List devices on the home.\n  - No parameters required\n\n- **list_appliances** - List appliances on the home.\n  - No parameters required\n\n- **operate_tv** - Operate a TV appliance.\n  - `applianceId`: Appliance id (string, required)\n  - `button`: Button label (string, required)\n  - `times`: Number of times to press the button (integer, optional)\n\n- **operate_aircon** - Operate an aircon appliance.\n  - `applianceId`: Appliance id (string, required)\n  - `airDirection`: Air direction (string, optional)\n  - `airDirectionH`: Horizontal air direction (string, optional)\n  - `airVolume`: Air volume (string, optional)\n  - `button`: Button label (string, optional)\n  - `operationMode`: Operation mode (string, optional)\n  - `temperature`: Temperature (string, optional)\n  - `temperatureUnit`: Temperature unit (string, optional)\n  - `times`: Number of times to press the button (integer, optional)\n\n## License\n\nThis project is licensed under the terms of the MIT open source license. Please refer to [MIT](./LICENSE) for the full terms.\n"
}