{
  "mcp_name": "jmchat/mcp-search-console-ts",
  "mcp_description": "Manage Google Search Console properties, sitemaps, and search analytics via a Model Context Protocol server.",
  "mcp_id": "jmchat_mcp-search-console-ts",
  "fetch_timestamp": "2025-06-23T05:28:25.896507Z",
  "github_url": "https://github.com/jmchat/mcp-search-console-ts",
  "repository": {
    "name": "mcp-search-console-ts",
    "full_name": "jmchat/mcp-search-console-ts",
    "description": "Google Search Console API tools via Model Context Protocol",
    "html_url": "https://github.com/jmchat/mcp-search-console-ts",
    "created_at": "2025-04-15T16:44:31Z",
    "updated_at": "2025-04-29T07:41:52Z",
    "pushed_at": "2025-04-29T07:41:48Z",
    "size": 36,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "TypeScript",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "jmchat",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/46917781?v=4",
      "html_url": "https://github.com/jmchat"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 13104,
      "JavaScript": 670,
      "Shell": 100
    },
    "language_percentages": {
      "TypeScript": 94.45,
      "JavaScript": 4.83,
      "Shell": 0.72
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "tags": [
      {
        "name": "v1.0.1",
        "commit_sha": "b77f154c623aef121ea2d8a310c08d59a7217798"
      }
    ],
    "latest_version": "v1.0.1",
    "package_json_version": "1.0.2"
  },
  "readme": "# Google Search Console MCP\n\nA Model Context Protocol (MCP) server for managing Google Search Console properties, sitemaps, and search analytics.\n\n## Installation\n\n```bash\nnpm install -g mcp-search-console\n```\n\nOr use directly via npx:\n\n```bash\nnpx mcp-search-console\n```\n\n## Requirements\n\n1. A Google Cloud project with the Search Console API enabled\n2. A service account with appropriate permissions for Search Console\n3. A credentials.json file for the service account\n\n## Configuration\n\nSpecify the path to your Google service account credentials. This can be done in two ways:\n\n### Option 1: Environment Variable\n\nSet the `GOOGLE_APPLICATION_CREDENTIALS` variable:\n\n```bash\nexport GOOGLE_APPLICATION_CREDENTIALS=path/to/credentials.json\n```\n\n### Option 2: .env File (optional)\n\nCreate a `.env` file with:\n\n```\nGOOGLE_APPLICATION_CREDENTIALS=path/to/credentials.json\n```\n\n## Available Functions\n\nThe MCP provides the following Search Console functions:\n\n### Sites\n- `search_console_api_list_sites` – List all sites with access\n\n### Sitemaps\n- `search_console_api_list_sitemaps` – List all sitemaps for a property\n- `search_console_api_get_sitemap` – Details of a specific sitemap\n\n### Search Analytics\n- `search_console_api_searchanalytics_query` – Retrieve search analytics data\n  - Also supports hourly data (from April 2025) via the `HOUR` dimension and `HOURLY_ALL` dataState\n\n#### Example: Querying Hourly Data\n\nTo query hourly data, use the following parameters in your request:\n\n```json\n{\n  \"tool\": \"search_console_api_searchanalytics_query\",\n  \"parameters\": {\n    \"siteUrl\": \"https://example.com\",\n    \"requestBody\": {\n      \"startDate\": \"2025-04-07\",\n      \"endDate\": \"2025-04-07\",\n      \"dataState\": \"HOURLY_ALL\",\n      \"dimensions\": [\"HOUR\"]\n    }\n  }\n}\n```\n\nThis returns results with timestamps per hour:\n\n```json\n{\n  \"rows\": [\n    {\n      \"keys\": [\"2025-04-07T00:00:00-07:00\"],\n      \"clicks\": 17610,\n      \"impressions\": 1571473,\n      \"ctr\": 0.011206046810858348,\n      \"position\": 10.073871456906991\n    },\n    {\n      \"keys\": [\"2025-04-07T01:00:00-07:00\"],\n      \"clicks\": 18250,\n      \"impressions\": 1602341,\n      \"ctr\": 0.011389563095440307,\n      \"position\": 9.897654321098765\n    }\n    // ... more hours\n  ]\n}\n```\n\nYou can also combine the HOUR dimension with other dimensions such as COUNTRY, DEVICE, etc.:\n\n```json\n{\n  \"tool\": \"search_console_api_searchanalytics_query\",\n  \"parameters\": {\n    \"siteUrl\": \"https://example.com\",\n    \"requestBody\": {\n      \"startDate\": \"2025-04-07\",\n      \"endDate\": \"2025-04-07\",\n      \"dataState\": \"HOURLY_ALL\",\n      \"dimensions\": [\"HOUR\", \"COUNTRY\"]\n    }\n  }\n}\n```\n\n### Crawl Errors (Legacy)\n- `search_console_api_list_crawl_errors` – List crawl errors\n- `search_console_api_get_crawl_error` – Details of a specific crawl error\n- `search_console_api_mark_crawl_error_fixed` – Mark as fixed\n\n### Mobile Usability\n- `search_console_api_mobile_friendly_test` – Run a mobile-friendly test on a URL\n\n## Using with Claude\n\nThis MCP works with Claude or other MCP Clients. Create a `claude-mcp-config.json` with, for example:\n\n```json\n{\n  \"mcpServers\": {\n    \"google-search-console\": {\n      \"command\": \"npx\",\n      \"args\": [\"mcp-search-console\"],\n      \"cwd\": \"/tmp\",\n      \"env\": {\n        \"GOOGLE_APPLICATION_CREDENTIALS\": \"/path/to/your/credentials.json\"\n      }\n    }\n  }\n}\n```\n\nReplace `/path/to/your/credentials.json` with the actual path to your Google service account credentials file.\n\n### Important Notes for Claude Configuration\n\n1. The `cwd` parameter is important - it ensures the MCP runs in a clean directory\n2. No `.env` file is needed when using this configuration with Claude\n3. The `NO_COLOR` environment variable prevents color codes in the output, which can cause JSON parsing errors in Claude\n4. Upload the `claude-mcp-config.json` file to Claude when starting a new conversation\n\n## License\n\nISC\n"
}