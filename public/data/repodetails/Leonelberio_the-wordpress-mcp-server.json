{
  "mcp_name": "Leonelberio/the-wordpress-mcp-server",
  "mcp_description": "Facilitates seamless interaction with WordPress sites via JSON-RPC 2.0, enabling post creation, retrieval, and updates through the WordPress REST API.",
  "mcp_id": "Leonelberio_the-wordpress-mcp-server",
  "fetch_timestamp": "2025-06-23T06:08:10.652302Z",
  "github_url": "https://github.com/Leonelberio/the-wordpress-mcp-server",
  "repository": {
    "name": "the-wordpress-mcp-server",
    "full_name": "Leonelberio/the-wordpress-mcp-server",
    "description": null,
    "html_url": "https://github.com/Leonelberio/the-wordpress-mcp-server",
    "created_at": "2025-04-03T11:10:45Z",
    "updated_at": "2025-04-03T13:06:53Z",
    "pushed_at": "2025-04-03T13:06:50Z",
    "size": 20,
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks_count": 1,
    "open_issues_count": 1,
    "language": "JavaScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "Leonelberio",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/67783416?v=4",
      "html_url": "https://github.com/Leonelberio"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 1,
    "subscribers_count": 1,
    "languages": {
      "JavaScript": 8326
    },
    "language_percentages": {
      "JavaScript": 100
    },
    "pull_requests_count": 1,
    "contributors_count": 1,
    "package_json_version": "1.0.0"
  },
  "readme": "# WordPress MCP Server\n\nA Model Context Protocol (MCP) server for WordPress integration, compatible with Windows, macOS, and Linux.\n\n## Overview\n\nThis MCP server enables interaction with WordPress sites through the WordPress REST API. It provides tools for creating, retrieving, and updating posts using JSON-RPC 2.0 protocol.\n\n## Installation\n\n1. Clone the repository\n2. Install dependencies:\n```bash\nnpm install\n```\n3. Build the project:\n```bash\nnpm run build\n```\n\n## Configuration\n\nAdd the server to your MCP settings file with environment variables for WordPress credentials:\n\n```json\n{\n  \"mcpServers\": {\n    \"wordpress\": {\n      \"command\": \"node\",\n      \"args\": [\"path/to/build/index.js\"],\n      \"env\": {\n        \"WORDPRESS_SITE_URL\": \"https://your-wordpress-site.com\",\n        \"WORDPRESS_USERNAME\": \"your-username\",\n        \"WORDPRESS_PASSWORD\": \"your-app-password\"\n      }\n    }\n  }\n}\n```\n\nThe environment variables are:\n- WORDPRESS_SITE_URL: Your WordPress site URL\n- WORDPRESS_USERNAME: WordPress username\n- WORDPRESS_PASSWORD: WordPress application password\n\nYou can also provide these credentials in the request parameters if you prefer not to use environment variables.\n\n## Available Methods\n\n### create_post\nCreates a new WordPress post.\n\nParameters:\n- siteUrl: (optional if set in env) WordPress site URL\n- username: (optional if set in env) WordPress username\n- password: (optional if set in env) WordPress application password\n- title: Post title\n- content: Post content\n- status: (optional) 'draft' | 'publish' | 'private' (default: 'draft')\n\n### get_posts\nRetrieves WordPress posts.\n\nParameters:\n- siteUrl: (optional if set in env) WordPress site URL\n- username: (optional if set in env) WordPress username\n- password: (optional if set in env) WordPress application password\n- perPage: (optional) Number of posts per page (default: 10)\n- page: (optional) Page number (default: 1)\n\n### update_post\nUpdates an existing WordPress post.\n\nParameters:\n- siteUrl: (optional if set in env) WordPress site URL\n- username: (optional if set in env) WordPress username\n- password: (optional if set in env) WordPress application password\n- postId: ID of the post to update\n- title: (optional) New post title\n- content: (optional) New post content\n- status: (optional) 'draft' | 'publish' | 'private'\n\n## Security Note\n\nFor security, it's recommended to use WordPress application passwords instead of your main account password. You can generate an application password in your WordPress dashboard under Users → Security → Application Passwords.\n\n## Example Usage\n\nUsing environment variables:\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"method\": \"create_post\",\n  \"params\": {\n    \"title\": \"My New Post\",\n    \"content\": \"Hello World!\",\n    \"status\": \"draft\"\n  }\n}\n```\n\nWithout environment variables:\n```json\n{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"method\": \"create_post\",\n  \"params\": {\n    \"siteUrl\": \"https://your-wordpress-site.com\",\n    \"username\": \"your-username\",\n    \"password\": \"your-app-password\",\n    \"title\": \"My New Post\",\n    \"content\": \"Hello World!\",\n    \"status\": \"draft\"\n  }\n}\n```\n\n## Requirements\n\n- Node.js 20.0.0 or higher\n- WordPress site with REST API enabled\n- WordPress application password for authentication\n\n## License\n\nMIT License - See LICENSE file for details\n"
}