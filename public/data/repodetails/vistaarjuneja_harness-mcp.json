{
  "mcp_name": "vistaarjuneja/harness-mcp",
  "mcp_description": "Facilitates the management of connectors within the Harness platform using a Model Context Protocol server.",
  "mcp_id": "vistaarjuneja_harness-mcp",
  "fetch_timestamp": "2025-06-23T09:19:24.471567Z",
  "github_url": "https://github.com/vistaarjuneja/harness-mcp",
  "repository": {
    "name": "harness-mcp",
    "full_name": "vistaarjuneja/harness-mcp",
    "description": "Harness MCP server",
    "html_url": "https://github.com/vistaarjuneja/harness-mcp",
    "created_at": "2025-04-15T00:22:54Z",
    "updated_at": "2025-06-19T05:58:10Z",
    "pushed_at": "2025-05-30T18:46:32Z",
    "size": 77,
    "stargazers_count": 2,
    "watchers_count": 2,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "Go",
    "license": null,
    "topics": [],
    "default_branch": "master",
    "owner": {
      "login": "vistaarjuneja",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/65973712?v=4",
      "html_url": "https://github.com/vistaarjuneja"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "Go": 86768,
      "Shell": 268
    },
    "language_percentages": {
      "Go": 99.69,
      "Shell": 0.31
    },
    "pull_requests_count": 0,
    "contributors_count": 1
  },
  "readme": "# Harness MCP Server\n\nThe Harness MCP Server is a [Model Context Protocol (MCP)](https://modelcontextprotocol.io/introduction) server that provides seamless integration with Harness APIs, enabling advanced automation and interaction capabilities for developers and tools.\n\n## Components\n\n### Tools\n\nThe server implements several toolsets:\n\n#### Pipelines Toolset\n- `get_pipeline`: Get details of a specific pipeline\n- `list_pipelines`: List pipelines in a repository\n- `get_execution`: Get details of a specific pipeline execution\n- `list_executions`: List pipeline executions\n- `fetch_execution_url`: Fetch the execution URL for a pipeline execution\n\n#### Pull Requests Toolset\n- `get_pull_request`: Get details of a specific pull request\n- `list_pull_requests`: List pull requests in a repository\n- `get_pull_request_checks`: Get status checks for a specific pull request\n- `create_pull_request`: Create a new pull request\n\n#### Repositories Toolset\n- `get_repository`: Get details of a specific repository\n- `list_repositories`: List repositories\n\n#### Logs Toolset\n- `download_execution_logs`: Download logs for a pipeline execution\n\n## Prerequisites\n\n1. You will need to have Go 1.23 or later installed on your system.\n2. A Harness API key for authentication.\n\n## Quickstart\n\n### Build from source\n\n1. Clone the repository:\n```bash\ngit clone https://github.com/vistaarjuneja/harness-mcp.git\ncd harness-mcp\n```\n\n2. Build the binary:\n```bash\ngo build -o cmd/harness-mcp-server/harness-mcp-server ./cmd/harness-mcp-server\n```\n\n3. Run the server:\n```bash\nHARNESS_API_KEY=your_api_key HARNESS_ACCOUNT_ID=your_account_id HARNESS_ORG_ID=your_org_id HARNESS_PROJECT_ID=your_project_id ./cmd/harness-mcp-server/harness-mcp-server stdio\n```\n\n### Claude Desktop Configuration\n\nOn MacOS: `~/Library/Application\\ Support/Claude/claude_desktop_config.json`  \nOn Windows: `%APPDATA%/Claude/claude_desktop_config.json`\n\n<details>\n  <summary>Server Configuration</summary>\n  \n  ```json\n  {\n    \"mcpServers\": {\n      \"harness\": {\n        \"command\": \"/path/to/harness-mcp-server\",\n        \"args\": [\"stdio\"],\n        \"env\": {\n          \"HARNESS_API_KEY\": \"<YOUR_API_KEY>\",\n          \"HARNESS_ACCOUNT_ID\": \"<YOUR_ACCOUNT_ID>\",\n          \"HARNESS_ORG_ID\": \"<YOUR_ORG_ID>\",\n          \"HARNESS_PROJECT_ID\": \"<YOUR_PROJECT_ID>\"\n        }\n      }\n    }\n  }\n  ```\n</details>\n\n## Usage with Claude Code\n\n```bash\nHARNESS_API_KEY=your_api_key HARNESS_ACCOUNT_ID=your_account_id HARNESS_ORG_ID=your_org_id HARNESS_PROJECT_ID=your_project_id ./cmd/harness-mcp-server/harness-mcp-server stdio\n```\n\n## Usage with Windsurf\n\nTo use the Harness MCP Server with Windsurf:\n\n1. Add the server configuration to your Windsurf config file:\n\n```json\n{\n  \"mcpServers\": {\n    \"harness\": {\n      \"command\": \"/path/to/harness-mcp-server\",\n      \"args\": [\"stdio\"],\n      \"env\": {\n        \"HARNESS_API_KEY\": \"<YOUR_API_KEY>\",\n        \"HARNESS_ACCOUNT_ID\": \"<YOUR_ACCOUNT_ID>\",\n        \"HARNESS_ORG_ID\": \"<YOUR_ORG_ID>\",\n        \"HARNESS_PROJECT_ID\": \"<YOUR_PROJECT_ID>\",\n        \"HARNESS_BASE_URL\": \"<YOUR_BASE_URL>\",\n      }\n    }\n  }\n}\n```\n\n## Development\n\n### Command Line Arguments\n\nThe Harness MCP Server supports the following command line arguments:\n\n- `--toolsets`: Comma-separated list of tool groups to enable (default: \"all\")\n- `--read-only`: Run the server in read-only mode\n- `--log-file`: Path to log file for debugging\n- `--log-level`: Set the logging level (debug, info, warn, error)\n- `--version`: Show version information\n- `--help`: Show help message\n- `--base-url`: Base URL for Harness (default: \"https://app.harness.io\")\n\n### Environment Variables\n\nEnvironment variables are prefixed with `HARNESS_`:\n\n- `HARNESS_API_KEY`: Harness API key (required)\n- `HARNESS_ACCOUNT_ID`: Harness account ID (required)\n- `HARNESS_ORG_ID`: Harness organization ID (optional, but required for some operations)\n- `HARNESS_PROJECT_ID`: Harness project ID (optional, but required for some operations)\n- `HARNESS_TOOLSETS`: Comma-separated list of toolsets to enable (default: \"all\")\n- `HARNESS_READ_ONLY`: Set to \"true\" to run in read-only mode\n- `HARNESS_LOG_FILE`: Path to log file\n- `HARNESS_LOG_LEVEL`: Set the logging level (debug, info, warn, error)\n- `HARNESS_BASE_URL`: Base URL for Harness (default: \"https://app.harness.io\")\n\n### Authentication\n\nThe server uses a Harness API key for authentication. This can be set via the `HARNESS_API_KEY` environment variable.\n\n## Debugging\n\nSince MCP servers run over stdio, debugging can be challenging. For the best debugging experience, we strongly recommend using the [MCP Inspector](https://github.com/modelcontextprotocol/inspector).\n\nYou can launch the MCP Inspector with this command:\n\n```bash\nnpx @modelcontextprotocol/inspector /path/to/harness-mcp-server stdio\n```\n\nUpon launching, the Inspector will display a URL that you can access in your browser to begin debugging.\n\n## To do\n\nAdd Docker image for easier use"
}