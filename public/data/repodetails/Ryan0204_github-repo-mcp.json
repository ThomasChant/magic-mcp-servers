{
  "mcp_name": "Ryan0204/github-repo-mcp",
  "mcp_description": "üìá ‚òÅÔ∏è ü™ü üêß üçé - GitHub Repo MCP allow your AI assistants browse GitHub repositories, explore directories, and view file contents.",
  "mcp_id": "Ryan0204_github-repo-mcp",
  "fetch_timestamp": "2025-06-23T08:06:12.100997Z",
  "github_url": "https://github.com/Ryan0204/github-repo-mcp",
  "repository": {
    "name": "github-repo-mcp",
    "full_name": "Ryan0204/github-repo-mcp",
    "description": "Model Context Protocol server for Github Repo // Reading Github Repo",
    "html_url": "https://github.com/Ryan0204/github-repo-mcp",
    "created_at": "2025-04-25T04:47:44Z",
    "updated_at": "2025-06-17T05:45:52Z",
    "pushed_at": "2025-04-25T23:34:52Z",
    "size": 42,
    "stargazers_count": 7,
    "watchers_count": 7,
    "forks_count": 3,
    "open_issues_count": 0,
    "language": "JavaScript",
    "license": "MIT License",
    "topics": [
      "github",
      "github-mcp",
      "github-mcp-server",
      "mcp",
      "mcp-github",
      "mcp-server"
    ],
    "default_branch": "main",
    "owner": {
      "login": "Ryan0204",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/82715592?v=4",
      "html_url": "https://github.com/Ryan0204"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 3,
    "subscribers_count": 1,
    "languages": {
      "JavaScript": 4862,
      "Dockerfile": 704
    },
    "language_percentages": {
      "JavaScript": 87.35,
      "Dockerfile": 12.65
    },
    "pull_requests_count": 2,
    "contributors_count": 3,
    "package_json_version": "1.0.1"
  },
  "readme": "# GitHub Repo MCP\n\n[![smithery badge](https://smithery.ai/badge/@Ryan0204/github-repo-mcp)](https://smithery.ai/server/@Ryan0204/github-repo-mcp)\n\n<p class=\"center-text\">\n  <strong>GitHub Repo MCP is an open-source MCP server that lets your AI assistants browse GitHub repositories, explore directories, and view file contents.</strong>\n</p>\n\n<a href=\"https://glama.ai/mcp/servers/@Ryan0204/github-repo-mcp\">\n  <img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/@Ryan0204/github-repo-mcp/badge\" alt=\"github-repo-mcp MCP server\" />\n</a>\n\n## Table of contents\n\n<p class=\"center-text\">\n  <a href=\"#getting-started\">Getting started</a> ‚Ä¢\n  <a href=\"#feature-overview\">Feature overview</a>\n</p>\n\n## ‚ú® Key features\n\n- üíª Compatible with Cursor, Windsurf, Claude Desktop, and other MCP clients supporting `stdio` protocol\n- üîé Browse the contents of any public GitHub repository\n- üìÇ Navigate through repository directories and subdirectories\n- üìù View the content of code and text files\n- üì¶ Easy installation via package manager\n\n## Getting Started\n\n### Prerequisites\n\nInstalling the server requires the following on your system:\n- Node.js 18+\n- npm or yarn\n\n### Step 1. Installation\n\nYou can install and run GitHub Repo MCP using Smithery, NPX, or setting in mcp.json of your IDE:\n\n#### MacOS\n\n```bash\nnpx github-repo-mcp\n```\n\n#### Windows NPX\n\n```bash\ncmd /c npx -y github-repo-mcp\n```\n\n#### Windows NPX via .cursor/mcp.json\n\n```json\n{\n  \"mcpServers\": {\n    \"github-repo-mcp\": {\n      \"command\": \"wsl\",\n      \"args\": [\n        \"bash\",\n        \"-c\",\n        \"cmd /c npx -y github-repo-mcp\"\n      ],\n      \"enabled\": true\n    }\n  }\n}\n```\n\n#### Windows NPX via .cursor/mcp.json (if path not set)\n\n```bash\n# Find the full path to npx first\nwhich npx\n```\n\n```json\n{\n  \"mcpServers\": {\n    \"github-repo-mcp\": {\n      \"command\": \"wsl\",\n      \"args\": [\n        \"bash\",\n        \"-c\",\n        \"'/home/[username]/.nvm/versions/node/v20.18.0/bin/npx github-repo-mcp'\"\n      ],\n      \"enabled\": true\n    }\n  }\n}\n```\n\n#### Installing via Smithery\n\nTo install GitHub Repo MCP for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@Ryan0204/github-repo-mcp):\n\n```bash\nnpx -y @smithery/cli install @Ryan0204/github-repo-mcp --client claude\n```\n\n\nWait a few seconds or click on the refresh button a few times if it does not register. If it still won't register, make sure you entered the right command.\n\n### Step 2. Configuration\n\nThe GitHub Repo MCP server can use a GitHub token for higher rate limits when accessing the GitHub API.\n\n#### Environment Variables\n\n| Variable | Required | Default | Description |\n|----------|----------|---------|-------------|\n| `GITHUB_TOKEN` | No | None | Your GitHub personal access token for higher rate limits |\n\n#### Setting Up a GitHub Token (Optional)\n\nWhile the server works without authentication, GitHub API has rate limits that are much lower for unauthenticated requests. To increase your rate limit:\n\n1. Create a personal access token at https://github.com/settings/tokens\n2. Set the token as an environment variable in mcp.json:\n\n```json\n{\n  \"mcpServers\": {\n    \"github-repo-mcp\": {\n      \"command\": \"...\",\n      \"args\": [\n        ...\n      ],\n      \"env\": {\n        \"GITHUB_TOKEN\": \"Your_Github_Token\"\n      }\n      \"enabled\": true,\n    }\n  }\n}\n```\n\n## Feature Overview\n\n### Repository Browsing Tools\n\nThe server provides three main tools for interacting with GitHub repositories:\n\n#### 1. `getRepoAllDirectories`\n\nLists all files and directories at the root of a GitHub repository.\n\n- **Parameters**:\n  - `repoUrl`: The URL of the GitHub repository (e.g., \"https://github.com/owner/repo\")\n\n#### 2. `getRepoDirectories`\n\nLists contents of a specific directory in a GitHub repository.\n\n- **Parameters**:\n  - `repoUrl`: The URL of the GitHub repository\n  - `path`: The directory path to fetch (e.g., \"src\")\n\n#### 3. `getRepoFile`\n\nRetrieves and displays the content of a specific file from a GitHub repository.\n\n- **Parameters**:\n  - `repoUrl`: The URL of the GitHub repository\n  - `path`: The file path to fetch (e.g., \"src/index.js\")\n\n### Usage Examples\n\nHere are some examples of how to use these tools with an AI assistant:\n\n1. **Browsing a repository root**:\n   Ask your AI assistant to \"Show me the contents of the repository at https://github.com/Ryan0204/github-repo-mcp\"\n\n2. **Exploring a specific directory**:\n   Ask \"What files are in the src directory of https://github.com/Ryan0204/github-repo-mcp?\"\n\n3. **Viewing a file**:\n   Ask \"Show me the README.md file from https://github.com/Ryan0204/github-repo-mcp\"\n\n### Limitations\n\n- **Rate Limiting**: Without authentication, GitHub API has strict rate limits (60 requests per hour)\n- **Private Repositories**: Can only access public repositories unless a token with appropriate permissions is provided\n- **Binary Files**: The server detects common binary file extensions and won't display their contents\n- **Large Files**: GitHub API has limitations on the size of files that can be retrieved\n\n## Troubleshooting\n\nHere are some common issues and their solutions:\n\n- **Rate limit exceeded**: Set up a GitHub token as described in the Configuration section\n- **Command not found**: Ensure the package is installed globally\n- **Connection errors**: Check your internet connection and GitHub API status\n\nIf you encounter any issues, please check the output for error messages or create an issue in the GitHub repository.\n\n---\n\nEnjoy! ‚ò∫Ô∏è \n"
}