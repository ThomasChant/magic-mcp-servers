{
  "mcp_name": "gunpal5/QuickMCP",
  "mcp_description": "QuickMCP enables rapid creation and deployment of MCP servers using OpenAPI, Swagger, or Google Discovery specifications with .NET.",
  "mcp_id": "gunpal5_QuickMCP",
  "fetch_timestamp": "2025-06-23T04:16:46.096266Z",
  "github_url": "https://github.com/gunpal5/QuickMCP",
  "repository": {
    "name": "QuickMCP",
    "full_name": "gunpal5/QuickMCP",
    "description": "Effortlessly Build Model Context Protocol Servers with OpenAPI or Swagger or Google Discovery Specifications",
    "html_url": "https://github.com/gunpal5/QuickMCP",
    "created_at": "2025-04-05T02:29:20Z",
    "updated_at": "2025-06-18T05:01:12Z",
    "pushed_at": "2025-06-03T19:44:21Z",
    "size": 5417,
    "stargazers_count": 50,
    "watchers_count": 50,
    "forks_count": 4,
    "open_issues_count": 0,
    "language": "C#",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "gunpal5",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/10114874?v=4",
      "html_url": "https://github.com/gunpal5"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 4,
    "subscribers_count": 1,
    "languages": {
      "C#": 356967,
      "Shell": 2247,
      "Batchfile": 1562
    },
    "language_percentages": {
      "C#": 98.94,
      "Shell": 0.62,
      "Batchfile": 0.43
    },
    "pull_requests_count": 2,
    "contributors_count": 4,
    "latest_release": {
      "tag_name": "v0.2.0",
      "name": "v0.2.0",
      "published_at": "2025-06-03T19:44:21Z",
      "body": "## What's Changed\r\n - Upgrade ModelContextProtocol  and Add Support to HTTP and In Head by @miriyald in https://github.com/gunpal5/QuickMCP/pull/3\r\n\r\n## New Contributors\r\n* @miriyald made their first contribution in https://github.com/gunpal5/QuickMCP/pull/3\r\n\r\n**Full Changelog**: https://github.com/gunpal5/QuickMCP/compare/v0.1.7...v0.2.0",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v0.2.0",
        "commit_sha": "ad343730de8850e78668f2e28636f99685a7f8d8"
      },
      {
        "name": "v0.1.7",
        "commit_sha": "a3233f555673a78b596cc568177db71be8ff565c"
      },
      {
        "name": "v0.1.6",
        "commit_sha": "eadb0ca1f53a0b987c700d0fa3cfcc0e4eafad91"
      },
      {
        "name": "v0.1.5",
        "commit_sha": "0f53d7fb69cafd3dd796040d512306709abf4044"
      },
      {
        "name": "v0.1.4",
        "commit_sha": "8f5909c1e7f1149caeeefd6176dbd0dbfe81d146"
      },
      {
        "name": "v0.1.3",
        "commit_sha": "d9d1a6d25bc1ba95265b3990ab6f573369087d55"
      },
      {
        "name": "v0.1.2",
        "commit_sha": "7239f204ff1cdeffbba91edccda6aa08887ca7af"
      },
      {
        "name": "v0.1.0",
        "commit_sha": "f121380300b3e886d9b982e3003e15707b0aacc3"
      }
    ],
    "latest_version": "v0.2.0"
  },
  "readme": "# QuickMCP\n\nEffortlessly Build and Serve Model Context Protocol (MCP) Servers with OpenAPI, Swagger, or Google Discovery Specifications using .NET.\n\n## Introduction\n\nQuickMCP is a powerful .NET toolkit designed to streamline the creation and deployment of Model Context Protocol (MCP) servers. It allows developers to quickly generate servers from OpenAPI, Swagger, or Google Discovery specifications, reducing boilerplate code and accelerating development.\n\n## Features\n\n- Generate .NET MCP servers from OpenAPI/Swagger/Google Discovery specifications\n- Highly configurable .NET library with CLI utility for rapid deployment\n- Multiple configuration approaches (Configuration options or method chaining)\n- Comprehensive authentication support:\n  - API Key, Basic, Bearer Token, OAuth 2.0, Custom Header\n  - Custom authentication implementation interface\n- Generate Tools with Path filtering, HTTP customization, error handling, and logging\n- Seamless integration with MCP clients like Claude Desktop\n- Configuration file support and full async/await capabilities\n\n## Installation\n\n### CLI Installation\n```bash\ndotnet tool install -g QuickMCP.CLI\n```\n\n### Library Installation\n```bash\ndotnet add package QuickMCP\n```\n\n## Quick Start\n\n### Basic CLI Usage\n```bash\n# Serve directly from OpenAPI specification\nquickmcp serve --spec-url https://petstore.swagger.io/v2/swagger.json\n\n# Build a configuration file\nquickmcp build config --spec-url https://petstore.swagger.io/v2/swagger.json --output-path ./config\n\n# Serve using a configuration file\nquickmcp serve --config-path ./config/mcp_server_config.json\n\n# Add authentication to your configuration\nquickmcp build config --spec-url https://api.example.com/swagger.json --auth bearer\n\n# Add a server configuration for quick access\nquickmcp add server /path/to/config.json -n MyServer\n\n# List available servers\nquickmcp list server\n\n# Serve installed server\nquickmcp serve -i myServer\n\n# Remove a stored server configuration\nquickmcp delete server MyServer\n```\n\n### Library Integration Example\n```csharp\n// Create and configure a server\nvar serverInfoBuilder = McpServerInfoBuilder.ForOpenApi()\n    .FromUrl(\"https://petstore.swagger.io/v2/swagger.json\")\n    .WithBaseUrl(\"https://petstore.swagger.io\")\n    .AddDefaultHeader(\"User-Agent\", \"QuickMCP Client\")\n    .AddAuthentication(new ApiKeyAuthenticator(\"your-api-key\", \"X-API-Key\", \"header\"));\n\n// Build server info\nvar serverInfo = await serverInfoBuilder.BuildAsync();\n\n//Integrate with official MCP C# SDK\nvar hostBuilder = Host.CreateApplicationBuilder();\n\nvar mcpBuilder = hostBuilder.Services\n    .AddMcpServer()\n    .WithQuickMCP(mcpServerInfo)\n    .WithStdioServerTransport();\n\n//Run Server\nawait hostBuilder.Build().RunAsync();  \n```\n\n### Integration with MCP Clients\n```json\n{\n  \"mcpServers\": {\n    \"petStore\": {\n      \"command\": \"quickmcp\",\n      \"args\": [\"serve\", \"-c\", \"path/to/config.json\"]\n    }\n  }\n}\n```\nor Use installed server\n```json\n{\n  \"mcpServers\": {\n    \"petStore\": {\n      \"command\": \"quickmcp\",\n      \"args\": [\"serve\", \"-i\", \"server_id\"]\n    }\n  }\n}\n```\n\n## Documentation\n\nFor detailed documentation on the following topics, refer to the wiki:\n\n- [Library Implementation Guide](https://github.com/gunpal5/QuickMCP/wiki/Library-Implementation-Guide)\n- [Authentication Options](https://github.com/gunpal5/QuickMCP/wiki/Authentication-Options)\n- [Configuration Methods](https://github.com/gunpal5/QuickMCP/wiki/Configuration-Methods)\n- [CLI Usage](https://github.com/gunpal5/QuickMCP/wiki/CLI-Usage)\n\n## Contributing\n\nWe welcome contributions! Submit PR or Issues to contribute to the project.\n\n## License\n\nQuickMCP is licensed under the MIT License. See the [LICENSE](LICENSE) file for details.\n"
}