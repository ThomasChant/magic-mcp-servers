{
  "mcp_name": "kukapay/dune-analytics-mcp",
  "mcp_description": "üêç ‚òÅÔ∏è -  A mcp server that bridges Dune Analytics data to AI agents.",
  "mcp_id": "kukapay_dune-analytics-mcp",
  "fetch_timestamp": "2025-06-23T05:57:58.881334Z",
  "github_url": "https://github.com/kukapay/dune-analytics-mcp",
  "repository": {
    "name": "dune-analytics-mcp",
    "full_name": "kukapay/dune-analytics-mcp",
    "description": "A mcp server that bridges Dune Analytics data to AI agents.",
    "html_url": "https://github.com/kukapay/dune-analytics-mcp",
    "created_at": "2025-03-16T03:25:40Z",
    "updated_at": "2025-06-12T08:28:23Z",
    "pushed_at": "2025-05-04T01:51:29Z",
    "size": 19,
    "stargazers_count": 20,
    "watchers_count": 20,
    "forks_count": 6,
    "open_issues_count": 2,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "kukapay",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/201164822?v=4",
      "html_url": "https://github.com/kukapay"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 6,
    "subscribers_count": 1,
    "languages": {
      "Python": 3432,
      "Dockerfile": 523
    },
    "language_percentages": {
      "Python": 86.78,
      "Dockerfile": 13.22
    },
    "pull_requests_count": 2,
    "contributors_count": 2
  },
  "readme": "# Dune Analytics MCP Server\n\n[![smithery badge](https://smithery.ai/badge/@kukapay/dune-analytics-mcp)](https://smithery.ai/server/@kukapay/dune-analytics-mcp)\n\nA mcp server that bridges Dune Analytics data to AI agents.\n\n## Features\n\n- **Tools**: \n  - `get_latest_result`: Fetch the latest results of a Dune query by ID.\n  - `run_query`: Execute a Dune query by ID and retrieve results.\n- **CSV Output**: All results are returned as CSV-formatted strings for easy processing.\n\n## Prerequisites\n\n- Python 3.10+\n- A valid Dune Analytics API key (get one from [Dune Analytics](https://dune.com/settings/api))\n\n## Installation\n\n### Installing via Smithery\n\nTo install Dune Analytics for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@kukapay/dune-analytics-mcp):\n\n```bash\nnpx -y @smithery/cli install @kukapay/dune-analytics-mcp --client claude\n```\n\n### Manual Installation\n\n1. **Clone the Repository**:\n   ```bash\n   git clone https://github.com/kukapay/dune-analytics-mcp.git\n   cd dune-analytics-mcp\n   ```\n\n2. **Set Up Environment Variables**:\n   Create a `.env` file in the project root:\n   ```\n   DUNE_API_KEY=your_api_key_here\n   ```\n   Alternatively, set it as a system environment variable:\n   ```bash\n   export DUNE_API_KEY=\"your_api_key_here\"\n   ```\n\n## Usage\n\n### Running the Server\n\n- **Development Mode**:\n  ```bash\n  mcp dev main.py\n  ```\n  This starts the server with hot reloading for development.\n\n- **Install for Claude Desktop**:\n  ```bash\n  mcp install main.py --name \"Dune Analytics\"\n  ```\n  Installs the server as a service for use with Claude Desktop.\n\n### Tool Usage\n\n1. **`get_latest_result(query_id)`**\n   - **Description**: Retrieves the latest results of a specified Dune query.\n   - **Input**: `query_id` (int) - The ID of the Dune query.\n   - **Output**: CSV-formatted string of the query results.\n   - **Example**:\n     ```\n     get_latest_result(query_id=4853921)\n     ```\n\n2. **`run_query(query_id)`**\n   - **Description**: Executes a Dune query and returns the results.\n   - **Input**: `query_id` (int) - The ID of the Dune query to run.\n   - **Output**: CSV-formatted string of the query results.\n   - **Example**:\n     ```\n     run_query(query_id=1215383)\n     ```\n\n### Example Commands in Claude Desktop\n\n- \"Get latest results for dune query 1215383\"\n- \"Run dune query 1215383\"\n\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\n"
}