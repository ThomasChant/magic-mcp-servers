{
  "mcp_name": "Demontie/mcp-google-sheets",
  "mcp_description": "Facilitates seamless data interaction with Google Sheets through a Model Context Protocol server.",
  "mcp_id": "Demontie_mcp-google-sheets",
  "fetch_timestamp": "2025-06-23T02:34:39.966144Z",
  "github_url": "https://github.com/Demontie/mcp-google-sheets",
  "repository": {
    "name": "mcp-google-sheets",
    "full_name": "Demontie/mcp-google-sheets",
    "description": null,
    "html_url": "https://github.com/Demontie/mcp-google-sheets",
    "created_at": "2025-04-27T18:56:15Z",
    "updated_at": "2025-05-17T16:37:57Z",
    "pushed_at": "2025-04-28T02:21:29Z",
    "size": 20806,
    "stargazers_count": 6,
    "watchers_count": 6,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "TypeScript",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "Demontie",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/22821960?v=4",
      "html_url": "https://github.com/Demontie"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 8386
    },
    "language_percentages": {
      "TypeScript": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "package_json_version": "1.0.0"
  },
  "readme": "# MCP Google Sheets Integration\n\nThis project provides a Model Context Protocol (MCP) server that enables reading and writing data to Google Sheets. It uses the Google Sheets API to interact with spreadsheets and provides tools for data synchronization.\n\n## Table of Contents\n\n- [Features](#features)\n- [Installation and Usage](#installation-and-usage)\n- [Cursor Configuration](#cursor-configuration)\n- [Demo](#demo)\n- [License](#license)\n\n## Features\n\n### Google Sheets Tools\n\n- **gsheets_read**\n\n  - Description: Read data from a Google Sheet\n  - Parameters:\n    - `spreadsheetId` (string, required): The ID of the spreadsheet to read\n    - `range` (string, optional, default: \"Página1\"): The range of cells to read\n  - Returns: The data from the specified range in the spreadsheet\n\n- **gsheets_write**\n  - Description: Write data to a Google Sheet\n  - Parameters:\n    - `spreadsheetId` (string, required): The ID of the spreadsheet to write to\n    - `values` (object, required): The data to write, containing:\n      - `product` (string): Product name\n      - `value` (string): Product value\n      - `date` (string): Date of the entry\n    - `range` (string, optional, default: \"Página1\"): The range where to write the data\n  - Returns: Confirmation of the write operation\n\n## Installation and Usage\n\n### Prerequisites\n\n- Node.js (version 23 or higher)\n- Google Sheets API credentials\n- Cursor IDE\n\n### Setup\n\n1. Clone the repository\n2. Install dependencies:\n   ```bash\n   npm install\n   ```\n3. [Configure your Google Sheets API credentials](#configure-your-google-sheets-api-credentials)\n4. [Cursor Configuration](#cursor-configuration)\n\n## Configure your Google Sheets API credentials\n\n1. Go to the [Google Cloud Console](https://console.cloud.google.com/)\n2. Create a new project or select an existing one\n3. Enable the Google Sheets API:\n   - In the left sidebar, click on \"APIs & Services\" > \"Library\"\n   - Search for \"Google Sheets API\"\n   - Click on it and then click \"Enable\"\n4. Create credentials:\n   - In the left sidebar, click on \"APIs & Services\" > \"Credentials\"\n   - Click \"Create Credentials\" and select \"Service Account\"\n   - Fill in the service account details and click \"Create and Continue\"\n   - For the role, select \"Editor\" or \"Owner\" depending on your needs\n   - Click \"Done\"\n5. Generate and download the JSON key:\n   - In the service account list, click on the newly created account\n   - Go to the \"Keys\" tab\n   - Click \"Add Key\" > \"Create new key\"\n   - Choose JSON format and click \"Create\"\n   - The key file will be downloaded automatically\n6. Share your Google Sheet:\n   - Open your Google Sheet\n   - Click the \"Share\" button\n   - Add the service account email (found in the JSON key file) as an editor\n7. Add credentials.json to the project root\n\n## Cursor Configuration\n\nTo configure this MCP server with Cursor:\n\n1. Open Cursor\n2. Press:\n   - Windows/Linux: `Ctrl + Shift + P`\n   - macOS: `Cmd + Shift + P`\n3. Type \"Configure MCP Server\" and select it\n4. Add the appropriate configuration based on your setup:\n\n#### For Windows (without WSL) or Linux:\n\n```json\n{\n  \"mcpServers\": {\n    \"google-sheets\": {\n      \"command\": \"node\",\n      \"args\": [\"ABSOLUTE_PATH_TO_PROJECT/src/index.ts\"]\n    }\n  }\n}\n```\n\n#### For WSL Users:\n\n```json\n{\n  \"mcpServers\": {\n    \"google-sheets\": {\n      \"command\": \"wsl.exe\",\n      \"args\": [\n        \"-e\",\n        \"ABSOLUTE_PATH_TO_NODE/.nvm/versions/node/v22.15.2/bin/node\",\n        \"ABSOLUTE_PATH_TO_PROJECT/src/index.ts\"\n      ]\n    }\n  }\n}\n```\n\n## Demo\n\n<p align=\"center\">\n  <img src=\"./.github/demo.gif\" />\n</p>\n\n## License\n\nThis project is licensed under the ISC License.\n"
}