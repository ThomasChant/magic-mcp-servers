{
  "mcp_name": "WeatherXM/weatherxm-pro-mcp",
  "mcp_description": "Access WeatherXM PRO APIs for weather data and forecasts via MCP tools.",
  "mcp_id": "WeatherXM_weatherxm-pro-mcp",
  "fetch_timestamp": "2025-06-23T09:22:29.960254Z",
  "github_url": "https://github.com/WeatherXM/weatherxm-pro-mcp",
  "repository": {
    "name": "weatherxm-pro-mcp",
    "full_name": "WeatherXM/weatherxm-pro-mcp",
    "description": "This MCP server exposes the WeatherXM PRO APIs as MCP tools, allowing clients to access weather station data, observations, and forecasts through the MCP protocol.",
    "html_url": "https://github.com/WeatherXM/weatherxm-pro-mcp",
    "created_at": "2025-04-24T13:04:53Z",
    "updated_at": "2025-06-06T06:15:41Z",
    "pushed_at": "2025-04-30T13:23:45Z",
    "size": 65,
    "stargazers_count": 4,
    "watchers_count": 4,
    "forks_count": 3,
    "open_issues_count": 2,
    "language": "JavaScript",
    "license": "MIT License",
    "topics": [
      "mcp",
      "mcp-server",
      "weatherxm"
    ],
    "default_branch": "main",
    "owner": {
      "login": "WeatherXM",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/91742496?v=4",
      "html_url": "https://github.com/WeatherXM"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 3,
    "subscribers_count": 1,
    "languages": {
      "JavaScript": 10613,
      "Dockerfile": 107
    },
    "language_percentages": {
      "JavaScript": 99,
      "Dockerfile": 1
    },
    "pull_requests_count": 2,
    "contributors_count": 1,
    "package_json_version": "0.5.0"
  },
  "readme": "# WeatherXM PRO MCP Server\n\nAn MCP server implementation exposing the WeatherXM PRO APIs as MCP tools, allowing clients to access weather station data, observations, and forecasts through the MCP protocol.\n\n## Features\n\n- Get stations near a location (latitude, longitude, radius)\n- Get stations within a bounding box (min/max latitude and longitude)\n- Get all available stations\n- Get the latest observation for a specific station\n- Get historical observations for a station on a specific date\n- Search for H3 cells by region name\n- Get stations in a specific H3 cell\n- Get weather forecast (daily or hourly) for a specific H3 cell\n- Get hyperlocal forecast for a station and variable\n- Get forecast performance (FACT) for a station and variable\n- Get forecast ranking (FACT) for a station\n\n## Prerequisites\n\n- Node.js and npm installed\n- A valid WeatherXM PRO API key\n\n## Configuration\n\nClone the repository to your local machine.\n\n```bash\ngit clone https://github.com/WeatherXM/weatherxm-pro-mcp.git\n```\n\n## Installation\n\nAfter cloning the repository, you need to install the dependencies and build the project before running the MCP server.\n\n```bash\nnpm install\nnpm run build\n```\n\n## Server Configuration for MCP Clients\n\nThis is the common configuration for MCP clients such as Claude Desktop, Cursor, Windsurf Editor, VSCode and plugins such as RooCode and Cline.\n\n```json\n{\n  \"mcpServers\": {\n    \"weatherxm-pro\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"path to mcp\"\n      ],\n      \"env\": {\n        \"WEATHERXMPRO_API_KEY\": \"your-api-key\"\n      }\n    }\n  }\n}\n```\n\nReplace `\"path to mcp\"` with the actual path to the MCP server or package name, and `\"your-api-key\"` with your WeatherXM PRO API key.\n> Note: If you have other MCP servers in use in the client, you can add it to the existing `mcpServers` object.\n\n## Claude Desktop\n\nFollow the steps below to use the WeatherXM PRO MCP server with Claude Desktop MCP client:\n\n1. Edit the MCP settings file located at:\n\n   ```\n   ~/Library/Application Support/Claude/claude_desktop_config.json\n   ```\n\n2. Add the WeatherXM PRO MCP server configuration under the `mcpServers` object.\n3. Restart Claude Desktop to apply the changes.\n4. You can now use the server in Claude Desktop to run queries on the WeatherXM PRO MCP server.\n\n## Cursor\n\nFollow the steps below to use the WeatherXM PRO MCP server with Cursor:\n\n1. Install [Cursor](https://cursor.sh/) on your machine.\n2. In Cursor, go to Cursor > Cursor Settings > MCP > Add a new global MCP server.\n3. Specify the same configuration as in the Server Configuration for MCP Clients section.\n4. Save the configuration.\n5. You will see weatherxm-pro as an added server in MCP servers list.\n6. You can now use the WeatherXM PRO MCP server in Cursor to run queries.\n\n## Windsurf Editor\n\nFollow the steps below to use the WeatherXM PRO MCP server with [Windsurf Editor](https://windsurf.com/):\n\n1. Install Windsurf Editor on your machine.\n2. Navigate to Command Palette > Windsurf MCP Configuration Panel or Windsurf - Settings > Advanced > Cascade > Model Context Protocol (MCP) Servers.\n3. Click on Add Server and then Add custom server.\n4. Add the WeatherXM PRO MCP Server configuration from the Server Configuration for MCP Clients section.\n5. Save the configuration.\n6. You will see weatherxm-pro as an added server in MCP Servers list.\n7. You can now use the WeatherXM PRO MCP server in Windsurf Editor to run queries.\n\n## Docker Image\n\nThe MCP server can be built and run as a Docker container.\n\n### Build\n\n```bash\ndocker build -t weatherxm-pro-mcp .\n```\n\n### Run\n\n```bash\ndocker run -d -p 3000:3000 -e WEATHERXMPRO_API_KEY=\"your-api-key\" -e PORT=3000 weatherxm-pro-mcp\n```\n\nReplace `\"your-api-key\"` with your actual WeatherXM PRO API key.\n\n## Troubleshooting Tips\n\n- Ensure the path to your MCP server repository is correct in the configuration.\n- Verify that your WeatherXM PRO API key is set correctly.\n- Check that the MCP client configuration matches the server settings.\n- Check the logs for any errors or warnings that may indicate issues with the MCP server.\n\n## License\n\nMIT License\n"
}