{
  "mcp_name": "Pratye/MEC-Postgres",
  "mcp_description": "Facilitates read and write operations on PostgreSQL databases, allowing LLMs to interact with database schemas and execute SQL queries.",
  "mcp_id": "Pratye_MEC-Postgres",
  "fetch_timestamp": "2025-06-23T07:36:27.965033Z",
  "github_url": "https://github.com/Pratye/MEC-Postgres",
  "repository": {
    "name": "MEC-Postgres",
    "full_name": "Pratye/MEC-Postgres",
    "description": "MCP Server for Postgres with both Read and Write capabilities.",
    "html_url": "https://github.com/Pratye/MEC-Postgres",
    "created_at": "2025-04-16T11:46:24Z",
    "updated_at": "2025-04-16T12:11:28Z",
    "pushed_at": "2025-04-16T12:11:24Z",
    "size": 39459,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "JavaScript",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "Pratye",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/61344420?v=4",
      "html_url": "https://github.com/Pratye"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "JavaScript": 14537,
      "Python": 5892,
      "Dockerfile": 550
    },
    "language_percentages": {
      "JavaScript": 69.29,
      "Python": 28.09,
      "Dockerfile": 2.62
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "package_json_version": "0.6.2"
  },
  "readme": "# MEC PostgreSQL\n\nA Model Context Protocol server that provides read and write access to PostgreSQL databases. This server enables LLMs to inspect database schemas and execute read and write queries.\n\n## Components\n\n### Tools\n\n- **query**\n  - Execute read-only SQL queries against the connected database\n  - Input: `sql` (string): The SQL query to execute\n  - All queries are executed within a READ ONLY transaction\n- **uploadCsv**\n  - Upload and process a CSV file into database tables\n  - Input: `sql` (string): The SQL query to execute\n  - All queries are executed within a READ AND WRITE transaction\n\n### Resources\n\nThe server provides schema information for each table in the database:\n\n- **Table Schemas** (`postgres://<host>/<table>/schema`)\n  - JSON schema information for each table\n  - Includes column names and data types\n  - Automatically discovered from database metadata\n\n## Usage with Claude Desktop\n\nTo use this server with the Claude Desktop app, add the following configuration to the \"mcpServers\" section of your `claude_desktop_config.json`:\n\n### Docker\n\n* when running docker on macos, use host.docker.internal if the server is running on the host network (eg localhost)\n* username/password can be added to the postgresql url with `postgresql://user:password@host:port/db-name`\n\n```json\n{\n  \"mcpServers\": {\n    \"postgres\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\", \n        \"-i\", \n        \"--rm\", \n        \"mcp/postgres\", \n        \"postgresql://host.docker.internal:5432/mydb\"]\n    }\n  }\n}\n```\n\nReplace `/mydb` with your database name.\n\n## Building\n\nDocker:\n\n```sh\ndocker build -t mcp/postgres -f src/postgres/Dockerfile . \n```\n\n## License\n\nThis MCP server is licensed under the MIT License. This means you are free to use, modify, and distribute the software, subject to the terms and conditions of the MIT License. For more details, please see the LICENSE file in the project repository.\n"
}