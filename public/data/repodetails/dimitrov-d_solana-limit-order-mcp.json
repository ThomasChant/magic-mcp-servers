{
  "mcp_name": "Solana Limit Order MCP Server",
  "mcp_description": "An MCP Server providing capabilities to place limit orders on Solana via Jupiter",
  "mcp_id": "dimitrov-d_solana-limit-order-mcp",
  "fetch_timestamp": "2025-06-23T08:33:27.154878Z",
  "github_url": "https://github.com/dimitrov-d/solana-limit-order-mcp",
  "repository": {
    "name": "solana-limit-order-mcp",
    "full_name": "dimitrov-d/solana-limit-order-mcp",
    "description": null,
    "html_url": "https://github.com/dimitrov-d/solana-limit-order-mcp",
    "created_at": "2025-03-11T17:48:32Z",
    "updated_at": "2025-03-14T13:44:54Z",
    "pushed_at": "2025-03-14T13:44:51Z",
    "size": 184,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "TypeScript",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "dimitrov-d",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/35041127?v=4",
      "html_url": "https://github.com/dimitrov-d"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 16553,
      "JavaScript": 1913
    },
    "language_percentages": {
      "TypeScript": 89.64,
      "JavaScript": 10.36
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "package_json_version": "1.0.0"
  },
  "readme": "# Solana Limit Order MCP Server\n\n## Model Context Protocol (MCP)\n\nA [Model Context Protocol](https://modelcontextprotocol.io/) (MCP) server that provides a comprehensive suite of tools for AI models, enabling them to interact with various systems through a standardized and unified interface. MCP serves as a bridge between AI agents and external systems, allowing for seamless execution of operations, querying of information, and management of resources. \n\nBy adhering to the MCP specification, this server ensures that AI agents can perform complex tasks efficiently and reliably, without needing to understand the intricacies of each individual system they interact with.\n\n## Overview\n\nThis MCP server extends AI capabilities by providing tools to:\n\n* Create Limit Orders on Solana via Jupiter\n* Get an overview of your open orders\n* Get a simplified overview of your past orders\n* Cancel open limit orders\n\n## Prerequisites\n\n* Node.js (v20 or higher)\n* npm or yarn\n* A Solana wallet private key and RPC URL\n\n## Installation\n\n1. Clone this repository:\n```bash\ngit clone https://github.com/dimitrov-d/solana-limit-order-mcp\ncd solana-limit-order-mcp\n```\n\n2. Install dependencies:\n```bash\npnpm install\n```\n\n## Configuration\n\n### Environment Setup\n\nCreate a `.env` file with your credentials:\n\n```env\nSOLANA_PRIVATE_KEY=your_private_key_here\nSOLANA_RPC_URL=your_rpc_url_here\n```\n\n### Using with Claude\n\nTo use this MCP with the Claude LLM, follow these steps:\n\n1. **Install [Claude for Desktop](https://claude.ai/download)**\n\n2. **Locate the Claude Desktop Configuration File**\n  - macOS: `~/Library/Application Support/Claude/claude_desktop_config.json`\n  - Windows: `%APPDATA%\\Claude\\claude_desktop_config.json`\n  - Linux: `~/.config/Claude/claude_desktop_config.json`\n\n3. **Add the Configuration**\n\nCopy the configuration from [claude_desktop_config.json](./claude_desktop_config.json) and adjust it with your own parameters:\n\n```json\n{\n  \"mcpServers\": {\n    \"solana-limit-order-mcp\": {\n      \"command\": \"tsx\",\n      \"args\": [\"/full/path/to/index.ts\"],\n      \"env\": {\n        \"SOLANA_RPC_URL\": \"<SOLANA_RPC_URL>\",\n        \"SOLANA_PRIVATE_KEY\": \"<SOLANA_PRIVATE_KEY>\"\n      }\n    }\n  }\n}\n```\n\n4. **Restart Claude for Desktop**\n\nAfter making these changes, restart Claude Desktop for the configuration to take effect.\nYou can now prompt Claude to perform any of the available actions using only the text chat.\n\n## Available Actions\n\nThe MCP server provides the following actions:\n\n* `CREATE_LIMIT_ORDER` - Creates and sends a limit order on Solana via Jupiter.\n* `GET_OPEN_ORDERS` - Fetches the open limit orders for your wallet.\n* `GET_ORDER_HISTORY` - Fetches the limit order history for your wallet.\n* `CANCEL_ORDERS` - Cancels specified orders on Jupiter.\n* `GET_PRICE` - Fetch the current price of a Solana token in USD using Jupiter API.\n* `GET_WALLET_ADDRESS` - Retrieve the wallet address from your private key.\n* `GET_TOKEN_BALANCE` - Retrieve any SPL token balance on your wallet.\n* `TRADE_TOKENS` - Trade tokens via Jupiter exchange.\n* `GET_TPS` - Retrieve the current transactions per second (TPS) on the Solana network.\n"
}