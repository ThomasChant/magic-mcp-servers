{
  "mcp_name": "sirmews/mcp-pinecone",
  "mcp_description": "🐍 ☁️ - Pinecone integration with vector search capabilities",
  "mcp_id": "sirmews_mcp-pinecone",
  "fetch_timestamp": "2025-06-23T08:28:07.347899Z",
  "github_url": "https://github.com/sirmews/mcp-pinecone",
  "repository": {
    "name": "mcp-pinecone",
    "full_name": "sirmews/mcp-pinecone",
    "description": "Model Context Protocol server to allow for reading and writing from Pinecone. Rudimentary RAG",
    "html_url": "https://github.com/sirmews/mcp-pinecone",
    "created_at": "2024-12-08T04:53:27Z",
    "updated_at": "2025-06-17T14:19:02Z",
    "pushed_at": "2025-01-31T08:20:22Z",
    "size": 115,
    "stargazers_count": 124,
    "watchers_count": 124,
    "forks_count": 25,
    "open_issues_count": 5,
    "language": "Python",
    "license": "MIT License",
    "topics": [
      "claude",
      "mcp",
      "mcp-server",
      "model-context-protocol",
      "pinecone",
      "rag"
    ],
    "default_branch": "main",
    "owner": {
      "login": "sirmews",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/7651718?v=4",
      "html_url": "https://github.com/sirmews"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": true,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 25,
    "subscribers_count": 1,
    "languages": {
      "Python": 40608,
      "Makefile": 1914,
      "Dockerfile": 1139
    },
    "language_percentages": {
      "Python": 93.01,
      "Makefile": 4.38,
      "Dockerfile": 2.61
    },
    "pull_requests_count": 4,
    "contributors_count": 2,
    "tags": [
      {
        "name": "v0.1.8",
        "commit_sha": "3bbec79b9200f25c6d16cbe1642dd1202f83be0d"
      },
      {
        "name": "v0.1.7",
        "commit_sha": "d71de34250ef59748d1277b14742a13770553547"
      },
      {
        "name": "v0.1.6",
        "commit_sha": "8db5c23375b73e7682cfd384ce0a0cba69ef7c42"
      },
      {
        "name": "v0.1.5",
        "commit_sha": "3c4d9270918673b67a8a3a96a119e8aa83399596"
      },
      {
        "name": "v0.1.4",
        "commit_sha": "2f00995e50a2bbcf7137f434d01d3911f4f38b05"
      },
      {
        "name": "v0.1.3",
        "commit_sha": "30367fd41dc139076d45b962be7113bbec18b186"
      },
      {
        "name": "v0.1.2",
        "commit_sha": "2bf51b3cc57e54286fed923dda5ffc6b131c81c1"
      },
      {
        "name": "v0.1.1",
        "commit_sha": "08749a8881249010ef6f435cd0f09e2aafd8b322"
      },
      {
        "name": "v0.1.0",
        "commit_sha": "4549ec6faad6fb9a6f14b9f867820aa48706b39c"
      }
    ],
    "latest_version": "v0.1.8"
  },
  "readme": "# Pinecone Model Context Protocol Server for Claude Desktop.\n\n[![smithery badge](https://smithery.ai/badge/mcp-pinecone)](https://smithery.ai/server/mcp-pinecone)\n\n[![PyPI - Downloads](https://img.shields.io/pypi/dd/mcp-pinecone?style=flat)](https://pypi.org/project/mcp-pinecone/)\n\nRead and write to a Pinecone index.\n\n\n## Components\n\n```mermaid\nflowchart TB\n    subgraph Client[\"MCP Client (e.g., Claude Desktop)\"]\n        UI[User Interface]\n    end\n\n    subgraph MCPServer[\"MCP Server (pinecone-mcp)\"]\n        Server[Server Class]\n        \n        subgraph Handlers[\"Request Handlers\"]\n            ListRes[list_resources]\n            ReadRes[read_resource]\n            ListTools[list_tools]\n            CallTool[call_tool]\n            GetPrompt[get_prompt]\n            ListPrompts[list_prompts]\n        end\n        \n        subgraph Tools[\"Implemented Tools\"]\n            SemSearch[semantic-search]\n            ReadDoc[read-document]\n            ListDocs[list-documents]\n            PineconeStats[pinecone-stats]\n            ProcessDoc[process-document]\n        end\n    end\n\n    subgraph PineconeService[\"Pinecone Service\"]\n        PC[Pinecone Client]\n        subgraph PineconeFunctions[\"Pinecone Operations\"]\n            Search[search_records]\n            Upsert[upsert_records]\n            Fetch[fetch_records]\n            List[list_records]\n            Embed[generate_embeddings]\n        end\n        Index[(Pinecone Index)]\n    end\n\n    %% Connections\n    UI --> Server\n    Server --> Handlers\n    \n    ListTools --> Tools\n    CallTool --> Tools\n    \n    Tools --> PC\n    PC --> PineconeFunctions\n    PineconeFunctions --> Index\n    \n    %% Data flow for semantic search\n    SemSearch --> Search\n    Search --> Embed\n    Embed --> Index\n    \n    %% Data flow for document operations\n    UpsertDoc --> Upsert\n    ReadDoc --> Fetch\n    ListRes --> List\n\n    classDef primary fill:#2563eb,stroke:#1d4ed8,color:white\n    classDef secondary fill:#4b5563,stroke:#374151,color:white\n    classDef storage fill:#059669,stroke:#047857,color:white\n    \n    class Server,PC primary\n    class Tools,Handlers secondary\n    class Index storage\n```\n\n### Resources\n\nThe server implements the ability to read and write to a Pinecone index.\n\n### Tools\n\n- `semantic-search`: Search for records in the Pinecone index.\n- `read-document`: Read a document from the Pinecone index.\n- `list-documents`: List all documents in the Pinecone index.\n- `pinecone-stats`: Get stats about the Pinecone index, including the number of records, dimensions, and namespaces.\n- `process-document`: Process a document into chunks and upsert them into the Pinecone index. This performs the overall steps of chunking, embedding, and upserting.\n\nNote: embeddings are generated via Pinecone's inference API and chunking is done with a token-based chunker. Written by copying a lot from langchain and debugging with Claude.\n## Quickstart\n\n### Installing via Smithery\n\nTo install Pinecone MCP Server for Claude Desktop automatically via [Smithery](https://smithery.ai/server/mcp-pinecone):\n\n```bash\nnpx -y @smithery/cli install mcp-pinecone --client claude\n```\n\n### Install the server\n\nRecommend using [uv](https://docs.astral.sh/uv/getting-started/installation/) to install the server locally for Claude.\n\n```\nuvx install mcp-pinecone\n```\nOR\n```\nuv pip install mcp-pinecone\n```\n\nAdd your config as described below.\n\n#### Claude Desktop\n\nOn MacOS: `~/Library/Application\\ Support/Claude/claude_desktop_config.json`\nOn Windows: `%APPDATA%/Claude/claude_desktop_config.json`\n\nNote: You might need to use the direct path to `uv`. Use `which uv` to find the path.\n\n\n__Development/Unpublished Servers Configuration__\n  \n```json\n\"mcpServers\": {\n  \"mcp-pinecone\": {\n    \"command\": \"uv\",\n    \"args\": [\n      \"--directory\",\n      \"{project_dir}\",\n      \"run\",\n      \"mcp-pinecone\"\n    ]\n  }\n}\n```\n\n\n__Published Servers Configuration__\n  \n```json\n\"mcpServers\": {\n  \"mcp-pinecone\": {\n    \"command\": \"uvx\",\n    \"args\": [\n      \"--index-name\",\n      \"{your-index-name}\",\n      \"--api-key\",\n      \"{your-secret-api-key}\",\n      \"mcp-pinecone\"\n    ]\n  }\n}\n```\n\n#### Sign up to Pinecone\n\nYou can sign up for a Pinecone account [here](https://www.pinecone.io/).\n\n#### Get an API key\n\nCreate a new index in Pinecone, replacing `{your-index-name}` and get an API key from the Pinecone dashboard, replacing `{your-secret-api-key}` in the config.\n\n## Development\n\n### Building and Publishing\n\nTo prepare the package for distribution:\n\n1. Sync dependencies and update lockfile:\n```bash\nuv sync\n```\n\n2. Build package distributions:\n```bash\nuv build\n```\n\nThis will create source and wheel distributions in the `dist/` directory.\n\n3. Publish to PyPI:\n```bash\nuv publish\n```\n\nNote: You'll need to set PyPI credentials via environment variables or command flags:\n- Token: `--token` or `UV_PUBLISH_TOKEN`\n- Or username/password: `--username`/`UV_PUBLISH_USERNAME` and `--password`/`UV_PUBLISH_PASSWORD`\n\n### Debugging\n\nSince MCP servers run over stdio, debugging can be challenging. For the best debugging\nexperience, we strongly recommend using the [MCP Inspector](https://github.com/modelcontextprotocol/inspector).\n\n\nYou can launch the MCP Inspector via [`npm`](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm) with this command:\n\n```bash\nnpx @modelcontextprotocol/inspector uv --directory {project_dir} run mcp-pinecone\n```\n\n\nUpon launching, the Inspector will display a URL that you can access in your browser to begin debugging.\n\n## License\n\nThis project is licensed under the MIT License. See the [LICENSE](LICENSE) file for details.\n\n## Source Code\n\nThe source code is available on [GitHub](https://github.com/sirmews/mcp-pinecone).\n\n## Contributing\n\nSend your ideas and feedback to me on [Bluesky](https://bsky.app/profile/perfectlycromulent.bsky.social) or by opening an issue.\n"
}