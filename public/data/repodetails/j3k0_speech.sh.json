{
  "mcp_name": "j3k0/speech.sh",
  "mcp_description": "üè† - Let the agent speak things out loud, notify you when he's done working with a quick summary",
  "mcp_id": "j3k0_speech.sh",
  "fetch_timestamp": "2025-06-23T05:04:39.063799Z",
  "github_url": "https://github.com/j3k0/speech.sh/blob/main/MCP_README.md",
  "repository": {
    "name": "speech.sh",
    "full_name": "j3k0/speech.sh",
    "description": "Simple curl script to play aloud what you type, useful if your voice is suddenly broken.",
    "html_url": "https://github.com/j3k0/speech.sh",
    "created_at": "2025-03-12T19:40:56Z",
    "updated_at": "2025-06-10T11:21:44Z",
    "pushed_at": "2025-03-18T22:02:11Z",
    "size": 67,
    "stargazers_count": 3,
    "watchers_count": 3,
    "forks_count": 1,
    "open_issues_count": 0,
    "language": "Shell",
    "license": "GNU General Public License v3.0",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "j3k0",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/191881?v=4",
      "html_url": "https://github.com/j3k0"
    },
    "has_issues": false,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 2,
    "subscribers_count": 0,
    "languages": {
      "Shell": 37023
    },
    "language_percentages": {
      "Shell": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 2
  },
  "readme": "# Speech.sh\n\nA powerful command-line utility for text-to-speech conversion using OpenAI's API.\n\n## Features\n\n- Convert text to speech with a simple command\n- Multiple voice options (onyx, alloy, echo, fable, nova, shimmer)\n- Adjustable speech speed (0.25 to 4.0)\n- Support for both tts-1 and tts-1-hd models\n- Flexible API key management (command-line, environment variable, or file)\n- Automatic caching to avoid duplicate API calls\n- Robust retry mechanism for handling network issues\n- Support for both ffmpeg and mplayer for audio playback\n- MCP (Model Context Protocol) compatibility for integration with AI assistants\n\n## Installation\n\n1. Clone this repository:\n   ```bash\n   git clone https://github.com/j3k0/speech.sh.git\n   cd speech.sh\n   ```\n\n2. Make the scripts executable:\n   ```bash\n   chmod +x speech.sh mcp.sh launch\n   ```\n\n3. Ensure you have the required dependencies:\n   - curl\n   - jq\n   - Either ffmpeg or mplayer (ffmpeg preferred)\n\n## Usage\n\nBasic usage:\n\n```bash\n./speech.sh --text \"Hello, world!\"\n```\n\nWith more options:\n\n```bash\n./speech.sh --text \"Hello, world!\" --voice nova --speed 1.2 --model tts-1-hd\n```\n\n### Options\n\n```\n-h, --help          Show help message and exit\n-t, --text TEXT     Text to convert to speech (required)\n-v, --voice VOICE   Voice model to use (default: onyx)\n-s, --speed SPEED   Speech speed (default: 1.0)\n-o, --output FILE   Output file path (default: auto-generated)\n-a, --api_key KEY   OpenAI API key\n-m, --model MODEL   TTS model to use (default: tts-1)\n-p, --player PLAYER Audio player to use: auto, ffmpeg, or mplayer (default: auto)\n    --verbose       Enable verbose logging\n-V, --verbose       Same as --verbose\n-r, --retries N     Number of retry attempts for API calls (default: 3)\n-T, --timeout N     Timeout in seconds for API calls (default: 30)\n```\n\n### API Key Configuration\n\nThe script accepts an OpenAI API key in three ways (in order of precedence):\n1. Command-line argument: `--api_key \"your-api-key\"`\n2. Environment variable: `export OPENAI_API_KEY=\"your-api-key\"`\n3. A file named `API_KEY` in the script's directory\n\n## Advanced Features\n\n### Auto-caching\n\nThe script caches audio files by default to avoid unnecessary API calls. \nIf you request the same text with the same voice and speed, it will reuse \nthe previously generated audio file.\n\n### Retry Logic\n\nThe script includes sophisticated retry logic for API calls:\n- Automatically retries failed API calls (default: 3 attempts)\n- Implements exponential backoff for reliability\n- Uses native curl retry mechanism when available\n- Configurable timeout and retry values\n\n### Audio Player Options\n\nYou can choose your preferred audio player:\n- `--player auto`: Use ffmpeg if available, fall back to mplayer (default)\n- `--player ffmpeg`: Force using ffmpeg\n- `--player mplayer`: Force using mplayer\n\n## MCP Integration\n\nThe `mcp.sh` script provides Model Context Protocol compatibility, allowing the \ntext-to-speech functionality to be used by MCP-compatible AI assistants like Claude.\n\nTo use the MCP server:\n\n```bash\n# Start the MCP server using the launch script\n./launch\n```\n\nFor detailed instructions on using the MCP integration, see [MCP_README.md](MCP_README.md).\n\n## Security Considerations\n\nThe script takes several steps to ensure security:\n- Uses proper JSON handling with `jq` for parameter processing\n- Implements proper array-based parameter passing to prevent shell injection\n- Validates needed dependencies before execution\n- Uses error handling throughout the execution process\n\n## Examples\n\nConvert text to speech with default settings:\n```bash\n./speech.sh --text \"Hello, world!\"\n```\n\nUse a different voice:\n```bash\n./speech.sh --text \"Hello, world!\" --voice nova\n```\n\nAdjust the speech speed:\n```bash\n./speech.sh --text \"Hello, world!\" --speed 1.5\n```\n\nSave to a specific file:\n```bash\n./speech.sh --text \"Hello, world!\" --output hello.mp3\n```\n\nUse environment variable for API key:\n```bash\nexport OPENAI_API_KEY=\"your-api-key\"\n./speech.sh --text \"Hello, world!\"\n```\n\n## Troubleshooting\n\nIf you encounter issues:\n\n1. Enable verbose logging with the `--verbose` flag\n2. Check that your OpenAI API key is valid\n3. Verify that all dependencies are installed\n4. Ensure you have internet connectivity\n5. Check the permissions of the output directory\n\n## Contributors\n\n- Jean-Christophe Hoelt\n- Claude AI (Anthropic)\n\n## License\n\nGPL\n"
}