{
  "mcp_name": "rakeshgangwar/freshrss-server",
  "mcp_description": "Facilitates AI interaction with FreshRSS feeds via the Fever API, enabling feed management and item retrieval.",
  "mcp_id": "rakeshgangwar_freshrss-mcp-server",
  "fetch_timestamp": "2025-06-23T07:50:52.691534Z",
  "github_url": "https://github.com/rakeshgangwar/freshrss-server",
  "repository": {
    "name": "freshrss-mcp-server",
    "full_name": "rakeshgangwar/freshrss-mcp-server",
    "description": null,
    "html_url": "https://github.com/rakeshgangwar/freshrss-mcp-server",
    "created_at": "2025-03-25T00:30:32Z",
    "updated_at": "2025-06-10T21:48:23Z",
    "pushed_at": "2025-05-19T14:04:13Z",
    "size": 14,
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "JavaScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "rakeshgangwar",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/3814936?v=4",
      "html_url": "https://github.com/rakeshgangwar"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "JavaScript": 10507
    },
    "language_percentages": {
      "JavaScript": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "package_json_version": "0.1.0"
  },
  "readme": "# FreshRSS MCP Server\n\nA Model Context Protocol server for interacting with FreshRSS feeds via the Fever API.\n\nThis TypeScript-based MCP server allows AI assistants to interact with your FreshRSS instance, enabling them to:\n\n- List and browse your RSS feeds\n- Fetch unread items\n- Mark items as read/unread\n- Get items from specific feeds\n\n## Features\n\n### Tools\n\n- `list_feeds` - List all feed subscriptions\n- `get_feed_groups` - Get feed groups\n- `get_unread` - Get unread items\n- `get_feed_items` - Get items from a specific feed\n- `mark_item_read` - Mark an item as read\n- `mark_item_unread` - Mark an item as unread\n- `mark_feed_read` - Mark all items in a feed as read\n- `get_items` - Get specific items by their IDs\n\n## Requirements\n\n- A running FreshRSS instance with API access enabled\n- API endpoint URL, username, and password for your FreshRSS instance\n\n## Development\n\nInstall dependencies:\n```bash\nnpm install\n```\n\nBuild the server:\n```bash\nnpm run build\n```\n\nFor development with auto-rebuild:\n```bash\nnpm run watch\n```\n\n### Environment Variables\n\nYou need to set the following environment variables:\n\n- `FRESHRSS_API_URL`: URL to your FreshRSS instance (e.g., \"https://rss.example.com\")\n- `FRESHRSS_USERNAME`: Your FreshRSS username\n- `FRESHRSS_PASSWORD`: Your FreshRSS password\n\n## Installation\n\nTo use with Claude Desktop, add the server config:\n\nOn MacOS: `~/Library/Application Support/Claude/claude_desktop_config.json`\nOn Windows: `%APPDATA%/Claude/claude_desktop_config.json`\n\n```json\n{\n  \"mcpServers\": {\n    \"freshrss\": {\n      \"command\": \"node\",\n      \"args\": [\"/path/to/freshrss-server/build/index.js\"],\n      \"env\": {\n        \"FRESHRSS_API_URL\": \"https://your-freshrss-instance.com\",\n        \"FRESHRSS_USERNAME\": \"your-username\",\n        \"FRESHRSS_PASSWORD\": \"your-password\"\n      }\n    }\n  }\n}\n```\n\nFor Cline MCP integration, add to your MCP settings:\n\n```json\n{\n  \"mcpServers\": {\n    \"freshrss\": {\n      \"command\": \"node\",\n      \"args\": [\"/path/to/freshrss-server/build/index.js\"],\n      \"env\": {\n        \"FRESHRSS_API_URL\": \"https://your-freshrss-instance.com\",\n        \"FRESHRSS_USERNAME\": \"your-username\",\n        \"FRESHRSS_PASSWORD\": \"your-password\"\n      }\n    }\n  }\n}\n```\n\n### Debugging\n\nSince MCP servers communicate over stdio, debugging can be challenging. We recommend using the [MCP Inspector](https://github.com/modelcontextprotocol/inspector), which is available as a package script:\n\n```bash\nnpm run inspector\n```\n\nThe Inspector will provide a URL to access debugging tools in your browser.\n\n## Security Note\n\nThis server requires your FreshRSS credentials. For security:\n- Never commit your credentials to version control\n- Always use environment variables for sensitive information\n- Consider using a dedicated FreshRSS account with appropriate permissions\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\n\n## Contributing\n\nContributions are welcome! See [CONTRIBUTING.md](CONTRIBUTING.md) for details.\n"
}