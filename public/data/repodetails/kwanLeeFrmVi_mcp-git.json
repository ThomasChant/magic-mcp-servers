{
  "mcp_name": "kwanLeeFrmVi/mcp-git",
  "mcp_description": "Facilitates Git repository interaction and automation through a Model Context Protocol server, enabling operations like reading, searching, and manipulating repositories via Large Language Models.",
  "mcp_id": "kwanLeeFrmVi_mcp-git",
  "fetch_timestamp": "2025-06-23T06:02:22.663291Z",
  "github_url": "https://github.com/kwanLeeFrmVi/mcp-git",
  "repository": {
    "name": "mcp-git",
    "full_name": "kwanLeeFrmVi/mcp-git",
    "description": "A Model Context Protocol server for Git repository interaction and automation. This server provides tools to read, search, and manipulate Git repositories via Large Language Models.",
    "html_url": "https://github.com/kwanLeeFrmVi/mcp-git",
    "created_at": "2025-04-03T17:07:59Z",
    "updated_at": "2025-04-08T11:55:05Z",
    "pushed_at": "2025-04-04T11:42:55Z",
    "size": 27,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "TypeScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "kwanLeeFrmVi",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/19652515?v=4",
      "html_url": "https://github.com/kwanLeeFrmVi"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 13767,
      "JavaScript": 41
    },
    "language_percentages": {
      "TypeScript": 99.7,
      "JavaScript": 0.3
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "package_json_version": "0.0.4"
  },
  "readme": "# mcp-git - Git MCP Server\n\n[![NPM Version](https://img.shields.io/npm/v/mcp-git.svg)](https://www.npmjs.com/package/mcp-git)\n[![Bun Version](https://img.shields.io/badge/bun-v1.2.8-blueviolet)](https://bun.sh)\n[![License](https://img.shields.io/npm/l/mcp-git.svg)](LICENSE)\n\nA Model Context Protocol server for Git repository interaction and automation. This server provides tools to read, search, and manipulate Git repositories via Large Language Models.\n\n## MCP Server Usage\n\nThis package is designed to be used as an MCP server with clients like Claude Desktop. Here's how to configure it:\n\n### Basic Configuration\n\nAdd this to your MCP client configuration:\n\n```json\n{\n  \"mcpServers\": {\n    \"git\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"mcp-git\"]\n    }\n  }\n}\n```\n\n### Advanced Configuration\n\nFor custom settings:\n\n```json\n{\n  \"mcpServers\": {\n    \"git\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"mcp-git\"]\n    }\n  }\n}\n```\n\n## Installation Options\n\n### From Source\n\n1. Clone this repository\n2. Install dependencies:\n   ```bash\n   bun install\n   ```\n3. Build:\n   ```bash\n   bun run build\n   ```\n4. Run:\n   ```bash\n   bun run start\n   ```\n\n## Available Git Tools\n\nThe server provides these MCP-accessible Git operations:\n\n### Repository Operations\n\n- `git_status` - Show working tree status\n- `git_init` - Initialize new repository\n- `git_log` - View commit history (with `max_count` parameter)\n\n### Change Management\n\n- `git_diff_unstaged` - View unstaged changes\n- `git_diff_staged` - View staged changes\n- `git_diff` - Compare with branch/commit\n- `git_add` - Stage files\n- `git_reset` - Unstage changes\n- `git_commit` - Create commit\n\n### Branch Operations\n\n- `git_create_branch` - Create new branch\n- `git_checkout` - Switch branches\n\n### Content Inspection\n\n- `git_show` - View commit contents\n\n## Development\n\n### Prerequisites\n\n- [Bun](https://bun.sh) v1.2.8 or later\n- Git installed system-wide\n\n### Building\n\n```bash\nbun run build\n```\n\n### Testing\n\n```bash\nbun test\n```\n\n## Contributing\n\nPull requests are welcome. For major changes, please open an issue first to discuss proposed changes.\n\n## License\n\n[MIT](LICENSE)\n"
}