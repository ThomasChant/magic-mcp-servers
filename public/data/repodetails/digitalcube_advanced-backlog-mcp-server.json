{
  "mcp_name": "digitalcube/advanced-backlog-mcp-server",
  "mcp_description": "Facilitates interaction with Backlog for project management through a Model Context Protocol server, enabling efficient querying and management of projects, issues, wikis, and user activities.",
  "mcp_id": "digitalcube_advanced-backlog-mcp-server",
  "fetch_timestamp": "2025-06-23T02:39:06.216812Z",
  "github_url": "https://github.com/digitalcube/advanced-backlog-mcp-server",
  "repository": {
    "name": "advanced-backlog-mcp-server",
    "full_name": "digitalcube/advanced-backlog-mcp-server",
    "description": null,
    "html_url": "https://github.com/digitalcube/advanced-backlog-mcp-server",
    "created_at": "2025-04-16T03:54:16Z",
    "updated_at": "2025-06-10T06:12:12Z",
    "pushed_at": "2025-06-10T06:13:55Z",
    "size": 124,
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "TypeScript",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "digitalcube",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/28613520?v=4",
      "html_url": "https://github.com/digitalcube"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 3,
    "languages": {
      "TypeScript": 52010,
      "JavaScript": 10872
    },
    "language_percentages": {
      "TypeScript": 82.71,
      "JavaScript": 17.29
    },
    "pull_requests_count": 2,
    "contributors_count": 2,
    "latest_release": {
      "tag_name": "v0.2.0",
      "name": "v0.2.0",
      "published_at": "2025-04-21T01:48:05Z",
      "body": "## What's Changed\r\n* Support for Node.js Single Executable Application (SEA) by @hidetaka-dc in https://github.com/digitalcube/advanced-backlog-mcp-server/pull/1\r\n\r\n## New Contributors\r\n* @hidetaka-dc made their first contribution in https://github.com/digitalcube/advanced-backlog-mcp-server/pull/1\r\n\r\n**Full Changelog**: https://github.com/digitalcube/advanced-backlog-mcp-server/compare/v0.0.2...v0.2.0",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v0.2.0",
        "commit_sha": "27b753f5072dbc534c69dec63f18d46354f0cb06"
      },
      {
        "name": "v0.0.2",
        "commit_sha": "ca8873a4dffddc3c419637325e0db05288823897"
      }
    ],
    "latest_version": "v0.2.0",
    "package_json_version": "0.2.0"
  },
  "readme": "# Backlog MCP Server\n\nThis is a Model Context Protocol (MCP) server for interacting with Backlog, a project management tool. The server provides tools to query and manage Backlog resources like projects, issues, wikis, and user activities.\n\n## Features\n\n- Retrieve Backlog space information\n- List and search projects\n- Search, view, and manage issues\n- Access wiki pages\n- View user activities and notifications\n- Get user information\n\n## Requirements\n\n- Node.js (v14 or later)\n- Backlog account with API key\n\n## Installation\n\n```bash\n# Clone the repository\ngit clone https://github.com/digitalcube/advanced-backlog-mcp-server.git\ncd advanced-backlog-mcp-server\n\n# Install dependencies\nnpm install\n\n# Build the server\nnpm run build\n```\n\n## Configuration\n\n### Claude Desktop Setup\n\nTo use the Backlog MCP server with Claude Desktop, edit the following configuration file:\n\n- macOS: `~/Library/Application Support/Claude/claude_desktop_config.json`\n- Windows: `%APPDATA%/Claude/claude_desktop_config.json`\n\n```json\n{\n  \"mcpServers\": {\n    \"advanced-backlog-mcp-server\": {\n      \"command\": \"/path/to/advanced-backlog-mcp-server/build/index.js\",\n      \"env\": {\n        \"BACKLOG_DOMAIN\": \"your-domain.backlog.com\",\n        \"BACKLOG_API_KEY\": \"your-api-key\"\n      }\n    }\n  }\n}\n```\n\n### Getting the Command Path\n\nTo get the correct path for the `command` field, run the following in the repository directory after building:\n\n```bash\necho \"\\\"$(pwd)/build/index.js\\\"\"\n```\n\nThis will display the path to use in the `command` field.\n\nExample: `\"/Users/username/development/mcp-servers/advanced-backlog-mcp-server/build/index.js\"`\n\nOn macOS, you can copy this directly to your clipboard with:\n```bash\necho \"\\\"$(pwd)/build/index.js\\\"\" | pbcopy\n```\n\n### API Key Setup\n\nYou can get your API key from your Backlog account settings.\n\n## Usage\n\nAfter configuration, you can use the server with Claude Desktop or any other MCP-compatible client.\n\nIn Claude Desktop, you can use natural language queries such as:\n- \"Show me all my recent issues\"\n- \"List all projects in my Backlog space\"\n- \"Find issues assigned to me with a high priority\"\n\n## Available Tools\n\nThe server provides the following tools:\n\n- `list_backlog_space` - Get information about your Backlog space\n- `list_backlog_projects` - List all projects in your Backlog space\n- `list_backlog_recently_viewed_issues` - List recently viewed issues\n- `search_backlog_issues` - Search for issues with various filters\n- `get_backlog_issue` - Get details of a specific issue\n- `list_backlog_recently_viewed_projects` - List recently viewed projects\n- `get_backlog_project` - Get details of a specific project\n- `list_backlog_recently_viewed_wikis` - List recently viewed wikis\n- `get_backlog_wiki` - Get details of a specific wiki\n- `list_backlog_recent_user_activities` - List activities of a specific user\n- `get_backlog_current_user` - Get information about the current user\n- `get_backlog_user` - Get information about a specific user\n- `list_backlog_users` - List all users in your Backlog space\n- `list_backlog_own_notifications` - List notifications for the current user\n\n## Debugging\n\nFor debugging the MCP server, you can use the MCP Inspector:\n\n```bash\nnpm run inspector\n```\n\nThis will provide a URL to access debugging tools in your browser.\n\n## Integrating with MCP Clients\n\nThis server is designed to work with any MCP-compatible client. Follow the client's documentation to connect it to this server.\n\n## License\n\nMIT\n"
}