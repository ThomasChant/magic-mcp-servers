{
  "mcp_name": "AlekseyKapustyanenko/NihFix.Postgres.Mcp",
  "mcp_description": "Facilitates real-time AI agent interactions with PostgreSQL databases using SSE and STDIO protocols.",
  "mcp_id": "AlekseyKapustyanenko_NihFix.Postgres.Mcp",
  "fetch_timestamp": "2025-06-23T03:10:17.777083Z",
  "github_url": "https://github.com/AlekseyKapustyanenko/NihFix.Postgres.Mcp",
  "repository": {
    "name": "NihFix.Postgres.Mcp",
    "full_name": "AlekseyKapustyanenko/NihFix.Postgres.Mcp",
    "description": null,
    "html_url": "https://github.com/AlekseyKapustyanenko/NihFix.Postgres.Mcp",
    "created_at": "2025-04-28T08:41:42Z",
    "updated_at": "2025-04-28T19:21:41Z",
    "pushed_at": "2025-04-28T19:21:37Z",
    "size": 12,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "C#",
    "license": "MIT License",
    "topics": [],
    "default_branch": "master",
    "owner": {
      "login": "AlekseyKapustyanenko",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/20066453?v=4",
      "html_url": "https://github.com/AlekseyKapustyanenko"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "C#": 3986,
      "Dockerfile": 817
    },
    "language_percentages": {
      "C#": 82.99,
      "Dockerfile": 17.01
    },
    "pull_requests_count": 0,
    "contributors_count": 2
  },
  "readme": "# NihFix.Postgres.Mcp\n\n**NihFix.Postgres.Mcp** is a lightweight and efficient Model Context Protocol (MCP) server for PostgreSQL, built to allow AI agents to interact with databases easily and in real-time.  \nIt supports two transport types: **STDIO** for direct process communication and **SSE (Server-Sent Events)** for streaming data over HTTP.\n\n## Features\n\n- üóÑÔ∏è Connects seamlessly to PostgreSQL databases.\n- üß† Designed for AI agent database interaction.\n- üî• Supports **SSE** and **STDIO** transport protocols.\n- üê≥ Easy to run in isolated Docker containers.\n- ‚ö° Minimal and optimized for fast response times.\n\n## Quick Start (SSE Mode)\n\n```bash\ndocker run -i --rm   -e McpServerOptions__ServerType=Sse   -e McpServerOptions__ConnectionString=\"Host=host.docker.internal;Port=5432;Database=MyDbName;User ID=dbUser;Password=dbUserPassword;\"   -p 3002:8080   nihfix/postgres.mcp\n```\nThen define server url in your client:\n```\nhttp://localhost:3002/sse\n```\n\n## Quick Start (STDIO Mode)\n\nExample MCP client configuration for STDIO:\n\n```json\n{\n  \"mcpServers\": {\n    \"postgres\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"-i\",\n        \"--rm\",\n        \"-e\",\n        \"McpServerOptions__ConnectionString\",\n        \"nihfix/postgres.mcp\",\n        \"--access-mode=unrestricted\"\n      ],\n      \"env\": {\n        \"McpServerOptions__ConnectionString\": \"Host=host.docker.internal;Port=5432;Database=MyDbName;User ID=dbUser;Password=dbUserPassword;\"\n      }\n    }\n  }\n}\n```\n\n## Environment Variables\n\n| Variable                          | Description                        | Required | Example                                                        |\n|------------------------------------|------------------------------------|----------|----------------------------------------------------------------|\n| `McpServerOptions__ServerType`     | Server mode (`Sse` or `Stdio`)      | Yes (for SSE) | `Sse`                                                |\n| `McpServerOptions__ConnectionString` | PostgreSQL connection string       | Yes      | `Host=host.docker.internal;Port=5432;Database=MyDb;User ID=user;Password=pass;` |\n\n## Requirements\n\n- Docker\n- PostgreSQL server (12+ recommended)\n\n## License\n\nMIT License.\n\n## Links\n\n- [DockerHub](https://hub.docker.com/r/nihfix/postgres.mcp)\n"
}