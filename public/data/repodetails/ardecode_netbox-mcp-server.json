{
  "mcp_name": "ardecode/netbox-mcp-server",
  "mcp_description": "Connects to NetBox to expose network infrastructure data for use with MCP-compatible LLMs like Claude.",
  "mcp_id": "ardecode_netbox-mcp-server",
  "fetch_timestamp": "2025-06-23T01:15:02.299532Z",
  "github_url": "https://github.com/ardecode/netbox-mcp-server",
  "repository": {
    "name": "netbox-mcp-server",
    "full_name": "ardecode/netbox-mcp-server",
    "description": "A MCP server for NetBox",
    "html_url": "https://github.com/ardecode/netbox-mcp-server",
    "created_at": "2025-04-16T01:20:09Z",
    "updated_at": "2025-04-16T01:24:06Z",
    "pushed_at": "2025-04-16T01:24:03Z",
    "size": 7,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 1,
    "open_issues_count": 0,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "ardecode",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/11060386?v=4",
      "html_url": "https://github.com/ardecode"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 1,
    "subscribers_count": 2,
    "languages": {
      "Python": 8739
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 1
  },
  "readme": "# NetBox MCP Server\n\nA Model Context Protocol (MCP) server that connects to NetBox and exposes network infrastructure data for use with Claude and other MCP-compatible LLMs.\n\n## Overview\n\nThis server provides a bridge between NetBox and MCP-compatible LLMs like Claude, allowing you to:\n\n- Query and analyze your network infrastructure data\n- Check device configurations and connections\n- Examine virtualization clusters and virtual machines\n- Analyze VLANs, IP address allocations, and more\n- Generate network topology information\n- Detect NVMe storage in clusters\n\nThe server exposes:\n- **Tools**: Functions that perform operations\n\n## Requirements\n\n- Python 3.10 or higher\n- NetBox instance with API access\n- NetBox API token with read permissions\n- `httpx` library for HTTP requests\n- `mcp` Python SDK for Model Context Protocol\n\n## Installation\n\n### Using uv (recommended)\n\n```bash\n# Create a virtual environment\nuv venv\nsource .venv/bin/activate  # On Windows: .venv\\Scripts\\activate\n\n# Install required packages\nuv add mcp httpx\n```\n\n### Using pip\n\n```bash\n# Create a virtual environment\npython -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\n\n# Install required packages\npip install mcp httpx\n```\n\n## Usage\n\n### Running the Server Directly\n\n```bash\npython netbox_server.py --url https://your-netbox-instance.example.com --token your-api-token\n```\n\nYou can also set environment variables instead of using command-line arguments:\n\n```bash\nexport NETBOX_URL=\"https://your-netbox-instance.example.com\"\nexport NETBOX_TOKEN=\"your-api-token\"\npython netbox_server.py\n```\n\n### Integration with Claude Desktop\n\nTo integrate with Claude Desktop:\n\n1. Install Claude Desktop from [https://claude.ai/download](https://claude.ai/download)\n2. Open the Claude menu and select \"Settings...\"\n3. Click on \"Developer\" in the left sidebar\n4. Click on \"Edit Config\"\n5. Add the NetBox server configuration to `claude_desktop_config.json`:\n\n```json\n{\n  \"mcpServers\": {\n    \"netbox\": {\n      \"command\": \"python\",\n      \"args\": [\n        \"/path/to/netbox_server.py\",\n        \"--url\",\n        \"https://your-netbox-instance.example.com\",\n        \"--token\",\n        \"your-api-token\"\n      ]\n    }\n  }\n}\n```\n\n6. Save the file and restart Claude Desktop\n\n## Available Features\n\n### Tools\n\nThe server provides these tools:\n\n- `get_all_clusters` - Get list of all clusters with key information\n- `get_cluster_virtual_machines` - Get all VMs in a specific cluster\n- `get_cluster_interfaces` - Get all interfaces from all VMs in a cluster\n\n## Example Queries for Claude\n\nOnce the server is connected to Claude Desktop, you can ask questions like:\n\n- \"Show me a list of all clusters in our NetBox instance\"\n- \"Show me all the virtual machines in our primary cluster\"\n\n## License\n\nThis project is licensed under the MIT License - see the LICENSE file for details.\n\n## Acknowledgments\n\n- [NetBox](https://github.com/netbox-community/netbox) - Network infrastructure modeling\n- [Model Context Protocol](https://modelcontextprotocol.io) - Protocol for providing context to LLMs\n- [Claude](https://claude.ai) - Anthropic's AI assistant\n"
}