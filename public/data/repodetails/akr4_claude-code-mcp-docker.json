{
  "mcp_name": "akr4/claude-code-mcp-docker",
  "mcp_description": "A Docker container for running Claude Code MCP server with enhanced security features, including a network firewall to prevent unauthorized outbound connections.",
  "mcp_id": "akr4_claude-code-mcp-docker",
  "fetch_timestamp": "2025-06-23T00:29:21.240098Z",
  "github_url": "https://github.com/akr4/claude-code-mcp-docker",
  "repository": {
    "name": "claude-code-mcp-docker",
    "full_name": "akr4/claude-code-mcp-docker",
    "description": null,
    "html_url": "https://github.com/akr4/claude-code-mcp-docker",
    "created_at": "2025-04-13T01:52:31Z",
    "updated_at": "2025-04-14T04:08:08Z",
    "pushed_at": "2025-04-14T04:08:04Z",
    "size": 24,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "Shell",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "akr4",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/10892?v=4",
      "html_url": "https://github.com/akr4"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "Shell": 4988,
      "Dockerfile": 1496,
      "Just": 242
    },
    "language_percentages": {
      "Shell": 74.16,
      "Dockerfile": 22.24,
      "Just": 3.6
    },
    "pull_requests_count": 1,
    "contributors_count": 2
  },
  "readme": "# Dockerized Claude Code MCP Server\n\nA simple Docker container for running Claude Code MCP server with enhanced security features.\n\n## Development Environment\n\nThis Docker container provides a pre-configured development environment with:\n\n- **Base OS**: Ubuntu\n- **Build Tools**: git, curl, wget, etc.\n- **Security**: Network firewall to prevent unauthorized outbound connections\n\nYou can customize the Dockerfile to add additional development tools or languages specific to your projects.\n\n## Setup Instructions\n\n### 1. Build Docker Image\n\n```bash\ndocker build -t my-claude-mcp:latest .\n```\n\nOr if you have [just](https://github.com/casey/just) installed:\n```bash\njust build\n```\n\n### 2. MCP Client Configuration\n\n#### (Example) Claude Desktop Configuration\n\nConfigure Claude Desktop settings file (`~/Library/Application\\ Support/Claude/claude_desktop_config.json` on macOS for example) as follows:\n\n```json\n{\n  \"mcpServers\": {\n    \"claude-code\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"-i\",\n        \"--rm\",\n        \"--cap-add=NET_ADMIN\",\n        \"-v\", \"/Users/username/.claude:/home/claude/.claude\",\n        \"-v\", \"/Users/username/project-1:/workspace/project-1\",\n        \"-v\", \"/Users/username/project-2:/workspace/project-2\",\n        \"my-claude-mcp:latest\"\n      ]\n    }\n  }\n}\n```\n\nThis configuration:\n- Mounts your Claude settings directory (`~/.claude`)\n- Mounts your project directories for access within the container\n- Gives you the flexibility to add as many project directories as needed\n\n## Customization\n\nFeel free to modify the Dockerfile to add more development tools based on your needs. For example:\n\n- Additional programming languages (Go, Python, etc.)\n- Database clients\n- Cloud CLIs (AWS, GCP, Azure)\n- Container tools (Docker, Kubernetes tools)\n\nAfter modifying the Dockerfile, rebuild the image with:\n```bash\ndocker build -t my-claude-mcp:latest .\n```\n\nOr with just:\n```bash\njust build\n```\n\n## Environment Variables\n\nThe container supports the following environment variables:\n\n| Variable | Description | Default | Required |\n|----------|-------------|---------|----------|\n| `GIT_USER_NAME` | User name for Git commits | Claude | No |\n| `GIT_USER_EMAIL` | Email address for Git commits | None | No |\n\n## Security Features\n\nThis container includes a network firewall that restricts outbound connections to only approved domains:\n\n- GitHub domains (api.github.com, github.com, etc.)\n- NPM registry (registry.npmjs.org)\n- Anthropic APIs (api.anthropic.com, statsig.anthropic.com)\n- Other required services (sentry.io, etc.)\n\nThe firewall is automatically enabled when the container is started with the necessary capabilities (`--cap-add=NET_ADMIN`). These capabilities are **required** for the container to run - if they are not provided, the container will exit immediately for security reasons.\n\nKey security features:\n- Firewall configuration is handled by the root user\n- Claude Code MCP runs as a non-root user (claude) without sudo privileges\n- Strict firewall rules prevent unauthorized network access\n- Automatic verification of firewall configuration during startup\n\nThis security feature helps prevent potential data exfiltration attempts through the MCP server.\n"
}