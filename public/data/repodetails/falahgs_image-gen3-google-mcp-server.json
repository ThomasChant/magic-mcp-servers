{
  "mcp_name": "falahgs/image-gen3-google-mcp-server",
  "mcp_description": "Harness Google's Imagen 3.0 model via the Gemini API for high-quality image generation, seamlessly integrating with Claude Desktop and other MCP-compatible hosts.",
  "mcp_id": "falahgs_image-gen3-google-mcp-server",
  "fetch_timestamp": "2025-06-23T02:59:39.231370Z",
  "github_url": "https://github.com/falahgs/image-gen3-google-mcp-server",
  "repository": {
    "name": "image-gen3-google-mcp-server",
    "full_name": "falahgs/image-gen3-google-mcp-server",
    "description": null,
    "html_url": "https://github.com/falahgs/image-gen3-google-mcp-server",
    "created_at": "2025-04-15T14:57:09Z",
    "updated_at": "2025-04-15T15:25:23Z",
    "pushed_at": "2025-04-15T15:25:20Z",
    "size": 1833,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 1,
    "open_issues_count": 0,
    "language": "TypeScript",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "falahgs",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/5242012?v=4",
      "html_url": "https://github.com/falahgs"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 1,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 5365,
      "HTML": 1295,
      "Dockerfile": 321
    },
    "language_percentages": {
      "TypeScript": 76.85,
      "HTML": 18.55,
      "Dockerfile": 4.6
    },
    "pull_requests_count": 0,
    "contributors_count": 2,
    "package_json_version": "1.0.0"
  },
  "readme": "# Gemini Imagen 3.0 MCP Server\r\n\r\n![License](https://img.shields.io/badge/license-MIT-blue.svg)\r\n![Node](https://img.shields.io/badge/node-%3E%3D18.0.0-brightgreen)\r\n![TypeScript](https://img.shields.io/badge/typescript-%5E5.3.3-blue)\r\n\r\nA professional Model Context Protocol (MCP) server implementation that harnesses Google's Imagen 3.0 model through the Gemini API for high-quality image generation. Built with TypeScript and designed for seamless integration with Claude Desktop and other MCP-compatible hosts.\r\n\r\n## üåü Features\r\n\r\n- Leverage Google's state-of-the-art Imagen 3.0 model via Gemini API\r\n- Generate up to 4 high-quality images per request\r\n- Automatic file management with intelligent naming\r\n- HTML preview generation with file:// protocol support\r\n- Built on MCP protocol for AI agent compatibility\r\n- TypeScript implementation with robust error handling\r\n\r\n## üöÄ Quick Start\r\n\r\n### Prerequisites\r\n\r\n- Node.js 18 or higher\r\n- Google Gemini API key\r\n- Claude Desktop or another MCP-compatible host\r\n\r\n### Installation\r\n\r\n1. Clone the repository:\r\n```bash\r\ngit clone https://github.com/yourusername/gemini-imagen-mcp-server.git\r\ncd gemini-imagen-mcp-server\r\n```\r\n\r\n2. Install dependencies:\r\n```bash\r\nnpm install\r\n```\r\n\r\n3. Build the TypeScript code:\r\n```bash\r\nnpm run build\r\n```\r\n\r\n## ‚öôÔ∏è Configuration\r\n\r\n1. Configure Claude Desktop by adding to `claude_desktop_config.json`:\r\n```json\r\n{\r\n  \"mcpServers\": {\r\n    \"gemini-image-gen\": {\r\n      \"command\": \"node\",\r\n      \"args\": [\"./build/index.js\"],\r\n      \"cwd\": \"<path-to-project-directory>\",\r\n      \"env\": {\r\n        \"GEMINI_API_KEY\": \"your-gemini-api-key\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n2. Replace placeholders:\r\n   - `<path-to-project-directory>`: Your project path\r\n   - `your-gemini-api-key`: Your Gemini API key\r\n\r\n## üõ†Ô∏è Available Tools\r\n\r\n### 1. generate_images\r\nGenerates images using Google's Imagen 3.0 model.\r\n\r\nParameters:\r\n- `prompt` (required): Text description of the image to generate\r\n- `numberOfImages` (optional): Number of images (1-4, default: 1)\r\n\r\nFile Management:\r\n- Images are automatically saved in `G:\\image-gen3-google-mcp-server\\images`\r\n- Filenames follow the pattern: `{sanitized-prompt}-{timestamp}-{index}.png`\r\n- Timestamps ensure unique filenames\r\n- Prompts are sanitized for safe filesystem usage\r\n\r\nExample:\r\n```\r\nGenerate an image of a futuristic city at night\r\n```\r\n\r\n### 2. create_image_html\r\nCreates HTML preview tags for generated images.\r\n\r\nParameters:\r\n- `imagePaths` (required): Array of image file paths\r\n- `width` (optional): Image width in pixels (default: 512)\r\n- `height` (optional): Image height in pixels (default: 512)\r\n\r\nReturns HTML tags with absolute file:// URLs for local viewing.\r\n\r\nExample:\r\n```\r\nCreate HTML tags for the generated images with width=400\r\n```\r\n\r\n## üîß Development\r\n\r\n```bash\r\n# Install dependencies\r\nnpm install\r\n\r\n# Build TypeScript\r\nnpm run build\r\n\r\n# Run tests (when available)\r\nnpm test\r\n```\r\n\r\n## ü§ù Contributing\r\n\r\nContributions are welcome! Please feel free to submit a Pull Request. For major changes:\r\n\r\n1. Fork the repository\r\n2. Create your feature branch (`git checkout -b feature/AmazingFeature`)\r\n3. Commit your changes (`git commit -m 'Add some AmazingFeature'`)\r\n4. Push to the branch (`git push origin feature/AmazingFeature`)\r\n5. Open a Pull Request\r\n\r\n## üìù Error Handling\r\n\r\nThe server implements two main error codes:\r\n- `tool_not_found` (1): When the requested tool is not available\r\n- `execution_error` (2): When image generation or HTML creation fails\r\n\r\n## üìÑ License\r\n\r\nMIT License - see the [LICENSE](LICENSE) file for details.\r\n\r\n## ‚ú® Author\r\n\r\n**Falah G. Salieh**\r\n- Copyright ¬© 2025\r\n- GitHub: [@yourgithubhandle](https://github.com/yourgithubhandle)\r\n- Email: [your.email@example.com](mailto:your.email@example.com)\r\n\r\n## üôè Acknowledgments\r\n\r\n- Google Gemini API and Imagen 3.0 model\r\n- Model Context Protocol (MCP) by Anthropic\r\n- Claude Desktop team for MCP host implementation\r\n\r\n## üìå Tags\r\n\r\n`#MCP` `#Gemini` `#Imagen3` `#AI` `#ImageGeneration` `#TypeScript` `#NodeJS` `#GoogleAI` `#ClaudeDesktop`\r\n\r\n---\r\nMade with ‚ù§Ô∏è by Falah G. Salieh "
}