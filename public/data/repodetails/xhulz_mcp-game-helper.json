{
  "mcp_name": "xhulz/mcp-game-helper",
  "mcp_description": "AI-powered tools for game developers to optimize combat balancing, skill analysis, and level pacing.",
  "mcp_id": "xhulz_mcp-game-helper",
  "fetch_timestamp": "2025-06-23T09:31:28.885661Z",
  "github_url": "https://github.com/xhulz/mcp-game-helper",
  "repository": {
    "name": "mcp-game-helper",
    "full_name": "xhulz/mcp-game-helper",
    "description": "Custom Model Context Protocol (MCP) Server that provides AI-powered tools to assist game developers in tasks related to combat balancing, skill analysis, level pacing, and simulation.",
    "html_url": "https://github.com/xhulz/mcp-game-helper",
    "created_at": "2025-04-08T13:22:34Z",
    "updated_at": "2025-04-10T14:11:18Z",
    "pushed_at": "2025-04-08T13:45:10Z",
    "size": 26,
    "stargazers_count": 3,
    "watchers_count": 3,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "TypeScript",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "xhulz",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/32708942?v=4",
      "html_url": "https://github.com/xhulz"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 11686,
      "JavaScript": 6198
    },
    "language_percentages": {
      "TypeScript": 65.34,
      "JavaScript": 34.66
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "package_json_version": "1.0.2"
  },
  "readme": "# MCP Game Helper\n\n**MCP Game Helper** is a custom Model Context Protocol (MCP) Server that provides AI-powered tools to assist game developers in tasks related to combat balancing, skill analysis, level pacing, and simulation.\n\n> Built for integration with [Cursor](https://cursor.sh), using the official `@modelcontextprotocol/sdk`\n\n---\n\n## ðŸš€ Available Commands\n\n### 1. `suggest_balancing`\n\nAnalyzes the HP and damage of two entities to evaluate if a matchup is balanced.\n\n#### Input Example:\n\n```json\n{\n  \"player\": { \"hp\": 2040, \"damage\": 1500 },\n  \"enemy\": { \"hp\": 2080, \"damage\": 1000 }\n}\n```\n\n#### Prompt Example:\n\n```\nI want to check if my player and enemy are balanced.\nPlayer: 2040 HP, 1500 DMG\nEnemy: 2080 HP, 1000 DMG\n```\n\n---\n\n### 2. `simulate_combat`\n\nSimulates a combat scenario and estimates time-to-kill (TTK) for both entities.\n\n#### Input Example:\n\n```json\n{\n  \"player\": { \"hp\": 100, \"damage\": 10, \"attackSpeed\": 1.0 },\n  \"enemy\": { \"hp\": 80, \"damage\": 20, \"attackSpeed\": 0.5 }\n}\n```\n\n#### Prompt Example:\n\n```\nSimulate a fight:\nPlayer has 100 HP, 10 DMG, 1.0 attack speed\nEnemy has 80 HP, 20 DMG, 0.5 attack speed\n```\n\n---\n\n### 3. `simulate_room_survival_time`\n\nEstimates how long a player can survive against multiple enemies and the time it takes to clear the room.\n\n#### Input Example:\n\n```json\n{\n  \"player\": { \"hp\": 100, \"damage\": 15, \"attackSpeed\": 1.2 },\n  \"enemies\": [\n    { \"hp\": 40, \"damage\": 10, \"attackSpeed\": 0.8 },\n    { \"hp\": 50, \"damage\": 12, \"attackSpeed\": 1.0 }\n  ]\n}\n```\n\n#### Prompt Example:\n\n```\nHow long will my player survive in a room?\nPlayer: 100 HP, 15 damage, 1.2 speed\nEnemies: One with 40 HP, 10 damage, 0.8 speed, another with 50 HP, 12 damage, 1.0 speed\n```\n\n---\n\n### 4. `simulate_skill_impact`\n\nSimulates how effective a skill is based on its damage, area of effect, and cooldown.\n\n#### Input Example:\n\n```json\n{\n  \"skill\": {\n    \"damage\": 80,\n    \"cooldown\": 5,\n    \"area\": 3\n  },\n  \"enemies\": [{ \"hp\": 100 }, { \"hp\": 80 }, { \"hp\": 60 }]\n}\n```\n\n#### Prompt Example:\n\n```\nMy skill deals 80 damage, has 5s cooldown, and hits 3 enemies.\nEnemy HPs: 100, 80, 60\nHow good is this skill?\n```\n\n---\n\n### 5. `suggest_difficulty_ramp`\n\nAnalyzes progression between levels and provides feedback on how smooth or steep the difficulty ramp is.\n\n#### Input Example:\n\n```json\n{\n  \"levels\": [\n    { \"name\": \"Forest\", \"enemyHp\": 50 },\n    { \"name\": \"Cave\", \"enemyHp\": 80 },\n    { \"name\": \"Castle\", \"enemyHp\": 120 }\n  ],\n  \"player\": { \"damage\": 25, \"attackSpeed\": 1.0 }\n}\n```\n\n#### Prompt Example:\n\n```\nMy player deals 25 dmg/sec.\nForest enemies: 50 HP\nCave: 80 HP\nCastle: 120 HP\nIs this difficulty curve balanced?\n```\n\n---\n\n### 6. `predict_performance_impact`\n\nScans a code snippet and provides feedback on potential performance issues.\n\n#### Input Example:\n\n```json\n{\n  \"code\": \"for (let i = 0; i < 10000; i++) { this.spawnEnemy(); }\"\n}\n```\n\n#### Prompt Example:\n\n```\nCan you check this code for performance issues?\n\nfor (let i = 0; i < 10000; i++) {\n  this.spawnEnemy();\n}\n\nAlso, I sometimes use setInterval inside update(). Is that bad?\n```\n\n---\n\n### 7. `suggest_ai_state_machine`\n\nCreates an AI state machine suggestion based on natural language behavior.\n\n#### Input Example:\n\n```json\n{\n  \"description\": \"This enemy walks around the map until it sees the player, then it chases them. If close enough, it attacks. If it loses sight, it goes back to patrolling.\"\n}\n```\n\n#### Prompt Example:\n\n```\nThis enemy walks around the map until it sees the player, then it chases them.\nIf close enough, it attacks. If it loses sight, it goes back to patrolling.\nCan you suggest a state machine?\n```\n\n---\n\n### 8. `suggest_wave_timing`\n\nSuggests the ideal time between waves of enemies based on the player's DPS and enemy HP.\n\n#### Input Example:\n\n```json\n{\n  \"player\": { \"damage\": 30, \"attackSpeed\": 2 },\n  \"enemyHp\": 100,\n  \"enemiesPerWave\": 3\n}\n```\n\n#### Prompt Example:\n\n```\nMy player deals 30 damage per hit and attacks twice per second.\nEach enemy has 100 HP, and I spawn 3 enemies per wave.\nWhat should be the ideal time between waves?\n```\n\n---\n\n## ðŸ›  How to Run Locally\n\n1. Install dependencies:\n\n```bash\nnpm install\n```\n\n2. Build the project:\n\n```bash\nnpm run build\n```\n\n3. Install the package globally:\n\n```bash\nnpm install -g .\n```\n\n4. Make sure you register the server in your `.cursor-config.json`:\n\n```json\n{\n  \"mcpServers\": {\n    \"mcp-game-helper\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"mcp-game-helper\"]\n    }\n  }\n}\n```\n\n---\n\n## ðŸ’¡ Contributing\n\nFeel free to suggest new useful commands for game developers â€” especially those focused on AI, balancing, and simulation!\n\n---\n\n## ðŸ“˜ License\n\nMIT\n"
}