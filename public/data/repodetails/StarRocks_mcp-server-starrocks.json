{
  "mcp_name": "StarRocks",
  "mcp_description": "Interact with [StarRocks](https://www.starrocks.io/)",
  "mcp_id": "StarRocks_mcp-server-starrocks",
  "fetch_timestamp": "2025-06-23T08:37:21.804069Z",
  "github_url": "https://github.com/StarRocks/mcp-server-starrocks",
  "repository": {
    "name": "mcp-server-starrocks",
    "full_name": "StarRocks/mcp-server-starrocks",
    "description": "StarRocks MCP (Model Context Protocol) Server",
    "html_url": "https://github.com/StarRocks/mcp-server-starrocks",
    "created_at": "2025-03-05T10:48:25Z",
    "updated_at": "2025-06-21T00:55:52Z",
    "pushed_at": "2025-06-19T02:09:10Z",
    "size": 679,
    "stargazers_count": 84,
    "watchers_count": 84,
    "forks_count": 28,
    "open_issues_count": 5,
    "language": "Python",
    "license": "Apache License 2.0",
    "topics": [
      "agent",
      "ai",
      "database",
      "mcp-server",
      "model-context-protocol",
      "starrocks"
    ],
    "default_branch": "main",
    "owner": {
      "login": "StarRocks",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/88238841?v=4",
      "html_url": "https://github.com/StarRocks"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 28,
    "subscribers_count": 4,
    "languages": {
      "Python": 29395
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 5,
    "contributors_count": 5,
    "latest_release": {
      "tag_name": "v0.1.3",
      "name": "Release v0.1.3",
      "published_at": "2025-06-05T02:24:07Z",
      "body": "## What's Changed\r\n* add MCP server badge by @punkpeye in https://github.com/StarRocks/mcp-server-starrocks/pull/4\r\n* Add MseeP.ai badge to README by @lwsinclair in https://github.com/StarRocks/mcp-server-starrocks/pull/5\r\n* Refactor: Use FastMCP to Support Streamable HTTP by @cutiechi in https://github.com/StarRocks/mcp-server-starrocks/pull/7\r\n* support multiple auth_plugins using env  STARROCKS_MYSQL_AUTH_PLUGIN by @gauravsagar483 in https://github.com/StarRocks/mcp-server-starrocks/pull/10\r\n\r\n## New Contributors\r\n* @punkpeye made their first contribution in https://github.com/StarRocks/mcp-server-starrocks/pull/4\r\n* @lwsinclair made their first contribution in https://github.com/StarRocks/mcp-server-starrocks/pull/5\r\n* @cutiechi made their first contribution in https://github.com/StarRocks/mcp-server-starrocks/pull/7\r\n* @gauravsagar483 made their first contribution in https://github.com/StarRocks/mcp-server-starrocks/pull/10\r\n\r\n**Full Changelog**: https://github.com/StarRocks/mcp-server-starrocks/compare/v0.1.2...v0.1.3",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v0.1.3",
        "commit_sha": "b75adb8c24d71ec5efaf44790d1489ba68e10cf3"
      },
      {
        "name": "v0.1.2",
        "commit_sha": "96d075df1f9d8d37996a995d3150c95a82e7193a"
      },
      {
        "name": "v0.1.1",
        "commit_sha": "6ba610fcfa7ee6637a9a68e115a6c45d56a3a9cf"
      },
      {
        "name": "v0.1.0",
        "commit_sha": "0f11f94da50ffbe7e82be2d9d312e49538bb96b7"
      }
    ],
    "latest_version": "v0.1.3"
  },
  "readme": "[![MseeP.ai Security Assessment Badge](https://mseep.net/mseep-audited.png)](https://mseep.ai/app/starrocks-mcp-server-starrocks)\n\n# StarRocks Official MCP Server\n\nThe StarRocks MCP Server acts as a bridge between AI assistants and StarRocks databases. It allows for direct SQL execution, database exploration, data visualization via charts, and retrieving detailed schema/data overviews without requiring complex client-side setup.\n\n<a href=\"https://glama.ai/mcp/servers/@StarRocks/mcp-server-starrocks\">\n  <img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/@StarRocks/mcp-server-starrocks/badge\" alt=\"StarRocks Server MCP server\" />\n</a>\n\n## Features\n\n- **Direct SQL Execution:** Run `SELECT` queries (`read_query`) and DDL/DML commands (`write_query`).\n- **Database Exploration:** List databases and tables, retrieve table schemas (`starrocks://` resources).\n- **System Information:** Access internal StarRocks metrics and states via the `proc://` resource path.\n- **Detailed Overviews:** Get comprehensive summaries of tables (`table_overview`) or entire databases (`db_overview`), including column definitions, row counts, and sample data.\n- **Data Visualization:** Execute a query and generate a Plotly chart directly from the results (`query_and_plotly_chart`).\n- **Intelligent Caching:** Table and database overviews are cached in memory to speed up repeated requests. Cache can be bypassed when needed.\n- **Flexible Configuration:** Set connection details and behavior via environment variables.\n\n## Configuration\n\nThe MCP server is typically run via an MCP host. Configuration is passed to the host, specifying how to launch the StarRocks MCP server process.\n\n**Using `uv` with installed package:**\n\n```json\n{\n  \"mcpServers\": {\n    \"mcp-server-starrocks\": {\n      \"command\": \"uv\",\n      \"args\": [\"run\", \"--with\", \"mcp-server-starrocks\", \"mcp-server-starrocks\"],\n      \"env\": {\n        \"STARROCKS_HOST\": \"default localhost\",\n        \"STARROCKS_PORT\": \"default 9030\",\n        \"STARROCKS_USER\": \"default root\",\n        \"STARROCKS_PASSWORD\": \"default empty\",\n        \"STARROCKS_DB\": \"default empty\",\n        \"STARROCKS_OVERVIEW_LIMIT\": \"default 20000\",\n        \"STARROCKS_MYSQL_AUTH_PLUGIN\":\"mysql_clear_password\"\n      }\n    }\n  }\n}\n```\n\n**Using `uv` with local directory (for development):**\n\n```json\n{\n  \"mcpServers\": {\n    \"mcp-server-starrocks\": {\n      \"command\": \"uv\",\n      \"args\": [\n        \"--directory\",\n        \"path/to/mcp-server-starrocks\", // <-- Update this path\n        \"run\",\n        \"mcp-server-starrocks\"\n      ],\n      \"env\": {\n        \"STARROCKS_HOST\": \"default localhost\",\n        \"STARROCKS_PORT\": \"default 9030\",\n        \"STARROCKS_USER\": \"default root\",\n        \"STARROCKS_PASSWORD\": \"default empty\",\n        \"STARROCKS_DB\": \"default empty\",\n        \"STARROCKS_OVERVIEW_LIMIT\": \"default 20000\",\n        \"STARROCKS_MYSQL_AUTH_PLUGIN\":\"mysql_clear_password\"\n      }\n    }\n  }\n}\n```\n\n**Using Streamable HTTP (recommended for integration):**\n\n```json\n{\n  \"mcpServers\": {\n    \"mcp-server-starrocks\": {\n      \"url\": \"http://localhost:8000/mcp\"\n    }\n  }\n}\n```\n\nTo start the server in Streamable HTTP mode:\n\n```bash\nexport MCP_TRANSPORT_MODE=streamable-http\nuv run mcp-server-starrocks\n```\n\n- The `url` field should point to the Streamable HTTP endpoint of your MCP server (adjust host/port as needed).\n- With this configuration, clients can interact with the server using standard JSON over HTTP POST requests. No special SDK is required.\n- All tool APIs accept and return standard JSON as described above.\n\n> **Note:**\n> The `sse` (Server-Sent Events) mode is deprecated and no longer maintained. Please use Streamable HTTP mode for all new integrations.\n\n**Environment Variables:**\n\n- `STARROCKS_HOST`: (Optional) Hostname or IP address of the StarRocks FE service. Defaults to `localhost`.\n- `STARROCKS_PORT`: (Optional) MySQL protocol port of the StarRocks FE service. Defaults to `9030`.\n- `STARROCKS_USER`: (Optional) StarRocks username. Defaults to `root`.\n- `STARROCKS_PASSWORD`: (Optional) StarRocks password. Defaults to empty string.\n- `STARROCKS_DB`: (Optional) Default database to use if not specified in tool arguments or resource URIs. If set, the connection will attempt to `USE` this database. Tools like `table_overview` and `db_overview` will use this if the database part is omitted in their arguments. Defaults to empty (no default database).\n- `STARROCKS_OVERVIEW_LIMIT`: (Optional) An _approximate_ character limit for the _total_ text generated by overview tools (`table_overview`, `db_overview`) when fetching data to populate the cache. This helps prevent excessive memory usage for very large schemas or numerous tables. Defaults to `20000`.\n- `STARROCKS_MYSQL_AUTH_PLUGIN`: (Optional) Specifies the authentication plugin to use when connecting to the StarRocks FE service. For example, set to `mysql_clear_password` if your StarRocks deployment requires clear text password authentication (such as when using certain LDAP or external authentication setups). Only set this if your environment specifically requires it; otherwise, the default auth_plugin is used.\n- `MCP_TRANSPORT_MODE`: (Optional) Communication mode that specifies how the MCP Server exposes its services. Available options:\n  - `stdio` (default): Communicates through standard input/output, suitable for MCP Host hosting.\n  - `streamable-http` (Streamable HTTP): Starts as a Streamable HTTP Server, supporting RESTful API calls.\n  - `sse`: **(Deprecated, not recommended)** Starts in Server-Sent Events (SSE) streaming mode, suitable for scenarios requiring streaming responses. **Note: SSE mode is no longer maintained, it is recommended to use Streamable HTTP mode uniformly.**\n\n## Components\n\n### Tools\n\n- `read_query`\n\n  - **Description:** Execute a SELECT query or other commands that return a ResultSet (e.g., `SHOW`, `DESCRIBE`).\n  - **Input:** `{ \"query\": \"SQL query string\" }`\n  - **Output:** Text content containing the query results in a CSV-like format, including a header row and a row count summary. Returns an error message on failure.\n\n- `write_query`\n\n  - **Description:** Execute a DDL (`CREATE`, `ALTER`, `DROP`), DML (`INSERT`, `UPDATE`, `DELETE`), or other StarRocks command that does not return a ResultSet.\n  - **Input:** `{ \"query\": \"SQL command string\" }`\n  - **Output:** Text content confirming success (e.g., \"Query OK, X rows affected\") or reporting an error. Changes are committed automatically on success.\n\n- `query_and_plotly_chart`\n\n  - **Description:** Executes a SQL query, loads the results into a Pandas DataFrame, and generates a Plotly chart using a provided Python expression. Designed for visualization in supporting UIs.\n  - **Input:**\n    ```json\n    {\n      \"query\": \"SQL query to fetch data\",\n      \"plotly_expr\": \"Python expression string using 'px' (Plotly Express) and 'df' (DataFrame). Example: 'px.scatter(df, x=\\\"col1\\\", y=\\\"col2\\\")'\"\n    }\n    ```\n  - **Output:** A list containing:\n    1.  `TextContent`: A text representation of the DataFrame and a note that the chart is for UI display.\n    2.  `ImageContent`: The generated Plotly chart encoded as a base64 PNG image (`image/png`). Returns text error message on failure or if the query yields no data.\n\n- `table_overview`\n\n  - **Description:** Get an overview of a specific table: columns (from `DESCRIBE`), total row count, and sample rows (`LIMIT 3`). Uses an in-memory cache unless `refresh` is true.\n  - **Input:**\n    ```json\n    {\n      \"table\": \"Table name, optionally prefixed with database name (e.g., 'db_name.table_name' or 'table_name'). If database is omitted, uses STARROCKS_DB environment variable if set.\",\n      \"refresh\": false // Optional, boolean. Set to true to bypass the cache. Defaults to false.\n    }\n    ```\n  - **Output:** Text content containing the formatted overview (columns, row count, sample data) or an error message. Cached results include previous errors if applicable.\n\n- `db_overview`\n  - **Description:** Get an overview (columns, row count, sample rows) for _all_ tables within a specified database. Uses the table-level cache for each table unless `refresh` is true.\n  - **Input:**\n    ```json\n    {\n      \"db\": \"database_name\", // Optional if STARROCKS_DB env var is set.\n      \"refresh\": false // Optional, boolean. Set to true to bypass the cache for all tables in the DB. Defaults to false.\n    }\n    ```\n  - **Output:** Text content containing concatenated overviews for all tables found in the database, separated by headers. Returns an error message if the database cannot be accessed or contains no tables.\n\n### Resources\n\n#### Direct Resources\n\n- `starrocks:///databases`\n  - **Description:** Lists all databases accessible to the configured user.\n  - **Equivalent Query:** `SHOW DATABASES`\n  - **MIME Type:** `text/plain`\n\n#### Resource Templates\n\n- `starrocks:///{db}/{table}/schema`\n\n  - **Description:** Gets the schema definition of a specific table.\n  - **Equivalent Query:** `SHOW CREATE TABLE {db}.{table}`\n  - **MIME Type:** `text/plain`\n\n- `starrocks:///{db}/tables`\n\n  - **Description:** Lists all tables within a specific database.\n  - **Equivalent Query:** `SHOW TABLES FROM {db}`\n  - **MIME Type:** `text/plain`\n\n- `proc:///{+path}`\n  - **Description:** Accesses StarRocks internal system information, similar to Linux `/proc`. The `path` parameter specifies the desired information node.\n  - **Equivalent Query:** `SHOW PROC '/{path}'`\n  - **MIME Type:** `text/plain`\n  - **Common Paths:**\n    - `/frontends` - Information about FE nodes.\n    - `/backends` - Information about BE nodes (for non-cloud native deployments).\n    - `/compute_nodes` - Information about CN nodes (for cloud native deployments).\n    - `/dbs` - Information about databases.\n    - `/dbs/<DB_ID>` - Information about a specific database by ID.\n    - `/dbs/<DB_ID>/<TABLE_ID>` - Information about a specific table by ID.\n    - `/dbs/<DB_ID>/<TABLE_ID>/partitions` - Partition information for a table.\n    - `/transactions` - Transaction information grouped by database.\n    - `/transactions/<DB_ID>` - Transaction information for a specific database ID.\n    - `/transactions/<DB_ID>/running` - Running transactions for a database ID.\n    - `/transactions/<DB_ID>/finished` - Finished transactions for a database ID.\n    - `/jobs` - Information about asynchronous jobs (Schema Change, Rollup, etc.).\n    - `/statistic` - Statistics for each database.\n    - `/tasks` - Information about agent tasks.\n    - `/cluster_balance` - Load balance status information.\n    - `/routine_loads` - Information about Routine Load jobs.\n    - `/colocation_group` - Information about Colocation Join groups.\n    - `/catalog` - Information about configured catalogs (e.g., Hive, Iceberg).\n\n### Prompts\n\nNone defined by this server.\n\n## Caching Behavior\n\n- The `table_overview` and `db_overview` tools utilize an in-memory cache to store the generated overview text.\n- The cache key is a tuple of `(database_name, table_name)`.\n- When `table_overview` is called, it checks the cache first. If a result exists and the `refresh` parameter is `false` (default), the cached result is returned immediately. Otherwise, it fetches the data from StarRocks, stores it in the cache, and then returns it.\n- When `db_overview` is called, it lists all tables in the database and then attempts to retrieve the overview for _each table_ using the same caching logic as `table_overview` (checking cache first, fetching if needed and `refresh` is `false` or cache miss). If `refresh` is `true` for `db_overview`, it forces a refresh for _all_ tables in that database.\n- The `STARROCKS_OVERVIEW_LIMIT` environment variable provides a _soft target_ for the maximum length of the overview string generated _per table_ when populating the cache, helping to manage memory usage.\n- Cached results, including any error messages encountered during the original fetch, are stored and returned on subsequent cache hits.\n\n## Demo\n\n![MCP Demo Image](mcpserverdemo.jpg)\n"
}