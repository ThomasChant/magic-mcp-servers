{
  "mcp_name": "HagaiHen/facebook-mcp-server",
  "mcp_description": "üêç ‚òÅÔ∏è - Integrates with Facebook Pages to enable direct management of posts, comments, and engagement metrics through the Graph API for streamlined social media management.",
  "mcp_id": "HagaiHen_facebook-mcp-server",
  "fetch_timestamp": "2025-06-23T04:18:19.144978Z",
  "github_url": "https://github.com/HagaiHen/facebook-mcp-server",
  "repository": {
    "name": "facebook-mcp-server",
    "full_name": "HagaiHen/facebook-mcp-server",
    "description": "Facebook MCP server for automating posts, comment moderation, insights, and sentiment filtering.",
    "html_url": "https://github.com/HagaiHen/facebook-mcp-server",
    "created_at": "2025-05-08T16:03:54Z",
    "updated_at": "2025-06-22T15:20:05Z",
    "pushed_at": "2025-06-05T16:58:20Z",
    "size": 29,
    "stargazers_count": 17,
    "watchers_count": 17,
    "forks_count": 7,
    "open_issues_count": 0,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "HagaiHen",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/76903853?v=4",
      "html_url": "https://github.com/HagaiHen"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 7,
    "subscribers_count": 1,
    "languages": {
      "Python": 16107
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 2,
    "contributors_count": 2
  },
  "readme": "# Facebook MCP Server\n\nThis project is a **MCP server** for automating and managing interactions on a Facebook Page using the Facebook Graph API. It exposes tools to create posts, moderate comments, fetch post insights, and filter negative feedback ‚Äî ready to plug into Claude, or other LLM-based agents.\n\n<a href=\"https://glama.ai/mcp/servers/@HagaiHen/facebook-mcp-server\">\n  <img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/@HagaiHen/facebook-mcp-server/badge\" />\n</a>\n\n---\n\n## ü§ñ What Is This?\n\nThis MCP provides a suite of AI-callable tools that connect directly to a Facebook Page, abstracting common API operations as LLM-friendly functions.\n\n### ‚úÖ Benefits\n\n- Empowers **social media managers** to automate moderation and analytics.\n- Seamlessly integrates with **Claude Desktop or any Agent client**.\n- Enables fine-grained control over Facebook content from natural language.\n\n---\n\n## üì¶ Features\n\n| Tool                             | Description                                                         |\n|----------------------------------|---------------------------------------------------------------------|\n| `post_to_facebook`               | Create a new Facebook post with a message.                          |\n| `reply_to_comment`               | Reply to a specific comment on a post.                              |\n| `get_page_posts`                 | Retrieve recent posts from the Page.                                |\n| `get_post_comments`              | Fetch comments on a given post.                                     |\n| `delete_post`                    | Delete a specific post by ID.                                       |\n| `delete_comment`                 | Delete a specific comment by ID.                                    |\n| `delete_comment_from_post`       | Alias for deleting a comment from a specific post.                  |\n| `filter_negative_comments`       | Filter out comments with negative sentiment keywords.               |\n| `get_number_of_comments`         | Count the number of comments on a post.                             |\n| `get_number_of_likes`            | Count the number of likes on a post.                                |\n| `get_post_impressions`           | Get total impressions on a post.                                    |\n| `get_post_impressions_unique`    | Get number of unique users who saw the post.                        |\n| `get_post_impressions_paid`      | Get number of paid impressions on the post.                         |\n| `get_post_impressions_organic`   | Get number of organic impressions on the post.                      |\n| `get_post_engaged_users`         | Get number of users who engaged with the post.                      |\n| `get_post_clicks`                | Get number of clicks on the post.                                   |\n| `get_post_reactions_like_total`  | Get total number of 'Like' reactions.                               |\n| `get_post_top_commenters`        | Get the top commenters on a post.                                   |\n| `post_image_to_facebook`         | Post an image with a caption to the Facebook page.                  |\n| `send_dm_to_user`                | Send a direct message to a user.                                    |\n| `update_post`                    | Updates an existing post's message.                                 |\n| `schedule_post`                  | Schedule a post for future publication.                     |\n| `get_page_fan_count`             | Retrieve the total number of Page fans.                     |\n| `get_post_share_count`           | Get the number of shares on a post.                         |\n\n---\n\n## üöÄ Setup & Installation\n\n### 1. Clone the Repository\n\n```bash\ngit clone https://github.com/your-org/facebook-mcp-server.git\ncd facebook-mcp-server\n```\n\n### 2. üõ†Ô∏è Installation\n\nInstall dependencies using uv, a fast Python package manager:\nIf uv is not already installed, run:\n```bash\ncurl -Ls https://astral.sh/uv/install.sh | bash\n```\n\nOnce uv is installed, install the project dependencies:\n```bash\nuv pip install -r requirements.txt\n```\n\n### 3. Set Up Environment\n\nCreate a .env file in the root directory and add your Facebook Page credentials. \nYou can obtain these from  https://developers.facebook.com/tools/explorer\n\n```bash\nFACEBOOK_ACCESS_TOKEN=your_facebook_page_access_token\nFACEBOOK_PAGE_ID=your_page_id\n```\n\n## üß© Using with Claude Desktop\nTo set up the FacebookMCP in Clade:\n\n1.\tOpen Clade.\n2.\tGo to Settings ‚Üí Developer ‚Üí Edit Config.\n3.\tIn the config file that opens, add the following entry:\n\n```bash\n\"FacebookMCP\": {\n  \"command\": \"uv\",\n  \"args\": [\n    \"run\",\n    \"--with\",\n    \"mcp[cli]\",\n    \"--with\",\n    \"requests\",\n    \"mcp\",\n    \"run\",\n    \"/path/to/facebook-mcp-server/server.py\"\n  ]\n}\n```\n\n---\n\n## ‚úÖ You‚Äôre Ready to Go!\n\nThat‚Äôs it ‚Äî your Facebook MCP server is now fully configured and ready to power Claude Desktop. You can now post, moderate, and measure engagement all through natural language prompts!\n\n---\n\n## ü§ù Contributing\n\nContributions, issues, and feature requests are welcome!  \nFeel free to fork the repo and submit a pull request.\n\n- Create a branch: `git checkout -b feature/YourFeature`\n- Commit your changes: `git commit -m 'feat: add new feature'`\n- Push to the branch: `git push origin feature/YourFeature`\n- Open a pull request üéâ\n"
}