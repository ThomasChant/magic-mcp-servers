{
  "mcp_name": "KS-GEN-AI/jira-mcp-server",
  "mcp_description": "üìá ‚òÅÔ∏è üçé ü™ü - Read jira data via JQL and api and execute requests to create and edit tickets.",
  "mcp_id": "KS-GEN-AI_jira-mcp-server",
  "fetch_timestamp": "2025-06-23T05:54:03.133641Z",
  "github_url": "https://github.com/KS-GEN-AI/jira-mcp-server",
  "repository": {
    "name": "jira-mcp-server",
    "full_name": "KS-GEN-AI/jira-mcp-server",
    "description": "A test of jira mcp server",
    "html_url": "https://github.com/KS-GEN-AI/jira-mcp-server",
    "created_at": "2024-12-12T08:51:16Z",
    "updated_at": "2025-05-21T21:36:04Z",
    "pushed_at": "2025-05-05T20:35:49Z",
    "size": 33,
    "stargazers_count": 22,
    "watchers_count": 22,
    "forks_count": 5,
    "open_issues_count": 1,
    "language": "JavaScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "KS-GEN-AI",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/188491431?v=4",
      "html_url": "https://github.com/KS-GEN-AI"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 5,
    "subscribers_count": 0,
    "languages": {
      "JavaScript": 28810
    },
    "language_percentages": {
      "JavaScript": 100
    },
    "pull_requests_count": 1,
    "contributors_count": 3,
    "package_json_version": "0.2.0"
  },
  "readme": "# Jira communication server MCP Server\n\nTalk to Jira\n\n<a href=\"https://glama.ai/mcp/servers/v7nmyscj80\">\n  <img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/v7nmyscj80/badge\" alt=\"Jira Server MCP server\" />\n</a>\n\nThis is a TypeScript-based MCP server that provides tools to interact with Jira. It demonstrates core MCP concepts by providing:\n\n- Tools for executing JQL queries\n- Tools for creating, editing, and deleting Jira tickets\n- Tools for listing Jira projects and statuses\n\n## Features\n\n## Jira Tools\n\n### `execute_jql`\n- **Purpose**: Run a JQL query.\n- **Parameters**: `jql`, `number_of_results` (default: 1).\n\n### `get_only_ticket_name_and_description`\n- **Purpose**: Fetch ticket name and description.\n- **Parameters**: `jql`, `number_of_results` (default: 1).\n\n### `create_ticket`\n- **Purpose**: Create a Jira ticket.\n- **Parameters**: `project.key`, `summary`, `description`, `issuetype.name`, `parent` (optional).\n\n### `list_projects`\n- **Purpose**: List Jira projects.\n- **Parameters**: `number_of_results` (default: 1).\n\n### `delete_ticket`\n- **Purpose**: Delete a ticket.\n- **Parameters**: `issueIdOrKey`.\n\n### `edit_ticket`\n- **Purpose**: Modify a ticket.\n- **Parameters**: `issueIdOrKey`, `summary` (optional), `description` (optional), `labels` (optional), `parent` (optional).\n\n### `get_all_statuses`\n- **Purpose**: Retrieve all statuses.\n- **Parameters**: `number_of_results` (default: 1).\n\n### `assign_ticket`\n- **Purpose**: Assign a ticket to a user.\n- **Parameters**: `accountId`, `issueIdOrKey`.\n\n### `query_assignable`\n- **Purpose**: Find assignable users in a project.\n- **Parameters**: `project_key`.\n\n### `add_attachment`\n- **Purpose**: Add an attachment to a ticket.\n- **Parameters**: `issueIdOrKey`, `imageUrl`.\n\n## Development\n\nInstall dependencies:\n```bash\nnpm install\n```\n\nBuild the server:\n```bash\nnpm run build\n```\n\nFor development with auto-rebuild:\n```bash\nnpm run watch\n```\n\n## Installation\n\nTo use with Claude Desktop, add the server config:\n\nOn MacOS: `~/Library/Application Support/Claude/claude_desktop_config.json`\nOn Windows: `%APPDATA%/Claude/claude_desktop_config.json`\n\n```json\n{\n  \"mcpServers\": {\n    \"Jira communication server\": {\n      \"command\": \"node\",\n      \"args\": [\n        \"/PATH_TO_THE_PROJECT/build/index.js\"\n      ],\n      \"env\": {\n        \"JIRA_URL\": \"https://XXXXXXXX.atlassian.net\",\n        \"JIRA_API_MAIL\": \"Your email\",\n        \"JIRA_API_KEY\": \"KEY_FROM : https://id.atlassian.com/manage-profile/security/api-tokens\"\n      }\n    }\n  }\n}\n```\n\n### Debugging\n\nSince MCP servers communicate over stdio, debugging can be challenging. We recommend using the [MCP Inspector](https://github.com/modelcontextprotocol/inspector), which is available as a package script:\n\n```bash\nnpm run inspector\n```\n\nThe Inspector will provide a URL to access debugging tools in your browser."
}