{
  "mcp_name": "RAD Security",
  "mcp_description": "üìá ‚òÅÔ∏è - MCP server for RAD Security, providing AI-powered security insights for Kubernetes and cloud environments. This server provides tools for querying the Rad Security API and retrieving security findings, reports, runtime data and many more.",
  "mcp_id": "rad-security_mcp-server",
  "fetch_timestamp": "2025-06-23T07:47:41.398383Z",
  "github_url": "https://github.com/rad-security/mcp-server",
  "repository": {
    "name": "mcp-server",
    "full_name": "rad-security/mcp-server",
    "description": "Rad Security MCP Server",
    "html_url": "https://github.com/rad-security/mcp-server",
    "created_at": "2025-03-07T15:26:55Z",
    "updated_at": "2025-06-18T10:57:49Z",
    "pushed_at": "2025-05-23T12:29:14Z",
    "size": 210,
    "stargazers_count": 3,
    "watchers_count": 3,
    "forks_count": 2,
    "open_issues_count": 0,
    "language": "TypeScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "rad-security",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/155687460?v=4",
      "html_url": "https://github.com/rad-security"
    },
    "has_issues": true,
    "has_projects": false,
    "has_downloads": false,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 2,
    "subscribers_count": 5,
    "languages": {
      "TypeScript": 62973,
      "JavaScript": 31502,
      "Dockerfile": 832,
      "Shell": 166
    },
    "language_percentages": {
      "TypeScript": 65.96,
      "JavaScript": 33,
      "Dockerfile": 0.87,
      "Shell": 0.17
    },
    "pull_requests_count": 11,
    "contributors_count": 2,
    "latest_release": {
      "tag_name": "v0.0.10",
      "name": "v0.0.10",
      "published_at": "2025-05-23T12:29:48Z",
      "body": "",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v0.0.10",
        "commit_sha": "a986d060f6c47bd3b25498c76ebcf7e240d6c22b"
      },
      {
        "name": "v0.0.9",
        "commit_sha": "c6a5fc2d747b07b29b5b56a4205d6ce705f59346"
      },
      {
        "name": "v0.0.8",
        "commit_sha": "22a31ac4106583a32c61bf86da93e64b6d4bfd58"
      },
      {
        "name": "v0.0.7",
        "commit_sha": "a8649b1660574d7f0d02c45a7572024fe4e34c79"
      },
      {
        "name": "v0.0.6",
        "commit_sha": "3017cdaf321b9f445cecf3d2f188b55199dffc6e"
      },
      {
        "name": "v0.0.5",
        "commit_sha": "3e25af09b15e225e63b7a449db8e58543af42ee1"
      },
      {
        "name": "v0.0.4",
        "commit_sha": "04e064338f0755177ccf5a61bafbd97433bc1c03"
      },
      {
        "name": "v0.0.3",
        "commit_sha": "42a9bde1a572bbf40765d7c84a486c316351f4f5"
      },
      {
        "name": "v0.0.2",
        "commit_sha": "6b56ac9933aa67f8c2d1896c0fced440f69a48e8"
      },
      {
        "name": "v0.0.1",
        "commit_sha": "de2d96bcbb1893a84e840e904f2410ea09f193d8"
      }
    ],
    "latest_version": "v0.0.10",
    "package_json_version": "0.0.0"
  },
  "readme": "# RAD Security MCP Server\n\nA Model Context Protocol (MCP) server for RAD Security, providing AI-powered security insights for Kubernetes and cloud environments.\n\n## Installation\n\n```bash\nnpm install @rad-security/mcp-server\n```\n\n## Usage\n\n### Prerequisites\n\n- Node.js 20.x or higher\n\n### Environment Variables\n\nThe following environment are required required to use the MCP server with Rad Security:\n\n```bash\nRAD_SECURITY_ACCESS_KEY_ID=\"your_access_key\"\nRAD_SECURITY_SECRET_KEY=\"your_secret_key\"\nRAD_SECURITY_ACCOUNT_ID=\"your_account_id\"\n```\n\nbut you can also use few operations without authentication:\n\n- List CVEs\n- Get details of a specific CVE\n- Get latest 30 CVEs\n- List Kubernetes resource misconfiguration policies\n\n### In cursor IDE\n\nIt's quite problematic to set ENV variables in cursor IDE.\n\nSo, you can use the following start.sh script to start the server.\n\n```bash\n./start.sh\n```\n\nPlease set the ENV variables in the start.sh script first!\n\n### In Claude Desktop\n\nYou can use the following config to start the server in Claude Desktop.\n\n```json\n{\n  \"mcpServers\": {\n    \"rad-security\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"@rad-security/mcp-server\"],\n      \"env\": {\n        \"RAD_SECURITY_ACCESS_KEY_ID\": \"<your-access-key-id>\",\n        \"RAD_SECURITY_SECRET_KEY\": \"<your-secret-key>\",\n        \"RAD_SECURITY_ACCOUNT_ID\": \"<your-account-id>\"\n      }\n    }\n  }\n```\n\n### As a Docker Container - with Streamable HTTP\n\n```bash\ndocker build -t rad-security/mcp-server .\ndocker run \\\n  -e TRANSPORT_TYPE=streamable \\\n  -e RAD_SECURITY_ACCESS_KEY_ID=your_access_key \\\n  -e RAD_SECURITY_SECRET_KEY=your_secret_key \\\n  -e RAD_SECURITY_ACCOUNT_ID=your_account_id \\\n  -p 3000:3000 \\\n  rad-security/mcp-server\n```\n\n### As a Docker Container - with SSE (deprecated)\n\n*Note:* The SSE transport is now deprecated in favor of Streamable HTTP. It's still supported for backward compatibility, but it's recommended to use Streamable HTTP instead.\n\n```bash\ndocker build -t rad-security/mcp-server .\ndocker run \\\n  -e TRANSPORT_TYPE=sse \\\n  -e RAD_SECURITY_ACCESS_KEY_ID=your_access_key \\\n  -e RAD_SECURITY_SECRET_KEY=your_secret_key \\\n  -e RAD_SECURITY_ACCOUNT_ID=your_account_id \\\n  -p 3000:3000 \\\n  rad-security/mcp-server\n```\n\n## Features\n\n- Account Inventory\n  - List clusters and their details*\n\n- Containers Inventory\n  - List containers and their details*\n\n- Security Findings\n  - List and analyze security findings*\n\n- Runtime Security\n  - Get process trees of running containers*\n  - Get runtime baselines of running containers*\n  - Analyze process behavior of running containers*\n\n- Network Security\n  - Monitor HTTP requests*\n  - Track network connections*\n  - Analyze network patterns*\n\n- Identity and Access\n  - List identities*\n  - Get identity details*\n\n- Audit\n  - List who shelled into a pod*\n\n- Cloud Security\n  - List and monitor cloud resources*\n  - Get resource details and compliance status*\n\n- Images\n  - Get SBOMs*\n  - List images and their vulnerabilities*\n  - Get top vulnerable images*\n\n- Kubernetes Objects\n  - Get details of a specific Kubernetes resource*\n  - List Kubernetes resources*\n  - List Kubernetes resource misconfiguration policies*\n\n- Threat Vector\n  - List threat vectors*\n  - Get details of a specific threat vector*\n\n- CVEs\n  - List CVEs\n  - Get details of a specific CVE\n  - Get latest 30 CVEs\n\n`*` - requires authentication and account in Rad Security.\n\n## Development\n\n```bash\n# Install dependencies\nnpm install\n\n# Run type checking\nnpm run type-check\n\n# Run linter\nnpm run lint\n\n# Build\nnpm run build\n```\n\n## License\n\nMIT License - see the [LICENSE](LICENSE) file for details\n"
}