{
  "mcp_name": "Mastra/mcp",
  "mcp_description": "Client implementation for Mastra, providing seamless integration with MCP-compatible AI models and tools.",
  "mcp_id": "mastra-ai_mastra",
  "fetch_timestamp": "2025-06-23T06:27:38.595193Z",
  "github_url": "https://github.com/mastra-ai/mastra/tree/main/packages/mcp",
  "repository": {
    "name": "mastra",
    "full_name": "mastra-ai/mastra",
    "description": "The TypeScript AI agent framework. âš¡ Assistants, RAG, observability. Supports any LLM: GPT-4, Claude, Gemini, Llama.",
    "html_url": "https://github.com/mastra-ai/mastra",
    "created_at": "2024-08-06T20:44:31Z",
    "updated_at": "2025-06-23T05:11:59Z",
    "pushed_at": "2025-06-23T06:19:39Z",
    "size": 206697,
    "stargazers_count": 14435,
    "watchers_count": 14435,
    "forks_count": 871,
    "open_issues_count": 237,
    "language": "TypeScript",
    "license": "Other",
    "topics": [
      "agents",
      "ai",
      "chatbots",
      "evals",
      "javascript",
      "llm",
      "mcp",
      "nextjs",
      "nodejs",
      "reactjs",
      "tts",
      "typescript",
      "workflows"
    ],
    "default_branch": "main",
    "owner": {
      "login": "mastra-ai",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/149120496?v=4",
      "html_url": "https://github.com/mastra-ai"
    },
    "has_issues": true,
    "has_projects": false,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 871,
    "subscribers_count": 56,
    "languages": {
      "TypeScript": 18379812,
      "JavaScript": 112925,
      "CSS": 5013,
      "AppleScript": 2690,
      "HTML": 1382
    },
    "language_percentages": {
      "TypeScript": 99.34,
      "JavaScript": 0.61,
      "CSS": 0.03,
      "AppleScript": 0.01,
      "HTML": 0.01
    },
    "pull_requests_count": 4089,
    "contributors_count": 154,
    "latest_release": {
      "tag_name": "@mastra/core@0.10.4",
      "name": "2025-06-10",
      "published_at": "2025-06-11T08:22:05Z",
      "body": "# 2025-06-10 - Mastra Release\r\n\r\n## Agents\r\n- Improve agent structured output processing in core to use the @mastra/schema-compat utility, enabling support for any schema type (not just zod objects) in streamObject and generateObject. [#4829](https://github.com/mastra-ai/mastra/pull/4829) [IMPORTANT]\r\n\r\n## CLI / Playground\r\n- Improve Playground layout by simplifying container height management, improving sidebar width responsiveness, enhancing chat title readability, equalizing chat/info column widths, and refining the chat container's scrolling behavior for a cleaner and more user-friendly UI. [#4524](https://github.com/mastra-ai/mastra/pull/4524)\r\n The dev server retry logic only triggers when the server is actually running and resets the retry count on code changes. [#4694](https://github.com/mastra-ai/mastra/pull/4694)\r\n- Dynamic port selection to the development server, allowing it to automatically use the next available port if the default is already in use and not explicitly set. [#4672](https://github.com/mastra-ai/mastra/pull/4672)\r\n- Fix issue with the development command. [#4756](https://github.com/mastra-ai/mastra/pull/4756)\r\n- Modify placeholder text on runtime context to only be applied within the instructions playground, addressing issue #4500. [#4846](https://github.com/mastra-ai/mastra/pull/4846)\r\n- Introduce --env flag for the 'mastra dev' and 'mastra build' commands. [#4841](https://github.com/mastra-ai/mastra/pull/4841)\r\n- Fix workflow user experience by displaying the final output in the dynamic form's aside bar. [#4665](https://github.com/mastra-ai/mastra/pull/4665)\r\n- Reusable MainContentLayout and MainContentContent components to structure main content with multiple layout variants and includes a temporary dev tool for visual debugging. [#4670](https://github.com/mastra-ai/mastra/pull/4670)\r\n\r\n## Client SDK - JS\r\n- SDK to infer object types from output and experimental_output, aligning its behavior with the overloading approach used in mastra/core Agent. [#4233](https://github.com/mastra-ai/mastra/pull/4233)\r\n\r\n## Core Platform\r\n- Fix up the MastraError class by removing an accidental log, allowing the domain to be passed as a string, and enabling exception tracking for runtime monitoring in Cloud environments. [#4755](https://github.com/mastra-ai/mastra/pull/4755)\r\n- Improve thread title generation process to avoid sending full file or image URLs, reducing token usage now that UIMessages are stored. [#4828](https://github.com/mastra-ai/mastra/pull/4828)\r\n- A bug related to the generation of dynamic ports. [#4842](https://github.com/mastra-ai/mastra/pull/4842)\r\n- Paginated functions to the MastraStorage class to support handling paginated data. [#4864](https://github.com/mastra-ai/mastra/pull/4864)\r\n- The handling of 'runtimeContext' from the request body to the middleware layer. [#4847](https://github.com/mastra-ai/mastra/pull/4847)\r\n- Fix @mastra/core dependency from instrumentation.js by installing it locally in the build directory, addressing issue #4503. [#4844](https://github.com/mastra-ai/mastra/pull/4844)\r\n\r\n## MCP\r\n- Support for MCP prompts to both MCPServer and MCPClient. [#4566](https://github.com/mastra-ai/mastra/pull/4566)\r\n- Drop use of `@latest` from the docs server and scaffolding to resolve npx caching issues that were causing server startup failures. [#4825](https://github.com/mastra-ai/mastra/pull/4825)\r\n- The MCP server URL to include versioning ('v1') and improves documentation with additional details and a callout to the Mastra adapter in the Ampersand AI SDK. [#4794](https://github.com/mastra-ai/mastra/pull/4794)\r\n- Fix mastra MCP tool to allow direct use of npx for cursor and windsurf commands on Windows, removing the need for the previous 'cmd /c' workaround. [#4758](https://github.com/mastra-ai/mastra/pull/4758)\r\n\r\n## Memory\r\n- Fix inaccurate token limiter estimations in @mastra/memory, resolving a failing test caused by recent MessageList changes. [#4762](https://github.com/mastra-ai/mastra/pull/4762)\r\n- A configuration option to the @mastra/memory module enabling semantic recall to retrieve memories across threads for the same resource. [#4845](https://github.com/mastra-ai/mastra/pull/4845) [IMPORTANT]\r\n\r\n## Observability\r\n- Basic filtering capabilities to logs and updates related tests. [#4706](https://github.com/mastra-ai/mastra/pull/4706)\r\n- Pagination support for logs in the system. [#4768](https://github.com/mastra-ai/mastra/pull/4768)\r\n- Telemetry (PostHog) from starting on Brave browsers by detecting the presence of the navigator.brave object. [#4839](https://github.com/mastra-ai/mastra/pull/4839)\r\n\r\n## Storage\r\n- Pagination support to several storage APIs and introduces a new paginated getEvals method while beginning deprecation of getEvalsByAgentName. [#4652](https://github.com/mastra-ai/mastra/pull/4652) [TIER2]\r\n- Pagination support to several storage API methods and introduces a new paginated 'getEvals' method while beginning to deprecate 'getEvalsByAgentName'. [#4631](https://github.com/mastra-ai/mastra/pull/4631) [TIER2]\r\n- Add code to use the new paginated API for PostgreSQL-related functionality. [#4791](https://github.com/mastra-ai/mastra/pull/4791)\r\n- The @mastra/mongodb package by adding a missing format to MongoDB that was accidentally omitted when MessageList was introduced. [#4827](https://github.com/mastra-ai/mastra/pull/4827)\r\n- LanceDB by implementing MastraVector and MastraStorage interfaces, adds comprehensive unit tests, updates documentation, and includes a changeset. [#3324](https://github.com/mastra-ai/mastra/pull/3324) [TIER3]\r\n- An alterTable function to storage adapters for easier schema changes, updates storage adapter tests for consistency, and ensures messages are deleted when threads are removed. [#4769](https://github.com/mastra-ai/mastra/pull/4769) [TIER2]\r\n- Upstash to use new paginated APIs while preserving and deprecating the old non-paginated APIs. [#4861](https://github.com/mastra-ai/mastra/pull/4861)\r\n- An issue with workflow snapshot persistence in DynamoDB by replacing create() with upsert() to allow updates, and adds a test to verify updating existing snapshots. [#4790](https://github.com/mastra-ai/mastra/pull/4790)\r\n- The message deduplication logic for libsql and PostgreSQL when using selectBy. [#4866](https://github.com/mastra-ai/mastra/pull/4866)\r\n\r\n## Tools\r\n- An issue by displaying tool import errors when the server starts. [#4673](https://github.com/mastra-ai/mastra/pull/4673)\r\n- Relocates tool compatibility logic into a new @mastra/schema-compat package, generalizes terminology, exposes a schema compatibility function, updates tool schema conversion to use the new package, and adds tests. [#4557](https://github.com/mastra-ai/mastra/pull/4557) [IMPORTANT]\r\n\r\n## Workflows\r\n- Fix a UI crash in the new workflow experience by safely handling primitive outputs and displaying them in a text field. [#4667](https://github.com/mastra-ai/mastra/pull/4667)\r\n\r\n",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v0.1.10",
        "commit_sha": "7ed56d5991317934f8a6d85e75148013beeafa03"
      },
      {
        "name": "v0.1.8",
        "commit_sha": "40fe62b57c6c658301f347e4cf0baf25b419a95e"
      },
      {
        "name": "v0.1.7",
        "commit_sha": "45c33da82ca63ab13b18054ad16d334af16a1926"
      },
      {
        "name": "v0.1.6",
        "commit_sha": "2fedbf4b112fd12334f364b7f464a68515408b73"
      },
      {
        "name": "v0.1.5",
        "commit_sha": "f8dc0c7ef9393fbfa25295a492e642bc29ed613a"
      },
      {
        "name": "v0.1.4",
        "commit_sha": "8a2d1e44e041947ba83424e9b04ebf79487a37d5"
      },
      {
        "name": "v0.1.3",
        "commit_sha": "f4ba9d52513228da360847683ed113de5ea36615"
      },
      {
        "name": "v0.1.2",
        "commit_sha": "df07a01bd302caf551be05e0929840a59324e032"
      },
      {
        "name": "v0.1.1",
        "commit_sha": "0cc6993a5c94dc9cf6c478ab66c1e6e7f23172b4"
      },
      {
        "name": "v0.1.0",
        "commit_sha": "51d6d9d739c40e65a310849af21836c0f8388c9a"
      }
    ],
    "latest_version": "v0.1.10",
    "package_json_version": "0.1.11"
  },
  "readme": "# Mastra\n\n[![npm version](https://badge.fury.io/js/@mastra%2Fcore.svg)](https://www.npmjs.com/package/@mastra/core)\n[![CodeQl](https://github.com/mastra-ai/mastra/actions/workflows/github-code-scanning/codeql/badge.svg)](https://github.com/mastra-ai/mastra/actions/workflows/github-code-scanning/codeql)\n[![GitHub Repo stars](https://img.shields.io/github/stars/mastra-ai/mastra)](https://github.com/mastra-ai/mastra/stargazers)\n[![Discord](https://img.shields.io/discord/1309558646228779139?logo=discord&label=Discord&labelColor=white&color=7289DA)](https://discord.gg/BTYqqHKUrf)\n[![Twitter Follow](https://img.shields.io/twitter/follow/mastra_ai?style=social)](https://x.com/mastra_ai)\n[![NPM Downloads](https://img.shields.io/npm/dm/%40mastra%252Fcore)](https://www.npmjs.com/package/@mastra/core)\n[![Static Badge](https://img.shields.io/badge/Y%20Combinator-W25-orange)](https://www.ycombinator.com/companies?batch=W25)\n\nMastra is an opinionated TypeScript framework that helps you build AI applications and features quickly. It gives you the set of primitives you need: workflows, agents, RAG, integrations and evals. You can run Mastra on your local machine, or deploy to a serverless cloud.\n\nThe main Mastra features are:\n\n| Features                                               | Description                                                                                                                                                                                                                                                                                            |\n| ------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| LLM Models                                             | Mastra uses the [Vercel AI SDK](https://sdk.vercel.ai/docs/introduction) for model routing, providing a unified interface to interact with any LLM provider including OpenAI, Anthropic, and Google Gemini. You can choose the specific model and provider, and decide whether to stream the response. |\n| [Agents](https://mastra.ai/docs/agents/overview)       | Agents are systems where the language model chooses a sequence of actions. In Mastra, agents provide LLM models with tools, workflows, and synced data. Agents can call your own functions or APIs of third-party integrations and access knowledge bases you build.                                   |\n| [Tools](https://mastra.ai/docs/agents/adding-tools)    | Tools are typed functions that can be executed by agents or workflows, with built-in integration access and parameter validation. Each tool has a schema that defines its inputs, an executor function that implements its logic, and access to configured integrations.                               |\n| [Workflows](https://mastra.ai/docs/workflows/overview) | Workflows are durable graph-based state machines. They have loops, branching, wait for human input, embed other workflows, do error handling, retries, parsing and so on. They can be built in code or with a visual editor. Each step in a workflow has built-in OpenTelemetry tracing.               |\n| [RAG](https://mastra.ai/docs/rag/overview)             | Retrieval-augemented generation (RAG) lets you construct a knowledge base for agents. RAG is an ETL pipeline with specific querying techniques, including chunking, embedding, and vector search.                                                                                                      |\n| [Integrations](https://mastra.ai/docs/integrations)    | In Mastra, integrations are auto-generated, type-safe API clients for third-party services that can be used as tools for agents or steps in workflows.                                                                                                                                                 |\n| [Evals](https://mastra.ai/docs/08-running-evals)       | Evals are automated tests that evaluate LLM outputs using model-graded, rule-based, and statistical methods. Each eval returns a normalized score between 0-1 that can be logged and compared. Evals can be customized with your own prompts and scoring functions.                                    |\n\n## Quick Start\n\n### Prerequisites\n\n- Node.js (v20.0+)\n\n## Get an LLM provider API key\n\nIf you don't have an API key for an LLM provider, you can get one from the following services:\n\n- [OpenAI](https://platform.openai.com/)\n- [Anthropic](https://console.anthropic.com/settings/keys)\n- [Google Gemini](https://ai.google.dev/gemini-api/docs)\n- [Groq](https://console.groq.com/docs/overview)\n- [Cerebras](https://inference-docs.cerebras.ai/introduction)\n\nIf you don't have an account with these providers, you can sign up and get an API key. Anthropic require a credit card to get an API key. Some OpenAI models and Gemini do not and have a generous free tier for its API.\n\n## Create a new project\n\nThe easiest way to get started with Mastra is by using `create-mastra`. This CLI tool enables you to quickly start building a new Mastra application, with everything set up for you.\n\n```bash\nnpx create-mastra@latest\n```\n\n### Run the script\n\nFinally, run `mastra dev` to open the Mastra playground.\n\n```bash copy\nnpm run dev\n```\n\nIf you're using Anthropic, set the `ANTHROPIC_API_KEY`. If you're using Gemini, set the `GOOGLE_GENERATIVE_AI_API_KEY`.\n\n# MCP Server ([@mastra/mcp-docs-server](https://www.npmjs.com/package/@mastra/mcp-docs-server))\n\nUse our MCP server [@mastra/mcp-docs-server](https://www.npmjs.com/package/@mastra/mcp-docs-server) to teach your LLM how to use Mastra.\n\nThis is a Model Context Protocol (MCP) server that provides AI assistants with direct access to Mastra.ai's complete knowledge base.\n\n## In Cursor\n\nCreate or update .cursor/mcp.json in your project root:\n\n### MacOS/Linux\n\n```\n{\n  \"mcpServers\": {\n    \"mastra\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"@mastra/mcp-docs-server\"]\n    }\n  }\n}\n```\n\n### Windows\n\n```\n{\n  \"mcpServers\": {\n    \"mastra\": {\n      \"command\": \"cmd\",\n      \"args\": [\"/c\", \"npx\", \"-y\", \"@mastra/mcp-docs-server\"]\n    }\n  }\n}\n```\n\nThis will make all Mastra documentation tools available in your Cursor workspace. Note that the MCP server wont be enabled by default. You'll need to go to Cursor settings -> MCP settings and click \"enable\" on the Mastra MCP server.\n\n## In Windsurf\n\nCreate or update ~/.codeium/windsurf/mcp_config.json:\n\n### MacOS/Linux\n\n```\n{\n  \"mcpServers\": {\n    \"mastra\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"@mastra/mcp-docs-server\"]\n    }\n  }\n}\n```\n\nFor more installation options visit [https://www.npmjs.com/package/@mastra/mcp-docs-server](https://www.npmjs.com/package/@mastra/mcp-docs-server)\n\n## Contributing\n\nLooking to contribute? All types of help are appreciated, from coding to testing and feature specification.\n\nIf you are a developer and would like to contribute with code, please open an issue to discuss before opening a Pull Request.\n\nInformation about the project setup can be found in the [development documentation](./DEVELOPMENT.md)\n\n## Support\n\nWe have an [open community Discord](https://discord.gg/BTYqqHKUrf). Come and say hello and let us know if you have any questions or need any help getting things running.\n\nIt's also super helpful if you leave the project a star here at the [top of the page](https://github.com/mastra-ai/mastra)\n"
}