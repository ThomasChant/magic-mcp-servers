{
  "mcp_name": "Tomatio13/software-checker-mcp",
  "mcp_description": "Facilitates comprehensive quality checks and release note generation for Git repositories, while also providing security risk analysis.",
  "mcp_id": "Tomatio13_software-checker-mcp",
  "fetch_timestamp": "2025-06-23T09:00:08.231599Z",
  "github_url": "https://github.com/Tomatio13/software-checker-mcp",
  "repository": {
    "name": "software-checker-mcp",
    "full_name": "Tomatio13/software-checker-mcp",
    "description": null,
    "html_url": "https://github.com/Tomatio13/software-checker-mcp",
    "created_at": "2025-04-07T20:53:48Z",
    "updated_at": "2025-04-11T14:42:59Z",
    "pushed_at": "2025-04-11T14:42:56Z",
    "size": 1213,
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "Python",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "Tomatio13",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/68492663?v=4",
      "html_url": "https://github.com/Tomatio13"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "Python": 8906
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "latest_release": {
      "tag_name": "v0.0.1",
      "name": "🚀 リリース v0.0.1",
      "published_at": "2025-04-09T12:32:18Z",
      "body": "# 🚀 リリースノート: v0.0.1\r\n\r\n## 📅 2025-04-09\r\n\r\n## ✨ 新機能\r\n- 🎕 ソフトウェアセキュリティチェック機能の追加\r\n  - セキュリティチェックの分析結果セクションを新設\r\n  - 主な調査結果、セキュリティ観点での強み、改善可能な点を含む詳細な要約を追加\r\n  - 使用可否の判断基準を明確化\r\n\r\n- 🎕 Gitタグ関連機能の強化\r\n  - `get_latest_tags`関数にタイムアウト機能を追加\r\n  - `validate_git_tag`関数を新規作成し、タグ形式の検証を実装\r\n  - リリースノート生成時の無効なタグ形式に対するエラーハンドリングを追加\r\n\r\n## 📚 ドキュメント\r\n- 📝 README.mdの大幅な改善\r\n  - タイトルを日本語から英語に変更\r\n  - リポジトリ品質確認とリリースノート生成の詳細な機能説明を追加\r\n  - セキュリティチェックの詳細説明と出力例を追加\r\n  - プロンプトセクションと謝辞を追加\r\n  - 設定ファイルの記述方法を改善\r\n\r\n## 🔧 設定変更\r\n- 🔧 MCPサーバーのインスタンス名を変更\r\n- 🔧 セキュリティチェック用のサンプルファイルを追加\r\n  - サンプル画像の追加\r\n  - サンプルPDFファイルの追加\r\n\r\n## 📊 統計\r\n- 📦 コミット数: 5\r\n- 👥 貢献者数: 1\r\n- 📄 変更ファイル数: 8\r\n\r\n## 📝 注意点\r\n- このバージョンでは、セキュリティチェック機能が新たに追加され、より詳細な分析が可能になりました\r\n- Gitタグ処理の信頼性が向上し、エラーハンドリングが強化されました\r\n- ドキュメントが大幅に改善され、機能の使用方法がより分かりやすくなりました ",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v0.0.1",
        "commit_sha": "e0a21a632a085c6362d968559f72538a7901f675"
      }
    ],
    "latest_version": "v0.0.1"
  },
  "readme": "<h1 align=\"center\">Software Checker MCP</h1>\n\n<p align=\"center\">\n   \t<a href=\"README_JP.md\"><img src=\"https://img.shields.io/badge/ドキュメント-日本語-white.svg\" alt=\"JA doc\"/></a>\n\t<a href=\"README.md\"><img src=\"https://img.shields.io/badge/english-document-white.svg\" alt=\"EN doc\"></a>\n</p>\n\n<p align=\"center\">\n    <img src=\"https://img.shields.io/badge/Python-3.12+-blue.svg\" alt=\"Python 3.12+\"/>\n    <img src=\"https://img.shields.io/badge/fastmcp-0.1.0+-green.svg\" alt=\"fastmcp 0.1.0+\"/>\n</p>\n\nこのMCPサーバーは、Gitリポジトリの品質確認とリリースノート生成を支援するツールです。\n\n## 📋 機能\n\n1. **🔍 リポジトリ品質確認**: リポジトリの構造、ドキュメント、コード品質などを包括的にチェックし、改善点を提案します。\n2. **📝 リリースノート生成**: 指定したGitタグ間の変更を分析し、構造化されたリリースノートを自動生成します。\n3. **🔒 ソフトウェアセキュリティチェック**: ソースコードをセキュリティリスクの観点から包括的に分析し、脆弱性や改善点を特定します。\n\n## 💡 詳細機能説明\n\n### 🔍 リポジトリ品質確認\nrepository_quality_check 関数はリポジトリの品質を総合的に評価するプロンプトを生成します。\n主な確認ポイント：\n\n- README.mdの品質（構造、説明の明確さ、視覚的要素）\n- ドキュメンテーション全体の一貫性\n- コード品質と構造\n- 環境設定とセキュリティ\n\n### 📝 リリースノート生成\ngenerate_release_notes 関数は、指定したGitタグ間の変更を分析し、構造化されたリリースノートを生成するプロンプトを提供します。\n主な機能：\n- コミット履歴の自動分析\n- 変更内容のカテゴリ分類（新機能、バグ修正など）\n- 統計情報の収集と表示\n\n### 🔒 ソフトウェアセキュリティチェック\nsoftware_security_check 関数はソースコードのセキュリティリスクを分析するプロンプトを生成します。\n主な確認ポイント：\n\n- コマンド実行とユーザー入力処理の安全性\n- 認証情報・トークン管理\n- ファイルシステムアクセスの制限\n- 通信とデータ送信の安全性\n- 不審なコードパターンの検出\n\n## 📖 プロンプト\n\nMakiさん[Sunwood-ai-lbas](https://github.com/Sunwood-ai-labs/MysticLibrary/tree/main/prompts/coding)が公開されている\n以下のプロンプトを含んでいます。\n- リポジトリ品質確認プロンプト V3\n- Gitリリースノート作成プロンプト V1\n\nソフトウェアセキュリティチェックのプロンプトは、\nみうPさんが公開されている[MCPサーバーを利用する前に理解しておくべきセキュリティリスク](https://zenn.dev/sun_asterisk/articles/mcp_security_risk)を基に、claude-3.7-sonnetに作成して貰いました。\n> ☢️注意：ウィルスチェックソフトではありません。悪意のあるコードの完全なチェックをできるわけではありません。最後は導入可否を自己判断してください。\n\n\n## 📁ディレクトリ構成\n\n```\nsoftware-checker-mcp/\n├── pyproject.toml        # プロジェクト設定ファイル\n├── README.md             # このファイル\n├── start.sh              # 起動スクリプト\n└── src/\n    └── software_checker_mcp/\n        ├── __init__.py                           # パッケージ初期化ファイル\n        ├── main.py                               # MCPサーバーのメイン実装\n        ├── repo-review-prompt-v3.md              # リポジトリ品質確認用プロンプト\n        ├── software-security-check.md            # ソフトウェアセキュリティチェック用プロンプト\n        └── git-release-notes-generator-prompt_v1.md  # リリースノート生成用プロンプト\n```\n\n## 💉インストール方法\n\n### 前提条件\n\n- Python 3.12以上\n- uv（`pip install uv`でインストール可能）\n\n### インストール手順\n\n#### 方法1: uvを使用した環境構築（推奨）\n\nuvを使用して環境をセットアップします：\n\n```bash\n# uvをインストール\npip install uv\n\n# リポジトリをクローンまたはダウンロード\ngit clone https://github.com/Tomatio13/software-checker-mcp.git\ncd software-checker-mcp\n\n# 仮想環境を作成し、依存関係をインストール\nuv venv\nuv pip install -e .\n```\n\n## 🔧使用方法\n\n### サーバーの起動\n\nuvを使用して直接実行するには：\n\n```bash\n# uvコマンドでPythonモジュールを実行\nuv run python -m src.software_checker_mcp.main\n```\n\n### Cursorとの連携\n\n#### mcp.jsonの記述方法\n\n以下のように直接uvコマンドを実行してください。\n\n```json\n{\n  \"mcpServers\": {\n    \"software-checker\": {\n      \"command\": \"uv\",\n      \"args\": [\n        \"--directory\",\n        \"/path/to/software-checker-mcp\",\n        \"run\",\n        \"python\",\n        \"-m\",\n        \"src.software_checker_mcp.main\"\n      ]\n    }\n  }\n}\n```\n\n\n### 📚利用例\n\n#### 🔍リポジトリ品質確認\n\n```\nMCPを使ってリポジトリの品質を確認して、改善点を提案してください。\n```\n\n##### 出力例\n\nリポジトリ品質確認では、以下のような詳細なチェックリスト結果が得られます：\n\n![リポジトリ品質確認の出力例](assets/quality_check_sample.png)\n\n出力には、README.mdの品質、ドキュメントの一貫性、環境設定とセキュリティ、コード品質、プロジェクト構造に関する詳細な評価と改善提案が含まれます。\n\n\n#### 📝 リリースノート生成\n\n```\nMCPを使ってv1.0.0からv1.1.0までの変更に関するリリースノートを生成してください。\n```\n\nまたは、タグを指定せずに自動的に最新のタグを使用することもできます：\n\n```\nMCPを使って最新のリリースのリリースノートを生成してください。\n```\n\n#### 出力例\nリリースノートでは、以下のようなリリースノートが得られます：\n\n![リリースノートの出力例](assets/release_note_sample.png)\n\n出力には、機能概要、ドキュメント、設定変更、その他の変更、統計などが出力されます。\n\n\n#### 🔒ソフトウェアセキュリティチェック\n\n```\nMCPを使ってソフトウェアのセキュリティを確認して、脆弱性と対策を提案してください。\n```\n\n##### 出力例\n\nソフトウェアセキュリティチェックでは、コードのセキュリティリスクに関する詳細な分析結果が得られます。結果には以下の項目が含まれます：\n\n![セキュリティチェックの出力例](assets/software_check_sample.png)\n\n- コマンド実行とユーザー入力処理の安全性評価\n- 認証情報・トークン管理の評価\n- ファイルシステムアクセスの安全性\n- 通信とデータ送信のセキュリティ\n- 不審なコードパターンの検出結果\n- 総合的なセキュリティ評価と改善提案\n\n\n### 謝辞\n[Sunwood-ai-lbas](https://github.com/Sunwood-ai-labs/MysticLibrary/tree/main/prompts/coding)"
}