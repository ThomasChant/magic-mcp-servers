{
  "mcp_name": "xcodebuild",
  "mcp_description": "üçé Build iOS Xcode workspace/project and feed back errors to llm.",
  "mcp_id": "ShenghaiWang_xcodebuild",
  "fetch_timestamp": "2025-06-23T09:30:09.528089Z",
  "github_url": "https://github.com/ShenghaiWang/xcodebuild",
  "repository": {
    "name": "xcodebuild",
    "full_name": "ShenghaiWang/xcodebuild",
    "description": "MCP tool for building Xcode iOS workspace/project and feeding back error to LLMs.",
    "html_url": "https://github.com/ShenghaiWang/xcodebuild",
    "created_at": "2025-03-02T07:07:58Z",
    "updated_at": "2025-06-22T17:41:58Z",
    "pushed_at": "2025-04-13T05:44:22Z",
    "size": 34,
    "stargazers_count": 67,
    "watchers_count": 67,
    "forks_count": 4,
    "open_issues_count": 0,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "ShenghaiWang",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/11955650?v=4",
      "html_url": "https://github.com/ShenghaiWang"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 4,
    "subscribers_count": 2,
    "languages": {
      "Python": 4651
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 2,
    "contributors_count": 3,
    "tags": [
      {
        "name": "0.2.0",
        "commit_sha": "dc2dc2bd1f4ce8f9f2aeaede4c1d4e71fce81457"
      }
    ],
    "latest_version": "0.2.0"
  },
  "readme": "# xcodebuild MCP Server\n\nA Model Context Protocol server that builds iOS workspace/project that enables seamless workflow working with iOS projects in Visual Studio Code using extensions like Cline or Roo Code.\n\n<a href=\"https://glama.ai/mcp/servers/5ibnbzxmql\">\n  <img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/5ibnbzxmql/badge\" alt=\"mcpxcodebuild MCP server\" />\n</a>\n\n### Available Tools\n\n- `build` - Build iOS Xcode workspace/project\n    - `folder` (string, required): The full path of the current folder that the iOS Xcode workspace/project sits\n- `test` - Run test for iOS Xcode workspace/project\n    - `folder` (string, required): The full path of the current folder that the iOS Xcode workspace/project sits\n\n## Installation\n\n\n### Using uv (recommended)\n\nWhen using [`uv`](https://docs.astral.sh/uv/) no specific installation is needed. We will\nuse [`uvx`](https://docs.astral.sh/uv/guides/tools/) to directly run *mcpxcodebuild*.\n\n### Using PIP\n\nAlternatively you can install `mcpxcodebuild` via pip:\n\n```\npip install mcpxcodebuild\n```\n\nAfter installation, you can run it as a script using:\n\n```\npython -m  mcpxcodebuild\n```\n\n## Configuration\n\n### Configure for Claude.app\n\nAdd to your Claude settings:\n\n<details>\n<summary>Using uvx</summary>\n\n```json\n\"mcpServers\": {\n  \"mcpxcodebuild\": {\n    \"command\": \"uvx\",\n    \"args\": [\"mcpxcodebuild\"]\n  }\n}\n```\n</details>\n\n<details>\n<summary>Using pip installation</summary>\n\n```json\n\"mcpServers\": {\n  \"mcpxcodebuild\": {\n    \"command\": \"python\",\n    \"args\": [\"-m\", \"mcpxcodebuild\"]\n  }\n}\n```\n</details>\n\n\n## License\n\nxcodebuild MCP tool is licensed under the MIT License. This means you are free to use, modify, and distribute the software, subject to the terms and conditions of the MIT License. For more details, please see the LICENSE file in the project repository."
}