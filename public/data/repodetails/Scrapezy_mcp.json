{
  "mcp_name": "Scrapezy",
  "mcp_description": "Turn websites into datasets with [Scrapezy](https://scrapezy.com)",
  "mcp_id": "Scrapezy_mcp",
  "fetch_timestamp": "2025-06-23T08:14:08.594977Z",
  "github_url": "https://github.com/scrapezy/mcp",
  "repository": {
    "name": "mcp",
    "full_name": "Scrapezy/mcp",
    "description": null,
    "html_url": "https://github.com/Scrapezy/mcp",
    "created_at": "2025-02-25T08:31:23Z",
    "updated_at": "2025-06-17T10:13:25Z",
    "pushed_at": "2025-03-11T08:04:20Z",
    "size": 21,
    "stargazers_count": 4,
    "watchers_count": 4,
    "forks_count": 3,
    "open_issues_count": 0,
    "language": "JavaScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "Scrapezy",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/196929482?v=4",
      "html_url": "https://github.com/Scrapezy"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 3,
    "subscribers_count": 1,
    "languages": {
      "JavaScript": 3535,
      "Dockerfile": 519
    },
    "language_percentages": {
      "JavaScript": 87.2,
      "Dockerfile": 12.8
    },
    "pull_requests_count": 2,
    "contributors_count": 3,
    "latest_release": {
      "tag_name": "0.1.1",
      "name": "0.1.1",
      "published_at": "2025-03-01T16:59:28Z",
      "body": "Initial Release + README fixes.",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "0.1.1",
        "commit_sha": "4a0ee67af1bb7c28350020a23f922a6faf416bc2"
      }
    ],
    "latest_version": "0.1.1",
    "package_json_version": "0.1.1"
  },
  "readme": "# @scrapezy/mcp MCP Server\n\n<a href=\"https://glama.ai/mcp/servers/rnktqsouvy\">\n  <img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/rnktqsouvy/badge\" alt=\"Scrapezy MCP server\" />\n</a>\n\n[![smithery badge](https://smithery.ai/badge/@Scrapezy/mcp)](https://smithery.ai/server/@Scrapezy/mcp)\n\nA Model Context Protocol server for [Scrapezy](https://scrapezy.com) that enables AI models to extract structured data from websites.\n\n## Features\n\n### Tools\n- `extract_structured_data` - Extract structured data from a website\n  - Takes URL and prompt as required parameters\n  - Returns structured data extracted from the website based on the prompt\n  - The prompt should clearly describe what data to extract from the website\n\n## Installation\n\n### Installing via Smithery\n\nTo install Scrapezy MCP Server for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@Scrapezy/mcp):\n\n```bash\nnpx -y @smithery/cli install @Scrapezy/mcp --client claude\n```\n\n### Manual Installation\n```bash\nnpm install -g @scrapezy/mcp\n```\n\n## Usage\n\n### API Key Setup\n\nThere are two ways to provide your Scrapezy API key:\n\n1. **Environment Variable:**\n   ```bash\n   export SCRAPEZY_API_KEY=your_api_key\n   npx @scrapezy/mcp\n   ```\n\n2. **Command-line Argument:**\n   ```bash\n   npx @scrapezy/mcp --api-key=your_api_key\n   ```\n\nTo use with Claude Desktop, add the server config:\n\nOn MacOS: `~/Library/Application Support/Claude/claude_desktop_config.json`\nOn Windows: `%APPDATA%/Claude/claude_desktop_config.json`\n\n```json\n{\n  \"mcpServers\": {\n    \"scrapezy\": {\n      \"command\": \"npx @scrapezy/mcp --api-key=your_api_key\"\n    }\n  }\n}\n```\n\n### Example Usage in Claude\n\nYou can use this tool in Claude with prompts like:\n\n```\nPlease extract product information from this page: https://example.com/product\nExtract the product name, price, description, and available colors.\n```\n\nClaude will use the MCP server to extract the requested structured data from the website.\n\n### Debugging\n\nSince MCP servers communicate over stdio, debugging can be challenging. We recommend using the [MCP Inspector](https://github.com/modelcontextprotocol/inspector), which is available as a package script:\n\n```bash\nnpm run inspector\n```\n\nThe Inspector will provide a URL to access debugging tools in your browser.\n\n## License\n\nMIT"
}