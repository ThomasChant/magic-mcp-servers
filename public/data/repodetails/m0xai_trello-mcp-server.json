{
  "mcp_name": "Trello",
  "mcp_description": "Trello integration for working with boards, lists in boards and cards in lists.",
  "mcp_id": "m0xai_trello-mcp-server",
  "fetch_timestamp": "2025-06-23T09:03:58.543502Z",
  "github_url": "https://github.com/m0xai/trello-mcp-server",
  "repository": {
    "name": "trello-mcp-server",
    "full_name": "m0xai/trello-mcp-server",
    "description": "A simple yet powerful MCP server for Trello. ",
    "html_url": "https://github.com/m0xai/trello-mcp-server",
    "created_at": "2025-04-02T14:25:29Z",
    "updated_at": "2025-06-22T11:56:43Z",
    "pushed_at": "2025-06-04T12:13:20Z",
    "size": 51,
    "stargazers_count": 20,
    "watchers_count": 20,
    "forks_count": 12,
    "open_issues_count": 2,
    "language": "Python",
    "license": null,
    "topics": [],
    "default_branch": "master",
    "owner": {
      "login": "m0xai",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/58932692?v=4",
      "html_url": "https://github.com/m0xai"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 12,
    "subscribers_count": 2,
    "languages": {
      "Python": 37410,
      "Dockerfile": 474
    },
    "language_percentages": {
      "Python": 98.75,
      "Dockerfile": 1.25
    },
    "pull_requests_count": 16,
    "contributors_count": 4
  },
  "readme": "# Trello MCP Server\n\nA powerful MCP server for interacting with Trello boards, lists, and cards via AI Hosts.\n\n## Table of Contents\n- [Table of Contents](#table-of-contents)\n- [Prerequisites](#prerequisites)\n- [Pre-installation](#pre-installation)\n- [Installation](#installation)\n- [Server Modes](#server-modes)\n- [Configuration](#configuration)\n- [Client Integration](#client-integration)\n- [Capabilities](#capabilities)\n- [Detailed Capabilities](#detailed-capabilities)\n    - [Board Operations](#board-operations)\n    - [List Operations](#list-operations)\n    - [Card Operations](#card-operations)\n- [Usage](#usage)\n- [Troubleshooting](#troubleshooting)\n- [Contributing](#contributing)\n\n\n## Prerequisites\n\n1. Python 3.12 or higher, can easly managed by `uv`\n2. [Claude for Desktop](https://claude.ai/download) installed\n3. Trello account and API credentials\n4. [uv](https://github.com/astral-sh/uv) package manager installed\n\n## Pre-installation\n1. Make sure you have installed Claude Desktop App\n2. Make sure you have already logged in with your account into Claude.\n3. Start Claude\n\n## Installation\n\n\n\n1. Set up Trello API credentials:\n   - Go to [Trello Apps Administration](https://trello.com/power-ups/admin)\n   - Create a new integration at [New Power-Up or Integration](https://trello.com/power-ups/admin/new)\n   - Fill in your information (you can leave the Iframe connector URL empty) and make sure to select the correct Workspace\n   - Click your app's icon and navigate to \"API key\" from left sidebar. \n   - Copy your \"API key\" and on the right side: \"you can manually generate a Token.\" click the word token to get your Trello Token.\n\n2. Rename the `.env.example` file in the project root with `.env` and set vairables you just got:\n```bash\nTRELLO_API_KEY=your_api_key_here\nTRELLO_TOKEN=your_token_here\n```\n\n3. Install uv if you haven't already:\n```bash\ncurl -LsSf https://astral.sh/uv/install.sh | sh\n```\n\n4. Clone this repository:\n```bash\ngit clone https://github.com/m0xai/trello-mcp-server.git\ncd trello-mcp-server\n```\n\n5. Install dependencies and set server for Claude using uv::\n```bash\nuv run mcp install main.py\n```\n\n6. Restart Claude Desktop app\n\n## Server Modes\n\nThis MCP server can run in two different modes:\n\n### Claude App Mode\n\nThis mode integrates directly with the Claude Desktop application:\n\n1. Set `USE_CLAUDE_APP=true` in your `.env` file (this is the default)\n2. Run the server with:\n```bash\nuv run mcp install main.py\n```\n3. Restart the Claude Desktop application\n\n### SSE Server Mode\n\nThis mode runs as a standalone SSE server that can be used with any MCP-compatible client, including Cursor:\n\n1. Set `USE_CLAUDE_APP=false` in your `.env` file\n2. Run the server with:\n```bash\npython main.py\n```\n3. The server will be available at `http://localhost:8000` by default (or your configured port)\n\n### Docker Mode\n\nYou can also run the server using Docker Compose:\n\n1. Make sure you have Docker and Docker Compose installed\n2. Create your `.env` file with your configuration\n3. Build and start the container:\n```bash\ndocker-compose up -d\n```\n4. The server will run in SSE mode by default\n5. To view logs:\n```bash\ndocker-compose logs -f\n```\n6. To stop the server:\n```bash\ndocker-compose down\n```\n\n## Configuration\n\nThe server can be configured using environment variables in the `.env` file:\n\n| Variable | Description | Default |\n|----------|-------------|---------|\n| TRELLO_API_KEY | Your Trello API key | Required |\n| TRELLO_TOKEN | Your Trello API token | Required |\n| MCP_SERVER_NAME | The name of the MCP server | Trello MCP Server |\n| MCP_SERVER_HOST | Host address for SSE mode | 0.0.0.0 |\n| MCP_SERVER_PORT | Port for SSE mode | 8000 |\n| USE_CLAUDE_APP | Whether to use Claude app mode | true |\n\nYou can customize the server by editing these values in your `.env` file.\n\n## Client Integration\n\n### Using with Claude Desktop\n\n1. Run the server in Claude app mode (`USE_CLAUDE_APP=true`)\n2. Start or restart Claude Desktop\n3. Claude will automatically detect and connect to your MCP server\n\n### Using with Cursor\n\nTo connect your MCP server to Cursor:\n\n1. Run the server in SSE mode (`USE_CLAUDE_APP=false`)\n2. In Cursor, go to Settings (gear icon) > AI > Model Context Protocol\n3. Add a new server with URL `http://localhost:8000` (or your configured host/port)\n4. Select the server when using Cursor's AI features\n\nYou can also add this configuration to your Cursor settings JSON file (typically at `~/.cursor/mcp.json`):\n\n```json\n{\n  \"mcpServers\": {\n    \"trello\": {\n      \"url\": \"http://localhost:8000/sse\"\n    }\n  }\n}\n```\n\n### Using with Other MCP Clients\n\nFor other MCP-compatible clients, point them to the SSE endpoint at `http://localhost:8000`.\n\n### Minimal Client Example\n\nHere's a minimal Python example to connect to the SSE endpoint:\n\n```python\nimport asyncio\nimport httpx\n\nasync def connect_to_mcp_server():\n    url = \"http://localhost:8000/sse\"\n    headers = {\"Accept\": \"text/event-stream\"}\n    \n    async with httpx.AsyncClient() as client:\n        async with client.stream(\"GET\", url, headers=headers) as response:\n            # Get the session ID from the first SSE message\n            session_id = None\n            async for line in response.aiter_lines():\n                if line.startswith(\"data:\"):\n                    data = line[5:].strip()\n                    if \"session_id=\" in data and not session_id:\n                        session_id = data.split(\"session_id=\")[1]\n                        \n                        # Send a message using the session ID\n                        message_url = f\"http://localhost:8000/messages/?session_id={session_id}\"\n                        message = {\n                            \"role\": \"user\",\n                            \"content\": {\n                                \"type\": \"text\",\n                                \"text\": \"Show me my Trello boards\"\n                            }\n                        }\n                        await client.post(message_url, json=message)\n\nif __name__ == \"__main__\":\n    asyncio.run(connect_to_mcp_server())\n```\n\n## Capabilities\n\n| Operation | Board | List | Card | Checklist | Checklist Item |\n|-----------|-------|------|------|-----------|----------------|\n| Read      | ✅    | ✅    | ✅   | ✅        | ✅              |\n| Write     | ❌    | ✅    | ✅   | ✅        | ✅              |\n| Update    | ❌    | ✅    | ✅   | ✅        | ✅              |\n| Delete    | ❌    | ✅    | ✅   | ✅        | ✅              |\n\n### Detailed Capabilities\n\n#### Board Operations\n- ✅ Read all boards\n- ✅ Read specific board details\n\n#### List Operations\n- ✅ Read all lists in a board\n- ✅ Read specific list details\n- ✅ Create new lists\n- ✅ Update list name\n- ✅ Archive (delete) lists\n\n#### Card Operations\n- ✅ Read all cards in a list\n- ✅ Read specific card details\n- ✅ Create new cards\n- ✅ Update card attributes\n- ✅ Delete cards\n\n#### Checklist Operations\n- ✅ Get a specific checklist\n- ✅ List all checklists in a card\n- ✅ Create a new checklist\n- ✅ Update a checklist\n- ✅ Delete a checklist\n- ✅ Add checkitem to checklist\n- ✅ Update checkitem\n- ✅ Delete checkitem\n\n## Usage\n\nOnce installed, you can interact with your Trello boards through Claude. Here are some example queries:\n\n- \"Show me all my boards\"\n- \"What lists are in board [board_name]?\"\n- \"Create a new card in list [list_name] with title [title]\"\n- \"Update the description of card [card_name]\"\n- \"Archive the list [list_name]\"\n\nHere are my example usages:\n\n<img width=\"1277\" alt=\"Example Usage of Trello MCP server: Asking to list all my cards in Guitar Board\" src=\"https://github.com/user-attachments/assets/fef29dfc-04b2-4af9-92a6-f8db2320c860\" />\n\n<img width=\"1274\" alt=\"Asking to add new song card into my project songs\" src=\"https://github.com/user-attachments/assets/2d8406ca-1dde-41c0-a035-86d5271dd78f\" />\n\n<img width=\"1632\" alt=\"Asking to add new card with checklist in it\" src=\"https://github.com/user-attachments/assets/5a63f107-d135-402d-ab33-b9bf13eca751\" />\n\n## Troubleshooting\n\nIf you encounter issues:\n\n1. Verify your Trello API credentials in the `.env` file\n2. Check that you have proper permissions in your Trello workspace\n3. Ensure Claude for Desktop is running the latest version\n4. Check the logs for any error messages with `uv run mcp dev main.py` command.\n5. Make sure uv is properly installed and in your PATH\n\n## Contributing\n\nFeel free to submit issues and enhancement requests!\n"
}