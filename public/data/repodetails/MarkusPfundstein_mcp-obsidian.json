{
  "mcp_name": "Obsidian",
  "mcp_description": "üêç ‚òÅÔ∏è üè† - Interacting with Obsidian via REST API",
  "mcp_id": "MarkusPfundstein_mcp-obsidian",
  "fetch_timestamp": "2025-06-23T07:14:24.437327Z",
  "github_url": "https://github.com/MarkusPfundstein/mcp-obsidian",
  "repository": {
    "name": "mcp-obsidian",
    "full_name": "MarkusPfundstein/mcp-obsidian",
    "description": "MCP server that interacts with Obsidian via the Obsidian rest API community plugin",
    "html_url": "https://github.com/MarkusPfundstein/mcp-obsidian",
    "created_at": "2024-11-29T11:07:12Z",
    "updated_at": "2025-06-23T04:21:00Z",
    "pushed_at": "2025-06-19T09:36:35Z",
    "size": 44,
    "stargazers_count": 1163,
    "watchers_count": 1163,
    "forks_count": 150,
    "open_issues_count": 35,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "MarkusPfundstein",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/1137867?v=4",
      "html_url": "https://github.com/MarkusPfundstein"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 150,
    "subscribers_count": 10,
    "languages": {
      "Python": 32949
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 21,
    "contributors_count": 12
  },
  "readme": "# MCP server for Obsidian\n\nMCP server to interact with Obsidian via the Local REST API community plugin.\n\n<a href=\"https://glama.ai/mcp/servers/3wko1bhuek\"><img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/3wko1bhuek/badge\" alt=\"server for Obsidian MCP server\" /></a>\n\n## Components\n\n### Tools\n\nThe server implements multiple tools to interact with Obsidian:\n\n- list_files_in_vault: Lists all files and directories in the root directory of your Obsidian vault\n- list_files_in_dir: Lists all files and directories in a specific Obsidian directory\n- get_file_contents: Return the content of a single file in your vault.\n- search: Search for documents matching a specified text query across all files in the vault\n- patch_content: Insert content into an existing note relative to a heading, block reference, or frontmatter field.\n- append_content: Append content to a new or existing file in the vault.\n- delete_file: Delete a file or directory from your vault.\n\n### Example prompts\n\nIts good to first instruct Claude to use Obsidian. Then it will always call the tool.\n\nThe use prompts like this:\n- Get the contents of the last architecture call note and summarize them\n- Search for all files where Azure CosmosDb is mentioned and quickly explain to me the context in which it is mentioned\n- Summarize the last meeting notes and put them into a new note 'summary meeting.md'. Add an introduction so that I can send it via email.\n\n## Configuration\n\n### Obsidian REST API Key\n\nThere are two ways to configure the environment with the Obsidian REST API Key. \n\n1. Add to server config (preferred)\n\n```json\n{\n  \"mcp-obsidian\": {\n    \"command\": \"uvx\",\n    \"args\": [\n      \"mcp-obsidian\"\n    ],\n    \"env\": {\n      \"OBSIDIAN_API_KEY\": \"<your_api_key_here>\",\n      \"OBSIDIAN_HOST\": \"<your_obsidian_host>\",\n      \"OBSIDIAN_PORT\": \"<your_obsidian_port>\"\n    }\n  }\n}\n```\n\n2. Create a `.env` file in the working directory with the following required variables:\n\n```\nOBSIDIAN_API_KEY=your_api_key_here\nOBSIDIAN_HOST=your_obsidian_host\nOBSIDIAN_PORT=your_obsidian_port\n```\n\nNote:\n- You can find the API key in the Obsidian plugin config\n- Default port is 27124 if not specified\n- Default host is 127.0.0.1 if not specified\n\n## Quickstart\n\n### Install\n\n#### Obsidian REST API\n\nYou need the Obsidian REST API community plugin running: https://github.com/coddingtonbear/obsidian-local-rest-api\n\nInstall and enable it in the settings and copy the api key.\n\n#### Claude Desktop\n\nOn MacOS: `~/Library/Application\\ Support/Claude/claude_desktop_config.json`\n\nOn Windows: `%APPDATA%/Claude/claude_desktop_config.json`\n\n<details>\n  <summary>Development/Unpublished Servers Configuration</summary>\n  \n```json\n{\n  \"mcpServers\": {\n    \"mcp-obsidian\": {\n      \"command\": \"uv\",\n      \"args\": [\n        \"--directory\",\n        \"<dir_to>/mcp-obsidian\",\n        \"run\",\n        \"mcp-obsidian\"\n      ],\n      \"env\": {\n        \"OBSIDIAN_API_KEY\": \"<your_api_key_here>\",\n        \"OBSIDIAN_HOST\": \"<your_obsidian_host>\",\n        \"OBSIDIAN_PORT\": \"<your_obsidian_port>\"\n      }\n    }\n  }\n}\n```\n</details>\n\n<details>\n  <summary>Published Servers Configuration</summary>\n  \n```json\n{\n  \"mcpServers\": {\n    \"mcp-obsidian\": {\n      \"command\": \"uvx\",\n      \"args\": [\n        \"mcp-obsidian\"\n      ],\n      \"env\": {\n        \"OBSIDIAN_API_KEY\": \"<YOUR_OBSIDIAN_API_KEY>\",\n        \"OBSIDIAN_HOST\": \"<your_obsidian_host>\",\n        \"OBSIDIAN_PORT\": \"<your_obsidian_port>\"\n      }\n    }\n  }\n}\n```\n</details>\n\n## Development\n\n### Building\n\nTo prepare the package for distribution:\n\n1. Sync dependencies and update lockfile:\n```bash\nuv sync\n```\n\n### Debugging\n\nSince MCP servers run over stdio, debugging can be challenging. For the best debugging\nexperience, we strongly recommend using the [MCP Inspector](https://github.com/modelcontextprotocol/inspector).\n\nYou can launch the MCP Inspector via [`npm`](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm) with this command:\n\n```bash\nnpx @modelcontextprotocol/inspector uv --directory /path/to/mcp-obsidian run mcp-obsidian\n```\n\nUpon launching, the Inspector will display a URL that you can access in your browser to begin debugging.\n\nYou can also watch the server logs with this command:\n\n```bash\ntail -n 20 -f ~/Library/Logs/Claude/mcp-server-mcp-obsidian.log\n```\n"
}