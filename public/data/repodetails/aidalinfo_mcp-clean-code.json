{
  "mcp_name": "aidalinfo/mcp-clean-code",
  "mcp_description": "Facilitates the planning and creation of clean, well-structured code with comprehensive English comments, focusing on readability and maintainability.",
  "mcp_id": "aidalinfo_mcp-clean-code",
  "fetch_timestamp": "2025-06-23T00:19:04.709986Z",
  "github_url": "https://github.com/aidalinfo/mcp-clean-code",
  "repository": {
    "name": "mcp-clean-code",
    "full_name": "aidalinfo/mcp-clean-code",
    "description": null,
    "html_url": "https://github.com/aidalinfo/mcp-clean-code",
    "created_at": "2025-04-10T09:46:02Z",
    "updated_at": "2025-06-16T11:23:35Z",
    "pushed_at": "2025-04-10T12:47:43Z",
    "size": 17,
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "JavaScript",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "aidalinfo",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/33862853?v=4",
      "html_url": "https://github.com/aidalinfo"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "JavaScript": 10163,
      "Dockerfile": 549
    },
    "language_percentages": {
      "JavaScript": 94.87,
      "Dockerfile": 5.13
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "tags": [
      {
        "name": "v1.0.1",
        "commit_sha": "c1bc47e79c97e27c533859ba79f13098b5cabd1c"
      },
      {
        "name": "v1.0.0",
        "commit_sha": "d2af5d25f5030819fd5a7c393cba339984c13d0d"
      }
    ],
    "latest_version": "v1.0.1",
    "package_json_version": "0.1.0"
  },
  "readme": "# MCP Clean Code\n\nAn MCP server implementation that provides a tool for planning and creating clean, well-structured code with comprehensive English comments.\n\n## Features\n\n- Plan code architecture step by step\n- Design modular, maintainable components\n- Follow clean code principles and best practices\n- Create comprehensive documentation with English comments\n- Revise design decisions as requirements become clearer\n- Branch into alternative implementation strategies\n- Focus on code readability and simplicity\n\n## Tool\n\n### cleancode\n\nFacilitates clean code planning with a focus on readability, maintainability, and well-structured English comments.\n\n**Inputs:**\n- `thought` (string): Your current code planning step\n- `nextThoughtNeeded` (boolean): Whether another code planning step is needed\n- `thoughtNumber` (integer): Current step number\n- `totalThoughts` (integer): Estimated total steps needed\n- `isRevision` (boolean, optional): Whether this revises a previous planning step\n- `revisesThought` (integer, optional): Which step is being reconsidered\n- `branchFromThought` (integer, optional): Branching point step number for alternative approach\n- `branchId` (string, optional): Alternative implementation identifier\n- `needsMoreThoughts` (boolean, optional): If more planning steps are needed\n\n## Usage\n\nThe Clean Code tool is designed for:\n- Before writing complex code that needs careful planning\n- When designing new features or refactoring existing code\n- When code structure and organization are critical\n- For ensuring comprehensive documentation with English comments\n- For following clean code principles and best practices\n- For breaking down complex functionality into modular components\n- For planning testable and maintainable implementations\n\n## Configuration\n\n### Usage with Claude Desktop\n\nAdd this to your `claude_desktop_config.json`:\n\n#### npm installation\n\n```json\n{\n  \"mcpServers\": {\n    \"cleancode\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"mcp-clean-code\"\n      ]\n    }\n  }\n}\n```\n\n#### Manual installation\n\n```bash\n# Install from npm\nnpm install -g mcp-clean-code\n\n# Then use in configuration\n{\n  \"mcpServers\": {\n    \"cleancode\": {\n      \"command\": \"mcp-clean-code\"\n    }\n  }\n}\n```\n\n#### PNPM installation\n\n```bash\n# Install from npm using PNPM\npnpm add -g mcp-clean-code\n\n# Then use in configuration\n{\n  \"mcpServers\": {\n    \"cleancode\": {\n      \"command\": \"mcp-clean-code\"\n    }\n  }\n}\n```\n\n#### docker\n\n```json\n{\n  \"mcpServers\": {\n    \"cleancode\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"--rm\",\n        \"-i\",\n        \"mcp-clean-code\"\n      ]\n    }\n  }\n}\n```\n\n## Building\n\nDocker:\n\n```bash\ndocker build -t mcp-clean-code .\n```\n\nFrom source:\n```bash\n# Clone the repository\ngit clone https://github.com/your-username/mcp-clean-code.git\ncd mcp-clean-code\n\n# Install dependencies and build\npnpm install\npnpm build\n```\n\n## GitHub Actions CI/CD\n\nThis repository includes a GitHub Actions workflow that automatically publishes the package to npm when a new release is created.\n\n### Setting up for automatic npm publishing\n\nTo enable automatic publishing to npm, you need to add an NPM_TOKEN secret to your GitHub repository:\n\n1. Generate an npm access token:\n   - Go to npmjs.com and log in\n   - Click on your profile picture in the top right corner and select \"Access Tokens\"\n   - Click \"Generate New Token\" and choose the \"Publish\" option\n   - Copy the generated token\n\n2. Add the token to your GitHub repository:\n   - Go to your GitHub repository\n   - Click on \"Settings\" > \"Secrets and variables\" > \"Actions\"\n   - Click \"New repository secret\"\n   - Name: `NPM_TOKEN`\n   - Value: Paste the token you copied from npm\n   - Click \"Add secret\"\n\n3. Create a new release:\n   - Go to your GitHub repository\n   - Click on \"Releases\" > \"Create a new release\"\n   - Choose a tag version (e.g., v1.0.0)\n   - Add a release title and description\n   - Click \"Publish release\"\n\nThe GitHub Actions workflow will automatically trigger, build the package, and publish it to npm.\n\n## License\n\nThis MCP server is licensed under the MIT License and is developed by Aidalinfo (https://aidalinfo.fr). You are free to use, modify, and distribute the software, subject to the terms and conditions of the MIT License.\n"
}