{
  "mcp_name": "Pandoc",
  "mcp_description": "MCP server for seamless document format conversion using Pandoc, supporting Markdown, HTML, and plain text, with other formats like PDF, csv and docx in development.",
  "mcp_id": "vivekVells_mcp-pandoc",
  "fetch_timestamp": "2025-06-23T07:26:24.141663Z",
  "github_url": "https://github.com/vivekVells/mcp-pandoc",
  "repository": {
    "name": "mcp-pandoc",
    "full_name": "vivekVells/mcp-pandoc",
    "description": "MCP server for document format conversion using pandoc.",
    "html_url": "https://github.com/vivekVells/mcp-pandoc",
    "created_at": "2024-12-08T18:42:49Z",
    "updated_at": "2025-06-22T14:03:20Z",
    "pushed_at": "2025-06-07T20:57:17Z",
    "size": 1602,
    "stargazers_count": 271,
    "watchers_count": 271,
    "forks_count": 42,
    "open_issues_count": 7,
    "language": "Python",
    "license": "MIT License",
    "topics": [
      "pandoc",
      "pandoc-markdown",
      "pandoc-template"
    ],
    "default_branch": "main",
    "owner": {
      "login": "vivekVells",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/25471383?v=4",
      "html_url": "https://github.com/vivekVells"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 42,
    "subscribers_count": 3,
    "languages": {
      "Python": 10864,
      "Dockerfile": 575
    },
    "language_percentages": {
      "Python": 94.97,
      "Dockerfile": 5.03
    },
    "pull_requests_count": 10,
    "contributors_count": 5
  },
  "readme": "![PyPI Downloads](https://img.shields.io/pypi/dm/mcp-pandoc) <a href=\"https://smithery.ai/server/mcp-pandoc\"><img alt=\"Smithery Badge\" src=\"https://smithery.ai/badge/mcp-pandoc\"></a> <a href=\"https://glama.ai/mcp/servers/xyzzgaj9bk\"><img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/xyzzgaj9bk/badge\" /></a> [![MseeP.ai Security Assessment Badge](https://mseep.net/pr/vivekvells-mcp-pandoc-badge.png)](https://mseep.ai/app/vivekvells-mcp-pandoc)\n\n# mcp-pandoc: A Document Conversion MCP Server\n\n> Officially included in the [Model Context Protocol servers](https://github.com/modelcontextprotocol/servers/blob/main/README.md) open-source project. üéâ\n\n## Overview\n\nA Model Context Protocol server for document format conversion using [pandoc](https://pandoc.org/index.html). This server provides tools to transform content between different document formats while preserving formatting and structure.\n\nPlease note that mcp-pandoc is currently in early development. PDF support is under development, and the functionality and available tools are subject to change and expansion as we continue to improve the server.\n\nCredit: This project uses the [Pandoc Python package](https://pypi.org/project/pandoc/) for document conversion, forming the foundation for this project.\n\n## Demo\n\n[![mcp-pandoc - v1: Seamless Document Format Conversion for Claude using MCP server](https://img.youtube.com/vi/vN3VOb0rygM/maxresdefault.jpg)](https://youtu.be/vN3VOb0rygM)\n\n> üé• [Watch on YouTube](https://youtu.be/vN3VOb0rygM)\n\n<details>\n<summary>Screenshots</summary>\n\n<img width=\"2407\" alt=\"Screenshot 2024-12-26 at 3 33 54‚ÄØPM\" src=\"https://github.com/user-attachments/assets/ce3f5396-252a-4bba-84aa-65b2a06b859e\" />\n<img width=\"2052\" alt=\"Screenshot 2024-12-26 at 3 38 24‚ÄØPM\" src=\"https://github.com/user-attachments/assets/8c525ad1-b184-41ca-b068-7dd34b60b85d\" />\n<img width=\"1498\" alt=\"Screenshot 2024-12-26 at 3 40 51‚ÄØPM\" src=\"https://github.com/user-attachments/assets/a1e0682d-fe44-40b6-9988-bf805627beeb\" />\n<img width=\"760\" alt=\"Screenshot 2024-12-26 at 3 41 20‚ÄØPM\" src=\"https://github.com/user-attachments/assets/1d7f5998-6d7f-48fa-adcf-fc37d0521213\" />\n<img width=\"1493\" alt=\"Screenshot 2024-12-26 at 3 50 27‚ÄØPM\" src=\"https://github.com/user-attachments/assets/97992c5d-8efc-40af-a4c3-94c51c392534\" />\n</details>\n\nMore to come...\n\n## Tools\n\n1. `convert-contents`\n   - Transforms content between supported formats\n   - Inputs:\n     - `contents` (string): Source content to convert (required if input_file not provided)\n     - `input_file` (string): Complete path to input file (required if contents not provided)\n     - `input_format` (string): Source format of the content (defaults to markdown)\n     - `output_format` (string): Target format (defaults to markdown)\n     - `output_file` (string): Complete path for output file (required for pdf, docx, rst, latex, epub formats)\n   - Supported input/output formats:\n     - markdown\n     - html\n     - pdf\n     - docx\n     - rst\n     - latex\n     - epub\n     - txt\n   - Note: For advanced formats (pdf, docx, rst, latex, epub), an output_file path is required\n\n### Supported Formats\n\nCurrently supported formats:\n\nBasic formats (direct conversion):\n\n- Plain text (.txt)\n- Markdown (.md)\n- HTML (.html)\n\nAdvanced formats (requires complete file paths):\n\n- PDF (.pdf) - requires TeX Live installation\n- DOCX (.docx)\n- RST (.rst)\n- LaTeX (.tex)\n- EPUB (.epub)\n\nNote: For advanced formats:\n\n1. Complete file paths with filename and extension are required\n2. **PDF conversion requires TeX Live installation** (see Critical Requirements section -> For macOS: `brew install texlive`)\n3. When no output path is specified:\n   - Basic formats: Displays converted content in the chat\n   - Advanced formats: May save in system temp directory (/tmp/ on Unix systems)\n\n## Usage & configuration\n\n**NOTE: Ensure to complete installing required packages mentioned below under \"Critical Requirements\".**\n\nTo use the published one\n\n```bash\n{\n  \"mcpServers\": {\n    \"mcp-pandoc\": {\n      \"command\": \"uvx\",\n      \"args\": [\"mcp-pandoc\"]\n    }\n  }\n}\n```\n\n### ‚ö†Ô∏è Important Notes\n\n#### Critical Requirements\n\n1. **Pandoc Installation**\n  - **Required**: Install `pandoc` - the core document conversion engine\n  - Installation:\n    ```bash\n    # macOS\n    brew install pandoc\n    \n    # Ubuntu/Debian\n    sudo apt-get install pandoc\n    \n    # Windows\n    # Download installer from: https://pandoc.org/installing.html\n    ```\n  - **Verify**: `pandoc --version`\n\n2. **UV package installation**\n  - **Required**: Install `uv` package (includes `uvx` command)\n  - Installation:\n    ```bash\n    # macOS\n    brew install uv\n    \n    # Windows/Linux\n    pip install uv\n    ```\n  - **Verify**: `uvx --version`\n\n3. **PDF Conversion Prerequisites:** Only needed if you need to convert & save pdf\n  - TeX Live must be installed before attempting PDF conversion\n  - Installation commands:\n    ```bash\n    # Ubuntu/Debian\n    sudo apt-get install texlive-xetex\n    \n    # macOS\n    brew install texlive\n    \n    # Windows\n    # Install MiKTeX or TeX Live from:\n    # https://miktex.org/ or https://tug.org/texlive/\n    ```\n\n4. **File Path Requirements**\n  - When saving or converting files, you MUST provide complete file paths including filename and extension\n  - The tool does not automatically generate filenames or extensions\n\n#### Examples\n\n‚úÖ Correct Usage:\n\n```bash\n# Converting content to PDF\n\"Convert this text to PDF and save as /path/to/document.pdf\"\n\n# Converting between file formats\n\"Convert /path/to/input.md to PDF and save as /path/to/output.pdf\"\n```\n\n‚ùå Incorrect Usage:\n\n```bash\n# Missing filename and extension\n\"Save this as PDF in /documents/\"\n\n# Missing complete path\n\"Convert this to PDF\"\n\n# Missing extension\n\"Save as /documents/story\"\n```\n\n#### Common Issues and Solutions\n\n1. **PDF Conversion Fails**\n   - Error: \"xelatex not found\"\n   - Solution: Install TeX Live first (see installation commands above)\n\n2. **File Conversion Fails**\n   - Error: \"Invalid file path\"\n   - Solution: Provide complete path including filename and extension\n   - Example: `/path/to/document.pdf` instead of just `/path/to/`\n\n3. **Format Conversion Fails**\n   - Error: \"Unsupported format\"\n   - Solution: Use only supported formats:\n     - Basic: txt, html, markdown\n     - Advanced: pdf, docx, rst, latex, epub\n\n## Quickstart\n\n### Install\n\n#### Option 1: Installing manually via claude_desktop_config.json config file\n\n- On MacOS: `open ~/Library/Application\\ Support/Claude/claude_desktop_config.json`\n- On Windows: `%APPDATA%/Claude/claude_desktop_config.json`\n\na) Only for local development & contribution to this repo\n<details>\n  <summary>Development/Unpublished Servers Configuration</summary>\n\n  ‚ÑπÔ∏è Replace <DIRECTORY> with your locally cloned project path\n  \n  ```bash\n  \"mcpServers\": {\n    \"mcp-pandoc\": {\n      \"command\": \"uv\",\n      \"args\": [\n        \"--directory\",\n        \"<DIRECTORY>/mcp-pandoc\",\n        \"run\",\n        \"mcp-pandoc\"\n      ]\n    }\n  }\n  ```\n  \n</details>\n\nb) Published Servers Configuration - Consumers should use this config\n\n  ```bash\n  \"mcpServers\": {\n    \"mcp-pandoc\": {\n      \"command\": \"uvx\",\n      \"args\": [\n        \"mcp-pandoc\"\n      ]\n    }\n  }\n  ```\n\n#### Option 2: To install Published Servers Configuration automatically via Smithery\n\nRun the following bash command to install **published** [mcp-pandoc pypi](https://pypi.org/project/mcp-pandoc) for Claude Desktop automatically via [Smithery](https://smithery.ai/server/mcp-pandoc):\n\n```bash\nnpx -y @smithery/cli install mcp-pandoc --client claude\n```\n\n- If you face any issue, use the \"Published Servers Configuration\" above directly instead of this cli. \n\n**Note**: To use locally configured mcp-pandoc, follow \"Development/Unpublished Servers Configuration\" step above.\n\n## Development\n\n### Building and Publishing\n\nTo prepare the package for distribution:\n\n1. Sync dependencies and update lockfile:\n\n```bash\nuv sync\n```\n\n2. Build package distributions:\n\n```bash\nuv build\n```\n\nThis will create source and wheel distributions in the `dist/` directory.\n\n3. Publish to PyPI:\n\n```bash\nuv publish\n```\n\nNote: You'll need to set PyPI credentials via environment variables or command flags:\n\n- Token: `--token` or `UV_PUBLISH_TOKEN`\n- Or username/password: `--username`/`UV_PUBLISH_USERNAME` and `--password`/`UV_PUBLISH_PASSWORD`\n\n### Debugging\n\nSince MCP servers run over stdio, debugging can be challenging. For the best debugging\nexperience, we strongly recommend using the [MCP Inspector](https://github.com/modelcontextprotocol/inspector).\n\nYou can launch the MCP Inspector via [`npm`](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm) with this command:\n\n```bash\nnpx @modelcontextprotocol/inspector uv --directory /Users/vivekvells/Desktop/code/ai/mcp-pandoc run mcp-pandoc\n```\n\nUpon launching, the Inspector will display a URL that you can access in your browser to begin debugging.\n\n---\n\n## Contributing\n\nWe welcome contributions to enhance mcp-pandoc! Here's how you can get involved:\n\n1. **Report Issues**: Found a bug or have a feature request? Open an issue on our [GitHub Issues](https://github.com/vivekVells/mcp-pandoc/issues) page.\n2. **Submit Pull Requests**: Improve the codebase or add features by creating a pull request.\n\n---\n"
}