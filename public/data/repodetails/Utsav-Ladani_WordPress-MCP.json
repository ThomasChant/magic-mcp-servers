{
  "mcp_name": "Utsav-Ladani/WordPress-MCP",
  "mcp_description": "Facilitates seamless content management in WordPress by enabling post creation, updates, and searches through a Model Context Protocol server.",
  "mcp_id": "Utsav-Ladani_WordPress-MCP",
  "fetch_timestamp": "2025-06-23T09:14:12.136115Z",
  "github_url": "https://github.com/Utsav-Ladani/WordPress-MCP",
  "repository": {
    "name": "WordPress-MCP",
    "full_name": "Utsav-Ladani/WordPress-MCP",
    "description": "A Model Context Protocol server for WordPress",
    "html_url": "https://github.com/Utsav-Ladani/WordPress-MCP",
    "created_at": "2025-04-01T17:58:09Z",
    "updated_at": "2025-06-20T00:19:58Z",
    "pushed_at": "2025-05-17T09:34:01Z",
    "size": 23,
    "stargazers_count": 9,
    "watchers_count": 9,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "TypeScript",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "Utsav-Ladani",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/55320836?v=4",
      "html_url": "https://github.com/Utsav-Ladani"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 14443,
      "JavaScript": 1726
    },
    "language_percentages": {
      "TypeScript": 89.33,
      "JavaScript": 10.67
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "package_json_version": "1.0.2"
  },
  "readme": "# WordPress MCP\n\n[![npm version](https://img.shields.io/npm/v/wordpress-mcp.svg)](https://www.npmjs.com/package/wordpress-mcp)\n[![npm downloads](https://img.shields.io/npm/dm/wordpress-mcp.svg)](https://www.npmjs.com/package/wordpress-mcp)\n\nA Model Context Protocol server for WordPress content management. It has ability to create, update, search and get posts. It also has ability to get WordPress block types schema to generate post content using blocks.\n\n## üì∫ Demo\n\nThis posts are entirely generated by Claude\n\nDemo 1\n\nhttps://github.com/user-attachments/assets/646a4497-81e6-4bdf-afe1-ce5ef2df587d\n\nDemo 2\n\nhttps://github.com/user-attachments/assets/6ec184c3-ba41-4699-a13a-0402e1a16ce4\n\n## üì¶ Installation\n\nAdd following configuration to your `claude_desktop_config.json` file to use this MCP server:\n\n```json\n{\n  \"mcpServers\": {\n    \"wordpress\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"wordpress-mcp\"],\n      \"env\": {\n        \"WORDPRESS_HOST_URL\": \"http://localhost:<PORT>\",\n        \"WORDPRESS_API_USERNAME\": \"<WORDPRESS_USERNAME>\",\n        \"WORDPRESS_API_PASSWORD\": \"<WORDPRESS_APPLICATION_PASSWORD>\",\n        \"WORDPRESS_POST_AUTHOR_ID\": \"<WORDPRESS_POST_AUTHOR_ID>\"\n      }\n    }\n  }\n}\n```\n\nCheck `Testing your server with Claude for Desktop` section in [MCP Server Example Documentation](https://modelcontextprotocol.io/quickstart/server) for more details.\n\n## üìù Available Tools\n\n- `createPost`: Create a new WordPress post\n- `updatePost`: Update an existing post\n- `searchPosts`: Search for posts by title or keyword\n- `getPost`: Get a specific post\n- `blockTypesSchema`: Get WordPress block types schema\n\n---\n\nüéâ Happy vibe blogging üéâ\n"
}