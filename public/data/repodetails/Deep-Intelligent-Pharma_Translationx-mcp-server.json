{
  "mcp_name": "Deep-Intelligent-Pharma/Translationx-mcp-server",
  "mcp_description": "Facilitates translation tasks by integrating with TranslationX through a Python-based MCP server.",
  "mcp_id": "Deep-Intelligent-Pharma_Translationx-mcp-server",
  "fetch_timestamp": "2025-06-23T02:33:38.344711Z",
  "github_url": "https://github.com/Deep-Intelligent-Pharma/Translationx-mcp-server",
  "repository": {
    "name": "Translationx-mcp-server",
    "full_name": "Deep-Intelligent-Pharma/Translationx-mcp-server",
    "description": "MCP Server for Translationx",
    "html_url": "https://github.com/Deep-Intelligent-Pharma/Translationx-mcp-server",
    "created_at": "2025-04-14T03:30:44Z",
    "updated_at": "2025-04-28T06:27:51Z",
    "pushed_at": "2025-04-14T09:21:49Z",
    "size": 2577,
    "stargazers_count": 3,
    "watchers_count": 3,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "Python",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "Deep-Intelligent-Pharma",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/143669382?v=4",
      "html_url": "https://github.com/Deep-Intelligent-Pharma"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "Python": 52400
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 2
  },
  "readme": "## TranslationX MCP Server (Python)\n### 搭建Python虚拟环境\n我们推荐通过`uv`构建虚拟环境来运行MCP server，关于`uv你可以在[这里](https://docs.astral.sh/uv/getting-started/features/)找到一些说明。\n\n按照[官方流程](https://modelcontextprotocol.io/quickstart/server)，你会安装`Python`包管理工具`uv`。除此之外，你也可以尝试其他方法（如`Anaconda`）来创建你的`Python`虚拟环境。\n\n通过`uv`添加`mcp`依赖\n\n```bash\nuv add \"mcp[cli]\"\n```\n\n验证mcp依赖是否安装成功，执行如下命令\n```bash\nuv run mcp\n```\n\n当出现下图时代表安装成功\n\n![](../../../img/uv_install_success.png)\n\n通过`uv`安装`python`，最低版本要求为3.13\n\n```bash\nuv python install 3.13\n```\n\n### 获取 MCP Server\n前往TranslationX Mcp Server 官方[开源仓库](https://github.com/Deep-Intelligent-Pharma/Translationx-mcp-server/)下载\n\n### 配置本地项目\n通过`uv`创建一个项目\n\n```bash\nuv init mcp_server_translation\n```\n\n将`src`文件夹拷贝到该目录下，通过如下命令测试mcp server是否正常运行\n\n```bash\nuv run --with mcp[cli] mcp run {YOUR_PATH}/src/main.py\n# 如果是mac，需要加转义符\nuv run --with mcp\\[cli\\] mcp run {YOUR_PATH}/src/main.py\n```\n\n如果没有报错则MCP Server启动成功\n\n### 在Cursor中使用\n\n打开`Cursor`配置，在MCP中添加MCP Server\n\n![](img/cursor_setting.png)\n\n在文件中添加如下内容后保存, TRANSLATIONX_TOKEN 可以在[X-DOC](https://x-doc.ai/)中获取\n\n```json\n{\n  \"mcpServers\": {\n    \"translationx\": {\n      \"command\": \"uv\",\n      \"args\": [\n        \"run\",\n        \"--with\",\n        \"mcp[cli]\",\n        \"mcp\",\n        \"run\",\n        \"{YOUR_PATH}/src/main.py\"\n      ],\n      \"env\": {\n        \"token\": \"<YOUR_TRANSLATIONX_TOKEN>\"\n      }\n    }\n  }\n}\n```\n\n回到配置，此时TranslationX MCP Server已经启用\n\n![](img/cursor_run_mcp_success.png)\n\n### 测试\n\n创建项目,并创建文件夹,然后文件到文件夹中，并提交翻译：\n\n![](img/cursor_test_1.png)\n![](img/cursor_test_1_1.png)\n\n![](/img/cursor_test_2.png)"
}