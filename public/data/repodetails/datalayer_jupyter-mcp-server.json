{
  "mcp_name": "datalayer/jupyter-mcp-server",
  "mcp_description": "üêç üè† - Model Context Protocol (MCP) Server for Jupyter.",
  "mcp_id": "datalayer_jupyter-mcp-server",
  "fetch_timestamp": "2025-06-23T02:29:30.090555Z",
  "github_url": "https://github.com/datalayer/jupyter-mcp-server",
  "repository": {
    "name": "jupyter-mcp-server",
    "full_name": "datalayer/jupyter-mcp-server",
    "description": "ü™ê ‚ú® Model Context Protocol (MCP) Server for Jupyter.",
    "html_url": "https://github.com/datalayer/jupyter-mcp-server",
    "created_at": "2025-02-12T06:41:35Z",
    "updated_at": "2025-06-22T16:39:19Z",
    "pushed_at": "2025-06-20T14:07:41Z",
    "size": 155,
    "stargazers_count": 411,
    "watchers_count": 411,
    "forks_count": 75,
    "open_issues_count": 5,
    "language": "Python",
    "license": "BSD 3-Clause \"New\" or \"Revised\" License",
    "topics": [
      "ai",
      "jupyter",
      "mcp",
      "mcp-server",
      "tools"
    ],
    "default_branch": "main",
    "owner": {
      "login": "datalayer",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/5007189?v=4",
      "html_url": "https://github.com/datalayer"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 75,
    "subscribers_count": 13,
    "languages": {
      "Python": 10991,
      "Makefile": 1843,
      "Jupyter Notebook": 569,
      "Dockerfile": 412
    },
    "language_percentages": {
      "Python": 79.56,
      "Makefile": 13.34,
      "Jupyter Notebook": 4.12,
      "Dockerfile": 2.98
    },
    "pull_requests_count": 15,
    "contributors_count": 6
  },
  "readme": "<!--\n  ~ Copyright (c) 2023-2024 Datalayer, Inc.\n  ~\n  ~ BSD 3-Clause License\n-->\n\n[![Datalayer](https://assets.datalayer.tech/datalayer-25.svg)](https://datalayer.io)\n[![Become a Sponsor](https://img.shields.io/static/v1?label=Become%20a%20Sponsor&message=%E2%9D%A4&logo=GitHub&style=flat&color=1ABC9C)](https://github.com/sponsors/datalayer)\n\n# ü™ê‚ú® Jupyter MCP Server\n\n[![PyPI - Version](https://img.shields.io/pypi/v/jupyter-mcp-server)](https://pypi.org/project/jupyter-mcp-server)\n[![smithery badge](https://smithery.ai/badge/@datalayer/jupyter-mcp-server)](https://smithery.ai/server/@datalayer/jupyter-mcp-server)\n\n**Jupyter MCP Server** is a [Model Context Protocol](https://modelcontextprotocol.io) (MCP) server implementation that provides interaction with üìì Jupyter notebooks running in any JupyterLab (works also with your üíª local JupyterLab).\n\n## üöÄ Key Features\n\n- ‚ö° **Real-time control:** Instantly view notebook changes as they happen.\n- üîÅ **Smart execution:** Automatically adjusts when a cell run fails thanks to cell output feedback.\n- ü§ù **MCP-Compatible:** Works with any MCP client, such as Claude Desktop, Cursor, Windsurf, and more.\n\n![Jupyter MCP Server Demo](https://assets.datalayer.tech/jupyter-mcp/jupyter-mcp-server-claude-demo.gif)\n\nüõ†Ô∏è This MCP offers multiple tools such as `insert_execute_code_cell`, `append_markdown_cell`, `get_notebook_info`, `read_cell`, and more, enabling advanced interactions with Jupyter notebooks. Explore our [Tools documentation](https://jupyter-mcp-server.datalayer.tech/tools) to learn about all the tools powering Jupyter MCP Server.\n\n## üèÅ Getting Started\n\nFor comprehensive setup instructions‚Äîincluding `Streamable HTTP` transport and advanced configuration‚Äîsee our [Setup Guide](https://jupyter-mcp-server.datalayer.tech/setup). Or, get started quickly with the `stdio` transport below:\n\n### 1. Set Up Your Environment\n\n```bash\npip install jupyterlab==4.4.1 jupyter-collaboration==4.0.2 ipykernel\npip uninstall -y pycrdt datalayer_pycrdt\npip install datalayer_pycrdt==0.12.17\n```\n\n### 2. Start JupyterLab\n\n```bash\njupyter lab --port 8888 --IdentityProvider.token MY_TOKEN --ip 0.0.0.0\n```\n\n### 3. Configure Your Preferred MCP Client\n\n#### MacOS and Windows\n\n```json\n{\n  \"mcpServers\": {\n    \"jupyter\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"-i\",\n        \"--rm\",\n        \"-e\",\n        \"SERVER_URL\",\n        \"-e\",\n        \"TOKEN\",\n        \"-e\",\n        \"NOTEBOOK_PATH\",\n        \"datalayer/jupyter-mcp-server:latest\"\n      ],\n      \"env\": {\n        \"SERVER_URL\": \"http://host.docker.internal:8888\",\n        \"TOKEN\": \"MY_TOKEN\",\n        \"NOTEBOOK_PATH\": \"notebook.ipynb\"\n      }\n    }\n  }\n}\n```\n\n#### Linux\n\n```json\n{\n  \"mcpServers\": {\n    \"jupyter\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"-i\",\n        \"--rm\",\n        \"-e\",\n        \"SERVER_URL\",\n        \"-e\",\n        \"TOKEN\",\n        \"-e\",\n        \"NOTEBOOK_PATH\",\n        \"--network=host\",\n        \"datalayer/jupyter-mcp-server:latest\"\n      ],\n      \"env\": {\n        \"SERVER_URL\": \"http://localhost:8888\",\n        \"TOKEN\": \"MY_TOKEN\",\n        \"NOTEBOOK_PATH\": \"notebook.ipynb\"\n      }\n    }\n  }\n}\n```\n\nFor detailed instructions on configuring various MCP clients‚Äîincluding [Claude Desktop](https://jupyter-mcp-server.datalayer.tech/clients/claude_desktop), [Cursor](https://jupyter-mcp-server.datalayer.tech/clients/cursor), [Cline](https://jupyter-mcp-server.datalayer.tech/clients/cline), and [Windsurf](https://jupyter-mcp-server.datalayer.tech/clients/windsurf)‚Äîsee the [Clients documentation](https://jupyter-mcp-server.datalayer.tech/clients).\n\n## üìö Resources\n\nLooking for blog posts, videos, or other materials about Jupyter MCP Server?<br>\nüëâ Visit the [Resources section](https://jupyter-mcp-server.datalayer.tech/resources) for more.\n"
}