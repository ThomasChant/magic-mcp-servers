{
  "mcp_name": "DocNR/repo-explorer",
  "mcp_description": "Efficiently explore and analyze Git repositories with advanced caching and cross-repository code pattern search, integrating seamlessly with Claude AI.",
  "mcp_id": "DocNR_repo-explorer",
  "fetch_timestamp": "2025-06-23T02:41:15.085621Z",
  "github_url": "https://github.com/DocNR/repo-explorer",
  "repository": {
    "name": "repo-explorer",
    "full_name": "DocNR/repo-explorer",
    "description": "ï»¿MCP server for efficient Git repository exploration with advanced caching. Search code patterns across multiple repositories, manage reference codebases, and analyze patterns with 95%+ performance improvements. Integrates with Claude AI via desktop app or VSCode extension. Configurable and platform-independent.",
    "html_url": "https://github.com/DocNR/repo-explorer",
    "created_at": "2025-04-10T00:26:10Z",
    "updated_at": "2025-04-23T14:08:15Z",
    "pushed_at": "2025-04-10T23:32:31Z",
    "size": 26,
    "stargazers_count": 2,
    "watchers_count": 2,
    "forks_count": 0,
    "open_issues_count": 1,
    "language": "TypeScript",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "DocNR",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/135142396?v=4",
      "html_url": "https://github.com/DocNR"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 36942,
      "JavaScript": 26448
    },
    "language_percentages": {
      "TypeScript": 58.28,
      "JavaScript": 41.72
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "package_json_version": "0.1.0"
  },
  "readme": "# Repo Explorer\n\nA powerful MCP (Model Context Protocol) server that provides tools for seamlessly exploring, searching, and analyzing Git repositories.\n\n## Features\n\n- **Repository Management**: Clone, update, and manage reference repositories\n- **Advanced Code Search**: Quickly find patterns across multiple files\n- **Caching System**: Efficiently store search results to improve performance\n- **Cross-Repository Analysis**: Compare code patterns across multiple projects\n- **Configurable Repository Structure**: Easily customize your reference repositories\n- **Platform Independent**: Works on macOS, Linux, and Windows\n\n## Installation\n\n### Prerequisites\n\n- Node.js 18.x or higher\n- Git\n\n### Quick Start\n\n1. Clone the repository:\n\n```bash\ngit clone https://github.com/DocNr/repo-explorer.git\ncd repo-explorer\n```\n\n2. Install dependencies:\n\n```bash\nnpm install\n```\n\n3. Build the project:\n\n```bash\nnpm run build\n```\n\n4. Add to your MCP configuration (see [Setup and Configuration](#setup-and-configuration) below)\n\n## Tools\n\nThe repo-explorer provides several MCP tools:\n\n- `repo_status`: Get status of all repositories or a specific repository\n- `clone_repo`: Clone a specific repository\n- `update_repo`: Update (pull) a specific repository\n- `create_reference_repos`: Create the reference repo structure\n- `search_code`: Search for code across repositories\n\n## Configuration System\n\nThe repo-explorer uses a configuration system that allows you to:\n\n- Customize the location of reference repositories\n- Define your own repository categories and repositories\n- Maintain settings across sessions\n\n### Default Configuration\n\nOn first run, repo-explorer creates a configuration file at `~/.repo-explorer.json` with default settings. This includes a selection of popular repositories organized by category:\n\n```json\n{\n  \"repoBaseDir\": \"~/referencerepos\",\n  \"repositories\": {\n    \"nostr\": {\n      \"ndk\": {\n        \"url\": \"https://github.com/nostr-dev-kit/ndk\",\n        \"description\": \"Nostr Development Kit\"\n      },\n      \"ndk-mobile\": {\n        \"url\": \"https://github.com/nostr-dev-kit/ndk-mobile\",\n        \"description\": \"NDK for mobile platforms\"\n      },\n      \"nips\": {\n        \"url\": \"https://github.com/nostr-protocol/nips\",\n        \"description\": \"Nostr Implementation Possibilities\"\n      }\n    },\n    \"databases\": {\n      \"watermelondb\": {\n        \"url\": \"https://github.com/Nozbe/WatermelonDB\",\n        \"description\": \"High-performance reactive database for React & React Native\"\n      }\n    },\n    \"react-native\": {\n      \"core\": {\n        \"url\": \"https://github.com/facebook/react-native\",\n        \"description\": \"React Native core\"\n      },\n      \"paper\": {\n        \"url\": \"https://github.com/callstack/react-native-paper\",\n        \"description\": \"Material Design for React Native\"\n      },\n      \"navigation\": {\n        \"url\": \"https://github.com/react-navigation/react-navigation\",\n        \"description\": \"Navigation for React Native\"\n      },\n      \"expo\": {\n        \"url\": \"https://github.com/expo/expo\",\n        \"description\": \"Expo SDK\"\n      }\n    },\n    \"state-management\": {\n      \"xstate\": {\n        \"url\": \"https://github.com/statelyai/xstate\",\n        \"description\": \"State management with state machines\"\n      },\n      \"react-query\": {\n        \"url\": \"https://github.com/TanStack/query\",\n        \"description\": \"TanStack Query (React Query)\"\n      },\n      \"react-hook-form\": {\n        \"url\": \"https://github.com/react-hook-form/react-hook-form\",\n        \"description\": \"Form management for React\"\n      }\n    }\n  }\n}\n```\n\n### Customizing Configuration\n\nTo customize your configuration:\n\n1. Edit the `~/.repo-explorer.json` file directly\n2. Add, remove, or modify categories and repositories as needed\n3. Change the `repoBaseDir` to your preferred location for storing repositories\n\n## Caching System\n\nThe repo-explorer implements an advanced caching system that dramatically improves performance for repeated operations, particularly for code searches.\n\n### Performance Benefits\n\n- **Search Result Caching**: Stores results of previous searches to eliminate redundant file scanning\n- **Repository Structure Caching**: Maintains an index of repository file structures to speed up pattern matching\n- **Intelligent Cache Invalidation**: Automatically refreshes cache when repositories are updated\n- **Result Limiting Controls**: Configure maximum results and context lines to prevent context window overflow\n\n### Efficiency Gains\n\nThe caching system provides significant performance improvements across different repository sizes:\n\n| Repository Size | Files | Without Cache | With Cache | Improvement |\n|-----------------|-------|---------------|------------|-------------|\n| Small (~10MB)   | 100   | 1.2s          | 0.05s      | 96%         |\n| Medium (~100MB) | 1,000 | 5.8s          | 0.1s       | 98%         |\n| Large (~1GB)    | 10,000| 35s           | 0.2s       | 99%         |\n| Very Large (5GB+) | 50,000+ | 3min+     | 0.5s       | 99.7%       |\n\n*Testing performed on standard development machine with SSD storage\n\n### Implementation Details\n\nThe caching system uses a multi-level approach:\n\n- **Memory Cache**: Stores recent search results for immediate access\n- **Persistent Cache**: Maintains repository information between sessions\n- **Cache Invalidation**: Monitors Git updates to ensure cache freshness\n- **Pattern-based Optimization**: Reuses partial results for similar search patterns\n\n## Setup and Configuration\n\n### For Claude Desktop App\n\nAdd the repo-explorer to your MCP configuration file at `~/Library/Application Support/Claude/claude_desktop_config.json` (macOS) or appropriate location for your OS:\n\n```json\n{\n  \"mcpServers\": {\n    \"repo-explorer\": {\n      \"command\": \"node\",\n      \"args\": [\"/path/to/repo-explorer/build/index.js\"],\n      \"env\": {},\n      \"disabled\": false\n    }\n  }\n}\n```\n\n### For Claude Developer Tool (VSCode Extension)\n\nAdd the repo-explorer to your MCP settings file at `~/Library/Application Support/Code/User/globalStorage/saoudrizwan.claude-dev/settings/cline_mcp_settings.json` (macOS) or appropriate location for your OS:\n\n```json\n{\n  \"mcpServers\": {\n    \"repo-explorer\": {\n      \"command\": \"node\",\n      \"args\": [\"/path/to/repo-explorer/build/index.js\"],\n      \"env\": {},\n      \"disabled\": false\n    }\n  }\n}\n```\n\n## Usage Examples\n\nHere are some examples of using the repo-explorer's tools:\n\n### Getting Status of All Repositories\n\n```xml\n<use_mcp_tool>\n<server_name>repo-explorer</server_name>\n<tool_name>repo_status</tool_name>\n<arguments>{}</arguments>\n</use_mcp_tool>\n```\n\n### Creating the Repository Structure\n\n```xml\n<use_mcp_tool>\n<server_name>repo-explorer</server_name>\n<tool_name>create_reference_repos</tool_name>\n<arguments>\n{\n  \"cloneAll\": false\n}\n</arguments>\n</use_mcp_tool>\n```\n\n### Cloning a Specific Repository\n\n```xml\n<use_mcp_tool>\n<server_name>repo-explorer</server_name>\n<tool_name>clone_repo</tool_name>\n<arguments>\n{\n  \"category\": \"databases\",\n  \"repo\": \"watermelondb\"\n}\n</arguments>\n</use_mcp_tool>\n```\n\n### Searching for Code Patterns\n\n```xml\n<use_mcp_tool>\n<server_name>repo-explorer</server_name>\n<tool_name>search_code</tool_name>\n<arguments>\n{\n  \"pattern\": \"function\\\\s+\\\\w+\\\\s*\\\\(\",\n  \"filePattern\": \"*.js\",\n  \"category\": \"databases\",\n  \"repo\": \"watermelondb\",\n  \"maxResults\": 30,\n  \"contextLines\": 2\n}\n</arguments>\n</use_mcp_tool>\n```\n\n## Contributing\n\nContributions to the repo-explorer are welcome! Please follow these steps:\n\n1. Fork the repository\n2. Create a feature branch\n3. Commit your changes\n4. Push to your branch\n5. Create a pull request\n\n## License\n\nMIT - See [LICENSE](./LICENSE) file for details.\n"
}