{
  "mcp_name": "veithly/ipfs-uploader",
  "mcp_description": "A TypeScript-based MCP server for uploading images to IPFS, featuring a simple notes system with text note creation and summarization tools.",
  "mcp_id": "veithly_ipfs-uploader",
  "fetch_timestamp": "2025-06-23T09:17:03.593560Z",
  "github_url": "https://github.com/veithly/ipfs-uploader",
  "repository": {
    "name": "ipfs-uploader",
    "full_name": "veithly/ipfs-uploader",
    "description": null,
    "html_url": "https://github.com/veithly/ipfs-uploader",
    "created_at": "2025-04-24T07:26:34Z",
    "updated_at": "2025-04-24T07:26:43Z",
    "pushed_at": "2025-04-24T07:26:39Z",
    "size": 10,
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "JavaScript",
    "license": null,
    "topics": [],
    "default_branch": "master",
    "owner": {
      "login": "veithly",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/6553213?v=4",
      "html_url": "https://github.com/veithly"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 1,
    "languages": {
      "JavaScript": 7647
    },
    "language_percentages": {
      "JavaScript": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 1,
    "package_json_version": "0.1.0"
  },
  "readme": "# ipfs-uploader MCP Server\n\nupload img to ipfs\n\nThis is a TypeScript-based MCP server that implements a simple notes system. It demonstrates core MCP concepts by providing:\n\n- Resources representing text notes with URIs and metadata\n- Tools for creating new notes\n- Prompts for generating summaries of notes\n\n## Features\n\n### Resources\n- List and access notes via `note://` URIs\n- Each note has a title, content and metadata\n- Plain text mime type for simple content access\n\n### Tools\n- `create_note` - Create new text notes\n  - Takes title and content as required parameters\n  - Stores note in server state\n\n### Prompts\n- `summarize_notes` - Generate a summary of all stored notes\n  - Includes all note contents as embedded resources\n  - Returns structured prompt for LLM summarization\n\n## Development\n\nInstall dependencies:\n```bash\nnpm install\n```\n\nBuild the server:\n```bash\nnpm run build\n```\n\nFor development with auto-rebuild:\n```bash\nnpm run watch\n```\n\n## Installation\n\nTo use with Claude Desktop, add the server config:\n\nOn MacOS: `~/Library/Application Support/Claude/claude_desktop_config.json`\nOn Windows: `%APPDATA%/Claude/claude_desktop_config.json`\n\n```json\n{\n  \"mcpServers\": {\n    \"ipfs-uploader\": {\n      \"command\": \"/path/to/ipfs-uploader/build/index.js\"\n    }\n  }\n}\n```\n\n### Debugging\n\nSince MCP servers communicate over stdio, debugging can be challenging. We recommend using the [MCP Inspector](https://github.com/modelcontextprotocol/inspector), which is available as a package script:\n\n```bash\nnpm run inspector\n```\n\nThe Inspector will provide a URL to access debugging tools in your browser.\n"
}