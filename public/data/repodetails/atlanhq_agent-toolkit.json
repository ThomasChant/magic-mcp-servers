{
  "mcp_name": "Atlan",
  "mcp_description": "Official MCP Server from [Atlan](https://atlan.com) which enables you to bring the power of metadata to your AI tools",
  "mcp_id": "atlanhq_agent-toolkit",
  "fetch_timestamp": "2025-06-23T01:20:29.897553Z",
  "github_url": "https://github.com/atlanhq/agent-toolkit/tree/main/modelcontextprotocol",
  "repository": {
    "name": "agent-toolkit",
    "full_name": "atlanhq/agent-toolkit",
    "description": "Atlan AI Agent Toolkit",
    "html_url": "https://github.com/atlanhq/agent-toolkit",
    "created_at": "2025-04-03T11:23:08Z",
    "updated_at": "2025-06-18T11:13:33Z",
    "pushed_at": "2025-06-21T01:12:18Z",
    "size": 238,
    "stargazers_count": 18,
    "watchers_count": 18,
    "forks_count": 13,
    "open_issues_count": 24,
    "language": "Python",
    "license": "MIT License",
    "topics": [
      "agents",
      "ai",
      "atlan",
      "catalog",
      "llm",
      "mcp"
    ],
    "default_branch": "main",
    "owner": {
      "login": "atlanhq",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/47002402?v=4",
      "html_url": "https://github.com/atlanhq"
    },
    "has_issues": true,
    "has_projects": false,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 13,
    "subscribers_count": 15,
    "languages": {
      "Python": 51179,
      "Dockerfile": 972,
      "JavaScript": 388
    },
    "language_percentages": {
      "Python": 97.41,
      "Dockerfile": 1.85,
      "JavaScript": 0.74
    },
    "pull_requests_count": 58,
    "contributors_count": 8,
    "latest_release": {
      "tag_name": "v0.2.1",
      "name": "v0.2.1",
      "published_at": "2025-05-30T07:04:16Z",
      "body": "## [0.2.1] - 2025-05-30\n\n### Changed\n\n* Release [0.2.1] (#79) (2ee1981)\n* Restrict the Information sent to Agent (#78) (f8f35f4)\n\n",
      "prerelease": false,
      "draft": false
    },
    "tags": [
      {
        "name": "v0.2.1",
        "commit_sha": "2ee198110aed24fe5d88bad6f4a1f62257a5f257"
      },
      {
        "name": "v0.2.0",
        "commit_sha": "a04729f1fe4507a41b9581cfc9632b9383664fa2"
      },
      {
        "name": "v0.1.0",
        "commit_sha": "d10616a593363b17c42d449f549458a43ffdc5ba"
      }
    ],
    "latest_version": "v0.2.1"
  },
  "readme": "# Atlan Agent Toolkit\n\nThis repository contains a collection of tools and protocols for interacting with Atlan services for AI agents. Each component is designed to provide specific functionality and can be used independently or together.\n\n## Components\n\n### [Model Context Protocol (MCP)](modelcontextprotocol/README.md)\nA protocol server that enables interaction with Atlan services through function calling. Provides tools for asset search, and retrieval using [pyatlan](https://developer.atlan.com/sdks/python/).\n\n\n## Contributing Guidelines\n\nWe welcome contributions to the Atlan Agent Toolkit! Please follow these guidelines when submitting pull requests:\n\n1. **Create a New Branch:**\n   - Create a new branch for your changes.\n   - Use a descriptive name for the branch (e.g., `feature/add-new-tool`).\n\n2. **Make Your Changes:**\n   - Make your changes in the new branch.\n   - Ensure your tools are well-defined and follow the MCP specification.\n\n3. **Submit a Pull Request:**\n   - Push your changes to your branch.\n   - Create a pull request against the `main` branch.\n   - Provide a clear description of the changes and any related issues.\n   - Ensure the PR passes all CI checks before requesting a review.\n\n4. **Code Quality:**\n   - We use pre-commit hooks to maintain code quality.\n   - Install pre-commit in your local environment:\n     ```bash\n     uv pip install pre-commit\n     pre-commit install\n     ```\n   - Pre-commit will automatically run checks before each commit, including:\n     - Code formatting with Ruff\n     - Trailing whitespace removal\n     - End-of-file fixing\n     - YAML and JSON validation\n     - Other quality checks\n\n5. **Environment Setup:**\n   - This project uses UV for dependency management.\n   - Refer to the [Model Context Protocol README](modelcontextprotocol/README.md) for setup instructions.\n   - Python 3.11 or higher is required.\n\n6. **Documentation:**\n   - Update documentation to reflect your changes.\n   - Add comments to your code where necessary.\n"
}