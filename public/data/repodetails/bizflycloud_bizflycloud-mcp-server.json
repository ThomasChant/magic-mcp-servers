{
  "mcp_name": "bizflycloud/bizflycloud-mcp-server",
  "mcp_description": "Connects to Bizfly Cloud for comprehensive cloud resource management, utilizing the mark3labs/mcp-go SDK.",
  "mcp_id": "bizflycloud_bizflycloud-mcp-server",
  "fetch_timestamp": "2025-06-23T01:42:03.678158Z",
  "github_url": "https://github.com/bizflycloud/bizflycloud-mcp-server",
  "repository": {
    "name": "bizflycloud-mcp-server",
    "full_name": "bizflycloud/bizflycloud-mcp-server",
    "description": "A Model Context Protocol (MCP) server implementation that connects to Bizfly Cloud to manage cloud resources",
    "html_url": "https://github.com/bizflycloud/bizflycloud-mcp-server",
    "created_at": "2025-04-18T09:29:25Z",
    "updated_at": "2025-04-21T07:33:36Z",
    "pushed_at": "2025-04-18T09:30:14Z",
    "size": 6088,
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks_count": 0,
    "open_issues_count": 0,
    "language": "Go",
    "license": null,
    "topics": [],
    "default_branch": "master",
    "owner": {
      "login": "bizflycloud",
      "type": "Organization",
      "avatar_url": "https://avatars.githubusercontent.com/u/53174020?v=4",
      "html_url": "https://github.com/bizflycloud"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 2,
    "languages": {
      "Go": 34806
    },
    "language_percentages": {
      "Go": 100
    },
    "pull_requests_count": 0,
    "contributors_count": 1
  },
  "readme": "# Bizfly Cloud MCP Server\n\nA Model Context Protocol (MCP) server implementation that connects to Bizfly Cloud to manage cloud resources. Built using the [mark3labs/mcp-go](https://github.com/mark3labs/mcp-go) SDK.\n\n## Prerequisites\n\n-   Go 1.21 or later\n-   Bizfly Cloud account credentials\n-   Cursor or Claude Desktop installed\n\n## Setup\n\n1. Clone the repository\n2. Set up your environment variables:\n    ```bash\n    export BIZFLY_USERNAME=your_username\n    export BIZFLY_PASSWORD=your_password\n    export BIZFLY_REGION=HaNoi  # Optional, defaults to HaNoi\n    export BIZFLY_API_URL=https://manage.Bizfly Cloud.vn  # Optional, defaults to https://manage.Bizfly Cloud.vn\n    ```\n3. Install dependencies:\n    ```bash\n    go mod download\n    ```\n\n## Running the Server\n\n### For Cursor/Claude Desktop Integration\n\n1. Build the server:\n\n    ```bash\n    go build -o bizfly-mcp-server\n    ```\n\n2. Configure your MCP client (Cursor or Claude Desktop) by adding the following to the configuration:\n\nFor Cursor:\n\n```json\n{\n    \"mcpServers\": {\n        \"bizfly\": {\n            \"command\": \"/absolute/path/to/bizfly-mcp-server\",\n            \"env\": {\n                \"BIZFLY_USERNAME\": \"your_username\",\n                \"BIZFLY_PASSWORD\": \"your_password\",\n                \"BIZFLY_REGION\": \"HaNoi\"\n            }\n        }\n    }\n}\n```\n\nFor Claude Desktop (`~/Library/Application Support/Claude/claude_desktop_config.json`):\n\n```json\n{\n    \"mcpServers\": {\n        \"bizfly\": {\n            \"command\": \"/absolute/path/to/bizfly-mcp-server\",\n            \"env\": {\n                \"BIZFLY_USERNAME\": \"your_username\",\n                \"BIZFLY_PASSWORD\": \"your_password\",\n                \"BIZFLY_REGION\": \"HaNoi\"\n            }\n        }\n    }\n}\n```\n\n## Available Tools\n\nThe server provides the following MCP tools:\n\n### Server Management\n\n-   `list_servers` - List all Bizfly Cloud servers\n-   `start_server` - Start a server\n-   `reboot_server` - Reboot a server\n-   `delete_server` - Delete a server\n-   `resize_server` - Resize a server\n-   `list_flavors` - List available server flavors\n\n### Volume Management\n\n-   `list_volumes` - List all volumes\n-   `create_volume` - Create a new volume\n-   `delete_volume` - Delete a volume\n-   `resize_volume` - Resize a volume\n-   `list_snapshots` - List all volume snapshots\n-   `create_snapshot` - Create a volume snapshot\n-   `delete_snapshot` - Delete a volume snapshot\n\n### Load Balancer Management\n\n-   `list_loadbalancers` - List all load balancers\n-   `create_loadbalancer` - Create a new load balancer\n-   `delete_loadbalancer` - Delete a load balancer\n\n### Kubernetes Management\n\n-   `list_kubernetes_clusters` - List all Kubernetes clusters\n-   `create_kubernetes_cluster` - Create a new Kubernetes cluster\n-   `delete_kubernetes_cluster` - Delete a Kubernetes cluster\n-   `list_kubernetes_nodes` - List nodes in a cluster\n\n### Database Management\n\n-   `list_databases` - List all databases\n-   `list_datastores` - List available database engines and versions\n-   `create_database` - Create a new database\n-   `delete_database` - Delete a database\n\n## Example Usage\n\nYou can interact with the server through natural language queries in Cursor or Claude Desktop:\n\n-   \"Show me all my Bizfly Cloud servers\"\n-   \"List all volumes in my Bizfly Cloud account\"\n-   \"Create a new load balancer\"\n-   \"List available Kubernetes clusters\"\n-   \"Show me all databases\"\n\n## MCP Implementation Details\n\nThis server uses the [mark3labs/mcp-go](https://github.com/mark3labs/mcp-go) SDK to implement the Model Context Protocol:\n\n1. **Standard I/O Transport**: Uses stdin/stdout for communication with MCP clients\n2. **Tool Definitions**: Clear tool descriptions and parameters\n3. **Error Handling**: Proper error reporting in MCP format\n4. **Text Formatting**: Human-readable output for resource listings\n\n## Authentication\n\nThe server uses your Bizfly Cloud username and password for authentication through environment variables:\n\n-   `BIZFLY_USERNAME`: Your Bizfly Cloud username (required)\n-   `BIZFLY_PASSWORD`: Your Bizfly Cloud password (required)\n-   `BIZFLY_REGION`: Region name (optional, defaults to \"HaNoi\")\n-   `BIZFLY_API_URL`: API URL (optional, defaults to \"https://manage.Bizfly Cloud.vn\")\n\nMake sure to keep your credentials secure and never commit them to version control.\n\n## MCP Features\n\n1. **Standard I/O Transport**: Uses stdin/stdout for seamless integration with Cursor/Claude Desktop\n2. **Standardized Response Format**: All responses follow the MCP format with context, type, data, and root fields\n3. **Resource Organization**: Resources are organized under root paths\n4. **Type Safety**: Strong typing for all resources\n5. **Error Handling**: Standardized error responses in MCP format\n"
}