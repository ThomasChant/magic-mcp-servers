{
  "mcp_name": "RobertoDure/mcp-vulnerability-scanner",
  "mcp_description": "Scan IP addresses for vulnerabilities using Nmap and API-based checks, providing detailed reports with severity and remediation steps.",
  "mcp_id": "RobertoDure_mcp-vulnerability-scanner",
  "fetch_timestamp": "2025-06-23T08:01:42.178606Z",
  "github_url": "https://github.com/RobertoDure/mcp-vulnerability-scanner",
  "repository": {
    "name": "mcp-vulnerability-scanner",
    "full_name": "RobertoDure/mcp-vulnerability-scanner",
    "description": "A Model Context Protocol (MCP) server for scanning IP addresses for vulnerabilities. This server provides tools to perform security scanning on individual IPs or multiple IPs at once.",
    "html_url": "https://github.com/RobertoDure/mcp-vulnerability-scanner",
    "created_at": "2025-04-22T12:56:48Z",
    "updated_at": "2025-05-21T12:17:59Z",
    "pushed_at": "2025-05-21T12:17:55Z",
    "size": 179,
    "stargazers_count": 3,
    "watchers_count": 3,
    "forks_count": 1,
    "open_issues_count": 1,
    "language": "TypeScript",
    "license": null,
    "topics": [
      "cybersecurity",
      "mcp",
      "mcp-server",
      "nmap",
      "typescript",
      "vulnerability"
    ],
    "default_branch": "main",
    "owner": {
      "login": "RobertoDure",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/9300167?v=4",
      "html_url": "https://github.com/RobertoDure"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 1,
    "subscribers_count": 1,
    "languages": {
      "TypeScript": 29541,
      "JavaScript": 244
    },
    "language_percentages": {
      "TypeScript": 99.18,
      "JavaScript": 0.82
    },
    "pull_requests_count": 2,
    "contributors_count": 1,
    "package_json_version": "1.0.0"
  },
  "readme": "# MCP Vulnerability Scanner\n\nA Model Context Protocol (MCP) server for scanning IP addresses for vulnerabilities. This server provides tools to perform security scanning on individual IPs or multiple IPs at once.\n\n## Features\n\n- Scan IP addresses for vulnerabilities using multiple methods:\n  - Nmap vulnerability scanning\n  - API-based vulnerability checks\n- Supports single IP scanning or batch scanning of multiple IPs\n- Returns detailed reports with vulnerability severity, descriptions, and remediation steps\n- Implements the Model Context Protocol for easy integration with MCP clients\n\n## Prerequisites\n\n- Node.js (v14.x or higher)\n- npm (v7.x or higher)\n- Nmap (optional, for enhanced scanning capabilities)\n\n## Installation\n\n1. Clone this repository:\n   ```bash\n   git clone <repository-url>\n   cd mcp-vulnerability-scanner\n   ```\n\n2. Install dependencies:\n   ```bash\n   npm install\n   ```\n\n3. Install Nmap (optional but recommended):\n   ```bash\n   # For Ubuntu/Debian\n   sudo apt-get update\n   sudo apt-get install nmap\n   \n   # For CentOS/RHEL\n   sudo yum install nmap\n   \n   # For macOS\n   brew install nmap\n   ```\n\n## Configuration\n\nThe MCP Vulnerability Scanner is configured through the following files:\n\n### 1. `.mcp.json`\n\nThis is the main MCP configuration file:\n\n```json\n{\n  \"name\": \"vulnerability-scanner\",\n  \"version\": \"1.0.0\",\n  \"description\": \"An MCP server for scanning vulnerabilities on IP addresses\",\n  \"command\": \"npm\",\n  \"args\": [\"run\", \"dev\"],\n  \"capabilities\": {\n    \"contextItemTypes\": [\"ip\"]\n  }\n}\n```\n\n### 2. Integration with VS Code\n\nFor VS Code integration, the configuration is in `.vscode/mcp.json`:\n\n```json\n{\n  \"mcpServers\": {\n    \"mcp_vuln\": {\n      \"command\": \"npm\",\n      \"args\": [\n        \"run\",\n        \"dev\",\n        \"mcp-vulnerability-scanner\",\n        \"--prefix\",\n        \"/path/to/mcp-vulnerability-scanner\"\n      ],\n      \"env\": {\n        \"MCP_SERVER_PORT\": \"3000\"\n      }\n    }\n  }\n}\n```\n\nUpdate the `--prefix` path to point to your installation location.\n\n## Usage Example\n\nBelow is a example showing the vulnerability scanner in action:\n\n* Single Ip Addess scan\n\n![Vulnerability Scanner Screenshot](docs/scan-ip.png)\n\n* Multiple Ip Addess scan\n\n![Vulnerability Scanner Screenshot](docs/scan-multiple-ips.png)\n\n## Available Tools\n\nThis MCP server provides the following tools:\n\n### 1. `scan-ip`\n\nScans a single IP address for vulnerabilities.\n\n**Parameters:**\n- `ip`: The IP address to scan (string)\n\n**Example usage:**\n```\nscan-ip 192.168.1.1\n```\n\n### 2. `scan-multiple-ips`\n\nScans multiple IP addresses for vulnerabilities.\n\n**Parameters:**\n- `ips`: Array of IP addresses to scan (string[])\n\n**Example usage:**\n```\nscan-multiple-ips [\"192.168.1.1\", \"192.168.1.2\", \"192.168.1.3\"]\n```\n\n## Deployment Options\n\n### 1. Local Development\n\nRun the server in development mode:\n\n```bash\nnpm run dev\n```\n\n### 2. Build and Run in Production\n\n```bash\nnpm run build\nnpm start\n```\n\n### 3. Docker Deployment\n\nCreate a Dockerfile in the project root:\n\n```dockerfile\nFROM node:18-alpine\n\n# Install Nmap\nRUN apk add --no-cache nmap\n\nWORKDIR /app\n\nCOPY package*.json ./\nRUN npm ci\n\nCOPY . .\nRUN npm run build\n\nEXPOSE 3000\n\nCMD [\"npm\", \"start\"]\n```\n\nBuild and run the Docker container:\n\n```bash\ndocker build -t mcp-vulnerability-scanner .\ndocker run -p 3000:3000 mcp-vulnerability-scanner\n```\n\n### 4. VS Code Extension Integration\n\nTo use this server in VS Code:\n\n1. Configure the `.vscode/mcp.json` file as shown above\n2. Ensure the path to the server is correctly set\n3. The server will be available to MCP-enabled extensions\n\n## Security Considerations\n\n- This scanner requires administrative/root permissions to run comprehensive Nmap scans\n- Only scan IP addresses that you have permission to scan\n- Be aware that vulnerability scanning might trigger security systems or IDS alerts\n- The scan results are provided for informational purposes only\n\n## License\n\nMIT\n"
}