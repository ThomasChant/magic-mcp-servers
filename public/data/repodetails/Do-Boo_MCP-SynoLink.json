{
  "mcp_name": "Do-Boo/MCP-SynoLink",
  "mcp_description": "Facilitates file operations on Synology NAS devices through AI assistants using Node.js.",
  "mcp_id": "Do-Boo_MCP-SynoLink",
  "fetch_timestamp": "2025-06-23T02:40:42.256565Z",
  "github_url": "https://github.com/Do-Boo/MCP-SynoLink",
  "repository": {
    "name": "MCP-SynoLink",
    "full_name": "Do-Boo/MCP-SynoLink",
    "description": "MCP server for Synology NAS file operations",
    "html_url": "https://github.com/Do-Boo/MCP-SynoLink",
    "created_at": "2025-04-04T02:43:17Z",
    "updated_at": "2025-06-16T04:39:31Z",
    "pushed_at": "2025-04-04T04:02:04Z",
    "size": 24,
    "stargazers_count": 8,
    "watchers_count": 8,
    "forks_count": 6,
    "open_issues_count": 1,
    "language": "JavaScript",
    "license": null,
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "Do-Boo",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/165113850?v=4",
      "html_url": "https://github.com/Do-Boo"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 6,
    "subscribers_count": 1,
    "languages": {
      "JavaScript": 22736,
      "Dockerfile": 473
    },
    "language_percentages": {
      "JavaScript": 97.96,
      "Dockerfile": 2.04
    },
    "pull_requests_count": 1,
    "contributors_count": 1,
    "package_json_version": "1.0.0"
  },
  "readme": "# SynoLink MCP Server\n\nA Node.js server implementing Model Context Protocol (MCP) for Synology NAS file operations. This server allows you to interact with your Synology NAS device through Claude or other compatible AI assistants.\n\n## Features\n\n- Login/logout to Synology DSM\n- List files and folders\n- Download file contents\n- Upload files\n- Create folders\n- Delete files/folders\n- Move/rename files and folders\n- Search functionality\n- Create and list sharing links\n- Get server information\n- Get quota information\n\n## Prerequisites\n\n- Node.js 18 or higher\n- npm or yarn\n- Synology NAS with DSM 6.0 or higher\n- Network access to your Synology NAS\n\n## Installation\n\nClone this repository:\n\n```bash\ngit clone https://github.com/Do-Boo/MCP-SynoLink.git\ncd MCP-SynoLink\n```\n\nInstall dependencies:\n\n```bash\nnpm install\n```\n\nBuild the project:\n\n```bash\nnpm run build\n```\n\n## Usage with Claude Desktop\n\n### Node.js Method\n\nAdd this to your `claude_desktop_config.json`:\n\n```json\n{\n  \"mcpServers\": {\n    \"synolink\": {\n      \"command\": \"node\",\n      \"args\": [\n        \"/path/to/MCP-SynoLink/dist/index.js\",\n        \"https://your-synology-url:port\",\n        \"your-username\",\n        \"your-password\"\n      ]\n    }\n  }\n}\n```\n\n### Docker Method\n\nBuild the Docker image:\n\n```bash\ndocker build -t mcp/synolink .\n```\n\nThen add this to your `claude_desktop_config.json`:\n\n```json\n{\n  \"mcpServers\": {\n    \"synolink\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"-i\",\n        \"--rm\",\n        \"mcp/synolink\",\n        \"https://your-synology-url:port\",\n        \"your-username\",\n        \"your-password\"\n      ]\n    }\n  }\n}\n```\n\n### Security Note\n\nAlways be careful with credentials. The current implementation sends the password as a command-line argument, which may be visible in process listings. For improved security in a production environment, consider implementing alternative authentication methods.\n\n## API Documentation\n\nThe server provides the following tools:\n\n### Authentication Tools\n\n- **login**\n  - Authenticates with the Synology NAS\n  - No parameters required (uses credentials from command line)\n\n- **logout**\n  - Logs out from the Synology NAS\n  - No parameters required\n\n### File Management Tools\n\n- **list_folders**\n  - Lists files and folders in a directory\n  - Input: `path` (string) - Path to list files from, e.g., '/photos'\n\n- **get_file**\n  - Gets the content of a file\n  - Input: `path` (string) - Full path to the file on Synology NAS\n\n- **upload_file**\n  - Uploads a file to Synology NAS\n  - Inputs:\n    - `path` (string) - Destination path on Synology NAS including filename\n    - `content` (string) - Content of the file to upload\n\n- **create_folder**\n  - Creates a new folder\n  - Inputs:\n    - `path` (string) - Full path to create folder at\n    - `name` (string) - Name of the new folder\n\n- **delete_item**\n  - Deletes a file or folder\n  - Input: `path` (string) - Full path to the file or folder to delete\n\n- **move_item**\n  - Moves or renames a file or folder\n  - Inputs:\n    - `source` (string) - Full path to the source file or folder\n    - `destination` (string) - Full path to the destination location\n\n### Search and Information Tools\n\n- **search**\n  - Searches for files and folders\n  - Inputs:\n    - `keyword` (string) - Search keyword\n    - `path` (string, optional) - Path to search in, defaults to \"/\"\n\n- **get_share_links**\n  - Gets or creates sharing links for a file or folder\n  - Input: `path` (string) - Path to get share links for\n\n- **get_server_info**\n  - Gets information about the Synology server\n  - No parameters required\n\n- **get_quota_info**\n  - Gets quota information for volumes\n  - Input: `volume` (string, optional) - Volume name, if omitted shows all volumes\n\n## License\n\nMIT License\n\n## Acknowledgements\n\n- [Synology Web API](https://global.download.synology.com/download/Document/Software/DeveloperGuide/Package/FileStation/All/enu/Synology_File_Station_API_Guide.pdf)\n- [Model Context Protocol](https://modelcontextprotocol.io/)\n"
}