{
  "mcp_name": "Gitreceiver/TAMA-MCP",
  "mcp_description": "Tama is an AI-enhanced task management CLI that operates as an MCP server, enabling programmatic task management and AI-driven task expansion.",
  "mcp_id": "Gitreceiver_TAMA-MCP",
  "fetch_timestamp": "2025-06-23T03:49:36.277662Z",
  "github_url": "https://github.com/Gitreceiver/TAMA-MCP",
  "repository": {
    "name": "TAMA-MCP",
    "full_name": "Gitreceiver/TAMA-MCP",
    "description": "AI-Powered Task Manager CLI with MCP Server",
    "html_url": "https://github.com/Gitreceiver/TAMA-MCP",
    "created_at": "2025-04-16T15:53:15Z",
    "updated_at": "2025-06-07T15:53:06Z",
    "pushed_at": "2025-05-21T00:43:46Z",
    "size": 142,
    "stargazers_count": 5,
    "watchers_count": 5,
    "forks_count": 0,
    "open_issues_count": 2,
    "language": "Python",
    "license": "MIT License",
    "topics": [],
    "default_branch": "main",
    "owner": {
      "login": "Gitreceiver",
      "type": "User",
      "avatar_url": "https://avatars.githubusercontent.com/u/92655603?v=4",
      "html_url": "https://github.com/Gitreceiver"
    },
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "archived": false,
    "disabled": false,
    "visibility": "public",
    "network_count": 0,
    "subscribers_count": 2,
    "languages": {
      "Python": 177898
    },
    "language_percentages": {
      "Python": 100
    },
    "pull_requests_count": 1,
    "contributors_count": 2
  },
  "readme": "# Tama - AI-Powered Task Manager CLI ✨\n\n![TAMA-icon|500](https://raw.gitmirror.com/Gitreceiver/Obsidian-pics/refs/heads/main/obsidian/202504171218630.jpg)\n\n[中文](https://github.com/Gitreceiver/TAMA-MCP/blob/main/README_zh.md)\n\nTama is a Command-Line Interface (CLI) tool designed for managing tasks, enhanced with AI capabilities for task generation and expansion. It utilizes AI (specifically configured for DeepSeek models via their OpenAI-compatible API) to parse Product Requirements Documents (PRDs) and break down complex tasks into manageable subtasks.\n\n## Features\n\n*   **Standard Task Management:** Add, list, show details, update status, and remove tasks and subtasks with dependency tracking.\n*   **Dependency Management:** Add, remove, and track task dependencies with automatic cycle detection.\n*   **AI-Powered PRD Parsing:** (`tama prd <filepath>`) Automatically generate a structured task list from a `.txt` or `.prd` file.\n*   **AI-Powered Task Expansion:** (`tama expand <task_id>`) Break down a high-level task into detailed subtasks using AI.\n*   **Dependency Checking:** (`tama deps`) Detect and visualize circular dependencies within your tasks.\n*   **Reporting:** (`tama report [markdown|mermaid]`) Generate task reports in Markdown table format or as a Mermaid dependency graph.\n*   **Code Stub Generation:** (`tama gen-file <task_id>`) Create placeholder code files based on task details.\n*   **Next Task Suggestion:** (`tama next`) Identify the next actionable task based on status and dependencies.\n*   **Rich CLI Output:** Uses `rich` for formatted and visually appealing console output (e.g., tables, panels).\n\n## Installation & Setup\n1.  **Clone the Repository:**\n\n```shell\ngit clone https://github.com/Gitreceiver/TAMA-MCP.git\ncd TAMA-MCP\n```\n\n  \n\n2.  **Create and Activate Virtual Environment（Recommend python 3.12）:**\n\n[uv install and usage](https://www.cnblogs.com/wang_yb/p/18635441)\n\n```shell\nuv venv -p 3.12\n\n# Windows\n.\\.venv\\Scripts\\activate\n\n# macOS/Linux\nsource .venv/bin/activate\n```\n\n  \n3.  **Install Dependencies & Project:**\n    (Requires `uv` - install with `pip install uv` if you don't have it)\n    ```shell\n    uv pip install -e .\n    ```\n\n(Alternatively, if you use conda ,using pip: `pip install -e .`)\n\n\n## Configuration ⚙️\nTama requires API keys for its AI features.\n1.  Create a `.env` file in the project root directory.\n   (You can copy the example file:)\n   ```shell\n   cp .env.example .env\n   # Windows ：\n   copy .env.example .env\n   ```\n2.  Add your DeepSeek API key:\n```dotenv\n# .env file\nDEEPSEEK_API_KEY=\"your_deepseek_api_key_here\"\n```\n\n*(See `.env.example` for a template)*\n\nThe application uses settings defined in `src/config/settings.py`, which loads variables from the `.env` file.\n\n\n## Usage 🚀\nTama commands are run from your terminal within the activated virtual environment.\n**Core Commands:**\n*   **List Tasks:**\n```shell\ntama list\ntama list --status pending --priority high # Filter\n```\nThe task list now includes emoji indicators for status and priority, and displays dependencies in a clear markdown table format.\n\n\n*   **Show Task Details:**\n```shell\ntama show 1      # Show task 1\ntama show 1.2    # Show subtask 2 of task 1\n```\n\n![tama-show|500](https://raw.gitmirror.com/Gitreceiver/Obsidian-pics/refs/heads/main/obsidian/202504162321747.png)\n\n  \n\n*   **Add Task/Subtask:**\n\n```shell\n# Add a top-level task\ntama add \"Implement user authentication\" --desc \"Handle login and sessions\" --priority high\n\n# Add a subtask to task 1\ntama add \"Create login API endpoint\" --parent 1 --desc \"Needs JWT handling\"\n```\n\n![tama-add-1|500](https://raw.gitmirror.com/Gitreceiver/Obsidian-pics/refs/heads/main/obsidian/202504162324506.png)\n\n![tama-add-2|500](https://raw.gitmirror.com/Gitreceiver/Obsidian-pics/refs/heads/main/obsidian/202504162327993.png)\n\n  \n*   **Set Task Status:**\n\n```shell\ntama status 1 done\ntama status 1.2 in-progress\n# Cascade update subtasks/dependent tasks status\ntama status 1 done --propagate\n```\n\n*(Valid statuses: pending, in-progress, done, deferred, blocked, review)*\n\n> `--propagate` param details：\n> - `--propagate` controls whether status changes are cascaded to all subtasks or dependent tasks.\n> - The default behavior is determined by the configuration file (settings.PROPAGATE_STATUS_CHANGE).\n> - Explicitly adding --propagate forces the status update to be cascaded for this operation.\n\n\n![tama-status1|500](https://raw.gitmirror.com/Gitreceiver/Obsidian-pics/refs/heads/main/obsidian/202504162329503.png)\n\n![tama-status2|500](https://raw.gitmirror.com/Gitreceiver/Obsidian-pics/refs/heads/main/obsidian/202504162316531.png)\n\n*   **Remove Task/Subtask:**\n```shell\ntama remove 2       # Remove task 2 and all its subtasks\ntama remove 1.3     # Remove subtask 3 of task 1\n```\nWhen removing a task, all dependent tasks will be automatically updated, and you'll be notified of any affected dependencies.\n\n*   **Manage Dependencies:**\n```shell\ntama add-dep 1 2      # Make task 1 depend on task 2\ntama add-dep 1.2 2.1  # Make subtask 1.2 depend on subtask 2.1\ntama rm-dep 1 2       # Remove dependency of task 1 on task 2\n```\n\n*   **Find Next Task:**\n```shell\ntama next\n```\n\n![tama-next|500](https://raw.gitmirror.com/Gitreceiver/Obsidian-pics/refs/heads/main/obsidian/202504162331771.png)\n\n  \n\n**AI Commands:**\n*   **Parse PRD:** (Input file must be `.txt` or `.prd`)\n```shell\ntama prd path/to/your/document.txt\n```\n\n![tama-prd|500](https://raw.gitmirror.com/Gitreceiver/Obsidian-pics/refs/heads/main/obsidian/202504162316997.png)\n\n*   **Expand Task:** (Provide a main task ID)\n\n```shell\ntama expand 1\n```\n\n![tama-expand|500](https://raw.gitmirror.com/Gitreceiver/Obsidian-pics/refs/heads/main/obsidian/202504162317158.png)\n\n  \n**Utility Commands:**\n*   **Check Dependencies:**\n\n```shell\ntama deps\n```\n\n*   **Generate Report:**\n```shell\ntama report markdown      # Print markdown table to console\ntama report mermaid       # Print mermaid graph definition\ntama report markdown --output report.md # Save to file\n```\n\n*   **Generate Placeholder File:**\n\n```shell\ntama gen-file 1\ntama gen-file 2 --output-dir src/generated\n```\n\n\n**Shell Completion:**\n*   Instructions for setting up shell completion can be obtained via:\n\n```shell\ntama --install-completion\n```\n*(Note: This might require administrator privileges depending on your shell and OS settings)*\n\n\n## Development 🔧\n\nIf you modify the source code, remember to reinstall the package to make the changes effective in the CLI:\n```shell\nuv pip install -e .\n```\n\n\n## MCP Server Usage\nTama can be used as an MCP (Model Context Protocol) server, allowing other applications to interact with it programmatically. The MCP server provides the following tools:\n\n- `list_tasks`: List all tasks, optionally filter by status or priority, returns a markdown table.\n- `show_task`: Show details of a specific task or subtask by ID.\n- `set_status`: Set the status of a task or subtask.\n- `next_task`: Find the next actionable task.\n- `add_task`: Add a new main task.\n- `add_subtask`: Add a subtask to a main task.\n- `remove_item`: Remove a task or subtask, with dependency cleanup.\n- `add_dependency`: Add a dependency to a task or subtask.\n- `remove_dependency`: Remove a dependency from a task or subtask.\n- `check_dependencies`: Check for circular dependencies in all tasks.\n\nTo start the server:\n```shell\nuv --directory /path/to/your/TAMA_MCP run python -m src.mcp_server\n```\n\nin your mcp client: (cline,cursor,claude)\n\n```json\n{\n  \"mcpServers\": {\n    \"TAMA-MCP-Server\": {\n        \"command\": \"uv\",\n        \"args\": [\n            \"--directory\",\n            \"/path/to/your/TAMA_MCP\",\n            \"run\",\n            \"python\",\n            \"-m\",\n            \"src.mcp_server\"\n        ],\n        \"disabled\": false,\n        \"transportType\": \"stdio\",\n        \"timeout\": 60\n    },\n  }\n}\n```\n\n## License\n\nMIT License\nThis project is licensed under the MIT License. See the LICENSE file for details.\n\n=======\n# TAMA-MCP\nAI-Powered Task Manager CLI with MCP Server\n\nContact me by wechat:\n![b70873c85169d30dcfbff19a76f17fc.jpg|500](https://raw.gitmirror.com/Gitreceiver/Obsidian-pics/refs/heads/main/obsidian/202504302350685.jpg)"
}