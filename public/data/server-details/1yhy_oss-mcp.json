{
  "id": "71db5ecae92b",
  "owner": "1yhy",
  "repoName": "oss-mcp",
  "fullDescription": "Facilitates seamless file uploads to Alibaba Cloud OSS, integrating with various MCP tools for enhanced workflow automation.",
  "techStack": [],
  "serviceTypes": [
    {
      "type": "automation",
      "label": "Automation",
      "icon": "⚡",
      "description": "Automates tasks and workflows"
    },
    {
      "type": "data",
      "label": "Data",
      "icon": "📊",
      "description": "Manages, processes, or analyzes data"
    }
  ],
  "quality": {
    "score": 70,
    "factors": {
      "documentation": 60,
      "maintenance": 50,
      "community": 40,
      "performance": 85
    }
  },
  "metadata": {
    "complexity": "moderate",
    "maturity": "stable",
    "deployment": [
      "cloud"
    ],
    "featured": false,
    "verified": false
  },
  "categorization": {
    "confidence": 3.9,
    "reason": "Keyword match analysis",
    "matched_keywords": [
      "automation",
      "workflow"
    ]
  },
  "usage": {
    "downloads": 0,
    "dependents": 0,
    "weeklyDownloads": 0
  },
  "installation": {
    "npm": null,
    "pip": null,
    "docker": null,
    "manual": null,
    "uv": null,
    "instructions": []
  },
  "repository": {
    "url": "https://github.com/1yhy/oss-mcp",
    "owner": "1yhy",
    "name": "oss-mcp",
    "stars": 0,
    "forks": 0,
    "lastUpdated": "2025-06-23T23:16:56.279Z",
    "watchers": 0,
    "openIssues": 0
  },
  "compatibility": {
    "platforms": [
      "web",
      "desktop"
    ],
    "requirements": []
  },
  "documentation": {
    "hasReadme": false,
    "hasExamples": false,
    "hasApiReference": false,
    "hasInstallation": false,
    "api": null
  },
  "allTags": [
    "automation",
    "workflow",
    "alibaba cloud",
    "oss",
    "cloud-infrastructure",
    "cloud storage",
    "file upload"
  ],
  "badges": [
    {
      "type": "complexity",
      "label": "Moderate",
      "color": "#eab308",
      "icon": "🟡"
    },
    {
      "type": "maturity",
      "label": "Stable",
      "color": "#10b981",
      "icon": "✅"
    }
  ],
  "icon": "⚡",
  "readme": {
    "overview": {
      "title": "Overview",
      "content": "中文版 | [English](https://github.com/1yhy/oss-mcp/blob/main/README.en.md)\n[[Image 1: oss-mcp]](https://camo.githubusercontent.com/13338863154977d590e6d7c4527c6e5387f450c1c2cd6fc4bb88371e2a4b3ad2/68747470733a2f2f796879626c6f672d323032332d322d382e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f323032352f323032352d30332d32332f32303235303332333232313635372e706e67)\n一个基于Model Context Protocol (MCP)的服务器，用于将文件上传到阿里云OSS。此服务器使大型语言模型能够直接将文件上传到阿里云对象存储服务。\n💡 使用场景\n-------\nOSS MCP服务器能够与其他MCP工具无缝集成，为您提供强大的工作流程：\n*   **与[Playwright MCP](https://github.com/executeautomation/mcp-playwright)集成**：可以先使用Playwright MCP抓取网页截图或下载网页资源，然后直接上传到阿里云OSS存储。\n*   **与[Figma MCP](https://github.com/1yhy/Figma-Context-MCP)集成**：下载图片资源到本地后直接上传OSS、或者Figma网络文件直接上传OSS。\n*   **与[Filesystem MCP](https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem)集成**：可以浏览和选择本地文件系统中的文件，然后一步上传到云存储。\n*   **数据备份流程**：将重要数据从本地或其他服务自动备份到OSS。\n*   **媒体处理流程**：结合其他处理工具，可以对图片、视频进行处理后直接上传并获取可访问的URL。\n*   **多OSS账号管理**：便捷地在多个OSS账号间切换上传目标。\n✨ 功能特点\n------\n*   📁 支持多个阿里云OSS配置\n*   🗂️ 可指定上传目录\n*   🔄 简单易用的接口\n🔧 安装\n-----\n您可以通过npm或从源码安装：\n### 使用npm安装\n# 使用npm全局安装\nnpm install -g oss-mcp\n# 或使用pnpm全局安装\npnpm add -g oss-mcp\n### 使用示例\n# 直接启动 (stdio模式)\noss-mcp --oss-config='{\\\"default\\\":{\\\"region\\\":\\\"oss-cn-shenzhen\\\",\\\"accessKeyId\\\":\\\"YOUR_KEY\\\",\\\"accessKeySecret\\\":\\\"YOUR_SECRET\\\",\\\"bucket\\\":\\\"YOUR_BUCKET\\\",\\\"endpoint\\\":\\\"oss-cn-shenzhen.aliyuncs.com\\\"}}'\n# 使用Inspector调试\noss-mcp --oss-config='{ \"region\": \"oss-cn-shenzhen\", \"accessKeyId\": \"YOUR_KEY\", \"accessKeySecret\": \"YOUR_SECRET\", \"bucket\": \"BUCKET_NAME\", \"endpoint\": \"oss-cn-shenzhen.aliyuncs.com\" }' --inspect\n### 从源码安装\n# 克隆仓库\ngit clone https://github.com/1yhy/oss-mcp.git\ncd oss-mcp\n# 安装依赖\npnpm install\n# 构建项目\npnpm build\n⚙️ 配置\n-----\n您可以通过以下方式配置阿里云OSS参数：\n### 方式一：使用.env文件\n在项目根目录创建`.env`文件，参考`.env.example`模板。您可以配置多个阿里云OSS服务：\n# 默认OSS配置\nOSS_CONFIG_DEFAULT={\"region\":\"oss-cn-hangzhou\",\"accessKeyId\":\"your-access-key-id\",\"accessKeySecret\":\"your-access-key-secret\",\"bucket\":\"your-bucket-name\",\"endpoint\":\"oss-cn-hangzhou.aliyuncs.com\"}\n# 其他OSS配置\nOSS_CONFIG_TEST={\"region\":\"oss-cn-beijing\",\"accessKeyId\":\"your-access-key-id-2\",\"accessKeySecret\":\"your-access-key-secret-2\",\"bucket\":\"your-bucket-name-2\",\"endpoint\":\"oss-cn-beijing.aliyuncs.com\"}\n### 方式二：直接设置环境变量\n您也可以直接在系统中或启动命令中设置环境变量：\n# 设置环境变量并启动\npnpm dev --oss-config='{ \"default\": { \"region\": \"oss-cn-shenzhen\", \"accessKeyId\": \"YOUR_KEY\", \"accessKeySecret\": \"YOUR_SECRET\", \"bucket\": \"BUCKET_NAME\", \"endpoint\": \"oss-cn-shenzhen.aliyuncs.com\" }, \"test\": { \"region\": \"oss-cn-beijing\", \"accessKeyId\": \"YOUR_KEY\", \"accessKeySecret\": \"YOUR_SECRET\", \"bucket\": \"BUCKET_NAME\", \"endpoint\": \"oss-cn-beijing.aliyuncs.com\" } }'\n🔍 参数说明\n-------\n*   `region`: 阿里云OSS区域\n*   `accessKeyId`: 阿里云访问密钥ID\n*   `accessKeySecret`: 阿里云访问密钥Secret\n*   `bucket`: OSS存储桶名称\n*   `endpoint`: OSS终端节点\n📋 使用方法\n-------\n### 命令行选项\n\n### 从源码启动\n# 开发模式\npnpm dev\n# 启动服务 (stdio模式)\npnpm start\n# 启动HTTP服务\npnpm start:http\n# 使用Inspector调试\npnpm inspect\n🛠️ 与Claude/Cursor配置集成\n----------------------\n### Cursor配置方法\n1.   在Cursor中打开设置（Settings）\n2.   转到MCP服务器（MCP Servers）部分\n3.   添加新服务器配置：\n{\n  \"mcpServers\": {\n    \"oss-mcp\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"oss-mcp\",\n        \"--oss-config='{\\\"default\\\":{\\\"region\\\":\\\"oss-cn-shenzhen\\\",\\\"accessKeyId\\\":\\\"YOUR_KEY\\\",\\\"accessKeySecret\\\":\\\"YOUR_SECRET\\\",\\\"bucket\\\":\\\"YOUR_BUCKET\\\",\\\"endpoint\\\":\\\"oss-cn-shenzhen.aliyuncs.com\\\"}}'\",\n        \"--stdio\"\n      ]\n    }\n  }\n}\n### 配置多个OSS账号\n使用环境变量方式可以轻松配置多个OSS账号：\n{\n  \"mcpServers\": {\n    \"oss-mcp\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"oss-mcp\",\n        \"--oss-config='{\\\"default\\\":{\\\"region\\\":\\\"oss-cn-shenzhen\\\",\\\"accessKeyId\\\":\\\"YOUR_KEY\\\",\\\"accessKeySecret\\\":\\\"YOUR_SECRET\\\",\\\"bucket\\\":\\\"YOUR_BUCKET\\\",\\\"endpoint\\\":\\\"oss-cn-shenzhen.aliyuncs.com\\\"}, \\\"test\\\":{\\\"region\\\":\\\"oss-cn-shenzhen\\\",\\\"accessKeyId\\\":\\\"YOUR_KEY\\\",\\\"accessKeySecret\\\":\\\"YOUR_SECRET\\\",\\\"bucket\\\":\\\"YOUR_BUCKET\\\",\\\"endpoint\\\":\\\"oss-cn-shenzhen.aliyuncs.com\\\"}}'\",\n        \"--stdio\"\n      ]\n    }\n  }\n}\n🧰 可用工具\n-------\n服务器提供以下工具：\n### 1. 上传文件到OSS (`upload_to_oss`)\n**参数**:\n*   `filePath`: 本地文件路径（必需）\n*   `targetDir`: 目标目录路径（可选）\n*   `fileName`: 文件名（可选，默认使用原文件名）\n*   `configName`: OSS配置名称（可选，默认使用'default'）\n### 2. 列出可用的OSS配置 (`list_oss_configs`)\n无参数，返回所有可用的OSS配置名称。\n📦 发布\n-----\n# 发布到npm\npnpm pub:release\n# 本地打包测试\npnpm publish:local\n📊 Star History\n---------------\n[[Image 2: Star History Chart]](https://star-history.com/#1yhy/oss-mcp&Date)\n📄 许可证\n------\n[MIT](https://github.com/1yhy/oss-mcp/blob/main/LICENSE)",
      "code_blocks": [
        {
          "language": "text",
          "code": "选项:\n  -s, --stdio    使用stdio传输启动服务器\n  -h, --http     使用HTTP传输启动服务器\n  -p, --port     HTTP服务器端口 (默认: 3000)\n  -i, --inspect  使用Inspector工具启动\n  -?, --help     显示帮助信息"
        }
      ],
      "subsections": []
    },
    "installation": {
      "title": "",
      "content": "",
      "code_blocks": [],
      "subsections": []
    },
    "examples": {
      "title": "",
      "content": "",
      "code_blocks": [],
      "subsections": []
    },
    "api_reference": {
      "title": "",
      "content": "",
      "code_blocks": [],
      "subsections": []
    },
    "metadata": {
      "hasContent": true,
      "sections": [
        "overview"
      ],
      "codeBlocks": 1,
      "filename": "oss-mcp.md",
      "project_name": "oss-mcp",
      "server_id": "71db5ecae92b",
      "github_url": "https://github.com/1yhy/oss-mcp",
      "processed_at": "2025-06-27",
      "originalFilename": "oss-mcp.md",
      "processedAt": "2025-06-27T01:56:19.340Z",
      "processedWith": "Jina MCP + AI",
      "version": "2.0"
    }
  }
}